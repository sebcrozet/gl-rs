// Copyright 2013 The gl-rs developers. For a full listing of the authors,
// refer to the AUTHORS file at the top-level directory of this distribution.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#[link(name = "gl",
       author = "Brendan Zabarauskas",
       url = "https://github.com/bjz/gl-rs",
       vers = "0.1")];
#[comment = "An OpenGL function loader."];
#[license = "ASL2"];
#[crate_type = "lib"];

use std::libc::*;
use self::types::*;

pub mod types {
    use std::libc::*;
    
    // Common types from OpenGL 1.1
    pub type GLenum = c_uint;
    pub type GLboolean = c_uchar;
    pub type GLbitfield = c_uint;
    pub type GLvoid = c_void;
    pub type GLbyte = c_char;
    pub type GLshort = c_short;
    pub type GLint = c_int;
    pub type GLclampx = c_int;
    pub type GLubyte = c_uchar;
    pub type GLushort = c_ushort;
    pub type GLuint = c_uint;
    pub type GLsizei = c_int;
    pub type GLfloat = c_float;
    pub type GLclampf = c_float;
    pub type GLdouble = c_double;
    pub type GLclampd = c_double;
    pub type GLeglImageOES = *c_void;
    pub type GLchar = c_char;
    pub type GLcharARB = c_char;
    
    #[cfg(target_os = "macos")]
    pub type GLhandleARB = *c_void;
    #[cfg(not(target_os = "macos"))]
    pub type GLhandleARB = c_uint;
    
    pub type GLhalfARB = c_ushort;
    pub type GLhalf = c_ushort;
    
    // Must be 32 bits
    pub type GLfixed = GLint;
    
    pub type GLintptr = ptrdiff_t;
    pub type GLsizeiptr = ptrdiff_t;
    pub type GLint64 = i64;
    pub type GLuint64 = u64;
    pub type GLintptrARB = ptrdiff_t;
    pub type GLsizeiptrARB = ptrdiff_t;
    pub type GLint64EXT = i64;
    pub type GLuint64EXT = u64;
    
    pub struct __GLsync;
    pub type GLsync = *__GLsync;
    
    // compatible with OpenCL cl_context
    pub struct _cl_context;
    pub struct _cl_event;
    
    pub type GLDEBUGPROC = extern "C" fn(source: GLenum, gltype: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *c_void);
    pub type GLDEBUGPROCARB = extern "C" fn(source: GLenum, gltype: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *c_void);
    pub type GLDEBUGPROCKHR = extern "C" fn(source: GLenum, gltype: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *c_void);
    
    // Vendor extension types
    pub type GLDEBUGPROCAMD = extern "C" fn(id: GLuint, category: GLenum, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *c_void);
    pub type GLhalfNV = c_ushort;
    pub type GLvdpauSurfaceNV = GLintptr;
}

pub static CURRENT_BIT: GLenum = 0x00000001;
pub static POINT_BIT: GLenum = 0x00000002;
pub static LINE_BIT: GLenum = 0x00000004;
pub static POLYGON_BIT: GLenum = 0x00000008;
pub static POLYGON_STIPPLE_BIT: GLenum = 0x00000010;
pub static PIXEL_MODE_BIT: GLenum = 0x00000020;
pub static LIGHTING_BIT: GLenum = 0x00000040;
pub static FOG_BIT: GLenum = 0x00000080;
pub static DEPTH_BUFFER_BIT: GLenum = 0x00000100;
pub static ACCUM_BUFFER_BIT: GLenum = 0x00000200;
pub static STENCIL_BUFFER_BIT: GLenum = 0x00000400;
pub static VIEWPORT_BIT: GLenum = 0x00000800;
pub static TRANSFORM_BIT: GLenum = 0x00001000;
pub static ENABLE_BIT: GLenum = 0x00002000;
pub static COLOR_BUFFER_BIT: GLenum = 0x00004000;
pub static HINT_BIT: GLenum = 0x00008000;
pub static EVAL_BIT: GLenum = 0x00010000;
pub static LIST_BIT: GLenum = 0x00020000;
pub static TEXTURE_BIT: GLenum = 0x00040000;
pub static SCISSOR_BIT: GLenum = 0x00080000;
pub static MULTISAMPLE_BIT: GLenum = 0x20000000;
pub static MULTISAMPLE_BIT_ARB: GLenum = 0x20000000;
pub static MULTISAMPLE_BIT_EXT: GLenum = 0x20000000;
pub static MULTISAMPLE_BIT_3DFX: GLenum = 0x20000000;
pub static ALL_ATTRIB_BITS: GLenum = 0xFFFFFFFF;
pub static COVERAGE_BUFFER_BIT_NV: GLenum = 0x00008000;
pub static CLIENT_PIXEL_STORE_BIT: GLenum = 0x00000001;
pub static CLIENT_VERTEX_ARRAY_BIT: GLenum = 0x00000002;
pub static CLIENT_ALL_ATTRIB_BITS: GLenum = 0xFFFFFFFF;
pub static CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: GLenum = 0x00000001;
pub static CONTEXT_FLAG_DEBUG_BIT: GLenum = 0x00000002;
pub static CONTEXT_FLAG_DEBUG_BIT_KHR: GLenum = 0x00000002;
pub static CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB: GLenum = 0x00000004;
pub static CONTEXT_CORE_PROFILE_BIT: GLenum = 0x00000001;
pub static CONTEXT_COMPATIBILITY_PROFILE_BIT: GLenum = 0x00000002;
pub static MAP_READ_BIT: GLenum = 0x0001;
pub static MAP_READ_BIT_EXT: GLenum = 0x0001;
pub static MAP_WRITE_BIT: GLenum = 0x0002;
pub static MAP_WRITE_BIT_EXT: GLenum = 0x0002;
pub static MAP_INVALIDATE_RANGE_BIT: GLenum = 0x0004;
pub static MAP_INVALIDATE_RANGE_BIT_EXT: GLenum = 0x0004;
pub static MAP_INVALIDATE_BUFFER_BIT: GLenum = 0x0008;
pub static MAP_INVALIDATE_BUFFER_BIT_EXT: GLenum = 0x0008;
pub static MAP_FLUSH_EXPLICIT_BIT: GLenum = 0x0010;
pub static MAP_FLUSH_EXPLICIT_BIT_EXT: GLenum = 0x0010;
pub static MAP_UNSYNCHRONIZED_BIT: GLenum = 0x0020;
pub static MAP_UNSYNCHRONIZED_BIT_EXT: GLenum = 0x0020;
pub static MAP_PERSISTENT_BIT: GLenum = 0x0040;
pub static MAP_COHERENT_BIT: GLenum = 0x0080;
pub static DYNAMIC_STORAGE_BIT: GLenum = 0x0100;
pub static CLIENT_STORAGE_BIT: GLenum = 0x0200;
pub static VERTEX_ATTRIB_ARRAY_BARRIER_BIT: GLenum = 0x00000001;
pub static VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT: GLenum = 0x00000001;
pub static ELEMENT_ARRAY_BARRIER_BIT: GLenum = 0x00000002;
pub static ELEMENT_ARRAY_BARRIER_BIT_EXT: GLenum = 0x00000002;
pub static UNIFORM_BARRIER_BIT: GLenum = 0x00000004;
pub static UNIFORM_BARRIER_BIT_EXT: GLenum = 0x00000004;
pub static TEXTURE_FETCH_BARRIER_BIT: GLenum = 0x00000008;
pub static TEXTURE_FETCH_BARRIER_BIT_EXT: GLenum = 0x00000008;
pub static SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV: GLenum = 0x00000010;
pub static SHADER_IMAGE_ACCESS_BARRIER_BIT: GLenum = 0x00000020;
pub static SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT: GLenum = 0x00000020;
pub static COMMAND_BARRIER_BIT: GLenum = 0x00000040;
pub static COMMAND_BARRIER_BIT_EXT: GLenum = 0x00000040;
pub static PIXEL_BUFFER_BARRIER_BIT: GLenum = 0x00000080;
pub static PIXEL_BUFFER_BARRIER_BIT_EXT: GLenum = 0x00000080;
pub static TEXTURE_UPDATE_BARRIER_BIT: GLenum = 0x00000100;
pub static TEXTURE_UPDATE_BARRIER_BIT_EXT: GLenum = 0x00000100;
pub static BUFFER_UPDATE_BARRIER_BIT: GLenum = 0x00000200;
pub static BUFFER_UPDATE_BARRIER_BIT_EXT: GLenum = 0x00000200;
pub static FRAMEBUFFER_BARRIER_BIT: GLenum = 0x00000400;
pub static FRAMEBUFFER_BARRIER_BIT_EXT: GLenum = 0x00000400;
pub static TRANSFORM_FEEDBACK_BARRIER_BIT: GLenum = 0x00000800;
pub static TRANSFORM_FEEDBACK_BARRIER_BIT_EXT: GLenum = 0x00000800;
pub static ATOMIC_COUNTER_BARRIER_BIT: GLenum = 0x00001000;
pub static ATOMIC_COUNTER_BARRIER_BIT_EXT: GLenum = 0x00001000;
pub static SHADER_STORAGE_BARRIER_BIT: GLenum = 0x00002000;
pub static CLIENT_MAPPED_BUFFER_BARRIER_BIT: GLenum = 0x00004000;
pub static QUERY_BUFFER_BARRIER_BIT: GLenum = 0x00008000;
pub static ALL_BARRIER_BITS: GLenum = 0xFFFFFFFF;
pub static ALL_BARRIER_BITS_EXT: GLenum = 0xFFFFFFFF;
pub static SYNC_FLUSH_COMMANDS_BIT: GLenum = 0x00000001;
pub static SYNC_FLUSH_COMMANDS_BIT_APPLE: GLenum = 0x00000001;
pub static VERTEX_SHADER_BIT: GLenum = 0x00000001;
pub static VERTEX_SHADER_BIT_EXT: GLenum = 0x00000001;
pub static FRAGMENT_SHADER_BIT: GLenum = 0x00000002;
pub static FRAGMENT_SHADER_BIT_EXT: GLenum = 0x00000002;
pub static GEOMETRY_SHADER_BIT: GLenum = 0x00000004;
pub static TESS_CONTROL_SHADER_BIT: GLenum = 0x00000008;
pub static TESS_EVALUATION_SHADER_BIT: GLenum = 0x00000010;
pub static COMPUTE_SHADER_BIT: GLenum = 0x00000020;
pub static ALL_SHADER_BITS: GLenum = 0xFFFFFFFF;
pub static ALL_SHADER_BITS_EXT: GLenum = 0xFFFFFFFF;
pub static TEXTURE_STORAGE_SPARSE_BIT_AMD: GLenum = 0x00000001;
pub static RED_BIT_ATI: GLenum = 0x00000001;
pub static GREEN_BIT_ATI: GLenum = 0x00000002;
pub static BLUE_BIT_ATI: GLenum = 0x00000004;
pub static _2X_BIT_ATI: GLenum = 0x00000001;
pub static _4X_BIT_ATI: GLenum = 0x00000002;
pub static _8X_BIT_ATI: GLenum = 0x00000004;
pub static HALF_BIT_ATI: GLenum = 0x00000008;
pub static QUARTER_BIT_ATI: GLenum = 0x00000010;
pub static EIGHTH_BIT_ATI: GLenum = 0x00000020;
pub static SATURATE_BIT_ATI: GLenum = 0x00000040;
pub static COMP_BIT_ATI: GLenum = 0x00000002;
pub static NEGATE_BIT_ATI: GLenum = 0x00000004;
pub static BIAS_BIT_ATI: GLenum = 0x00000008;
pub static TRACE_OPERATIONS_BIT_MESA: GLenum = 0x0001;
pub static TRACE_PRIMITIVES_BIT_MESA: GLenum = 0x0002;
pub static TRACE_ARRAYS_BIT_MESA: GLenum = 0x0004;
pub static TRACE_TEXTURES_BIT_MESA: GLenum = 0x0008;
pub static TRACE_PIXELS_BIT_MESA: GLenum = 0x0010;
pub static TRACE_ERRORS_BIT_MESA: GLenum = 0x0020;
pub static TRACE_ALL_BITS_MESA: GLenum = 0xFFFF;
pub static BOLD_BIT_NV: GLenum = 0x01;
pub static ITALIC_BIT_NV: GLenum = 0x02;
pub static GLYPH_WIDTH_BIT_NV: GLenum = 0x01;
pub static GLYPH_HEIGHT_BIT_NV: GLenum = 0x02;
pub static GLYPH_HORIZONTAL_BEARING_X_BIT_NV: GLenum = 0x04;
pub static GLYPH_HORIZONTAL_BEARING_Y_BIT_NV: GLenum = 0x08;
pub static GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV: GLenum = 0x10;
pub static GLYPH_VERTICAL_BEARING_X_BIT_NV: GLenum = 0x20;
pub static GLYPH_VERTICAL_BEARING_Y_BIT_NV: GLenum = 0x40;
pub static GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV: GLenum = 0x80;
pub static GLYPH_HAS_KERNING_BIT_NV: GLenum = 0x100;
pub static FONT_X_MIN_BOUNDS_BIT_NV: GLenum = 0x00010000;
pub static FONT_Y_MIN_BOUNDS_BIT_NV: GLenum = 0x00020000;
pub static FONT_X_MAX_BOUNDS_BIT_NV: GLenum = 0x00040000;
pub static FONT_Y_MAX_BOUNDS_BIT_NV: GLenum = 0x00080000;
pub static FONT_UNITS_PER_EM_BIT_NV: GLenum = 0x00100000;
pub static FONT_ASCENDER_BIT_NV: GLenum = 0x00200000;
pub static FONT_DESCENDER_BIT_NV: GLenum = 0x00400000;
pub static FONT_HEIGHT_BIT_NV: GLenum = 0x00800000;
pub static FONT_MAX_ADVANCE_WIDTH_BIT_NV: GLenum = 0x01000000;
pub static FONT_MAX_ADVANCE_HEIGHT_BIT_NV: GLenum = 0x02000000;
pub static FONT_UNDERLINE_POSITION_BIT_NV: GLenum = 0x04000000;
pub static FONT_UNDERLINE_THICKNESS_BIT_NV: GLenum = 0x08000000;
pub static FONT_HAS_KERNING_BIT_NV: GLenum = 0x10000000;
pub static VERTEX23_BIT_PGI: GLenum = 0x00000004;
pub static VERTEX4_BIT_PGI: GLenum = 0x00000008;
pub static COLOR3_BIT_PGI: GLenum = 0x00010000;
pub static COLOR4_BIT_PGI: GLenum = 0x00020000;
pub static EDGEFLAG_BIT_PGI: GLenum = 0x00040000;
pub static INDEX_BIT_PGI: GLenum = 0x00080000;
pub static MAT_AMBIENT_BIT_PGI: GLenum = 0x00100000;
pub static MAT_AMBIENT_AND_DIFFUSE_BIT_PGI: GLenum = 0x00200000;
pub static MAT_DIFFUSE_BIT_PGI: GLenum = 0x00400000;
pub static MAT_EMISSION_BIT_PGI: GLenum = 0x00800000;
pub static MAT_COLOR_INDEXES_BIT_PGI: GLenum = 0x01000000;
pub static MAT_SHININESS_BIT_PGI: GLenum = 0x02000000;
pub static MAT_SPECULAR_BIT_PGI: GLenum = 0x04000000;
pub static NORMAL_BIT_PGI: GLenum = 0x08000000;
pub static TEXCOORD1_BIT_PGI: GLenum = 0x10000000;
pub static TEXCOORD2_BIT_PGI: GLenum = 0x20000000;
pub static TEXCOORD3_BIT_PGI: GLenum = 0x40000000;
pub static TEXCOORD4_BIT_PGI: GLenum = 0x80000000;
pub static COLOR_BUFFER_BIT0_QCOM: GLenum = 0x00000001;
pub static COLOR_BUFFER_BIT1_QCOM: GLenum = 0x00000002;
pub static COLOR_BUFFER_BIT2_QCOM: GLenum = 0x00000004;
pub static COLOR_BUFFER_BIT3_QCOM: GLenum = 0x00000008;
pub static COLOR_BUFFER_BIT4_QCOM: GLenum = 0x00000010;
pub static COLOR_BUFFER_BIT5_QCOM: GLenum = 0x00000020;
pub static COLOR_BUFFER_BIT6_QCOM: GLenum = 0x00000040;
pub static COLOR_BUFFER_BIT7_QCOM: GLenum = 0x00000080;
pub static DEPTH_BUFFER_BIT0_QCOM: GLenum = 0x00000100;
pub static DEPTH_BUFFER_BIT1_QCOM: GLenum = 0x00000200;
pub static DEPTH_BUFFER_BIT2_QCOM: GLenum = 0x00000400;
pub static DEPTH_BUFFER_BIT3_QCOM: GLenum = 0x00000800;
pub static DEPTH_BUFFER_BIT4_QCOM: GLenum = 0x00001000;
pub static DEPTH_BUFFER_BIT5_QCOM: GLenum = 0x00002000;
pub static DEPTH_BUFFER_BIT6_QCOM: GLenum = 0x00004000;
pub static DEPTH_BUFFER_BIT7_QCOM: GLenum = 0x00008000;
pub static STENCIL_BUFFER_BIT0_QCOM: GLenum = 0x00010000;
pub static STENCIL_BUFFER_BIT1_QCOM: GLenum = 0x00020000;
pub static STENCIL_BUFFER_BIT2_QCOM: GLenum = 0x00040000;
pub static STENCIL_BUFFER_BIT3_QCOM: GLenum = 0x00080000;
pub static STENCIL_BUFFER_BIT4_QCOM: GLenum = 0x00100000;
pub static STENCIL_BUFFER_BIT5_QCOM: GLenum = 0x00200000;
pub static STENCIL_BUFFER_BIT6_QCOM: GLenum = 0x00400000;
pub static STENCIL_BUFFER_BIT7_QCOM: GLenum = 0x00800000;
pub static MULTISAMPLE_BUFFER_BIT0_QCOM: GLenum = 0x01000000;
pub static MULTISAMPLE_BUFFER_BIT1_QCOM: GLenum = 0x02000000;
pub static MULTISAMPLE_BUFFER_BIT2_QCOM: GLenum = 0x04000000;
pub static MULTISAMPLE_BUFFER_BIT3_QCOM: GLenum = 0x08000000;
pub static MULTISAMPLE_BUFFER_BIT4_QCOM: GLenum = 0x10000000;
pub static MULTISAMPLE_BUFFER_BIT5_QCOM: GLenum = 0x20000000;
pub static MULTISAMPLE_BUFFER_BIT6_QCOM: GLenum = 0x40000000;
pub static MULTISAMPLE_BUFFER_BIT7_QCOM: GLenum = 0x80000000;
pub static TEXTURE_DEFORMATION_BIT_SGIX: GLenum = 0x00000001;
pub static GEOMETRY_DEFORMATION_BIT_SGIX: GLenum = 0x00000002;
pub static RESTART_SUN: GLenum = 0x0001;
pub static REPLACE_MIDDLE_SUN: GLenum = 0x0002;
pub static REPLACE_OLDEST_SUN: GLenum = 0x0003;
pub static LAYOUT_DEFAULT_INTEL: GLenum = 0;
pub static LAYOUT_LINEAR_INTEL: GLenum = 1;
pub static LAYOUT_LINEAR_CPU_CACHED_INTEL: GLenum = 2;
pub static NEXT_BUFFER_NV: GLenum = -2;
pub static SKIP_COMPONENTS4_NV: GLenum = -3;
pub static SKIP_COMPONENTS3_NV: GLenum = -4;
pub static SKIP_COMPONENTS2_NV: GLenum = -5;
pub static SKIP_COMPONENTS1_NV: GLenum = -6;
pub static CLOSE_PATH_NV: GLenum = 0x00;
pub static MOVE_TO_NV: GLenum = 0x02;
pub static RELATIVE_MOVE_TO_NV: GLenum = 0x03;
pub static LINE_TO_NV: GLenum = 0x04;
pub static RELATIVE_LINE_TO_NV: GLenum = 0x05;
pub static HORIZONTAL_LINE_TO_NV: GLenum = 0x06;
pub static RELATIVE_HORIZONTAL_LINE_TO_NV: GLenum = 0x07;
pub static VERTICAL_LINE_TO_NV: GLenum = 0x08;
pub static RELATIVE_VERTICAL_LINE_TO_NV: GLenum = 0x09;
pub static QUADRATIC_CURVE_TO_NV: GLenum = 0x0A;
pub static RELATIVE_QUADRATIC_CURVE_TO_NV: GLenum = 0x0B;
pub static CUBIC_CURVE_TO_NV: GLenum = 0x0C;
pub static RELATIVE_CUBIC_CURVE_TO_NV: GLenum = 0x0D;
pub static SMOOTH_QUADRATIC_CURVE_TO_NV: GLenum = 0x0E;
pub static RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV: GLenum = 0x0F;
pub static SMOOTH_CUBIC_CURVE_TO_NV: GLenum = 0x10;
pub static RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV: GLenum = 0x11;
pub static SMALL_CCW_ARC_TO_NV: GLenum = 0x12;
pub static RELATIVE_SMALL_CCW_ARC_TO_NV: GLenum = 0x13;
pub static SMALL_CW_ARC_TO_NV: GLenum = 0x14;
pub static RELATIVE_SMALL_CW_ARC_TO_NV: GLenum = 0x15;
pub static LARGE_CCW_ARC_TO_NV: GLenum = 0x16;
pub static RELATIVE_LARGE_CCW_ARC_TO_NV: GLenum = 0x17;
pub static LARGE_CW_ARC_TO_NV: GLenum = 0x18;
pub static RELATIVE_LARGE_CW_ARC_TO_NV: GLenum = 0x19;
pub static RESTART_PATH_NV: GLenum = 0xF0;
pub static DUP_FIRST_CUBIC_CURVE_TO_NV: GLenum = 0xF2;
pub static DUP_LAST_CUBIC_CURVE_TO_NV: GLenum = 0xF4;
pub static RECT_NV: GLenum = 0xF6;
pub static CIRCULAR_CCW_ARC_TO_NV: GLenum = 0xF8;
pub static CIRCULAR_CW_ARC_TO_NV: GLenum = 0xFA;
pub static CIRCULAR_TANGENT_ARC_TO_NV: GLenum = 0xFC;
pub static ARC_TO_NV: GLenum = 0xFE;
pub static RELATIVE_ARC_TO_NV: GLenum = 0xFF;
pub static FALSE: GLenum = 0;
pub static NO_ERROR: GLenum = 0;
pub static ZERO: GLenum = 0;
pub static NONE: GLenum = 0;
pub static TRUE: GLenum = 1;
pub static ONE: GLenum = 1;
pub static INVALID_INDEX: GLenum = 0xFFFFFFFF;
pub static TIMEOUT_IGNORED: GLenum = 0xFFFFFFFFFFFFFFFF;
pub static TIMEOUT_IGNORED_APPLE: GLenum = 0xFFFFFFFFFFFFFFFF;
pub static VERSION_ES_CL_1_0: GLenum = 1;
pub static VERSION_ES_CM_1_1: GLenum = 1;
pub static VERSION_ES_CL_1_1: GLenum = 1;
pub static POINTS: GLenum = 0x0000;
pub static LINES: GLenum = 0x0001;
pub static LINE_LOOP: GLenum = 0x0002;
pub static LINE_STRIP: GLenum = 0x0003;
pub static TRIANGLES: GLenum = 0x0004;
pub static TRIANGLE_STRIP: GLenum = 0x0005;
pub static TRIANGLE_FAN: GLenum = 0x0006;
pub static QUADS: GLenum = 0x0007;
pub static QUAD_STRIP: GLenum = 0x0008;
pub static POLYGON: GLenum = 0x0009;
pub static LINES_ADJACENCY: GLenum = 0x000A;
pub static LINES_ADJACENCY_ARB: GLenum = 0x000A;
pub static LINES_ADJACENCY_EXT: GLenum = 0x000A;
pub static LINE_STRIP_ADJACENCY: GLenum = 0x000B;
pub static LINE_STRIP_ADJACENCY_ARB: GLenum = 0x000B;
pub static LINE_STRIP_ADJACENCY_EXT: GLenum = 0x000B;
pub static TRIANGLES_ADJACENCY: GLenum = 0x000C;
pub static TRIANGLES_ADJACENCY_ARB: GLenum = 0x000C;
pub static TRIANGLES_ADJACENCY_EXT: GLenum = 0x000C;
pub static TRIANGLE_STRIP_ADJACENCY: GLenum = 0x000D;
pub static TRIANGLE_STRIP_ADJACENCY_ARB: GLenum = 0x000D;
pub static TRIANGLE_STRIP_ADJACENCY_EXT: GLenum = 0x000D;
pub static PATCHES: GLenum = 0x000E;
pub static ACCUM: GLenum = 0x0100;
pub static LOAD: GLenum = 0x0101;
pub static RETURN: GLenum = 0x0102;
pub static MULT: GLenum = 0x0103;
pub static ADD: GLenum = 0x0104;
pub static NEVER: GLenum = 0x0200;
pub static LESS: GLenum = 0x0201;
pub static EQUAL: GLenum = 0x0202;
pub static LEQUAL: GLenum = 0x0203;
pub static GREATER: GLenum = 0x0204;
pub static NOTEQUAL: GLenum = 0x0205;
pub static GEQUAL: GLenum = 0x0206;
pub static ALWAYS: GLenum = 0x0207;
pub static SRC_COLOR: GLenum = 0x0300;
pub static ONE_MINUS_SRC_COLOR: GLenum = 0x0301;
pub static SRC_ALPHA: GLenum = 0x0302;
pub static ONE_MINUS_SRC_ALPHA: GLenum = 0x0303;
pub static DST_ALPHA: GLenum = 0x0304;
pub static ONE_MINUS_DST_ALPHA: GLenum = 0x0305;
pub static DST_COLOR: GLenum = 0x0306;
pub static ONE_MINUS_DST_COLOR: GLenum = 0x0307;
pub static SRC_ALPHA_SATURATE: GLenum = 0x0308;
pub static FRONT_LEFT: GLenum = 0x0400;
pub static FRONT_RIGHT: GLenum = 0x0401;
pub static BACK_LEFT: GLenum = 0x0402;
pub static BACK_RIGHT: GLenum = 0x0403;
pub static FRONT: GLenum = 0x0404;
pub static BACK: GLenum = 0x0405;
pub static LEFT: GLenum = 0x0406;
pub static RIGHT: GLenum = 0x0407;
pub static FRONT_AND_BACK: GLenum = 0x0408;
pub static AUX0: GLenum = 0x0409;
pub static AUX1: GLenum = 0x040A;
pub static AUX2: GLenum = 0x040B;
pub static AUX3: GLenum = 0x040C;
pub static INVALID_ENUM: GLenum = 0x0500;
pub static INVALID_VALUE: GLenum = 0x0501;
pub static INVALID_OPERATION: GLenum = 0x0502;
pub static STACK_OVERFLOW: GLenum = 0x0503;
pub static STACK_OVERFLOW_KHR: GLenum = 0x0503;
pub static STACK_UNDERFLOW: GLenum = 0x0504;
pub static STACK_UNDERFLOW_KHR: GLenum = 0x0504;
pub static OUT_OF_MEMORY: GLenum = 0x0505;
pub static INVALID_FRAMEBUFFER_OPERATION: GLenum = 0x0506;
pub static INVALID_FRAMEBUFFER_OPERATION_EXT: GLenum = 0x0506;
pub static INVALID_FRAMEBUFFER_OPERATION_OES: GLenum = 0x0506;
pub static _2D: GLenum = 0x0600;
pub static _3D: GLenum = 0x0601;
pub static _3D_COLOR: GLenum = 0x0602;
pub static _3D_COLOR_TEXTURE: GLenum = 0x0603;
pub static _4D_COLOR_TEXTURE: GLenum = 0x0604;
pub static PASS_THROUGH_TOKEN: GLenum = 0x0700;
pub static POINT_TOKEN: GLenum = 0x0701;
pub static LINE_TOKEN: GLenum = 0x0702;
pub static POLYGON_TOKEN: GLenum = 0x0703;
pub static BITMAP_TOKEN: GLenum = 0x0704;
pub static DRAW_PIXEL_TOKEN: GLenum = 0x0705;
pub static COPY_PIXEL_TOKEN: GLenum = 0x0706;
pub static LINE_RESET_TOKEN: GLenum = 0x0707;
pub static EXP: GLenum = 0x0800;
pub static EXP2: GLenum = 0x0801;
pub static CW: GLenum = 0x0900;
pub static CCW: GLenum = 0x0901;
pub static COEFF: GLenum = 0x0A00;
pub static ORDER: GLenum = 0x0A01;
pub static DOMAIN: GLenum = 0x0A02;
pub static CURRENT_COLOR: GLenum = 0x0B00;
pub static CURRENT_INDEX: GLenum = 0x0B01;
pub static CURRENT_NORMAL: GLenum = 0x0B02;
pub static CURRENT_TEXTURE_COORDS: GLenum = 0x0B03;
pub static CURRENT_RASTER_COLOR: GLenum = 0x0B04;
pub static CURRENT_RASTER_INDEX: GLenum = 0x0B05;
pub static CURRENT_RASTER_TEXTURE_COORDS: GLenum = 0x0B06;
pub static CURRENT_RASTER_POSITION: GLenum = 0x0B07;
pub static CURRENT_RASTER_POSITION_VALID: GLenum = 0x0B08;
pub static CURRENT_RASTER_DISTANCE: GLenum = 0x0B09;
pub static POINT_SMOOTH: GLenum = 0x0B10;
pub static POINT_SIZE: GLenum = 0x0B11;
pub static POINT_SIZE_RANGE: GLenum = 0x0B12;
pub static SMOOTH_POINT_SIZE_RANGE: GLenum = 0x0B12;
pub static POINT_SIZE_GRANULARITY: GLenum = 0x0B13;
pub static SMOOTH_POINT_SIZE_GRANULARITY: GLenum = 0x0B13;
pub static LINE_SMOOTH: GLenum = 0x0B20;
pub static LINE_WIDTH: GLenum = 0x0B21;
pub static LINE_WIDTH_RANGE: GLenum = 0x0B22;
pub static SMOOTH_LINE_WIDTH_RANGE: GLenum = 0x0B22;
pub static LINE_WIDTH_GRANULARITY: GLenum = 0x0B23;
pub static SMOOTH_LINE_WIDTH_GRANULARITY: GLenum = 0x0B23;
pub static LINE_STIPPLE: GLenum = 0x0B24;
pub static LINE_STIPPLE_PATTERN: GLenum = 0x0B25;
pub static LINE_STIPPLE_REPEAT: GLenum = 0x0B26;
pub static LIST_MODE: GLenum = 0x0B30;
pub static MAX_LIST_NESTING: GLenum = 0x0B31;
pub static LIST_BASE: GLenum = 0x0B32;
pub static LIST_INDEX: GLenum = 0x0B33;
pub static POLYGON_MODE: GLenum = 0x0B40;
pub static POLYGON_SMOOTH: GLenum = 0x0B41;
pub static POLYGON_STIPPLE: GLenum = 0x0B42;
pub static EDGE_FLAG: GLenum = 0x0B43;
pub static CULL_FACE: GLenum = 0x0B44;
pub static CULL_FACE_MODE: GLenum = 0x0B45;
pub static FRONT_FACE: GLenum = 0x0B46;
pub static LIGHTING: GLenum = 0x0B50;
pub static LIGHT_MODEL_LOCAL_VIEWER: GLenum = 0x0B51;
pub static LIGHT_MODEL_TWO_SIDE: GLenum = 0x0B52;
pub static LIGHT_MODEL_AMBIENT: GLenum = 0x0B53;
pub static SHADE_MODEL: GLenum = 0x0B54;
pub static COLOR_MATERIAL_FACE: GLenum = 0x0B55;
pub static COLOR_MATERIAL_PARAMETER: GLenum = 0x0B56;
pub static COLOR_MATERIAL: GLenum = 0x0B57;
pub static FOG: GLenum = 0x0B60;
pub static FOG_INDEX: GLenum = 0x0B61;
pub static FOG_DENSITY: GLenum = 0x0B62;
pub static FOG_START: GLenum = 0x0B63;
pub static FOG_END: GLenum = 0x0B64;
pub static FOG_MODE: GLenum = 0x0B65;
pub static FOG_COLOR: GLenum = 0x0B66;
pub static DEPTH_RANGE: GLenum = 0x0B70;
pub static DEPTH_TEST: GLenum = 0x0B71;
pub static DEPTH_WRITEMASK: GLenum = 0x0B72;
pub static DEPTH_CLEAR_VALUE: GLenum = 0x0B73;
pub static DEPTH_FUNC: GLenum = 0x0B74;
pub static ACCUM_CLEAR_VALUE: GLenum = 0x0B80;
pub static STENCIL_TEST: GLenum = 0x0B90;
pub static STENCIL_CLEAR_VALUE: GLenum = 0x0B91;
pub static STENCIL_FUNC: GLenum = 0x0B92;
pub static STENCIL_VALUE_MASK: GLenum = 0x0B93;
pub static STENCIL_FAIL: GLenum = 0x0B94;
pub static STENCIL_PASS_DEPTH_FAIL: GLenum = 0x0B95;
pub static STENCIL_PASS_DEPTH_PASS: GLenum = 0x0B96;
pub static STENCIL_REF: GLenum = 0x0B97;
pub static STENCIL_WRITEMASK: GLenum = 0x0B98;
pub static MATRIX_MODE: GLenum = 0x0BA0;
pub static NORMALIZE: GLenum = 0x0BA1;
pub static VIEWPORT: GLenum = 0x0BA2;
pub static MODELVIEW_STACK_DEPTH: GLenum = 0x0BA3;
pub static MODELVIEW0_STACK_DEPTH_EXT: GLenum = 0x0BA3;
pub static PROJECTION_STACK_DEPTH: GLenum = 0x0BA4;
pub static TEXTURE_STACK_DEPTH: GLenum = 0x0BA5;
pub static MODELVIEW_MATRIX: GLenum = 0x0BA6;
pub static MODELVIEW0_MATRIX_EXT: GLenum = 0x0BA6;
pub static PROJECTION_MATRIX: GLenum = 0x0BA7;
pub static TEXTURE_MATRIX: GLenum = 0x0BA8;
pub static ATTRIB_STACK_DEPTH: GLenum = 0x0BB0;
pub static CLIENT_ATTRIB_STACK_DEPTH: GLenum = 0x0BB1;
pub static ALPHA_TEST: GLenum = 0x0BC0;
pub static ALPHA_TEST_QCOM: GLenum = 0x0BC0;
pub static ALPHA_TEST_FUNC: GLenum = 0x0BC1;
pub static ALPHA_TEST_FUNC_QCOM: GLenum = 0x0BC1;
pub static ALPHA_TEST_REF: GLenum = 0x0BC2;
pub static ALPHA_TEST_REF_QCOM: GLenum = 0x0BC2;
pub static DITHER: GLenum = 0x0BD0;
pub static BLEND_DST: GLenum = 0x0BE0;
pub static BLEND_SRC: GLenum = 0x0BE1;
pub static BLEND: GLenum = 0x0BE2;
pub static LOGIC_OP_MODE: GLenum = 0x0BF0;
pub static INDEX_LOGIC_OP: GLenum = 0x0BF1;
pub static LOGIC_OP: GLenum = 0x0BF1;
pub static COLOR_LOGIC_OP: GLenum = 0x0BF2;
pub static AUX_BUFFERS: GLenum = 0x0C00;
pub static DRAW_BUFFER: GLenum = 0x0C01;
pub static DRAW_BUFFER_EXT: GLenum = 0x0C01;
pub static READ_BUFFER: GLenum = 0x0C02;
pub static READ_BUFFER_EXT: GLenum = 0x0C02;
pub static READ_BUFFER_NV: GLenum = 0x0C02;
pub static SCISSOR_BOX: GLenum = 0x0C10;
pub static SCISSOR_TEST: GLenum = 0x0C11;
pub static INDEX_CLEAR_VALUE: GLenum = 0x0C20;
pub static INDEX_WRITEMASK: GLenum = 0x0C21;
pub static COLOR_CLEAR_VALUE: GLenum = 0x0C22;
pub static COLOR_WRITEMASK: GLenum = 0x0C23;
pub static INDEX_MODE: GLenum = 0x0C30;
pub static RGBA_MODE: GLenum = 0x0C31;
pub static DOUBLEBUFFER: GLenum = 0x0C32;
pub static STEREO: GLenum = 0x0C33;
pub static RENDER_MODE: GLenum = 0x0C40;
pub static PERSPECTIVE_CORRECTION_HINT: GLenum = 0x0C50;
pub static POINT_SMOOTH_HINT: GLenum = 0x0C51;
pub static LINE_SMOOTH_HINT: GLenum = 0x0C52;
pub static POLYGON_SMOOTH_HINT: GLenum = 0x0C53;
pub static FOG_HINT: GLenum = 0x0C54;
pub static TEXTURE_GEN_S: GLenum = 0x0C60;
pub static TEXTURE_GEN_T: GLenum = 0x0C61;
pub static TEXTURE_GEN_R: GLenum = 0x0C62;
pub static TEXTURE_GEN_Q: GLenum = 0x0C63;
pub static PIXEL_MAP_I_TO_I: GLenum = 0x0C70;
pub static PIXEL_MAP_S_TO_S: GLenum = 0x0C71;
pub static PIXEL_MAP_I_TO_R: GLenum = 0x0C72;
pub static PIXEL_MAP_I_TO_G: GLenum = 0x0C73;
pub static PIXEL_MAP_I_TO_B: GLenum = 0x0C74;
pub static PIXEL_MAP_I_TO_A: GLenum = 0x0C75;
pub static PIXEL_MAP_R_TO_R: GLenum = 0x0C76;
pub static PIXEL_MAP_G_TO_G: GLenum = 0x0C77;
pub static PIXEL_MAP_B_TO_B: GLenum = 0x0C78;
pub static PIXEL_MAP_A_TO_A: GLenum = 0x0C79;
pub static PIXEL_MAP_I_TO_I_SIZE: GLenum = 0x0CB0;
pub static PIXEL_MAP_S_TO_S_SIZE: GLenum = 0x0CB1;
pub static PIXEL_MAP_I_TO_R_SIZE: GLenum = 0x0CB2;
pub static PIXEL_MAP_I_TO_G_SIZE: GLenum = 0x0CB3;
pub static PIXEL_MAP_I_TO_B_SIZE: GLenum = 0x0CB4;
pub static PIXEL_MAP_I_TO_A_SIZE: GLenum = 0x0CB5;
pub static PIXEL_MAP_R_TO_R_SIZE: GLenum = 0x0CB6;
pub static PIXEL_MAP_G_TO_G_SIZE: GLenum = 0x0CB7;
pub static PIXEL_MAP_B_TO_B_SIZE: GLenum = 0x0CB8;
pub static PIXEL_MAP_A_TO_A_SIZE: GLenum = 0x0CB9;
pub static UNPACK_SWAP_BYTES: GLenum = 0x0CF0;
pub static UNPACK_LSB_FIRST: GLenum = 0x0CF1;
pub static UNPACK_ROW_LENGTH: GLenum = 0x0CF2;
pub static UNPACK_ROW_LENGTH_EXT: GLenum = 0x0CF2;
pub static UNPACK_SKIP_ROWS: GLenum = 0x0CF3;
pub static UNPACK_SKIP_ROWS_EXT: GLenum = 0x0CF3;
pub static UNPACK_SKIP_PIXELS: GLenum = 0x0CF4;
pub static UNPACK_SKIP_PIXELS_EXT: GLenum = 0x0CF4;
pub static UNPACK_ALIGNMENT: GLenum = 0x0CF5;
pub static PACK_SWAP_BYTES: GLenum = 0x0D00;
pub static PACK_LSB_FIRST: GLenum = 0x0D01;
pub static PACK_ROW_LENGTH: GLenum = 0x0D02;
pub static PACK_SKIP_ROWS: GLenum = 0x0D03;
pub static PACK_SKIP_PIXELS: GLenum = 0x0D04;
pub static PACK_ALIGNMENT: GLenum = 0x0D05;
pub static MAP_COLOR: GLenum = 0x0D10;
pub static MAP_STENCIL: GLenum = 0x0D11;
pub static INDEX_SHIFT: GLenum = 0x0D12;
pub static INDEX_OFFSET: GLenum = 0x0D13;
pub static RED_SCALE: GLenum = 0x0D14;
pub static RED_BIAS: GLenum = 0x0D15;
pub static ZOOM_X: GLenum = 0x0D16;
pub static ZOOM_Y: GLenum = 0x0D17;
pub static GREEN_SCALE: GLenum = 0x0D18;
pub static GREEN_BIAS: GLenum = 0x0D19;
pub static BLUE_SCALE: GLenum = 0x0D1A;
pub static BLUE_BIAS: GLenum = 0x0D1B;
pub static ALPHA_SCALE: GLenum = 0x0D1C;
pub static ALPHA_BIAS: GLenum = 0x0D1D;
pub static DEPTH_SCALE: GLenum = 0x0D1E;
pub static DEPTH_BIAS: GLenum = 0x0D1F;
pub static MAX_EVAL_ORDER: GLenum = 0x0D30;
pub static MAX_LIGHTS: GLenum = 0x0D31;
pub static MAX_CLIP_PLANES: GLenum = 0x0D32;
pub static MAX_CLIP_DISTANCES: GLenum = 0x0D32;
pub static MAX_TEXTURE_SIZE: GLenum = 0x0D33;
pub static MAX_PIXEL_MAP_TABLE: GLenum = 0x0D34;
pub static MAX_ATTRIB_STACK_DEPTH: GLenum = 0x0D35;
pub static MAX_MODELVIEW_STACK_DEPTH: GLenum = 0x0D36;
pub static MAX_NAME_STACK_DEPTH: GLenum = 0x0D37;
pub static MAX_PROJECTION_STACK_DEPTH: GLenum = 0x0D38;
pub static MAX_TEXTURE_STACK_DEPTH: GLenum = 0x0D39;
pub static MAX_VIEWPORT_DIMS: GLenum = 0x0D3A;
pub static MAX_CLIENT_ATTRIB_STACK_DEPTH: GLenum = 0x0D3B;
pub static SUBPIXEL_BITS: GLenum = 0x0D50;
pub static INDEX_BITS: GLenum = 0x0D51;
pub static RED_BITS: GLenum = 0x0D52;
pub static GREEN_BITS: GLenum = 0x0D53;
pub static BLUE_BITS: GLenum = 0x0D54;
pub static ALPHA_BITS: GLenum = 0x0D55;
pub static DEPTH_BITS: GLenum = 0x0D56;
pub static STENCIL_BITS: GLenum = 0x0D57;
pub static ACCUM_RED_BITS: GLenum = 0x0D58;
pub static ACCUM_GREEN_BITS: GLenum = 0x0D59;
pub static ACCUM_BLUE_BITS: GLenum = 0x0D5A;
pub static ACCUM_ALPHA_BITS: GLenum = 0x0D5B;
pub static NAME_STACK_DEPTH: GLenum = 0x0D70;
pub static AUTO_NORMAL: GLenum = 0x0D80;
pub static MAP1_COLOR_4: GLenum = 0x0D90;
pub static MAP1_INDEX: GLenum = 0x0D91;
pub static MAP1_NORMAL: GLenum = 0x0D92;
pub static MAP1_TEXTURE_COORD_1: GLenum = 0x0D93;
pub static MAP1_TEXTURE_COORD_2: GLenum = 0x0D94;
pub static MAP1_TEXTURE_COORD_3: GLenum = 0x0D95;
pub static MAP1_TEXTURE_COORD_4: GLenum = 0x0D96;
pub static MAP1_VERTEX_3: GLenum = 0x0D97;
pub static MAP1_VERTEX_4: GLenum = 0x0D98;
pub static MAP2_COLOR_4: GLenum = 0x0DB0;
pub static MAP2_INDEX: GLenum = 0x0DB1;
pub static MAP2_NORMAL: GLenum = 0x0DB2;
pub static MAP2_TEXTURE_COORD_1: GLenum = 0x0DB3;
pub static MAP2_TEXTURE_COORD_2: GLenum = 0x0DB4;
pub static MAP2_TEXTURE_COORD_3: GLenum = 0x0DB5;
pub static MAP2_TEXTURE_COORD_4: GLenum = 0x0DB6;
pub static MAP2_VERTEX_3: GLenum = 0x0DB7;
pub static MAP2_VERTEX_4: GLenum = 0x0DB8;
pub static MAP1_GRID_DOMAIN: GLenum = 0x0DD0;
pub static MAP1_GRID_SEGMENTS: GLenum = 0x0DD1;
pub static MAP2_GRID_DOMAIN: GLenum = 0x0DD2;
pub static MAP2_GRID_SEGMENTS: GLenum = 0x0DD3;
pub static TEXTURE_1D: GLenum = 0x0DE0;
pub static TEXTURE_2D: GLenum = 0x0DE1;
pub static FEEDBACK_BUFFER_POINTER: GLenum = 0x0DF0;
pub static FEEDBACK_BUFFER_SIZE: GLenum = 0x0DF1;
pub static FEEDBACK_BUFFER_TYPE: GLenum = 0x0DF2;
pub static SELECTION_BUFFER_POINTER: GLenum = 0x0DF3;
pub static SELECTION_BUFFER_SIZE: GLenum = 0x0DF4;
pub static TEXTURE_WIDTH: GLenum = 0x1000;
pub static TEXTURE_HEIGHT: GLenum = 0x1001;
pub static TEXTURE_INTERNAL_FORMAT: GLenum = 0x1003;
pub static TEXTURE_COMPONENTS: GLenum = 0x1003;
pub static TEXTURE_BORDER_COLOR: GLenum = 0x1004;
pub static TEXTURE_BORDER_COLOR_NV: GLenum = 0x1004;
pub static TEXTURE_BORDER: GLenum = 0x1005;
pub static DONT_CARE: GLenum = 0x1100;
pub static FASTEST: GLenum = 0x1101;
pub static NICEST: GLenum = 0x1102;
pub static AMBIENT: GLenum = 0x1200;
pub static DIFFUSE: GLenum = 0x1201;
pub static SPECULAR: GLenum = 0x1202;
pub static POSITION: GLenum = 0x1203;
pub static SPOT_DIRECTION: GLenum = 0x1204;
pub static SPOT_EXPONENT: GLenum = 0x1205;
pub static SPOT_CUTOFF: GLenum = 0x1206;
pub static CONSTANT_ATTENUATION: GLenum = 0x1207;
pub static LINEAR_ATTENUATION: GLenum = 0x1208;
pub static QUADRATIC_ATTENUATION: GLenum = 0x1209;
pub static COMPILE: GLenum = 0x1300;
pub static COMPILE_AND_EXECUTE: GLenum = 0x1301;
pub static BYTE: GLenum = 0x1400;
pub static UNSIGNED_BYTE: GLenum = 0x1401;
pub static SHORT: GLenum = 0x1402;
pub static UNSIGNED_SHORT: GLenum = 0x1403;
pub static INT: GLenum = 0x1404;
pub static UNSIGNED_INT: GLenum = 0x1405;
pub static FLOAT: GLenum = 0x1406;
pub static _2_BYTES: GLenum = 0x1407;
pub static _3_BYTES: GLenum = 0x1408;
pub static _4_BYTES: GLenum = 0x1409;
pub static DOUBLE: GLenum = 0x140A;
pub static DOUBLE_EXT: GLenum = 0x140A;
pub static HALF_FLOAT: GLenum = 0x140B;
pub static HALF_FLOAT_ARB: GLenum = 0x140B;
pub static HALF_FLOAT_NV: GLenum = 0x140B;
pub static HALF_APPLE: GLenum = 0x140B;
pub static FIXED: GLenum = 0x140C;
pub static FIXED_OES: GLenum = 0x140C;
pub static INT64_NV: GLenum = 0x140E;
pub static UNSIGNED_INT64_ARB: GLenum = 0x140F;
pub static UNSIGNED_INT64_NV: GLenum = 0x140F;
pub static CLEAR: GLenum = 0x1500;
pub static AND: GLenum = 0x1501;
pub static AND_REVERSE: GLenum = 0x1502;
pub static COPY: GLenum = 0x1503;
pub static AND_INVERTED: GLenum = 0x1504;
pub static NOOP: GLenum = 0x1505;
pub static XOR: GLenum = 0x1506;
pub static OR: GLenum = 0x1507;
pub static NOR: GLenum = 0x1508;
pub static EQUIV: GLenum = 0x1509;
pub static INVERT: GLenum = 0x150A;
pub static OR_REVERSE: GLenum = 0x150B;
pub static COPY_INVERTED: GLenum = 0x150C;
pub static OR_INVERTED: GLenum = 0x150D;
pub static NAND: GLenum = 0x150E;
pub static SET: GLenum = 0x150F;
pub static EMISSION: GLenum = 0x1600;
pub static SHININESS: GLenum = 0x1601;
pub static AMBIENT_AND_DIFFUSE: GLenum = 0x1602;
pub static COLOR_INDEXES: GLenum = 0x1603;
pub static MODELVIEW: GLenum = 0x1700;
pub static MODELVIEW0_ARB: GLenum = 0x1700;
pub static MODELVIEW0_EXT: GLenum = 0x1700;
pub static PROJECTION: GLenum = 0x1701;
pub static TEXTURE: GLenum = 0x1702;
pub static COLOR: GLenum = 0x1800;
pub static COLOR_EXT: GLenum = 0x1800;
pub static DEPTH: GLenum = 0x1801;
pub static DEPTH_EXT: GLenum = 0x1801;
pub static STENCIL: GLenum = 0x1802;
pub static STENCIL_EXT: GLenum = 0x1802;
pub static COLOR_INDEX: GLenum = 0x1900;
pub static STENCIL_INDEX: GLenum = 0x1901;
pub static DEPTH_COMPONENT: GLenum = 0x1902;
pub static RED: GLenum = 0x1903;
pub static RED_EXT: GLenum = 0x1903;
pub static GREEN: GLenum = 0x1904;
pub static BLUE: GLenum = 0x1905;
pub static ALPHA: GLenum = 0x1906;
pub static RGB: GLenum = 0x1907;
pub static RGBA: GLenum = 0x1908;
pub static LUMINANCE: GLenum = 0x1909;
pub static LUMINANCE_ALPHA: GLenum = 0x190A;
pub static BITMAP: GLenum = 0x1A00;
pub static POINT: GLenum = 0x1B00;
pub static LINE: GLenum = 0x1B01;
pub static FILL: GLenum = 0x1B02;
pub static RENDER: GLenum = 0x1C00;
pub static FEEDBACK: GLenum = 0x1C01;
pub static SELECT: GLenum = 0x1C02;
pub static FLAT: GLenum = 0x1D00;
pub static SMOOTH: GLenum = 0x1D01;
pub static KEEP: GLenum = 0x1E00;
pub static REPLACE: GLenum = 0x1E01;
pub static INCR: GLenum = 0x1E02;
pub static DECR: GLenum = 0x1E03;
pub static VENDOR: GLenum = 0x1F00;
pub static RENDERER: GLenum = 0x1F01;
pub static VERSION: GLenum = 0x1F02;
pub static EXTENSIONS: GLenum = 0x1F03;
pub static S: GLenum = 0x2000;
pub static T: GLenum = 0x2001;
pub static R: GLenum = 0x2002;
pub static Q: GLenum = 0x2003;
pub static MODULATE: GLenum = 0x2100;
pub static DECAL: GLenum = 0x2101;
pub static TEXTURE_ENV_MODE: GLenum = 0x2200;
pub static TEXTURE_ENV_COLOR: GLenum = 0x2201;
pub static TEXTURE_ENV: GLenum = 0x2300;
pub static EYE_LINEAR: GLenum = 0x2400;
pub static OBJECT_LINEAR: GLenum = 0x2401;
pub static SPHERE_MAP: GLenum = 0x2402;
pub static TEXTURE_GEN_MODE: GLenum = 0x2500;
pub static OBJECT_PLANE: GLenum = 0x2501;
pub static EYE_PLANE: GLenum = 0x2502;
pub static NEAREST: GLenum = 0x2600;
pub static LINEAR: GLenum = 0x2601;
pub static NEAREST_MIPMAP_NEAREST: GLenum = 0x2700;
pub static LINEAR_MIPMAP_NEAREST: GLenum = 0x2701;
pub static NEAREST_MIPMAP_LINEAR: GLenum = 0x2702;
pub static LINEAR_MIPMAP_LINEAR: GLenum = 0x2703;
pub static TEXTURE_MAG_FILTER: GLenum = 0x2800;
pub static TEXTURE_MIN_FILTER: GLenum = 0x2801;
pub static TEXTURE_WRAP_S: GLenum = 0x2802;
pub static TEXTURE_WRAP_T: GLenum = 0x2803;
pub static CLAMP: GLenum = 0x2900;
pub static REPEAT: GLenum = 0x2901;
pub static POLYGON_OFFSET_UNITS: GLenum = 0x2A00;
pub static POLYGON_OFFSET_POINT: GLenum = 0x2A01;
pub static POLYGON_OFFSET_LINE: GLenum = 0x2A02;
pub static R3_G3_B2: GLenum = 0x2A10;
pub static V2F: GLenum = 0x2A20;
pub static V3F: GLenum = 0x2A21;
pub static C4UB_V2F: GLenum = 0x2A22;
pub static C4UB_V3F: GLenum = 0x2A23;
pub static C3F_V3F: GLenum = 0x2A24;
pub static N3F_V3F: GLenum = 0x2A25;
pub static C4F_N3F_V3F: GLenum = 0x2A26;
pub static T2F_V3F: GLenum = 0x2A27;
pub static T4F_V4F: GLenum = 0x2A28;
pub static T2F_C4UB_V3F: GLenum = 0x2A29;
pub static T2F_C3F_V3F: GLenum = 0x2A2A;
pub static T2F_N3F_V3F: GLenum = 0x2A2B;
pub static T2F_C4F_N3F_V3F: GLenum = 0x2A2C;
pub static T4F_C4F_N3F_V4F: GLenum = 0x2A2D;
pub static CLIP_PLANE0: GLenum = 0x3000;
pub static CLIP_DISTANCE0: GLenum = 0x3000;
pub static CLIP_PLANE1: GLenum = 0x3001;
pub static CLIP_DISTANCE1: GLenum = 0x3001;
pub static CLIP_PLANE2: GLenum = 0x3002;
pub static CLIP_DISTANCE2: GLenum = 0x3002;
pub static CLIP_PLANE3: GLenum = 0x3003;
pub static CLIP_DISTANCE3: GLenum = 0x3003;
pub static CLIP_PLANE4: GLenum = 0x3004;
pub static CLIP_DISTANCE4: GLenum = 0x3004;
pub static CLIP_PLANE5: GLenum = 0x3005;
pub static CLIP_DISTANCE5: GLenum = 0x3005;
pub static CLIP_DISTANCE6: GLenum = 0x3006;
pub static CLIP_DISTANCE7: GLenum = 0x3007;
pub static LIGHT0: GLenum = 0x4000;
pub static LIGHT1: GLenum = 0x4001;
pub static LIGHT2: GLenum = 0x4002;
pub static LIGHT3: GLenum = 0x4003;
pub static LIGHT4: GLenum = 0x4004;
pub static LIGHT5: GLenum = 0x4005;
pub static LIGHT6: GLenum = 0x4006;
pub static LIGHT7: GLenum = 0x4007;
pub static ABGR_EXT: GLenum = 0x8000;
pub static CONSTANT_COLOR: GLenum = 0x8001;
pub static CONSTANT_COLOR_EXT: GLenum = 0x8001;
pub static ONE_MINUS_CONSTANT_COLOR: GLenum = 0x8002;
pub static ONE_MINUS_CONSTANT_COLOR_EXT: GLenum = 0x8002;
pub static CONSTANT_ALPHA: GLenum = 0x8003;
pub static CONSTANT_ALPHA_EXT: GLenum = 0x8003;
pub static ONE_MINUS_CONSTANT_ALPHA: GLenum = 0x8004;
pub static ONE_MINUS_CONSTANT_ALPHA_EXT: GLenum = 0x8004;
pub static BLEND_COLOR: GLenum = 0x8005;
pub static BLEND_COLOR_EXT: GLenum = 0x8005;
pub static FUNC_ADD: GLenum = 0x8006;
pub static FUNC_ADD_EXT: GLenum = 0x8006;
pub static FUNC_ADD_OES: GLenum = 0x8006;
pub static MIN: GLenum = 0x8007;
pub static MIN_EXT: GLenum = 0x8007;
pub static MAX: GLenum = 0x8008;
pub static MAX_EXT: GLenum = 0x8008;
pub static BLEND_EQUATION: GLenum = 0x8009;
pub static BLEND_EQUATION_EXT: GLenum = 0x8009;
pub static BLEND_EQUATION_OES: GLenum = 0x8009;
pub static BLEND_EQUATION_RGB: GLenum = 0x8009;
pub static BLEND_EQUATION_RGB_EXT: GLenum = 0x8009;
pub static BLEND_EQUATION_RGB_OES: GLenum = 0x8009;
pub static FUNC_SUBTRACT: GLenum = 0x800A;
pub static FUNC_SUBTRACT_EXT: GLenum = 0x800A;
pub static FUNC_SUBTRACT_OES: GLenum = 0x800A;
pub static FUNC_REVERSE_SUBTRACT: GLenum = 0x800B;
pub static FUNC_REVERSE_SUBTRACT_EXT: GLenum = 0x800B;
pub static FUNC_REVERSE_SUBTRACT_OES: GLenum = 0x800B;
pub static CMYK_EXT: GLenum = 0x800C;
pub static CMYKA_EXT: GLenum = 0x800D;
pub static PACK_CMYK_HINT_EXT: GLenum = 0x800E;
pub static UNPACK_CMYK_HINT_EXT: GLenum = 0x800F;
pub static CONVOLUTION_1D: GLenum = 0x8010;
pub static CONVOLUTION_1D_EXT: GLenum = 0x8010;
pub static CONVOLUTION_2D: GLenum = 0x8011;
pub static CONVOLUTION_2D_EXT: GLenum = 0x8011;
pub static SEPARABLE_2D: GLenum = 0x8012;
pub static SEPARABLE_2D_EXT: GLenum = 0x8012;
pub static CONVOLUTION_BORDER_MODE: GLenum = 0x8013;
pub static CONVOLUTION_BORDER_MODE_EXT: GLenum = 0x8013;
pub static CONVOLUTION_FILTER_SCALE: GLenum = 0x8014;
pub static CONVOLUTION_FILTER_SCALE_EXT: GLenum = 0x8014;
pub static CONVOLUTION_FILTER_BIAS: GLenum = 0x8015;
pub static CONVOLUTION_FILTER_BIAS_EXT: GLenum = 0x8015;
pub static REDUCE: GLenum = 0x8016;
pub static REDUCE_EXT: GLenum = 0x8016;
pub static CONVOLUTION_FORMAT: GLenum = 0x8017;
pub static CONVOLUTION_FORMAT_EXT: GLenum = 0x8017;
pub static CONVOLUTION_WIDTH: GLenum = 0x8018;
pub static CONVOLUTION_WIDTH_EXT: GLenum = 0x8018;
pub static CONVOLUTION_HEIGHT: GLenum = 0x8019;
pub static CONVOLUTION_HEIGHT_EXT: GLenum = 0x8019;
pub static MAX_CONVOLUTION_WIDTH: GLenum = 0x801A;
pub static MAX_CONVOLUTION_WIDTH_EXT: GLenum = 0x801A;
pub static MAX_CONVOLUTION_HEIGHT: GLenum = 0x801B;
pub static MAX_CONVOLUTION_HEIGHT_EXT: GLenum = 0x801B;
pub static POST_CONVOLUTION_RED_SCALE: GLenum = 0x801C;
pub static POST_CONVOLUTION_RED_SCALE_EXT: GLenum = 0x801C;
pub static POST_CONVOLUTION_GREEN_SCALE: GLenum = 0x801D;
pub static POST_CONVOLUTION_GREEN_SCALE_EXT: GLenum = 0x801D;
pub static POST_CONVOLUTION_BLUE_SCALE: GLenum = 0x801E;
pub static POST_CONVOLUTION_BLUE_SCALE_EXT: GLenum = 0x801E;
pub static POST_CONVOLUTION_ALPHA_SCALE: GLenum = 0x801F;
pub static POST_CONVOLUTION_ALPHA_SCALE_EXT: GLenum = 0x801F;
pub static POST_CONVOLUTION_RED_BIAS: GLenum = 0x8020;
pub static POST_CONVOLUTION_RED_BIAS_EXT: GLenum = 0x8020;
pub static POST_CONVOLUTION_GREEN_BIAS: GLenum = 0x8021;
pub static POST_CONVOLUTION_GREEN_BIAS_EXT: GLenum = 0x8021;
pub static POST_CONVOLUTION_BLUE_BIAS: GLenum = 0x8022;
pub static POST_CONVOLUTION_BLUE_BIAS_EXT: GLenum = 0x8022;
pub static POST_CONVOLUTION_ALPHA_BIAS: GLenum = 0x8023;
pub static POST_CONVOLUTION_ALPHA_BIAS_EXT: GLenum = 0x8023;
pub static HISTOGRAM: GLenum = 0x8024;
pub static HISTOGRAM_EXT: GLenum = 0x8024;
pub static PROXY_HISTOGRAM: GLenum = 0x8025;
pub static PROXY_HISTOGRAM_EXT: GLenum = 0x8025;
pub static HISTOGRAM_WIDTH: GLenum = 0x8026;
pub static HISTOGRAM_WIDTH_EXT: GLenum = 0x8026;
pub static HISTOGRAM_FORMAT: GLenum = 0x8027;
pub static HISTOGRAM_FORMAT_EXT: GLenum = 0x8027;
pub static HISTOGRAM_RED_SIZE: GLenum = 0x8028;
pub static HISTOGRAM_RED_SIZE_EXT: GLenum = 0x8028;
pub static HISTOGRAM_GREEN_SIZE: GLenum = 0x8029;
pub static HISTOGRAM_GREEN_SIZE_EXT: GLenum = 0x8029;
pub static HISTOGRAM_BLUE_SIZE: GLenum = 0x802A;
pub static HISTOGRAM_BLUE_SIZE_EXT: GLenum = 0x802A;
pub static HISTOGRAM_ALPHA_SIZE: GLenum = 0x802B;
pub static HISTOGRAM_ALPHA_SIZE_EXT: GLenum = 0x802B;
pub static HISTOGRAM_LUMINANCE_SIZE: GLenum = 0x802C;
pub static HISTOGRAM_LUMINANCE_SIZE_EXT: GLenum = 0x802C;
pub static HISTOGRAM_SINK: GLenum = 0x802D;
pub static HISTOGRAM_SINK_EXT: GLenum = 0x802D;
pub static MINMAX: GLenum = 0x802E;
pub static MINMAX_EXT: GLenum = 0x802E;
pub static MINMAX_FORMAT: GLenum = 0x802F;
pub static MINMAX_FORMAT_EXT: GLenum = 0x802F;
pub static MINMAX_SINK: GLenum = 0x8030;
pub static MINMAX_SINK_EXT: GLenum = 0x8030;
pub static TABLE_TOO_LARGE_EXT: GLenum = 0x8031;
pub static TABLE_TOO_LARGE: GLenum = 0x8031;
pub static UNSIGNED_BYTE_3_3_2: GLenum = 0x8032;
pub static UNSIGNED_BYTE_3_3_2_EXT: GLenum = 0x8032;
pub static UNSIGNED_SHORT_4_4_4_4: GLenum = 0x8033;
pub static UNSIGNED_SHORT_4_4_4_4_EXT: GLenum = 0x8033;
pub static UNSIGNED_SHORT_5_5_5_1: GLenum = 0x8034;
pub static UNSIGNED_SHORT_5_5_5_1_EXT: GLenum = 0x8034;
pub static UNSIGNED_INT_8_8_8_8: GLenum = 0x8035;
pub static UNSIGNED_INT_8_8_8_8_EXT: GLenum = 0x8035;
pub static UNSIGNED_INT_10_10_10_2: GLenum = 0x8036;
pub static UNSIGNED_INT_10_10_10_2_EXT: GLenum = 0x8036;
pub static POLYGON_OFFSET_EXT: GLenum = 0x8037;
pub static POLYGON_OFFSET_FILL: GLenum = 0x8037;
pub static POLYGON_OFFSET_FACTOR: GLenum = 0x8038;
pub static POLYGON_OFFSET_FACTOR_EXT: GLenum = 0x8038;
pub static POLYGON_OFFSET_BIAS_EXT: GLenum = 0x8039;
pub static RESCALE_NORMAL: GLenum = 0x803A;
pub static RESCALE_NORMAL_EXT: GLenum = 0x803A;
pub static ALPHA4: GLenum = 0x803B;
pub static ALPHA4_EXT: GLenum = 0x803B;
pub static ALPHA8: GLenum = 0x803C;
pub static ALPHA8_EXT: GLenum = 0x803C;
pub static ALPHA12: GLenum = 0x803D;
pub static ALPHA12_EXT: GLenum = 0x803D;
pub static ALPHA16: GLenum = 0x803E;
pub static ALPHA16_EXT: GLenum = 0x803E;
pub static LUMINANCE4: GLenum = 0x803F;
pub static LUMINANCE4_EXT: GLenum = 0x803F;
pub static LUMINANCE8: GLenum = 0x8040;
pub static LUMINANCE8_EXT: GLenum = 0x8040;
pub static LUMINANCE12: GLenum = 0x8041;
pub static LUMINANCE12_EXT: GLenum = 0x8041;
pub static LUMINANCE16: GLenum = 0x8042;
pub static LUMINANCE16_EXT: GLenum = 0x8042;
pub static LUMINANCE4_ALPHA4: GLenum = 0x8043;
pub static LUMINANCE4_ALPHA4_EXT: GLenum = 0x8043;
pub static LUMINANCE6_ALPHA2: GLenum = 0x8044;
pub static LUMINANCE6_ALPHA2_EXT: GLenum = 0x8044;
pub static LUMINANCE8_ALPHA8: GLenum = 0x8045;
pub static LUMINANCE8_ALPHA8_EXT: GLenum = 0x8045;
pub static LUMINANCE12_ALPHA4: GLenum = 0x8046;
pub static LUMINANCE12_ALPHA4_EXT: GLenum = 0x8046;
pub static LUMINANCE12_ALPHA12: GLenum = 0x8047;
pub static LUMINANCE12_ALPHA12_EXT: GLenum = 0x8047;
pub static LUMINANCE16_ALPHA16: GLenum = 0x8048;
pub static LUMINANCE16_ALPHA16_EXT: GLenum = 0x8048;
pub static INTENSITY: GLenum = 0x8049;
pub static INTENSITY_EXT: GLenum = 0x8049;
pub static INTENSITY4: GLenum = 0x804A;
pub static INTENSITY4_EXT: GLenum = 0x804A;
pub static INTENSITY8: GLenum = 0x804B;
pub static INTENSITY8_EXT: GLenum = 0x804B;
pub static INTENSITY12: GLenum = 0x804C;
pub static INTENSITY12_EXT: GLenum = 0x804C;
pub static INTENSITY16: GLenum = 0x804D;
pub static INTENSITY16_EXT: GLenum = 0x804D;
pub static RGB2_EXT: GLenum = 0x804E;
pub static RGB4: GLenum = 0x804F;
pub static RGB4_EXT: GLenum = 0x804F;
pub static RGB5: GLenum = 0x8050;
pub static RGB5_EXT: GLenum = 0x8050;
pub static RGB8: GLenum = 0x8051;
pub static RGB8_EXT: GLenum = 0x8051;
pub static RGB10: GLenum = 0x8052;
pub static RGB10_EXT: GLenum = 0x8052;
pub static RGB12: GLenum = 0x8053;
pub static RGB12_EXT: GLenum = 0x8053;
pub static RGB16: GLenum = 0x8054;
pub static RGB16_EXT: GLenum = 0x8054;
pub static RGBA2: GLenum = 0x8055;
pub static RGBA2_EXT: GLenum = 0x8055;
pub static RGBA4: GLenum = 0x8056;
pub static RGBA4_EXT: GLenum = 0x8056;
pub static RGBA4_OES: GLenum = 0x8056;
pub static RGB5_A1: GLenum = 0x8057;
pub static RGB5_A1_EXT: GLenum = 0x8057;
pub static RGB5_A1_OES: GLenum = 0x8057;
pub static RGBA8: GLenum = 0x8058;
pub static RGBA8_EXT: GLenum = 0x8058;
pub static RGBA8_OES: GLenum = 0x8058;
pub static RGB10_A2: GLenum = 0x8059;
pub static RGB10_A2_EXT: GLenum = 0x8059;
pub static RGBA12: GLenum = 0x805A;
pub static RGBA12_EXT: GLenum = 0x805A;
pub static RGBA16: GLenum = 0x805B;
pub static RGBA16_EXT: GLenum = 0x805B;
pub static TEXTURE_RED_SIZE: GLenum = 0x805C;
pub static TEXTURE_RED_SIZE_EXT: GLenum = 0x805C;
pub static TEXTURE_GREEN_SIZE: GLenum = 0x805D;
pub static TEXTURE_GREEN_SIZE_EXT: GLenum = 0x805D;
pub static TEXTURE_BLUE_SIZE: GLenum = 0x805E;
pub static TEXTURE_BLUE_SIZE_EXT: GLenum = 0x805E;
pub static TEXTURE_ALPHA_SIZE: GLenum = 0x805F;
pub static TEXTURE_ALPHA_SIZE_EXT: GLenum = 0x805F;
pub static TEXTURE_LUMINANCE_SIZE: GLenum = 0x8060;
pub static TEXTURE_LUMINANCE_SIZE_EXT: GLenum = 0x8060;
pub static TEXTURE_INTENSITY_SIZE: GLenum = 0x8061;
pub static TEXTURE_INTENSITY_SIZE_EXT: GLenum = 0x8061;
pub static REPLACE_EXT: GLenum = 0x8062;
pub static PROXY_TEXTURE_1D: GLenum = 0x8063;
pub static PROXY_TEXTURE_1D_EXT: GLenum = 0x8063;
pub static PROXY_TEXTURE_2D: GLenum = 0x8064;
pub static PROXY_TEXTURE_2D_EXT: GLenum = 0x8064;
pub static TEXTURE_TOO_LARGE_EXT: GLenum = 0x8065;
pub static TEXTURE_PRIORITY: GLenum = 0x8066;
pub static TEXTURE_PRIORITY_EXT: GLenum = 0x8066;
pub static TEXTURE_RESIDENT: GLenum = 0x8067;
pub static TEXTURE_RESIDENT_EXT: GLenum = 0x8067;
pub static TEXTURE_1D_BINDING_EXT: GLenum = 0x8068;
pub static TEXTURE_BINDING_1D: GLenum = 0x8068;
pub static TEXTURE_2D_BINDING_EXT: GLenum = 0x8069;
pub static TEXTURE_BINDING_2D: GLenum = 0x8069;
pub static TEXTURE_3D_BINDING_EXT: GLenum = 0x806A;
pub static TEXTURE_3D_BINDING_OES: GLenum = 0x806A;
pub static TEXTURE_BINDING_3D: GLenum = 0x806A;
pub static PACK_SKIP_IMAGES: GLenum = 0x806B;
pub static PACK_SKIP_IMAGES_EXT: GLenum = 0x806B;
pub static PACK_IMAGE_HEIGHT: GLenum = 0x806C;
pub static PACK_IMAGE_HEIGHT_EXT: GLenum = 0x806C;
pub static UNPACK_SKIP_IMAGES: GLenum = 0x806D;
pub static UNPACK_SKIP_IMAGES_EXT: GLenum = 0x806D;
pub static UNPACK_IMAGE_HEIGHT: GLenum = 0x806E;
pub static UNPACK_IMAGE_HEIGHT_EXT: GLenum = 0x806E;
pub static TEXTURE_3D: GLenum = 0x806F;
pub static TEXTURE_3D_EXT: GLenum = 0x806F;
pub static TEXTURE_3D_OES: GLenum = 0x806F;
pub static PROXY_TEXTURE_3D: GLenum = 0x8070;
pub static PROXY_TEXTURE_3D_EXT: GLenum = 0x8070;
pub static TEXTURE_DEPTH: GLenum = 0x8071;
pub static TEXTURE_DEPTH_EXT: GLenum = 0x8071;
pub static TEXTURE_WRAP_R: GLenum = 0x8072;
pub static TEXTURE_WRAP_R_EXT: GLenum = 0x8072;
pub static TEXTURE_WRAP_R_OES: GLenum = 0x8072;
pub static MAX_3D_TEXTURE_SIZE: GLenum = 0x8073;
pub static MAX_3D_TEXTURE_SIZE_EXT: GLenum = 0x8073;
pub static MAX_3D_TEXTURE_SIZE_OES: GLenum = 0x8073;
pub static VERTEX_ARRAY: GLenum = 0x8074;
pub static VERTEX_ARRAY_EXT: GLenum = 0x8074;
pub static NORMAL_ARRAY: GLenum = 0x8075;
pub static NORMAL_ARRAY_EXT: GLenum = 0x8075;
pub static COLOR_ARRAY: GLenum = 0x8076;
pub static COLOR_ARRAY_EXT: GLenum = 0x8076;
pub static INDEX_ARRAY: GLenum = 0x8077;
pub static INDEX_ARRAY_EXT: GLenum = 0x8077;
pub static TEXTURE_COORD_ARRAY: GLenum = 0x8078;
pub static TEXTURE_COORD_ARRAY_EXT: GLenum = 0x8078;
pub static EDGE_FLAG_ARRAY: GLenum = 0x8079;
pub static EDGE_FLAG_ARRAY_EXT: GLenum = 0x8079;
pub static VERTEX_ARRAY_SIZE: GLenum = 0x807A;
pub static VERTEX_ARRAY_SIZE_EXT: GLenum = 0x807A;
pub static VERTEX_ARRAY_TYPE: GLenum = 0x807B;
pub static VERTEX_ARRAY_TYPE_EXT: GLenum = 0x807B;
pub static VERTEX_ARRAY_STRIDE: GLenum = 0x807C;
pub static VERTEX_ARRAY_STRIDE_EXT: GLenum = 0x807C;
pub static VERTEX_ARRAY_COUNT_EXT: GLenum = 0x807D;
pub static NORMAL_ARRAY_TYPE: GLenum = 0x807E;
pub static NORMAL_ARRAY_TYPE_EXT: GLenum = 0x807E;
pub static NORMAL_ARRAY_STRIDE: GLenum = 0x807F;
pub static NORMAL_ARRAY_STRIDE_EXT: GLenum = 0x807F;
pub static NORMAL_ARRAY_COUNT_EXT: GLenum = 0x8080;
pub static COLOR_ARRAY_SIZE: GLenum = 0x8081;
pub static COLOR_ARRAY_SIZE_EXT: GLenum = 0x8081;
pub static COLOR_ARRAY_TYPE: GLenum = 0x8082;
pub static COLOR_ARRAY_TYPE_EXT: GLenum = 0x8082;
pub static COLOR_ARRAY_STRIDE: GLenum = 0x8083;
pub static COLOR_ARRAY_STRIDE_EXT: GLenum = 0x8083;
pub static COLOR_ARRAY_COUNT_EXT: GLenum = 0x8084;
pub static INDEX_ARRAY_TYPE: GLenum = 0x8085;
pub static INDEX_ARRAY_TYPE_EXT: GLenum = 0x8085;
pub static INDEX_ARRAY_STRIDE: GLenum = 0x8086;
pub static INDEX_ARRAY_STRIDE_EXT: GLenum = 0x8086;
pub static INDEX_ARRAY_COUNT_EXT: GLenum = 0x8087;
pub static TEXTURE_COORD_ARRAY_SIZE: GLenum = 0x8088;
pub static TEXTURE_COORD_ARRAY_SIZE_EXT: GLenum = 0x8088;
pub static TEXTURE_COORD_ARRAY_TYPE: GLenum = 0x8089;
pub static TEXTURE_COORD_ARRAY_TYPE_EXT: GLenum = 0x8089;
pub static TEXTURE_COORD_ARRAY_STRIDE: GLenum = 0x808A;
pub static TEXTURE_COORD_ARRAY_STRIDE_EXT: GLenum = 0x808A;
pub static TEXTURE_COORD_ARRAY_COUNT_EXT: GLenum = 0x808B;
pub static EDGE_FLAG_ARRAY_STRIDE: GLenum = 0x808C;
pub static EDGE_FLAG_ARRAY_STRIDE_EXT: GLenum = 0x808C;
pub static EDGE_FLAG_ARRAY_COUNT_EXT: GLenum = 0x808D;
pub static VERTEX_ARRAY_POINTER: GLenum = 0x808E;
pub static VERTEX_ARRAY_POINTER_EXT: GLenum = 0x808E;
pub static NORMAL_ARRAY_POINTER: GLenum = 0x808F;
pub static NORMAL_ARRAY_POINTER_EXT: GLenum = 0x808F;
pub static COLOR_ARRAY_POINTER: GLenum = 0x8090;
pub static COLOR_ARRAY_POINTER_EXT: GLenum = 0x8090;
pub static INDEX_ARRAY_POINTER: GLenum = 0x8091;
pub static INDEX_ARRAY_POINTER_EXT: GLenum = 0x8091;
pub static TEXTURE_COORD_ARRAY_POINTER: GLenum = 0x8092;
pub static TEXTURE_COORD_ARRAY_POINTER_EXT: GLenum = 0x8092;
pub static EDGE_FLAG_ARRAY_POINTER: GLenum = 0x8093;
pub static EDGE_FLAG_ARRAY_POINTER_EXT: GLenum = 0x8093;
pub static INTERLACE_SGIX: GLenum = 0x8094;
pub static DETAIL_TEXTURE_2D_SGIS: GLenum = 0x8095;
pub static DETAIL_TEXTURE_2D_BINDING_SGIS: GLenum = 0x8096;
pub static LINEAR_DETAIL_SGIS: GLenum = 0x8097;
pub static LINEAR_DETAIL_ALPHA_SGIS: GLenum = 0x8098;
pub static LINEAR_DETAIL_COLOR_SGIS: GLenum = 0x8099;
pub static DETAIL_TEXTURE_LEVEL_SGIS: GLenum = 0x809A;
pub static DETAIL_TEXTURE_MODE_SGIS: GLenum = 0x809B;
pub static DETAIL_TEXTURE_FUNC_POINTS_SGIS: GLenum = 0x809C;
pub static MULTISAMPLE: GLenum = 0x809D;
pub static MULTISAMPLE_ARB: GLenum = 0x809D;
pub static MULTISAMPLE_EXT: GLenum = 0x809D;
pub static MULTISAMPLE_SGIS: GLenum = 0x809D;
pub static SAMPLE_ALPHA_TO_COVERAGE: GLenum = 0x809E;
pub static SAMPLE_ALPHA_TO_COVERAGE_ARB: GLenum = 0x809E;
pub static SAMPLE_ALPHA_TO_MASK_EXT: GLenum = 0x809E;
pub static SAMPLE_ALPHA_TO_MASK_SGIS: GLenum = 0x809E;
pub static SAMPLE_ALPHA_TO_ONE: GLenum = 0x809F;
pub static SAMPLE_ALPHA_TO_ONE_ARB: GLenum = 0x809F;
pub static SAMPLE_ALPHA_TO_ONE_EXT: GLenum = 0x809F;
pub static SAMPLE_ALPHA_TO_ONE_SGIS: GLenum = 0x809F;
pub static SAMPLE_COVERAGE: GLenum = 0x80A0;
pub static SAMPLE_COVERAGE_ARB: GLenum = 0x80A0;
pub static SAMPLE_MASK_EXT: GLenum = 0x80A0;
pub static SAMPLE_MASK_SGIS: GLenum = 0x80A0;
pub static _1PASS_EXT: GLenum = 0x80A1;
pub static _1PASS_SGIS: GLenum = 0x80A1;
pub static _2PASS_0_EXT: GLenum = 0x80A2;
pub static _2PASS_0_SGIS: GLenum = 0x80A2;
pub static _2PASS_1_EXT: GLenum = 0x80A3;
pub static _2PASS_1_SGIS: GLenum = 0x80A3;
pub static _4PASS_0_EXT: GLenum = 0x80A4;
pub static _4PASS_0_SGIS: GLenum = 0x80A4;
pub static _4PASS_1_EXT: GLenum = 0x80A5;
pub static _4PASS_1_SGIS: GLenum = 0x80A5;
pub static _4PASS_2_EXT: GLenum = 0x80A6;
pub static _4PASS_2_SGIS: GLenum = 0x80A6;
pub static _4PASS_3_EXT: GLenum = 0x80A7;
pub static _4PASS_3_SGIS: GLenum = 0x80A7;
pub static SAMPLE_BUFFERS: GLenum = 0x80A8;
pub static SAMPLE_BUFFERS_ARB: GLenum = 0x80A8;
pub static SAMPLE_BUFFERS_EXT: GLenum = 0x80A8;
pub static SAMPLE_BUFFERS_SGIS: GLenum = 0x80A8;
pub static SAMPLES: GLenum = 0x80A9;
pub static SAMPLES_ARB: GLenum = 0x80A9;
pub static SAMPLES_EXT: GLenum = 0x80A9;
pub static SAMPLES_SGIS: GLenum = 0x80A9;
pub static SAMPLE_COVERAGE_VALUE: GLenum = 0x80AA;
pub static SAMPLE_COVERAGE_VALUE_ARB: GLenum = 0x80AA;
pub static SAMPLE_MASK_VALUE_EXT: GLenum = 0x80AA;
pub static SAMPLE_MASK_VALUE_SGIS: GLenum = 0x80AA;
pub static SAMPLE_COVERAGE_INVERT: GLenum = 0x80AB;
pub static SAMPLE_COVERAGE_INVERT_ARB: GLenum = 0x80AB;
pub static SAMPLE_MASK_INVERT_EXT: GLenum = 0x80AB;
pub static SAMPLE_MASK_INVERT_SGIS: GLenum = 0x80AB;
pub static SAMPLE_PATTERN_EXT: GLenum = 0x80AC;
pub static SAMPLE_PATTERN_SGIS: GLenum = 0x80AC;
pub static LINEAR_SHARPEN_SGIS: GLenum = 0x80AD;
pub static LINEAR_SHARPEN_ALPHA_SGIS: GLenum = 0x80AE;
pub static LINEAR_SHARPEN_COLOR_SGIS: GLenum = 0x80AF;
pub static SHARPEN_TEXTURE_FUNC_POINTS_SGIS: GLenum = 0x80B0;
pub static COLOR_MATRIX: GLenum = 0x80B1;
pub static COLOR_MATRIX_SGI: GLenum = 0x80B1;
pub static COLOR_MATRIX_STACK_DEPTH: GLenum = 0x80B2;
pub static COLOR_MATRIX_STACK_DEPTH_SGI: GLenum = 0x80B2;
pub static MAX_COLOR_MATRIX_STACK_DEPTH: GLenum = 0x80B3;
pub static MAX_COLOR_MATRIX_STACK_DEPTH_SGI: GLenum = 0x80B3;
pub static POST_COLOR_MATRIX_RED_SCALE: GLenum = 0x80B4;
pub static POST_COLOR_MATRIX_RED_SCALE_SGI: GLenum = 0x80B4;
pub static POST_COLOR_MATRIX_GREEN_SCALE: GLenum = 0x80B5;
pub static POST_COLOR_MATRIX_GREEN_SCALE_SGI: GLenum = 0x80B5;
pub static POST_COLOR_MATRIX_BLUE_SCALE: GLenum = 0x80B6;
pub static POST_COLOR_MATRIX_BLUE_SCALE_SGI: GLenum = 0x80B6;
pub static POST_COLOR_MATRIX_ALPHA_SCALE: GLenum = 0x80B7;
pub static POST_COLOR_MATRIX_ALPHA_SCALE_SGI: GLenum = 0x80B7;
pub static POST_COLOR_MATRIX_RED_BIAS: GLenum = 0x80B8;
pub static POST_COLOR_MATRIX_RED_BIAS_SGI: GLenum = 0x80B8;
pub static POST_COLOR_MATRIX_GREEN_BIAS: GLenum = 0x80B9;
pub static POST_COLOR_MATRIX_GREEN_BIAS_SGI: GLenum = 0x80B9;
pub static POST_COLOR_MATRIX_BLUE_BIAS: GLenum = 0x80BA;
pub static POST_COLOR_MATRIX_BLUE_BIAS_SGI: GLenum = 0x80BA;
pub static POST_COLOR_MATRIX_ALPHA_BIAS: GLenum = 0x80BB;
pub static POST_COLOR_MATRIX_ALPHA_BIAS_SGI: GLenum = 0x80BB;
pub static TEXTURE_COLOR_TABLE_SGI: GLenum = 0x80BC;
pub static PROXY_TEXTURE_COLOR_TABLE_SGI: GLenum = 0x80BD;
pub static TEXTURE_ENV_BIAS_SGIX: GLenum = 0x80BE;
pub static SHADOW_AMBIENT_SGIX: GLenum = 0x80BF;
pub static TEXTURE_COMPARE_FAIL_VALUE_ARB: GLenum = 0x80BF;
pub static BLEND_DST_RGB: GLenum = 0x80C8;
pub static BLEND_DST_RGB_EXT: GLenum = 0x80C8;
pub static BLEND_DST_RGB_OES: GLenum = 0x80C8;
pub static BLEND_SRC_RGB: GLenum = 0x80C9;
pub static BLEND_SRC_RGB_EXT: GLenum = 0x80C9;
pub static BLEND_SRC_RGB_OES: GLenum = 0x80C9;
pub static BLEND_DST_ALPHA: GLenum = 0x80CA;
pub static BLEND_DST_ALPHA_EXT: GLenum = 0x80CA;
pub static BLEND_DST_ALPHA_OES: GLenum = 0x80CA;
pub static BLEND_SRC_ALPHA: GLenum = 0x80CB;
pub static BLEND_SRC_ALPHA_EXT: GLenum = 0x80CB;
pub static BLEND_SRC_ALPHA_OES: GLenum = 0x80CB;
pub static _422_EXT: GLenum = 0x80CC;
pub static _422_REV_EXT: GLenum = 0x80CD;
pub static _422_AVERAGE_EXT: GLenum = 0x80CE;
pub static _422_REV_AVERAGE_EXT: GLenum = 0x80CF;
pub static COLOR_TABLE: GLenum = 0x80D0;
pub static COLOR_TABLE_SGI: GLenum = 0x80D0;
pub static POST_CONVOLUTION_COLOR_TABLE: GLenum = 0x80D1;
pub static POST_CONVOLUTION_COLOR_TABLE_SGI: GLenum = 0x80D1;
pub static POST_COLOR_MATRIX_COLOR_TABLE: GLenum = 0x80D2;
pub static POST_COLOR_MATRIX_COLOR_TABLE_SGI: GLenum = 0x80D2;
pub static PROXY_COLOR_TABLE: GLenum = 0x80D3;
pub static PROXY_COLOR_TABLE_SGI: GLenum = 0x80D3;
pub static PROXY_POST_CONVOLUTION_COLOR_TABLE: GLenum = 0x80D4;
pub static PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI: GLenum = 0x80D4;
pub static PROXY_POST_COLOR_MATRIX_COLOR_TABLE: GLenum = 0x80D5;
pub static PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI: GLenum = 0x80D5;
pub static COLOR_TABLE_SCALE: GLenum = 0x80D6;
pub static COLOR_TABLE_SCALE_SGI: GLenum = 0x80D6;
pub static COLOR_TABLE_BIAS: GLenum = 0x80D7;
pub static COLOR_TABLE_BIAS_SGI: GLenum = 0x80D7;
pub static COLOR_TABLE_FORMAT: GLenum = 0x80D8;
pub static COLOR_TABLE_FORMAT_SGI: GLenum = 0x80D8;
pub static COLOR_TABLE_WIDTH: GLenum = 0x80D9;
pub static COLOR_TABLE_WIDTH_SGI: GLenum = 0x80D9;
pub static COLOR_TABLE_RED_SIZE: GLenum = 0x80DA;
pub static COLOR_TABLE_RED_SIZE_SGI: GLenum = 0x80DA;
pub static COLOR_TABLE_GREEN_SIZE: GLenum = 0x80DB;
pub static COLOR_TABLE_GREEN_SIZE_SGI: GLenum = 0x80DB;
pub static COLOR_TABLE_BLUE_SIZE: GLenum = 0x80DC;
pub static COLOR_TABLE_BLUE_SIZE_SGI: GLenum = 0x80DC;
pub static COLOR_TABLE_ALPHA_SIZE: GLenum = 0x80DD;
pub static COLOR_TABLE_ALPHA_SIZE_SGI: GLenum = 0x80DD;
pub static COLOR_TABLE_LUMINANCE_SIZE: GLenum = 0x80DE;
pub static COLOR_TABLE_LUMINANCE_SIZE_SGI: GLenum = 0x80DE;
pub static COLOR_TABLE_INTENSITY_SIZE: GLenum = 0x80DF;
pub static COLOR_TABLE_INTENSITY_SIZE_SGI: GLenum = 0x80DF;
pub static BGR: GLenum = 0x80E0;
pub static BGR_EXT: GLenum = 0x80E0;
pub static BGRA: GLenum = 0x80E1;
pub static BGRA_EXT: GLenum = 0x80E1;
pub static COLOR_INDEX1_EXT: GLenum = 0x80E2;
pub static COLOR_INDEX2_EXT: GLenum = 0x80E3;
pub static COLOR_INDEX4_EXT: GLenum = 0x80E4;
pub static COLOR_INDEX8_EXT: GLenum = 0x80E5;
pub static COLOR_INDEX12_EXT: GLenum = 0x80E6;
pub static COLOR_INDEX16_EXT: GLenum = 0x80E7;
pub static MAX_ELEMENTS_VERTICES: GLenum = 0x80E8;
pub static MAX_ELEMENTS_VERTICES_EXT: GLenum = 0x80E8;
pub static MAX_ELEMENTS_INDICES: GLenum = 0x80E9;
pub static MAX_ELEMENTS_INDICES_EXT: GLenum = 0x80E9;
pub static PHONG_WIN: GLenum = 0x80EA;
pub static PHONG_HINT_WIN: GLenum = 0x80EB;
pub static FOG_SPECULAR_TEXTURE_WIN: GLenum = 0x80EC;
pub static TEXTURE_INDEX_SIZE_EXT: GLenum = 0x80ED;
pub static PARAMETER_BUFFER_ARB: GLenum = 0x80EE;
pub static PARAMETER_BUFFER_BINDING_ARB: GLenum = 0x80EF;
pub static CLIP_VOLUME_CLIPPING_HINT_EXT: GLenum = 0x80F0;
pub static DUAL_ALPHA4_SGIS: GLenum = 0x8110;
pub static DUAL_ALPHA8_SGIS: GLenum = 0x8111;
pub static DUAL_ALPHA12_SGIS: GLenum = 0x8112;
pub static DUAL_ALPHA16_SGIS: GLenum = 0x8113;
pub static DUAL_LUMINANCE4_SGIS: GLenum = 0x8114;
pub static DUAL_LUMINANCE8_SGIS: GLenum = 0x8115;
pub static DUAL_LUMINANCE12_SGIS: GLenum = 0x8116;
pub static DUAL_LUMINANCE16_SGIS: GLenum = 0x8117;
pub static DUAL_INTENSITY4_SGIS: GLenum = 0x8118;
pub static DUAL_INTENSITY8_SGIS: GLenum = 0x8119;
pub static DUAL_INTENSITY12_SGIS: GLenum = 0x811A;
pub static DUAL_INTENSITY16_SGIS: GLenum = 0x811B;
pub static DUAL_LUMINANCE_ALPHA4_SGIS: GLenum = 0x811C;
pub static DUAL_LUMINANCE_ALPHA8_SGIS: GLenum = 0x811D;
pub static QUAD_ALPHA4_SGIS: GLenum = 0x811E;
pub static QUAD_ALPHA8_SGIS: GLenum = 0x811F;
pub static QUAD_LUMINANCE4_SGIS: GLenum = 0x8120;
pub static QUAD_LUMINANCE8_SGIS: GLenum = 0x8121;
pub static QUAD_INTENSITY4_SGIS: GLenum = 0x8122;
pub static QUAD_INTENSITY8_SGIS: GLenum = 0x8123;
pub static DUAL_TEXTURE_SELECT_SGIS: GLenum = 0x8124;
pub static QUAD_TEXTURE_SELECT_SGIS: GLenum = 0x8125;
pub static POINT_SIZE_MIN: GLenum = 0x8126;
pub static POINT_SIZE_MIN_ARB: GLenum = 0x8126;
pub static POINT_SIZE_MIN_EXT: GLenum = 0x8126;
pub static POINT_SIZE_MIN_SGIS: GLenum = 0x8126;
pub static POINT_SIZE_MAX: GLenum = 0x8127;
pub static POINT_SIZE_MAX_ARB: GLenum = 0x8127;
pub static POINT_SIZE_MAX_EXT: GLenum = 0x8127;
pub static POINT_SIZE_MAX_SGIS: GLenum = 0x8127;
pub static POINT_FADE_THRESHOLD_SIZE: GLenum = 0x8128;
pub static POINT_FADE_THRESHOLD_SIZE_ARB: GLenum = 0x8128;
pub static POINT_FADE_THRESHOLD_SIZE_EXT: GLenum = 0x8128;
pub static POINT_FADE_THRESHOLD_SIZE_SGIS: GLenum = 0x8128;
pub static DISTANCE_ATTENUATION_EXT: GLenum = 0x8129;
pub static DISTANCE_ATTENUATION_SGIS: GLenum = 0x8129;
pub static POINT_DISTANCE_ATTENUATION: GLenum = 0x8129;
pub static POINT_DISTANCE_ATTENUATION_ARB: GLenum = 0x8129;
pub static FOG_FUNC_SGIS: GLenum = 0x812A;
pub static FOG_FUNC_POINTS_SGIS: GLenum = 0x812B;
pub static MAX_FOG_FUNC_POINTS_SGIS: GLenum = 0x812C;
pub static CLAMP_TO_BORDER: GLenum = 0x812D;
pub static CLAMP_TO_BORDER_ARB: GLenum = 0x812D;
pub static CLAMP_TO_BORDER_NV: GLenum = 0x812D;
pub static CLAMP_TO_BORDER_SGIS: GLenum = 0x812D;
pub static TEXTURE_MULTI_BUFFER_HINT_SGIX: GLenum = 0x812E;
pub static CLAMP_TO_EDGE: GLenum = 0x812F;
pub static CLAMP_TO_EDGE_SGIS: GLenum = 0x812F;
pub static PACK_SKIP_VOLUMES_SGIS: GLenum = 0x8130;
pub static PACK_IMAGE_DEPTH_SGIS: GLenum = 0x8131;
pub static UNPACK_SKIP_VOLUMES_SGIS: GLenum = 0x8132;
pub static UNPACK_IMAGE_DEPTH_SGIS: GLenum = 0x8133;
pub static TEXTURE_4D_SGIS: GLenum = 0x8134;
pub static PROXY_TEXTURE_4D_SGIS: GLenum = 0x8135;
pub static TEXTURE_4DSIZE_SGIS: GLenum = 0x8136;
pub static TEXTURE_WRAP_Q_SGIS: GLenum = 0x8137;
pub static MAX_4D_TEXTURE_SIZE_SGIS: GLenum = 0x8138;
pub static PIXEL_TEX_GEN_SGIX: GLenum = 0x8139;
pub static TEXTURE_MIN_LOD: GLenum = 0x813A;
pub static TEXTURE_MIN_LOD_SGIS: GLenum = 0x813A;
pub static TEXTURE_MAX_LOD: GLenum = 0x813B;
pub static TEXTURE_MAX_LOD_SGIS: GLenum = 0x813B;
pub static TEXTURE_BASE_LEVEL: GLenum = 0x813C;
pub static TEXTURE_BASE_LEVEL_SGIS: GLenum = 0x813C;
pub static TEXTURE_MAX_LEVEL: GLenum = 0x813D;
pub static TEXTURE_MAX_LEVEL_SGIS: GLenum = 0x813D;
pub static PIXEL_TILE_BEST_ALIGNMENT_SGIX: GLenum = 0x813E;
pub static PIXEL_TILE_CACHE_INCREMENT_SGIX: GLenum = 0x813F;
pub static PIXEL_TILE_WIDTH_SGIX: GLenum = 0x8140;
pub static PIXEL_TILE_HEIGHT_SGIX: GLenum = 0x8141;
pub static PIXEL_TILE_GRID_WIDTH_SGIX: GLenum = 0x8142;
pub static PIXEL_TILE_GRID_HEIGHT_SGIX: GLenum = 0x8143;
pub static PIXEL_TILE_GRID_DEPTH_SGIX: GLenum = 0x8144;
pub static PIXEL_TILE_CACHE_SIZE_SGIX: GLenum = 0x8145;
pub static FILTER4_SGIS: GLenum = 0x8146;
pub static TEXTURE_FILTER4_SIZE_SGIS: GLenum = 0x8147;
pub static SPRITE_SGIX: GLenum = 0x8148;
pub static SPRITE_MODE_SGIX: GLenum = 0x8149;
pub static SPRITE_AXIS_SGIX: GLenum = 0x814A;
pub static SPRITE_TRANSLATION_SGIX: GLenum = 0x814B;
pub static SPRITE_AXIAL_SGIX: GLenum = 0x814C;
pub static SPRITE_OBJECT_ALIGNED_SGIX: GLenum = 0x814D;
pub static SPRITE_EYE_ALIGNED_SGIX: GLenum = 0x814E;
pub static TEXTURE_4D_BINDING_SGIS: GLenum = 0x814F;
pub static IGNORE_BORDER_HP: GLenum = 0x8150;
pub static CONSTANT_BORDER: GLenum = 0x8151;
pub static CONSTANT_BORDER_HP: GLenum = 0x8151;
pub static REPLICATE_BORDER: GLenum = 0x8153;
pub static REPLICATE_BORDER_HP: GLenum = 0x8153;
pub static CONVOLUTION_BORDER_COLOR: GLenum = 0x8154;
pub static CONVOLUTION_BORDER_COLOR_HP: GLenum = 0x8154;
pub static IMAGE_SCALE_X_HP: GLenum = 0x8155;
pub static IMAGE_SCALE_Y_HP: GLenum = 0x8156;
pub static IMAGE_TRANSLATE_X_HP: GLenum = 0x8157;
pub static IMAGE_TRANSLATE_Y_HP: GLenum = 0x8158;
pub static IMAGE_ROTATE_ANGLE_HP: GLenum = 0x8159;
pub static IMAGE_ROTATE_ORIGIN_X_HP: GLenum = 0x815A;
pub static IMAGE_ROTATE_ORIGIN_Y_HP: GLenum = 0x815B;
pub static IMAGE_MAG_FILTER_HP: GLenum = 0x815C;
pub static IMAGE_MIN_FILTER_HP: GLenum = 0x815D;
pub static IMAGE_CUBIC_WEIGHT_HP: GLenum = 0x815E;
pub static CUBIC_HP: GLenum = 0x815F;
pub static AVERAGE_HP: GLenum = 0x8160;
pub static IMAGE_TRANSFORM_2D_HP: GLenum = 0x8161;
pub static POST_IMAGE_TRANSFORM_COLOR_TABLE_HP: GLenum = 0x8162;
pub static PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP: GLenum = 0x8163;
pub static OCCLUSION_TEST_HP: GLenum = 0x8165;
pub static OCCLUSION_TEST_RESULT_HP: GLenum = 0x8166;
pub static TEXTURE_LIGHTING_MODE_HP: GLenum = 0x8167;
pub static TEXTURE_POST_SPECULAR_HP: GLenum = 0x8168;
pub static TEXTURE_PRE_SPECULAR_HP: GLenum = 0x8169;
pub static LINEAR_CLIPMAP_LINEAR_SGIX: GLenum = 0x8170;
pub static TEXTURE_CLIPMAP_CENTER_SGIX: GLenum = 0x8171;
pub static TEXTURE_CLIPMAP_FRAME_SGIX: GLenum = 0x8172;
pub static TEXTURE_CLIPMAP_OFFSET_SGIX: GLenum = 0x8173;
pub static TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX: GLenum = 0x8174;
pub static TEXTURE_CLIPMAP_LOD_OFFSET_SGIX: GLenum = 0x8175;
pub static TEXTURE_CLIPMAP_DEPTH_SGIX: GLenum = 0x8176;
pub static MAX_CLIPMAP_DEPTH_SGIX: GLenum = 0x8177;
pub static MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX: GLenum = 0x8178;
pub static POST_TEXTURE_FILTER_BIAS_SGIX: GLenum = 0x8179;
pub static POST_TEXTURE_FILTER_SCALE_SGIX: GLenum = 0x817A;
pub static POST_TEXTURE_FILTER_BIAS_RANGE_SGIX: GLenum = 0x817B;
pub static POST_TEXTURE_FILTER_SCALE_RANGE_SGIX: GLenum = 0x817C;
pub static REFERENCE_PLANE_SGIX: GLenum = 0x817D;
pub static REFERENCE_PLANE_EQUATION_SGIX: GLenum = 0x817E;
pub static IR_INSTRUMENT1_SGIX: GLenum = 0x817F;
pub static INSTRUMENT_BUFFER_POINTER_SGIX: GLenum = 0x8180;
pub static INSTRUMENT_MEASUREMENTS_SGIX: GLenum = 0x8181;
pub static LIST_PRIORITY_SGIX: GLenum = 0x8182;
pub static CALLIGRAPHIC_FRAGMENT_SGIX: GLenum = 0x8183;
pub static PIXEL_TEX_GEN_Q_CEILING_SGIX: GLenum = 0x8184;
pub static PIXEL_TEX_GEN_Q_ROUND_SGIX: GLenum = 0x8185;
pub static PIXEL_TEX_GEN_Q_FLOOR_SGIX: GLenum = 0x8186;
pub static PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX: GLenum = 0x8187;
pub static PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX: GLenum = 0x8188;
pub static PIXEL_TEX_GEN_ALPHA_LS_SGIX: GLenum = 0x8189;
pub static PIXEL_TEX_GEN_ALPHA_MS_SGIX: GLenum = 0x818A;
pub static FRAMEZOOM_SGIX: GLenum = 0x818B;
pub static FRAMEZOOM_FACTOR_SGIX: GLenum = 0x818C;
pub static MAX_FRAMEZOOM_FACTOR_SGIX: GLenum = 0x818D;
pub static TEXTURE_LOD_BIAS_S_SGIX: GLenum = 0x818E;
pub static TEXTURE_LOD_BIAS_T_SGIX: GLenum = 0x818F;
pub static TEXTURE_LOD_BIAS_R_SGIX: GLenum = 0x8190;
pub static GENERATE_MIPMAP: GLenum = 0x8191;
pub static GENERATE_MIPMAP_SGIS: GLenum = 0x8191;
pub static GENERATE_MIPMAP_HINT: GLenum = 0x8192;
pub static GENERATE_MIPMAP_HINT_SGIS: GLenum = 0x8192;
pub static GEOMETRY_DEFORMATION_SGIX: GLenum = 0x8194;
pub static TEXTURE_DEFORMATION_SGIX: GLenum = 0x8195;
pub static DEFORMATIONS_MASK_SGIX: GLenum = 0x8196;
pub static MAX_DEFORMATION_ORDER_SGIX: GLenum = 0x8197;
pub static FOG_OFFSET_SGIX: GLenum = 0x8198;
pub static FOG_OFFSET_VALUE_SGIX: GLenum = 0x8199;
pub static TEXTURE_COMPARE_SGIX: GLenum = 0x819A;
pub static TEXTURE_COMPARE_OPERATOR_SGIX: GLenum = 0x819B;
pub static TEXTURE_LEQUAL_R_SGIX: GLenum = 0x819C;
pub static TEXTURE_GEQUAL_R_SGIX: GLenum = 0x819D;
pub static DEPTH_COMPONENT16: GLenum = 0x81A5;
pub static DEPTH_COMPONENT16_ARB: GLenum = 0x81A5;
pub static DEPTH_COMPONENT16_OES: GLenum = 0x81A5;
pub static DEPTH_COMPONENT16_SGIX: GLenum = 0x81A5;
pub static DEPTH_COMPONENT24: GLenum = 0x81A6;
pub static DEPTH_COMPONENT24_ARB: GLenum = 0x81A6;
pub static DEPTH_COMPONENT24_OES: GLenum = 0x81A6;
pub static DEPTH_COMPONENT24_SGIX: GLenum = 0x81A6;
pub static DEPTH_COMPONENT32: GLenum = 0x81A7;
pub static DEPTH_COMPONENT32_ARB: GLenum = 0x81A7;
pub static DEPTH_COMPONENT32_OES: GLenum = 0x81A7;
pub static DEPTH_COMPONENT32_SGIX: GLenum = 0x81A7;
pub static ARRAY_ELEMENT_LOCK_FIRST_EXT: GLenum = 0x81A8;
pub static ARRAY_ELEMENT_LOCK_COUNT_EXT: GLenum = 0x81A9;
pub static CULL_VERTEX_EXT: GLenum = 0x81AA;
pub static CULL_VERTEX_EYE_POSITION_EXT: GLenum = 0x81AB;
pub static CULL_VERTEX_OBJECT_POSITION_EXT: GLenum = 0x81AC;
pub static IUI_V2F_EXT: GLenum = 0x81AD;
pub static IUI_V3F_EXT: GLenum = 0x81AE;
pub static IUI_N3F_V2F_EXT: GLenum = 0x81AF;
pub static IUI_N3F_V3F_EXT: GLenum = 0x81B0;
pub static T2F_IUI_V2F_EXT: GLenum = 0x81B1;
pub static T2F_IUI_V3F_EXT: GLenum = 0x81B2;
pub static T2F_IUI_N3F_V2F_EXT: GLenum = 0x81B3;
pub static T2F_IUI_N3F_V3F_EXT: GLenum = 0x81B4;
pub static INDEX_TEST_EXT: GLenum = 0x81B5;
pub static INDEX_TEST_FUNC_EXT: GLenum = 0x81B6;
pub static INDEX_TEST_REF_EXT: GLenum = 0x81B7;
pub static INDEX_MATERIAL_EXT: GLenum = 0x81B8;
pub static INDEX_MATERIAL_PARAMETER_EXT: GLenum = 0x81B9;
pub static INDEX_MATERIAL_FACE_EXT: GLenum = 0x81BA;
pub static YCRCB_422_SGIX: GLenum = 0x81BB;
pub static YCRCB_444_SGIX: GLenum = 0x81BC;
pub static WRAP_BORDER_SUN: GLenum = 0x81D4;
pub static UNPACK_CONSTANT_DATA_SUNX: GLenum = 0x81D5;
pub static TEXTURE_CONSTANT_DATA_SUNX: GLenum = 0x81D6;
pub static TRIANGLE_LIST_SUN: GLenum = 0x81D7;
pub static REPLACEMENT_CODE_SUN: GLenum = 0x81D8;
pub static GLOBAL_ALPHA_SUN: GLenum = 0x81D9;
pub static GLOBAL_ALPHA_FACTOR_SUN: GLenum = 0x81DA;
pub static TEXTURE_COLOR_WRITEMASK_SGIS: GLenum = 0x81EF;
pub static EYE_DISTANCE_TO_POINT_SGIS: GLenum = 0x81F0;
pub static OBJECT_DISTANCE_TO_POINT_SGIS: GLenum = 0x81F1;
pub static EYE_DISTANCE_TO_LINE_SGIS: GLenum = 0x81F2;
pub static OBJECT_DISTANCE_TO_LINE_SGIS: GLenum = 0x81F3;
pub static EYE_POINT_SGIS: GLenum = 0x81F4;
pub static OBJECT_POINT_SGIS: GLenum = 0x81F5;
pub static EYE_LINE_SGIS: GLenum = 0x81F6;
pub static OBJECT_LINE_SGIS: GLenum = 0x81F7;
pub static LIGHT_MODEL_COLOR_CONTROL: GLenum = 0x81F8;
pub static LIGHT_MODEL_COLOR_CONTROL_EXT: GLenum = 0x81F8;
pub static SINGLE_COLOR: GLenum = 0x81F9;
pub static SINGLE_COLOR_EXT: GLenum = 0x81F9;
pub static SEPARATE_SPECULAR_COLOR: GLenum = 0x81FA;
pub static SEPARATE_SPECULAR_COLOR_EXT: GLenum = 0x81FA;
pub static SHARED_TEXTURE_PALETTE_EXT: GLenum = 0x81FB;
pub static TEXT_FRAGMENT_SHADER_ATI: GLenum = 0x8200;
pub static FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum = 0x8210;
pub static FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum = 0x8211;
pub static FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: GLenum = 0x8211;
pub static FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum = 0x8212;
pub static FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum = 0x8213;
pub static FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum = 0x8214;
pub static FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum = 0x8215;
pub static FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum = 0x8216;
pub static FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum = 0x8217;
pub static FRAMEBUFFER_DEFAULT: GLenum = 0x8218;
pub static FRAMEBUFFER_UNDEFINED: GLenum = 0x8219;
pub static FRAMEBUFFER_UNDEFINED_OES: GLenum = 0x8219;
pub static DEPTH_STENCIL_ATTACHMENT: GLenum = 0x821A;
pub static MAJOR_VERSION: GLenum = 0x821B;
pub static MINOR_VERSION: GLenum = 0x821C;
pub static NUM_EXTENSIONS: GLenum = 0x821D;
pub static CONTEXT_FLAGS: GLenum = 0x821E;
pub static BUFFER_IMMUTABLE_STORAGE: GLenum = 0x821F;
pub static BUFFER_STORAGE_FLAGS: GLenum = 0x8220;
pub static INDEX: GLenum = 0x8222;
pub static COMPRESSED_RED: GLenum = 0x8225;
pub static COMPRESSED_RG: GLenum = 0x8226;
pub static RG: GLenum = 0x8227;
pub static RG_EXT: GLenum = 0x8227;
pub static RG_INTEGER: GLenum = 0x8228;
pub static R8: GLenum = 0x8229;
pub static R8_EXT: GLenum = 0x8229;
pub static R16: GLenum = 0x822A;
pub static RG8: GLenum = 0x822B;
pub static RG8_EXT: GLenum = 0x822B;
pub static RG16: GLenum = 0x822C;
pub static R16F: GLenum = 0x822D;
pub static R16F_EXT: GLenum = 0x822D;
pub static R32F: GLenum = 0x822E;
pub static RG16F: GLenum = 0x822F;
pub static RG16F_EXT: GLenum = 0x822F;
pub static RG32F: GLenum = 0x8230;
pub static R8I: GLenum = 0x8231;
pub static R8UI: GLenum = 0x8232;
pub static R16I: GLenum = 0x8233;
pub static R16UI: GLenum = 0x8234;
pub static R32I: GLenum = 0x8235;
pub static R32UI: GLenum = 0x8236;
pub static RG8I: GLenum = 0x8237;
pub static RG8UI: GLenum = 0x8238;
pub static RG16I: GLenum = 0x8239;
pub static RG16UI: GLenum = 0x823A;
pub static RG32I: GLenum = 0x823B;
pub static RG32UI: GLenum = 0x823C;
pub static SYNC_CL_EVENT_ARB: GLenum = 0x8240;
pub static SYNC_CL_EVENT_COMPLETE_ARB: GLenum = 0x8241;
pub static DEBUG_OUTPUT_SYNCHRONOUS: GLenum = 0x8242;
pub static DEBUG_OUTPUT_SYNCHRONOUS_ARB: GLenum = 0x8242;
pub static DEBUG_OUTPUT_SYNCHRONOUS_KHR: GLenum = 0x8242;
pub static DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: GLenum = 0x8243;
pub static DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB: GLenum = 0x8243;
pub static DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR: GLenum = 0x8243;
pub static DEBUG_CALLBACK_FUNCTION: GLenum = 0x8244;
pub static DEBUG_CALLBACK_FUNCTION_ARB: GLenum = 0x8244;
pub static DEBUG_CALLBACK_FUNCTION_KHR: GLenum = 0x8244;
pub static DEBUG_CALLBACK_USER_PARAM: GLenum = 0x8245;
pub static DEBUG_CALLBACK_USER_PARAM_ARB: GLenum = 0x8245;
pub static DEBUG_CALLBACK_USER_PARAM_KHR: GLenum = 0x8245;
pub static DEBUG_SOURCE_API: GLenum = 0x8246;
pub static DEBUG_SOURCE_API_ARB: GLenum = 0x8246;
pub static DEBUG_SOURCE_API_KHR: GLenum = 0x8246;
pub static DEBUG_SOURCE_WINDOW_SYSTEM: GLenum = 0x8247;
pub static DEBUG_SOURCE_WINDOW_SYSTEM_ARB: GLenum = 0x8247;
pub static DEBUG_SOURCE_WINDOW_SYSTEM_KHR: GLenum = 0x8247;
pub static DEBUG_SOURCE_SHADER_COMPILER: GLenum = 0x8248;
pub static DEBUG_SOURCE_SHADER_COMPILER_ARB: GLenum = 0x8248;
pub static DEBUG_SOURCE_SHADER_COMPILER_KHR: GLenum = 0x8248;
pub static DEBUG_SOURCE_THIRD_PARTY: GLenum = 0x8249;
pub static DEBUG_SOURCE_THIRD_PARTY_ARB: GLenum = 0x8249;
pub static DEBUG_SOURCE_THIRD_PARTY_KHR: GLenum = 0x8249;
pub static DEBUG_SOURCE_APPLICATION: GLenum = 0x824A;
pub static DEBUG_SOURCE_APPLICATION_ARB: GLenum = 0x824A;
pub static DEBUG_SOURCE_APPLICATION_KHR: GLenum = 0x824A;
pub static DEBUG_SOURCE_OTHER: GLenum = 0x824B;
pub static DEBUG_SOURCE_OTHER_ARB: GLenum = 0x824B;
pub static DEBUG_SOURCE_OTHER_KHR: GLenum = 0x824B;
pub static DEBUG_TYPE_ERROR: GLenum = 0x824C;
pub static DEBUG_TYPE_ERROR_ARB: GLenum = 0x824C;
pub static DEBUG_TYPE_ERROR_KHR: GLenum = 0x824C;
pub static DEBUG_TYPE_DEPRECATED_BEHAVIOR: GLenum = 0x824D;
pub static DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB: GLenum = 0x824D;
pub static DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR: GLenum = 0x824D;
pub static DEBUG_TYPE_UNDEFINED_BEHAVIOR: GLenum = 0x824E;
pub static DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB: GLenum = 0x824E;
pub static DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR: GLenum = 0x824E;
pub static DEBUG_TYPE_PORTABILITY: GLenum = 0x824F;
pub static DEBUG_TYPE_PORTABILITY_ARB: GLenum = 0x824F;
pub static DEBUG_TYPE_PORTABILITY_KHR: GLenum = 0x824F;
pub static DEBUG_TYPE_PERFORMANCE: GLenum = 0x8250;
pub static DEBUG_TYPE_PERFORMANCE_ARB: GLenum = 0x8250;
pub static DEBUG_TYPE_PERFORMANCE_KHR: GLenum = 0x8250;
pub static DEBUG_TYPE_OTHER: GLenum = 0x8251;
pub static DEBUG_TYPE_OTHER_ARB: GLenum = 0x8251;
pub static DEBUG_TYPE_OTHER_KHR: GLenum = 0x8251;
pub static LOSE_CONTEXT_ON_RESET_ARB: GLenum = 0x8252;
pub static GUILTY_CONTEXT_RESET_ARB: GLenum = 0x8253;
pub static INNOCENT_CONTEXT_RESET_ARB: GLenum = 0x8254;
pub static UNKNOWN_CONTEXT_RESET_ARB: GLenum = 0x8255;
pub static RESET_NOTIFICATION_STRATEGY_ARB: GLenum = 0x8256;
pub static PROGRAM_BINARY_RETRIEVABLE_HINT: GLenum = 0x8257;
pub static PROGRAM_SEPARABLE: GLenum = 0x8258;
pub static PROGRAM_SEPARABLE_EXT: GLenum = 0x8258;
pub static ACTIVE_PROGRAM: GLenum = 0x8259;
pub static ACTIVE_PROGRAM_EXT: GLenum = 0x8259;
pub static PROGRAM_PIPELINE_BINDING: GLenum = 0x825A;
pub static PROGRAM_PIPELINE_BINDING_EXT: GLenum = 0x825A;
pub static MAX_VIEWPORTS: GLenum = 0x825B;
pub static VIEWPORT_SUBPIXEL_BITS: GLenum = 0x825C;
pub static VIEWPORT_BOUNDS_RANGE: GLenum = 0x825D;
pub static LAYER_PROVOKING_VERTEX: GLenum = 0x825E;
pub static VIEWPORT_INDEX_PROVOKING_VERTEX: GLenum = 0x825F;
pub static UNDEFINED_VERTEX: GLenum = 0x8260;
pub static NO_RESET_NOTIFICATION_ARB: GLenum = 0x8261;
pub static MAX_COMPUTE_SHARED_MEMORY_SIZE: GLenum = 0x8262;
pub static MAX_COMPUTE_UNIFORM_COMPONENTS: GLenum = 0x8263;
pub static MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: GLenum = 0x8264;
pub static MAX_COMPUTE_ATOMIC_COUNTERS: GLenum = 0x8265;
pub static MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: GLenum = 0x8266;
pub static COMPUTE_LOCAL_WORK_SIZE: GLenum = 0x8267;
pub static DEBUG_TYPE_MARKER: GLenum = 0x8268;
pub static DEBUG_TYPE_MARKER_KHR: GLenum = 0x8268;
pub static DEBUG_TYPE_PUSH_GROUP: GLenum = 0x8269;
pub static DEBUG_TYPE_PUSH_GROUP_KHR: GLenum = 0x8269;
pub static DEBUG_TYPE_POP_GROUP: GLenum = 0x826A;
pub static DEBUG_TYPE_POP_GROUP_KHR: GLenum = 0x826A;
pub static DEBUG_SEVERITY_NOTIFICATION: GLenum = 0x826B;
pub static DEBUG_SEVERITY_NOTIFICATION_KHR: GLenum = 0x826B;
pub static MAX_DEBUG_GROUP_STACK_DEPTH: GLenum = 0x826C;
pub static MAX_DEBUG_GROUP_STACK_DEPTH_KHR: GLenum = 0x826C;
pub static DEBUG_GROUP_STACK_DEPTH: GLenum = 0x826D;
pub static DEBUG_GROUP_STACK_DEPTH_KHR: GLenum = 0x826D;
pub static MAX_UNIFORM_LOCATIONS: GLenum = 0x826E;
pub static INTERNALFORMAT_SUPPORTED: GLenum = 0x826F;
pub static INTERNALFORMAT_PREFERRED: GLenum = 0x8270;
pub static INTERNALFORMAT_RED_SIZE: GLenum = 0x8271;
pub static INTERNALFORMAT_GREEN_SIZE: GLenum = 0x8272;
pub static INTERNALFORMAT_BLUE_SIZE: GLenum = 0x8273;
pub static INTERNALFORMAT_ALPHA_SIZE: GLenum = 0x8274;
pub static INTERNALFORMAT_DEPTH_SIZE: GLenum = 0x8275;
pub static INTERNALFORMAT_STENCIL_SIZE: GLenum = 0x8276;
pub static INTERNALFORMAT_SHARED_SIZE: GLenum = 0x8277;
pub static INTERNALFORMAT_RED_TYPE: GLenum = 0x8278;
pub static INTERNALFORMAT_GREEN_TYPE: GLenum = 0x8279;
pub static INTERNALFORMAT_BLUE_TYPE: GLenum = 0x827A;
pub static INTERNALFORMAT_ALPHA_TYPE: GLenum = 0x827B;
pub static INTERNALFORMAT_DEPTH_TYPE: GLenum = 0x827C;
pub static INTERNALFORMAT_STENCIL_TYPE: GLenum = 0x827D;
pub static MAX_WIDTH: GLenum = 0x827E;
pub static MAX_HEIGHT: GLenum = 0x827F;
pub static MAX_DEPTH: GLenum = 0x8280;
pub static MAX_LAYERS: GLenum = 0x8281;
pub static MAX_COMBINED_DIMENSIONS: GLenum = 0x8282;
pub static COLOR_COMPONENTS: GLenum = 0x8283;
pub static DEPTH_COMPONENTS: GLenum = 0x8284;
pub static STENCIL_COMPONENTS: GLenum = 0x8285;
pub static COLOR_RENDERABLE: GLenum = 0x8286;
pub static DEPTH_RENDERABLE: GLenum = 0x8287;
pub static STENCIL_RENDERABLE: GLenum = 0x8288;
pub static FRAMEBUFFER_RENDERABLE: GLenum = 0x8289;
pub static FRAMEBUFFER_RENDERABLE_LAYERED: GLenum = 0x828A;
pub static FRAMEBUFFER_BLEND: GLenum = 0x828B;
pub static READ_PIXELS: GLenum = 0x828C;
pub static READ_PIXELS_FORMAT: GLenum = 0x828D;
pub static READ_PIXELS_TYPE: GLenum = 0x828E;
pub static TEXTURE_IMAGE_FORMAT: GLenum = 0x828F;
pub static TEXTURE_IMAGE_TYPE: GLenum = 0x8290;
pub static GET_TEXTURE_IMAGE_FORMAT: GLenum = 0x8291;
pub static GET_TEXTURE_IMAGE_TYPE: GLenum = 0x8292;
pub static MIPMAP: GLenum = 0x8293;
pub static MANUAL_GENERATE_MIPMAP: GLenum = 0x8294;
pub static AUTO_GENERATE_MIPMAP: GLenum = 0x8295;
pub static COLOR_ENCODING: GLenum = 0x8296;
pub static SRGB_READ: GLenum = 0x8297;
pub static SRGB_WRITE: GLenum = 0x8298;
pub static SRGB_DECODE_ARB: GLenum = 0x8299;
pub static FILTER: GLenum = 0x829A;
pub static VERTEX_TEXTURE: GLenum = 0x829B;
pub static TESS_CONTROL_TEXTURE: GLenum = 0x829C;
pub static TESS_EVALUATION_TEXTURE: GLenum = 0x829D;
pub static GEOMETRY_TEXTURE: GLenum = 0x829E;
pub static FRAGMENT_TEXTURE: GLenum = 0x829F;
pub static COMPUTE_TEXTURE: GLenum = 0x82A0;
pub static TEXTURE_SHADOW: GLenum = 0x82A1;
pub static TEXTURE_GATHER: GLenum = 0x82A2;
pub static TEXTURE_GATHER_SHADOW: GLenum = 0x82A3;
pub static SHADER_IMAGE_LOAD: GLenum = 0x82A4;
pub static SHADER_IMAGE_STORE: GLenum = 0x82A5;
pub static SHADER_IMAGE_ATOMIC: GLenum = 0x82A6;
pub static IMAGE_TEXEL_SIZE: GLenum = 0x82A7;
pub static IMAGE_COMPATIBILITY_CLASS: GLenum = 0x82A8;
pub static IMAGE_PIXEL_FORMAT: GLenum = 0x82A9;
pub static IMAGE_PIXEL_TYPE: GLenum = 0x82AA;
pub static SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST: GLenum = 0x82AC;
pub static SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST: GLenum = 0x82AD;
pub static SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE: GLenum = 0x82AE;
pub static SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE: GLenum = 0x82AF;
pub static TEXTURE_COMPRESSED_BLOCK_WIDTH: GLenum = 0x82B1;
pub static TEXTURE_COMPRESSED_BLOCK_HEIGHT: GLenum = 0x82B2;
pub static TEXTURE_COMPRESSED_BLOCK_SIZE: GLenum = 0x82B3;
pub static CLEAR_BUFFER: GLenum = 0x82B4;
pub static TEXTURE_VIEW: GLenum = 0x82B5;
pub static VIEW_COMPATIBILITY_CLASS: GLenum = 0x82B6;
pub static FULL_SUPPORT: GLenum = 0x82B7;
pub static CAVEAT_SUPPORT: GLenum = 0x82B8;
pub static IMAGE_CLASS_4_X_32: GLenum = 0x82B9;
pub static IMAGE_CLASS_2_X_32: GLenum = 0x82BA;
pub static IMAGE_CLASS_1_X_32: GLenum = 0x82BB;
pub static IMAGE_CLASS_4_X_16: GLenum = 0x82BC;
pub static IMAGE_CLASS_2_X_16: GLenum = 0x82BD;
pub static IMAGE_CLASS_1_X_16: GLenum = 0x82BE;
pub static IMAGE_CLASS_4_X_8: GLenum = 0x82BF;
pub static IMAGE_CLASS_2_X_8: GLenum = 0x82C0;
pub static IMAGE_CLASS_1_X_8: GLenum = 0x82C1;
pub static IMAGE_CLASS_11_11_10: GLenum = 0x82C2;
pub static IMAGE_CLASS_10_10_10_2: GLenum = 0x82C3;
pub static VIEW_CLASS_128_BITS: GLenum = 0x82C4;
pub static VIEW_CLASS_96_BITS: GLenum = 0x82C5;
pub static VIEW_CLASS_64_BITS: GLenum = 0x82C6;
pub static VIEW_CLASS_48_BITS: GLenum = 0x82C7;
pub static VIEW_CLASS_32_BITS: GLenum = 0x82C8;
pub static VIEW_CLASS_24_BITS: GLenum = 0x82C9;
pub static VIEW_CLASS_16_BITS: GLenum = 0x82CA;
pub static VIEW_CLASS_8_BITS: GLenum = 0x82CB;
pub static VIEW_CLASS_S3TC_DXT1_RGB: GLenum = 0x82CC;
pub static VIEW_CLASS_S3TC_DXT1_RGBA: GLenum = 0x82CD;
pub static VIEW_CLASS_S3TC_DXT3_RGBA: GLenum = 0x82CE;
pub static VIEW_CLASS_S3TC_DXT5_RGBA: GLenum = 0x82CF;
pub static VIEW_CLASS_RGTC1_RED: GLenum = 0x82D0;
pub static VIEW_CLASS_RGTC2_RG: GLenum = 0x82D1;
pub static VIEW_CLASS_BPTC_UNORM: GLenum = 0x82D2;
pub static VIEW_CLASS_BPTC_FLOAT: GLenum = 0x82D3;
pub static VERTEX_ATTRIB_BINDING: GLenum = 0x82D4;
pub static VERTEX_ATTRIB_RELATIVE_OFFSET: GLenum = 0x82D5;
pub static VERTEX_BINDING_DIVISOR: GLenum = 0x82D6;
pub static VERTEX_BINDING_OFFSET: GLenum = 0x82D7;
pub static VERTEX_BINDING_STRIDE: GLenum = 0x82D8;
pub static MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: GLenum = 0x82D9;
pub static MAX_VERTEX_ATTRIB_BINDINGS: GLenum = 0x82DA;
pub static TEXTURE_VIEW_MIN_LEVEL: GLenum = 0x82DB;
pub static TEXTURE_VIEW_NUM_LEVELS: GLenum = 0x82DC;
pub static TEXTURE_VIEW_MIN_LAYER: GLenum = 0x82DD;
pub static TEXTURE_VIEW_NUM_LAYERS: GLenum = 0x82DE;
pub static TEXTURE_IMMUTABLE_LEVELS: GLenum = 0x82DF;
pub static BUFFER: GLenum = 0x82E0;
pub static BUFFER_KHR: GLenum = 0x82E0;
pub static SHADER: GLenum = 0x82E1;
pub static SHADER_KHR: GLenum = 0x82E1;
pub static PROGRAM: GLenum = 0x82E2;
pub static PROGRAM_KHR: GLenum = 0x82E2;
pub static QUERY: GLenum = 0x82E3;
pub static QUERY_KHR: GLenum = 0x82E3;
pub static PROGRAM_PIPELINE: GLenum = 0x82E4;
pub static MAX_VERTEX_ATTRIB_STRIDE: GLenum = 0x82E5;
pub static SAMPLER: GLenum = 0x82E6;
pub static SAMPLER_KHR: GLenum = 0x82E6;
pub static DISPLAY_LIST: GLenum = 0x82E7;
pub static MAX_LABEL_LENGTH: GLenum = 0x82E8;
pub static MAX_LABEL_LENGTH_KHR: GLenum = 0x82E8;
pub static NUM_SHADING_LANGUAGE_VERSIONS: GLenum = 0x82E9;
pub static DEPTH_PASS_INSTRUMENT_SGIX: GLenum = 0x8310;
pub static DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX: GLenum = 0x8311;
pub static DEPTH_PASS_INSTRUMENT_MAX_SGIX: GLenum = 0x8312;
pub static FRAGMENTS_INSTRUMENT_SGIX: GLenum = 0x8313;
pub static FRAGMENTS_INSTRUMENT_COUNTERS_SGIX: GLenum = 0x8314;
pub static FRAGMENTS_INSTRUMENT_MAX_SGIX: GLenum = 0x8315;
pub static CONVOLUTION_HINT_SGIX: GLenum = 0x8316;
pub static YCRCB_SGIX: GLenum = 0x8318;
pub static YCRCBA_SGIX: GLenum = 0x8319;
pub static UNPACK_COMPRESSED_SIZE_SGIX: GLenum = 0x831A;
pub static PACK_MAX_COMPRESSED_SIZE_SGIX: GLenum = 0x831B;
pub static PACK_COMPRESSED_SIZE_SGIX: GLenum = 0x831C;
pub static SLIM8U_SGIX: GLenum = 0x831D;
pub static SLIM10U_SGIX: GLenum = 0x831E;
pub static SLIM12S_SGIX: GLenum = 0x831F;
pub static ALPHA_MIN_SGIX: GLenum = 0x8320;
pub static ALPHA_MAX_SGIX: GLenum = 0x8321;
pub static SCALEBIAS_HINT_SGIX: GLenum = 0x8322;
pub static ASYNC_MARKER_SGIX: GLenum = 0x8329;
pub static PIXEL_TEX_GEN_MODE_SGIX: GLenum = 0x832B;
pub static ASYNC_HISTOGRAM_SGIX: GLenum = 0x832C;
pub static MAX_ASYNC_HISTOGRAM_SGIX: GLenum = 0x832D;
pub static PIXEL_TRANSFORM_2D_EXT: GLenum = 0x8330;
pub static PIXEL_MAG_FILTER_EXT: GLenum = 0x8331;
pub static PIXEL_MIN_FILTER_EXT: GLenum = 0x8332;
pub static PIXEL_CUBIC_WEIGHT_EXT: GLenum = 0x8333;
pub static CUBIC_EXT: GLenum = 0x8334;
pub static AVERAGE_EXT: GLenum = 0x8335;
pub static PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT: GLenum = 0x8336;
pub static MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT: GLenum = 0x8337;
pub static PIXEL_TRANSFORM_2D_MATRIX_EXT: GLenum = 0x8338;
pub static FRAGMENT_MATERIAL_EXT: GLenum = 0x8349;
pub static FRAGMENT_NORMAL_EXT: GLenum = 0x834A;
pub static FRAGMENT_COLOR_EXT: GLenum = 0x834C;
pub static ATTENUATION_EXT: GLenum = 0x834D;
pub static SHADOW_ATTENUATION_EXT: GLenum = 0x834E;
pub static TEXTURE_APPLICATION_MODE_EXT: GLenum = 0x834F;
pub static TEXTURE_LIGHT_EXT: GLenum = 0x8350;
pub static TEXTURE_MATERIAL_FACE_EXT: GLenum = 0x8351;
pub static TEXTURE_MATERIAL_PARAMETER_EXT: GLenum = 0x8352;
pub static PIXEL_TEXTURE_SGIS: GLenum = 0x8353;
pub static PIXEL_FRAGMENT_RGB_SOURCE_SGIS: GLenum = 0x8354;
pub static PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS: GLenum = 0x8355;
pub static PIXEL_GROUP_COLOR_SGIS: GLenum = 0x8356;
pub static LINE_QUALITY_HINT_SGIX: GLenum = 0x835B;
pub static ASYNC_TEX_IMAGE_SGIX: GLenum = 0x835C;
pub static ASYNC_DRAW_PIXELS_SGIX: GLenum = 0x835D;
pub static ASYNC_READ_PIXELS_SGIX: GLenum = 0x835E;
pub static MAX_ASYNC_TEX_IMAGE_SGIX: GLenum = 0x835F;
pub static MAX_ASYNC_DRAW_PIXELS_SGIX: GLenum = 0x8360;
pub static MAX_ASYNC_READ_PIXELS_SGIX: GLenum = 0x8361;
pub static UNSIGNED_BYTE_2_3_3_REV: GLenum = 0x8362;
pub static UNSIGNED_BYTE_2_3_3_REV_EXT: GLenum = 0x8362;
pub static UNSIGNED_SHORT_5_6_5: GLenum = 0x8363;
pub static UNSIGNED_SHORT_5_6_5_EXT: GLenum = 0x8363;
pub static UNSIGNED_SHORT_5_6_5_REV: GLenum = 0x8364;
pub static UNSIGNED_SHORT_5_6_5_REV_EXT: GLenum = 0x8364;
pub static UNSIGNED_SHORT_4_4_4_4_REV: GLenum = 0x8365;
pub static UNSIGNED_SHORT_4_4_4_4_REV_EXT: GLenum = 0x8365;
pub static UNSIGNED_SHORT_1_5_5_5_REV: GLenum = 0x8366;
pub static UNSIGNED_SHORT_1_5_5_5_REV_EXT: GLenum = 0x8366;
pub static UNSIGNED_INT_8_8_8_8_REV: GLenum = 0x8367;
pub static UNSIGNED_INT_8_8_8_8_REV_EXT: GLenum = 0x8367;
pub static UNSIGNED_INT_2_10_10_10_REV: GLenum = 0x8368;
pub static UNSIGNED_INT_2_10_10_10_REV_EXT: GLenum = 0x8368;
pub static TEXTURE_MAX_CLAMP_S_SGIX: GLenum = 0x8369;
pub static TEXTURE_MAX_CLAMP_T_SGIX: GLenum = 0x836A;
pub static TEXTURE_MAX_CLAMP_R_SGIX: GLenum = 0x836B;
pub static MIRRORED_REPEAT: GLenum = 0x8370;
pub static MIRRORED_REPEAT_ARB: GLenum = 0x8370;
pub static MIRRORED_REPEAT_IBM: GLenum = 0x8370;
pub static MIRRORED_REPEAT_OES: GLenum = 0x8370;
pub static RGB_S3TC: GLenum = 0x83A0;
pub static RGB4_S3TC: GLenum = 0x83A1;
pub static RGBA_S3TC: GLenum = 0x83A2;
pub static RGBA4_S3TC: GLenum = 0x83A3;
pub static RGBA_DXT5_S3TC: GLenum = 0x83A4;
pub static RGBA4_DXT5_S3TC: GLenum = 0x83A5;
pub static VERTEX_PRECLIP_SGIX: GLenum = 0x83EE;
pub static VERTEX_PRECLIP_HINT_SGIX: GLenum = 0x83EF;
pub static COMPRESSED_RGB_S3TC_DXT1_EXT: GLenum = 0x83F0;
pub static COMPRESSED_RGBA_S3TC_DXT1_EXT: GLenum = 0x83F1;
pub static COMPRESSED_RGBA_S3TC_DXT3_ANGLE: GLenum = 0x83F2;
pub static COMPRESSED_RGBA_S3TC_DXT3_EXT: GLenum = 0x83F2;
pub static COMPRESSED_RGBA_S3TC_DXT5_ANGLE: GLenum = 0x83F3;
pub static COMPRESSED_RGBA_S3TC_DXT5_EXT: GLenum = 0x83F3;
pub static PARALLEL_ARRAYS_INTEL: GLenum = 0x83F4;
pub static VERTEX_ARRAY_PARALLEL_POINTERS_INTEL: GLenum = 0x83F5;
pub static NORMAL_ARRAY_PARALLEL_POINTERS_INTEL: GLenum = 0x83F6;
pub static COLOR_ARRAY_PARALLEL_POINTERS_INTEL: GLenum = 0x83F7;
pub static TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL: GLenum = 0x83F8;
pub static TEXTURE_MEMORY_LAYOUT_INTEL: GLenum = 0x83FF;
pub static FRAGMENT_LIGHTING_SGIX: GLenum = 0x8400;
pub static FRAGMENT_COLOR_MATERIAL_SGIX: GLenum = 0x8401;
pub static FRAGMENT_COLOR_MATERIAL_FACE_SGIX: GLenum = 0x8402;
pub static FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX: GLenum = 0x8403;
pub static MAX_FRAGMENT_LIGHTS_SGIX: GLenum = 0x8404;
pub static MAX_ACTIVE_LIGHTS_SGIX: GLenum = 0x8405;
pub static CURRENT_RASTER_NORMAL_SGIX: GLenum = 0x8406;
pub static LIGHT_ENV_MODE_SGIX: GLenum = 0x8407;
pub static FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX: GLenum = 0x8408;
pub static FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX: GLenum = 0x8409;
pub static FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX: GLenum = 0x840A;
pub static FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX: GLenum = 0x840B;
pub static FRAGMENT_LIGHT0_SGIX: GLenum = 0x840C;
pub static FRAGMENT_LIGHT1_SGIX: GLenum = 0x840D;
pub static FRAGMENT_LIGHT2_SGIX: GLenum = 0x840E;
pub static FRAGMENT_LIGHT3_SGIX: GLenum = 0x840F;
pub static FRAGMENT_LIGHT4_SGIX: GLenum = 0x8410;
pub static FRAGMENT_LIGHT5_SGIX: GLenum = 0x8411;
pub static FRAGMENT_LIGHT6_SGIX: GLenum = 0x8412;
pub static FRAGMENT_LIGHT7_SGIX: GLenum = 0x8413;
pub static PACK_RESAMPLE_SGIX: GLenum = 0x842C;
pub static UNPACK_RESAMPLE_SGIX: GLenum = 0x842D;
pub static RESAMPLE_REPLICATE_SGIX: GLenum = 0x842E;
pub static RESAMPLE_ZERO_FILL_SGIX: GLenum = 0x842F;
pub static RESAMPLE_DECIMATE_SGIX: GLenum = 0x8430;
pub static TANGENT_ARRAY_EXT: GLenum = 0x8439;
pub static BINORMAL_ARRAY_EXT: GLenum = 0x843A;
pub static CURRENT_TANGENT_EXT: GLenum = 0x843B;
pub static CURRENT_BINORMAL_EXT: GLenum = 0x843C;
pub static TANGENT_ARRAY_TYPE_EXT: GLenum = 0x843E;
pub static TANGENT_ARRAY_STRIDE_EXT: GLenum = 0x843F;
pub static BINORMAL_ARRAY_TYPE_EXT: GLenum = 0x8440;
pub static BINORMAL_ARRAY_STRIDE_EXT: GLenum = 0x8441;
pub static TANGENT_ARRAY_POINTER_EXT: GLenum = 0x8442;
pub static BINORMAL_ARRAY_POINTER_EXT: GLenum = 0x8443;
pub static MAP1_TANGENT_EXT: GLenum = 0x8444;
pub static MAP2_TANGENT_EXT: GLenum = 0x8445;
pub static MAP1_BINORMAL_EXT: GLenum = 0x8446;
pub static MAP2_BINORMAL_EXT: GLenum = 0x8447;
pub static NEAREST_CLIPMAP_NEAREST_SGIX: GLenum = 0x844D;
pub static NEAREST_CLIPMAP_LINEAR_SGIX: GLenum = 0x844E;
pub static LINEAR_CLIPMAP_NEAREST_SGIX: GLenum = 0x844F;
pub static FOG_COORDINATE_SOURCE: GLenum = 0x8450;
pub static FOG_COORDINATE_SOURCE_EXT: GLenum = 0x8450;
pub static FOG_COORD_SRC: GLenum = 0x8450;
pub static FOG_COORDINATE: GLenum = 0x8451;
pub static FOG_COORD: GLenum = 0x8451;
pub static FOG_COORDINATE_EXT: GLenum = 0x8451;
pub static FRAGMENT_DEPTH: GLenum = 0x8452;
pub static FRAGMENT_DEPTH_EXT: GLenum = 0x8452;
pub static CURRENT_FOG_COORDINATE: GLenum = 0x8453;
pub static CURRENT_FOG_COORD: GLenum = 0x8453;
pub static CURRENT_FOG_COORDINATE_EXT: GLenum = 0x8453;
pub static FOG_COORDINATE_ARRAY_TYPE: GLenum = 0x8454;
pub static FOG_COORDINATE_ARRAY_TYPE_EXT: GLenum = 0x8454;
pub static FOG_COORD_ARRAY_TYPE: GLenum = 0x8454;
pub static FOG_COORDINATE_ARRAY_STRIDE: GLenum = 0x8455;
pub static FOG_COORDINATE_ARRAY_STRIDE_EXT: GLenum = 0x8455;
pub static FOG_COORD_ARRAY_STRIDE: GLenum = 0x8455;
pub static FOG_COORDINATE_ARRAY_POINTER: GLenum = 0x8456;
pub static FOG_COORDINATE_ARRAY_POINTER_EXT: GLenum = 0x8456;
pub static FOG_COORD_ARRAY_POINTER: GLenum = 0x8456;
pub static FOG_COORDINATE_ARRAY: GLenum = 0x8457;
pub static FOG_COORDINATE_ARRAY_EXT: GLenum = 0x8457;
pub static FOG_COORD_ARRAY: GLenum = 0x8457;
pub static COLOR_SUM: GLenum = 0x8458;
pub static COLOR_SUM_ARB: GLenum = 0x8458;
pub static COLOR_SUM_EXT: GLenum = 0x8458;
pub static CURRENT_SECONDARY_COLOR: GLenum = 0x8459;
pub static CURRENT_SECONDARY_COLOR_EXT: GLenum = 0x8459;
pub static SECONDARY_COLOR_ARRAY_SIZE: GLenum = 0x845A;
pub static SECONDARY_COLOR_ARRAY_SIZE_EXT: GLenum = 0x845A;
pub static SECONDARY_COLOR_ARRAY_TYPE: GLenum = 0x845B;
pub static SECONDARY_COLOR_ARRAY_TYPE_EXT: GLenum = 0x845B;
pub static SECONDARY_COLOR_ARRAY_STRIDE: GLenum = 0x845C;
pub static SECONDARY_COLOR_ARRAY_STRIDE_EXT: GLenum = 0x845C;
pub static SECONDARY_COLOR_ARRAY_POINTER: GLenum = 0x845D;
pub static SECONDARY_COLOR_ARRAY_POINTER_EXT: GLenum = 0x845D;
pub static SECONDARY_COLOR_ARRAY: GLenum = 0x845E;
pub static SECONDARY_COLOR_ARRAY_EXT: GLenum = 0x845E;
pub static CURRENT_RASTER_SECONDARY_COLOR: GLenum = 0x845F;
pub static ALIASED_POINT_SIZE_RANGE: GLenum = 0x846D;
pub static ALIASED_LINE_WIDTH_RANGE: GLenum = 0x846E;
pub static SCREEN_COORDINATES_REND: GLenum = 0x8490;
pub static INVERTED_SCREEN_W_REND: GLenum = 0x8491;
pub static TEXTURE0: GLenum = 0x84C0;
pub static TEXTURE0_ARB: GLenum = 0x84C0;
pub static TEXTURE1: GLenum = 0x84C1;
pub static TEXTURE1_ARB: GLenum = 0x84C1;
pub static TEXTURE2: GLenum = 0x84C2;
pub static TEXTURE2_ARB: GLenum = 0x84C2;
pub static TEXTURE3: GLenum = 0x84C3;
pub static TEXTURE3_ARB: GLenum = 0x84C3;
pub static TEXTURE4: GLenum = 0x84C4;
pub static TEXTURE4_ARB: GLenum = 0x84C4;
pub static TEXTURE5: GLenum = 0x84C5;
pub static TEXTURE5_ARB: GLenum = 0x84C5;
pub static TEXTURE6: GLenum = 0x84C6;
pub static TEXTURE6_ARB: GLenum = 0x84C6;
pub static TEXTURE7: GLenum = 0x84C7;
pub static TEXTURE7_ARB: GLenum = 0x84C7;
pub static TEXTURE8: GLenum = 0x84C8;
pub static TEXTURE8_ARB: GLenum = 0x84C8;
pub static TEXTURE9: GLenum = 0x84C9;
pub static TEXTURE9_ARB: GLenum = 0x84C9;
pub static TEXTURE10: GLenum = 0x84CA;
pub static TEXTURE10_ARB: GLenum = 0x84CA;
pub static TEXTURE11: GLenum = 0x84CB;
pub static TEXTURE11_ARB: GLenum = 0x84CB;
pub static TEXTURE12: GLenum = 0x84CC;
pub static TEXTURE12_ARB: GLenum = 0x84CC;
pub static TEXTURE13: GLenum = 0x84CD;
pub static TEXTURE13_ARB: GLenum = 0x84CD;
pub static TEXTURE14: GLenum = 0x84CE;
pub static TEXTURE14_ARB: GLenum = 0x84CE;
pub static TEXTURE15: GLenum = 0x84CF;
pub static TEXTURE15_ARB: GLenum = 0x84CF;
pub static TEXTURE16: GLenum = 0x84D0;
pub static TEXTURE16_ARB: GLenum = 0x84D0;
pub static TEXTURE17: GLenum = 0x84D1;
pub static TEXTURE17_ARB: GLenum = 0x84D1;
pub static TEXTURE18: GLenum = 0x84D2;
pub static TEXTURE18_ARB: GLenum = 0x84D2;
pub static TEXTURE19: GLenum = 0x84D3;
pub static TEXTURE19_ARB: GLenum = 0x84D3;
pub static TEXTURE20: GLenum = 0x84D4;
pub static TEXTURE20_ARB: GLenum = 0x84D4;
pub static TEXTURE21: GLenum = 0x84D5;
pub static TEXTURE21_ARB: GLenum = 0x84D5;
pub static TEXTURE22: GLenum = 0x84D6;
pub static TEXTURE22_ARB: GLenum = 0x84D6;
pub static TEXTURE23: GLenum = 0x84D7;
pub static TEXTURE23_ARB: GLenum = 0x84D7;
pub static TEXTURE24: GLenum = 0x84D8;
pub static TEXTURE24_ARB: GLenum = 0x84D8;
pub static TEXTURE25: GLenum = 0x84D9;
pub static TEXTURE25_ARB: GLenum = 0x84D9;
pub static TEXTURE26: GLenum = 0x84DA;
pub static TEXTURE26_ARB: GLenum = 0x84DA;
pub static TEXTURE27: GLenum = 0x84DB;
pub static TEXTURE27_ARB: GLenum = 0x84DB;
pub static TEXTURE28: GLenum = 0x84DC;
pub static TEXTURE28_ARB: GLenum = 0x84DC;
pub static TEXTURE29: GLenum = 0x84DD;
pub static TEXTURE29_ARB: GLenum = 0x84DD;
pub static TEXTURE30: GLenum = 0x84DE;
pub static TEXTURE30_ARB: GLenum = 0x84DE;
pub static TEXTURE31: GLenum = 0x84DF;
pub static TEXTURE31_ARB: GLenum = 0x84DF;
pub static ACTIVE_TEXTURE: GLenum = 0x84E0;
pub static ACTIVE_TEXTURE_ARB: GLenum = 0x84E0;
pub static CLIENT_ACTIVE_TEXTURE: GLenum = 0x84E1;
pub static CLIENT_ACTIVE_TEXTURE_ARB: GLenum = 0x84E1;
pub static MAX_TEXTURE_UNITS: GLenum = 0x84E2;
pub static MAX_TEXTURE_UNITS_ARB: GLenum = 0x84E2;
pub static TRANSPOSE_MODELVIEW_MATRIX: GLenum = 0x84E3;
pub static TRANSPOSE_MODELVIEW_MATRIX_ARB: GLenum = 0x84E3;
pub static TRANSPOSE_PROJECTION_MATRIX: GLenum = 0x84E4;
pub static TRANSPOSE_PROJECTION_MATRIX_ARB: GLenum = 0x84E4;
pub static TRANSPOSE_TEXTURE_MATRIX: GLenum = 0x84E5;
pub static TRANSPOSE_TEXTURE_MATRIX_ARB: GLenum = 0x84E5;
pub static TRANSPOSE_COLOR_MATRIX: GLenum = 0x84E6;
pub static TRANSPOSE_COLOR_MATRIX_ARB: GLenum = 0x84E6;
pub static SUBTRACT: GLenum = 0x84E7;
pub static SUBTRACT_ARB: GLenum = 0x84E7;
pub static MAX_RENDERBUFFER_SIZE: GLenum = 0x84E8;
pub static MAX_RENDERBUFFER_SIZE_EXT: GLenum = 0x84E8;
pub static MAX_RENDERBUFFER_SIZE_OES: GLenum = 0x84E8;
pub static COMPRESSED_ALPHA: GLenum = 0x84E9;
pub static COMPRESSED_ALPHA_ARB: GLenum = 0x84E9;
pub static COMPRESSED_LUMINANCE: GLenum = 0x84EA;
pub static COMPRESSED_LUMINANCE_ARB: GLenum = 0x84EA;
pub static COMPRESSED_LUMINANCE_ALPHA: GLenum = 0x84EB;
pub static COMPRESSED_LUMINANCE_ALPHA_ARB: GLenum = 0x84EB;
pub static COMPRESSED_INTENSITY: GLenum = 0x84EC;
pub static COMPRESSED_INTENSITY_ARB: GLenum = 0x84EC;
pub static COMPRESSED_RGB: GLenum = 0x84ED;
pub static COMPRESSED_RGB_ARB: GLenum = 0x84ED;
pub static COMPRESSED_RGBA: GLenum = 0x84EE;
pub static COMPRESSED_RGBA_ARB: GLenum = 0x84EE;
pub static TEXTURE_COMPRESSION_HINT: GLenum = 0x84EF;
pub static TEXTURE_COMPRESSION_HINT_ARB: GLenum = 0x84EF;
pub static UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER: GLenum = 0x84F0;
pub static UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER: GLenum = 0x84F1;
pub static ALL_COMPLETED_NV: GLenum = 0x84F2;
pub static FENCE_STATUS_NV: GLenum = 0x84F3;
pub static FENCE_CONDITION_NV: GLenum = 0x84F4;
pub static TEXTURE_RECTANGLE: GLenum = 0x84F5;
pub static TEXTURE_RECTANGLE_ARB: GLenum = 0x84F5;
pub static TEXTURE_RECTANGLE_NV: GLenum = 0x84F5;
pub static TEXTURE_BINDING_RECTANGLE: GLenum = 0x84F6;
pub static TEXTURE_BINDING_RECTANGLE_ARB: GLenum = 0x84F6;
pub static TEXTURE_BINDING_RECTANGLE_NV: GLenum = 0x84F6;
pub static PROXY_TEXTURE_RECTANGLE: GLenum = 0x84F7;
pub static PROXY_TEXTURE_RECTANGLE_ARB: GLenum = 0x84F7;
pub static PROXY_TEXTURE_RECTANGLE_NV: GLenum = 0x84F7;
pub static MAX_RECTANGLE_TEXTURE_SIZE: GLenum = 0x84F8;
pub static MAX_RECTANGLE_TEXTURE_SIZE_ARB: GLenum = 0x84F8;
pub static MAX_RECTANGLE_TEXTURE_SIZE_NV: GLenum = 0x84F8;
pub static DEPTH_STENCIL: GLenum = 0x84F9;
pub static DEPTH_STENCIL_EXT: GLenum = 0x84F9;
pub static DEPTH_STENCIL_NV: GLenum = 0x84F9;
pub static DEPTH_STENCIL_OES: GLenum = 0x84F9;
pub static UNSIGNED_INT_24_8: GLenum = 0x84FA;
pub static UNSIGNED_INT_24_8_EXT: GLenum = 0x84FA;
pub static UNSIGNED_INT_24_8_NV: GLenum = 0x84FA;
pub static UNSIGNED_INT_24_8_OES: GLenum = 0x84FA;
pub static MAX_TEXTURE_LOD_BIAS: GLenum = 0x84FD;
pub static MAX_TEXTURE_LOD_BIAS_EXT: GLenum = 0x84FD;
pub static TEXTURE_MAX_ANISOTROPY_EXT: GLenum = 0x84FE;
pub static MAX_TEXTURE_MAX_ANISOTROPY_EXT: GLenum = 0x84FF;
pub static TEXTURE_FILTER_CONTROL: GLenum = 0x8500;
pub static TEXTURE_FILTER_CONTROL_EXT: GLenum = 0x8500;
pub static TEXTURE_LOD_BIAS: GLenum = 0x8501;
pub static TEXTURE_LOD_BIAS_EXT: GLenum = 0x8501;
pub static MODELVIEW1_STACK_DEPTH_EXT: GLenum = 0x8502;
pub static COMBINE4_NV: GLenum = 0x8503;
pub static MAX_SHININESS_NV: GLenum = 0x8504;
pub static MAX_SPOT_EXPONENT_NV: GLenum = 0x8505;
pub static MODELVIEW1_MATRIX_EXT: GLenum = 0x8506;
pub static INCR_WRAP: GLenum = 0x8507;
pub static INCR_WRAP_EXT: GLenum = 0x8507;
pub static INCR_WRAP_OES: GLenum = 0x8507;
pub static DECR_WRAP: GLenum = 0x8508;
pub static DECR_WRAP_EXT: GLenum = 0x8508;
pub static DECR_WRAP_OES: GLenum = 0x8508;
pub static VERTEX_WEIGHTING_EXT: GLenum = 0x8509;
pub static MODELVIEW1_ARB: GLenum = 0x850A;
pub static MODELVIEW1_EXT: GLenum = 0x850A;
pub static CURRENT_VERTEX_WEIGHT_EXT: GLenum = 0x850B;
pub static VERTEX_WEIGHT_ARRAY_EXT: GLenum = 0x850C;
pub static VERTEX_WEIGHT_ARRAY_SIZE_EXT: GLenum = 0x850D;
pub static VERTEX_WEIGHT_ARRAY_TYPE_EXT: GLenum = 0x850E;
pub static VERTEX_WEIGHT_ARRAY_STRIDE_EXT: GLenum = 0x850F;
pub static VERTEX_WEIGHT_ARRAY_POINTER_EXT: GLenum = 0x8510;
pub static NORMAL_MAP: GLenum = 0x8511;
pub static NORMAL_MAP_ARB: GLenum = 0x8511;
pub static NORMAL_MAP_EXT: GLenum = 0x8511;
pub static NORMAL_MAP_NV: GLenum = 0x8511;
pub static NORMAL_MAP_OES: GLenum = 0x8511;
pub static REFLECTION_MAP: GLenum = 0x8512;
pub static REFLECTION_MAP_ARB: GLenum = 0x8512;
pub static REFLECTION_MAP_EXT: GLenum = 0x8512;
pub static REFLECTION_MAP_NV: GLenum = 0x8512;
pub static REFLECTION_MAP_OES: GLenum = 0x8512;
pub static TEXTURE_CUBE_MAP: GLenum = 0x8513;
pub static TEXTURE_CUBE_MAP_ARB: GLenum = 0x8513;
pub static TEXTURE_CUBE_MAP_EXT: GLenum = 0x8513;
pub static TEXTURE_CUBE_MAP_OES: GLenum = 0x8513;
pub static TEXTURE_BINDING_CUBE_MAP: GLenum = 0x8514;
pub static TEXTURE_BINDING_CUBE_MAP_ARB: GLenum = 0x8514;
pub static TEXTURE_BINDING_CUBE_MAP_EXT: GLenum = 0x8514;
pub static TEXTURE_BINDING_CUBE_MAP_OES: GLenum = 0x8514;
pub static TEXTURE_CUBE_MAP_POSITIVE_X: GLenum = 0x8515;
pub static TEXTURE_CUBE_MAP_POSITIVE_X_ARB: GLenum = 0x8515;
pub static TEXTURE_CUBE_MAP_POSITIVE_X_EXT: GLenum = 0x8515;
pub static TEXTURE_CUBE_MAP_POSITIVE_X_OES: GLenum = 0x8515;
pub static TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum = 0x8516;
pub static TEXTURE_CUBE_MAP_NEGATIVE_X_ARB: GLenum = 0x8516;
pub static TEXTURE_CUBE_MAP_NEGATIVE_X_EXT: GLenum = 0x8516;
pub static TEXTURE_CUBE_MAP_NEGATIVE_X_OES: GLenum = 0x8516;
pub static TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum = 0x8517;
pub static TEXTURE_CUBE_MAP_POSITIVE_Y_ARB: GLenum = 0x8517;
pub static TEXTURE_CUBE_MAP_POSITIVE_Y_EXT: GLenum = 0x8517;
pub static TEXTURE_CUBE_MAP_POSITIVE_Y_OES: GLenum = 0x8517;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum = 0x8518;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB: GLenum = 0x8518;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT: GLenum = 0x8518;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Y_OES: GLenum = 0x8518;
pub static TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum = 0x8519;
pub static TEXTURE_CUBE_MAP_POSITIVE_Z_ARB: GLenum = 0x8519;
pub static TEXTURE_CUBE_MAP_POSITIVE_Z_EXT: GLenum = 0x8519;
pub static TEXTURE_CUBE_MAP_POSITIVE_Z_OES: GLenum = 0x8519;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum = 0x851A;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB: GLenum = 0x851A;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT: GLenum = 0x851A;
pub static TEXTURE_CUBE_MAP_NEGATIVE_Z_OES: GLenum = 0x851A;
pub static PROXY_TEXTURE_CUBE_MAP: GLenum = 0x851B;
pub static PROXY_TEXTURE_CUBE_MAP_ARB: GLenum = 0x851B;
pub static PROXY_TEXTURE_CUBE_MAP_EXT: GLenum = 0x851B;
pub static MAX_CUBE_MAP_TEXTURE_SIZE: GLenum = 0x851C;
pub static MAX_CUBE_MAP_TEXTURE_SIZE_ARB: GLenum = 0x851C;
pub static MAX_CUBE_MAP_TEXTURE_SIZE_EXT: GLenum = 0x851C;
pub static MAX_CUBE_MAP_TEXTURE_SIZE_OES: GLenum = 0x851C;
pub static VERTEX_ARRAY_RANGE_APPLE: GLenum = 0x851D;
pub static VERTEX_ARRAY_RANGE_NV: GLenum = 0x851D;
pub static VERTEX_ARRAY_RANGE_LENGTH_APPLE: GLenum = 0x851E;
pub static VERTEX_ARRAY_RANGE_LENGTH_NV: GLenum = 0x851E;
pub static VERTEX_ARRAY_RANGE_VALID_NV: GLenum = 0x851F;
pub static VERTEX_ARRAY_STORAGE_HINT_APPLE: GLenum = 0x851F;
pub static MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV: GLenum = 0x8520;
pub static VERTEX_ARRAY_RANGE_POINTER_APPLE: GLenum = 0x8521;
pub static VERTEX_ARRAY_RANGE_POINTER_NV: GLenum = 0x8521;
pub static REGISTER_COMBINERS_NV: GLenum = 0x8522;
pub static VARIABLE_A_NV: GLenum = 0x8523;
pub static VARIABLE_B_NV: GLenum = 0x8524;
pub static VARIABLE_C_NV: GLenum = 0x8525;
pub static VARIABLE_D_NV: GLenum = 0x8526;
pub static VARIABLE_E_NV: GLenum = 0x8527;
pub static VARIABLE_F_NV: GLenum = 0x8528;
pub static VARIABLE_G_NV: GLenum = 0x8529;
pub static CONSTANT_COLOR0_NV: GLenum = 0x852A;
pub static CONSTANT_COLOR1_NV: GLenum = 0x852B;
pub static PRIMARY_COLOR_NV: GLenum = 0x852C;
pub static SECONDARY_COLOR_NV: GLenum = 0x852D;
pub static SPARE0_NV: GLenum = 0x852E;
pub static SPARE1_NV: GLenum = 0x852F;
pub static DISCARD_NV: GLenum = 0x8530;
pub static E_TIMES_F_NV: GLenum = 0x8531;
pub static SPARE0_PLUS_SECONDARY_COLOR_NV: GLenum = 0x8532;
pub static VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV: GLenum = 0x8533;
pub static MULTISAMPLE_FILTER_HINT_NV: GLenum = 0x8534;
pub static PER_STAGE_CONSTANTS_NV: GLenum = 0x8535;
pub static UNSIGNED_IDENTITY_NV: GLenum = 0x8536;
pub static UNSIGNED_INVERT_NV: GLenum = 0x8537;
pub static EXPAND_NORMAL_NV: GLenum = 0x8538;
pub static EXPAND_NEGATE_NV: GLenum = 0x8539;
pub static HALF_BIAS_NORMAL_NV: GLenum = 0x853A;
pub static HALF_BIAS_NEGATE_NV: GLenum = 0x853B;
pub static SIGNED_IDENTITY_NV: GLenum = 0x853C;
pub static SIGNED_NEGATE_NV: GLenum = 0x853D;
pub static SCALE_BY_TWO_NV: GLenum = 0x853E;
pub static SCALE_BY_FOUR_NV: GLenum = 0x853F;
pub static SCALE_BY_ONE_HALF_NV: GLenum = 0x8540;
pub static BIAS_BY_NEGATIVE_ONE_HALF_NV: GLenum = 0x8541;
pub static COMBINER_INPUT_NV: GLenum = 0x8542;
pub static COMBINER_MAPPING_NV: GLenum = 0x8543;
pub static COMBINER_COMPONENT_USAGE_NV: GLenum = 0x8544;
pub static COMBINER_AB_DOT_PRODUCT_NV: GLenum = 0x8545;
pub static COMBINER_CD_DOT_PRODUCT_NV: GLenum = 0x8546;
pub static COMBINER_MUX_SUM_NV: GLenum = 0x8547;
pub static COMBINER_SCALE_NV: GLenum = 0x8548;
pub static COMBINER_BIAS_NV: GLenum = 0x8549;
pub static COMBINER_AB_OUTPUT_NV: GLenum = 0x854A;
pub static COMBINER_CD_OUTPUT_NV: GLenum = 0x854B;
pub static COMBINER_SUM_OUTPUT_NV: GLenum = 0x854C;
pub static MAX_GENERAL_COMBINERS_NV: GLenum = 0x854D;
pub static NUM_GENERAL_COMBINERS_NV: GLenum = 0x854E;
pub static COLOR_SUM_CLAMP_NV: GLenum = 0x854F;
pub static COMBINER0_NV: GLenum = 0x8550;
pub static COMBINER1_NV: GLenum = 0x8551;
pub static COMBINER2_NV: GLenum = 0x8552;
pub static COMBINER3_NV: GLenum = 0x8553;
pub static COMBINER4_NV: GLenum = 0x8554;
pub static COMBINER5_NV: GLenum = 0x8555;
pub static COMBINER6_NV: GLenum = 0x8556;
pub static COMBINER7_NV: GLenum = 0x8557;
pub static PRIMITIVE_RESTART_NV: GLenum = 0x8558;
pub static PRIMITIVE_RESTART_INDEX_NV: GLenum = 0x8559;
pub static FOG_DISTANCE_MODE_NV: GLenum = 0x855A;
pub static EYE_RADIAL_NV: GLenum = 0x855B;
pub static EYE_PLANE_ABSOLUTE_NV: GLenum = 0x855C;
pub static EMBOSS_LIGHT_NV: GLenum = 0x855D;
pub static EMBOSS_CONSTANT_NV: GLenum = 0x855E;
pub static EMBOSS_MAP_NV: GLenum = 0x855F;
pub static RED_MIN_CLAMP_INGR: GLenum = 0x8560;
pub static GREEN_MIN_CLAMP_INGR: GLenum = 0x8561;
pub static BLUE_MIN_CLAMP_INGR: GLenum = 0x8562;
pub static ALPHA_MIN_CLAMP_INGR: GLenum = 0x8563;
pub static RED_MAX_CLAMP_INGR: GLenum = 0x8564;
pub static GREEN_MAX_CLAMP_INGR: GLenum = 0x8565;
pub static BLUE_MAX_CLAMP_INGR: GLenum = 0x8566;
pub static ALPHA_MAX_CLAMP_INGR: GLenum = 0x8567;
pub static INTERLACE_READ_INGR: GLenum = 0x8568;
pub static COMBINE: GLenum = 0x8570;
pub static COMBINE_ARB: GLenum = 0x8570;
pub static COMBINE_EXT: GLenum = 0x8570;
pub static COMBINE_RGB: GLenum = 0x8571;
pub static COMBINE_RGB_ARB: GLenum = 0x8571;
pub static COMBINE_RGB_EXT: GLenum = 0x8571;
pub static COMBINE_ALPHA: GLenum = 0x8572;
pub static COMBINE_ALPHA_ARB: GLenum = 0x8572;
pub static COMBINE_ALPHA_EXT: GLenum = 0x8572;
pub static RGB_SCALE: GLenum = 0x8573;
pub static RGB_SCALE_ARB: GLenum = 0x8573;
pub static RGB_SCALE_EXT: GLenum = 0x8573;
pub static ADD_SIGNED: GLenum = 0x8574;
pub static ADD_SIGNED_ARB: GLenum = 0x8574;
pub static ADD_SIGNED_EXT: GLenum = 0x8574;
pub static INTERPOLATE: GLenum = 0x8575;
pub static INTERPOLATE_ARB: GLenum = 0x8575;
pub static INTERPOLATE_EXT: GLenum = 0x8575;
pub static CONSTANT: GLenum = 0x8576;
pub static CONSTANT_ARB: GLenum = 0x8576;
pub static CONSTANT_EXT: GLenum = 0x8576;
pub static PRIMARY_COLOR: GLenum = 0x8577;
pub static PRIMARY_COLOR_ARB: GLenum = 0x8577;
pub static PRIMARY_COLOR_EXT: GLenum = 0x8577;
pub static PREVIOUS: GLenum = 0x8578;
pub static PREVIOUS_ARB: GLenum = 0x8578;
pub static PREVIOUS_EXT: GLenum = 0x8578;
pub static SOURCE0_RGB: GLenum = 0x8580;
pub static SOURCE0_RGB_ARB: GLenum = 0x8580;
pub static SOURCE0_RGB_EXT: GLenum = 0x8580;
pub static SRC0_RGB: GLenum = 0x8580;
pub static SOURCE1_RGB: GLenum = 0x8581;
pub static SOURCE1_RGB_ARB: GLenum = 0x8581;
pub static SOURCE1_RGB_EXT: GLenum = 0x8581;
pub static SRC1_RGB: GLenum = 0x8581;
pub static SOURCE2_RGB: GLenum = 0x8582;
pub static SOURCE2_RGB_ARB: GLenum = 0x8582;
pub static SOURCE2_RGB_EXT: GLenum = 0x8582;
pub static SRC2_RGB: GLenum = 0x8582;
pub static SOURCE3_RGB_NV: GLenum = 0x8583;
pub static SOURCE0_ALPHA: GLenum = 0x8588;
pub static SOURCE0_ALPHA_ARB: GLenum = 0x8588;
pub static SOURCE0_ALPHA_EXT: GLenum = 0x8588;
pub static SRC0_ALPHA: GLenum = 0x8588;
pub static SOURCE1_ALPHA: GLenum = 0x8589;
pub static SOURCE1_ALPHA_ARB: GLenum = 0x8589;
pub static SOURCE1_ALPHA_EXT: GLenum = 0x8589;
pub static SRC1_ALPHA: GLenum = 0x8589;
pub static SOURCE2_ALPHA: GLenum = 0x858A;
pub static SOURCE2_ALPHA_ARB: GLenum = 0x858A;
pub static SOURCE2_ALPHA_EXT: GLenum = 0x858A;
pub static SRC2_ALPHA: GLenum = 0x858A;
pub static SOURCE3_ALPHA_NV: GLenum = 0x858B;
pub static OPERAND0_RGB: GLenum = 0x8590;
pub static OPERAND0_RGB_ARB: GLenum = 0x8590;
pub static OPERAND0_RGB_EXT: GLenum = 0x8590;
pub static OPERAND1_RGB: GLenum = 0x8591;
pub static OPERAND1_RGB_ARB: GLenum = 0x8591;
pub static OPERAND1_RGB_EXT: GLenum = 0x8591;
pub static OPERAND2_RGB: GLenum = 0x8592;
pub static OPERAND2_RGB_ARB: GLenum = 0x8592;
pub static OPERAND2_RGB_EXT: GLenum = 0x8592;
pub static OPERAND3_RGB_NV: GLenum = 0x8593;
pub static OPERAND0_ALPHA: GLenum = 0x8598;
pub static OPERAND0_ALPHA_ARB: GLenum = 0x8598;
pub static OPERAND0_ALPHA_EXT: GLenum = 0x8598;
pub static OPERAND1_ALPHA: GLenum = 0x8599;
pub static OPERAND1_ALPHA_ARB: GLenum = 0x8599;
pub static OPERAND1_ALPHA_EXT: GLenum = 0x8599;
pub static OPERAND2_ALPHA: GLenum = 0x859A;
pub static OPERAND2_ALPHA_ARB: GLenum = 0x859A;
pub static OPERAND2_ALPHA_EXT: GLenum = 0x859A;
pub static OPERAND3_ALPHA_NV: GLenum = 0x859B;
pub static PACK_SUBSAMPLE_RATE_SGIX: GLenum = 0x85A0;
pub static UNPACK_SUBSAMPLE_RATE_SGIX: GLenum = 0x85A1;
pub static PIXEL_SUBSAMPLE_4444_SGIX: GLenum = 0x85A2;
pub static PIXEL_SUBSAMPLE_2424_SGIX: GLenum = 0x85A3;
pub static PIXEL_SUBSAMPLE_4242_SGIX: GLenum = 0x85A4;
pub static PERTURB_EXT: GLenum = 0x85AE;
pub static TEXTURE_NORMAL_EXT: GLenum = 0x85AF;
pub static LIGHT_MODEL_SPECULAR_VECTOR_APPLE: GLenum = 0x85B0;
pub static TRANSFORM_HINT_APPLE: GLenum = 0x85B1;
pub static UNPACK_CLIENT_STORAGE_APPLE: GLenum = 0x85B2;
pub static BUFFER_OBJECT_APPLE: GLenum = 0x85B3;
pub static STORAGE_CLIENT_APPLE: GLenum = 0x85B4;
pub static VERTEX_ARRAY_BINDING: GLenum = 0x85B5;
pub static VERTEX_ARRAY_BINDING_APPLE: GLenum = 0x85B5;
pub static TEXTURE_RANGE_LENGTH_APPLE: GLenum = 0x85B7;
pub static TEXTURE_RANGE_POINTER_APPLE: GLenum = 0x85B8;
pub static YCBCR_422_APPLE: GLenum = 0x85B9;
pub static UNSIGNED_SHORT_8_8_APPLE: GLenum = 0x85BA;
pub static UNSIGNED_SHORT_8_8_MESA: GLenum = 0x85BA;
pub static UNSIGNED_SHORT_8_8_REV_APPLE: GLenum = 0x85BB;
pub static UNSIGNED_SHORT_8_8_REV_MESA: GLenum = 0x85BB;
pub static TEXTURE_STORAGE_HINT_APPLE: GLenum = 0x85BC;
pub static STORAGE_PRIVATE_APPLE: GLenum = 0x85BD;
pub static STORAGE_CACHED_APPLE: GLenum = 0x85BE;
pub static STORAGE_SHARED_APPLE: GLenum = 0x85BF;
pub static REPLACEMENT_CODE_ARRAY_SUN: GLenum = 0x85C0;
pub static REPLACEMENT_CODE_ARRAY_TYPE_SUN: GLenum = 0x85C1;
pub static REPLACEMENT_CODE_ARRAY_STRIDE_SUN: GLenum = 0x85C2;
pub static REPLACEMENT_CODE_ARRAY_POINTER_SUN: GLenum = 0x85C3;
pub static R1UI_V3F_SUN: GLenum = 0x85C4;
pub static R1UI_C4UB_V3F_SUN: GLenum = 0x85C5;
pub static R1UI_C3F_V3F_SUN: GLenum = 0x85C6;
pub static R1UI_N3F_V3F_SUN: GLenum = 0x85C7;
pub static R1UI_C4F_N3F_V3F_SUN: GLenum = 0x85C8;
pub static R1UI_T2F_V3F_SUN: GLenum = 0x85C9;
pub static R1UI_T2F_N3F_V3F_SUN: GLenum = 0x85CA;
pub static R1UI_T2F_C4F_N3F_V3F_SUN: GLenum = 0x85CB;
pub static SLICE_ACCUM_SUN: GLenum = 0x85CC;
pub static QUAD_MESH_SUN: GLenum = 0x8614;
pub static TRIANGLE_MESH_SUN: GLenum = 0x8615;
pub static VERTEX_PROGRAM_ARB: GLenum = 0x8620;
pub static VERTEX_PROGRAM_NV: GLenum = 0x8620;
pub static VERTEX_STATE_PROGRAM_NV: GLenum = 0x8621;
pub static VERTEX_ATTRIB_ARRAY_ENABLED: GLenum = 0x8622;
pub static VERTEX_ATTRIB_ARRAY_ENABLED_ARB: GLenum = 0x8622;
pub static ATTRIB_ARRAY_SIZE_NV: GLenum = 0x8623;
pub static VERTEX_ATTRIB_ARRAY_SIZE: GLenum = 0x8623;
pub static VERTEX_ATTRIB_ARRAY_SIZE_ARB: GLenum = 0x8623;
pub static ATTRIB_ARRAY_STRIDE_NV: GLenum = 0x8624;
pub static VERTEX_ATTRIB_ARRAY_STRIDE: GLenum = 0x8624;
pub static VERTEX_ATTRIB_ARRAY_STRIDE_ARB: GLenum = 0x8624;
pub static ATTRIB_ARRAY_TYPE_NV: GLenum = 0x8625;
pub static VERTEX_ATTRIB_ARRAY_TYPE: GLenum = 0x8625;
pub static VERTEX_ATTRIB_ARRAY_TYPE_ARB: GLenum = 0x8625;
pub static CURRENT_ATTRIB_NV: GLenum = 0x8626;
pub static CURRENT_VERTEX_ATTRIB: GLenum = 0x8626;
pub static CURRENT_VERTEX_ATTRIB_ARB: GLenum = 0x8626;
pub static PROGRAM_LENGTH_ARB: GLenum = 0x8627;
pub static PROGRAM_LENGTH_NV: GLenum = 0x8627;
pub static PROGRAM_STRING_ARB: GLenum = 0x8628;
pub static PROGRAM_STRING_NV: GLenum = 0x8628;
pub static MODELVIEW_PROJECTION_NV: GLenum = 0x8629;
pub static IDENTITY_NV: GLenum = 0x862A;
pub static INVERSE_NV: GLenum = 0x862B;
pub static TRANSPOSE_NV: GLenum = 0x862C;
pub static INVERSE_TRANSPOSE_NV: GLenum = 0x862D;
pub static MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB: GLenum = 0x862E;
pub static MAX_TRACK_MATRIX_STACK_DEPTH_NV: GLenum = 0x862E;
pub static MAX_PROGRAM_MATRICES_ARB: GLenum = 0x862F;
pub static MAX_TRACK_MATRICES_NV: GLenum = 0x862F;
pub static MATRIX0_NV: GLenum = 0x8630;
pub static MATRIX1_NV: GLenum = 0x8631;
pub static MATRIX2_NV: GLenum = 0x8632;
pub static MATRIX3_NV: GLenum = 0x8633;
pub static MATRIX4_NV: GLenum = 0x8634;
pub static MATRIX5_NV: GLenum = 0x8635;
pub static MATRIX6_NV: GLenum = 0x8636;
pub static MATRIX7_NV: GLenum = 0x8637;
pub static CURRENT_MATRIX_STACK_DEPTH_ARB: GLenum = 0x8640;
pub static CURRENT_MATRIX_STACK_DEPTH_NV: GLenum = 0x8640;
pub static CURRENT_MATRIX_ARB: GLenum = 0x8641;
pub static CURRENT_MATRIX_NV: GLenum = 0x8641;
pub static VERTEX_PROGRAM_POINT_SIZE: GLenum = 0x8642;
pub static VERTEX_PROGRAM_POINT_SIZE_ARB: GLenum = 0x8642;
pub static VERTEX_PROGRAM_POINT_SIZE_NV: GLenum = 0x8642;
pub static PROGRAM_POINT_SIZE: GLenum = 0x8642;
pub static PROGRAM_POINT_SIZE_ARB: GLenum = 0x8642;
pub static PROGRAM_POINT_SIZE_EXT: GLenum = 0x8642;
pub static VERTEX_PROGRAM_TWO_SIDE: GLenum = 0x8643;
pub static VERTEX_PROGRAM_TWO_SIDE_ARB: GLenum = 0x8643;
pub static VERTEX_PROGRAM_TWO_SIDE_NV: GLenum = 0x8643;
pub static PROGRAM_PARAMETER_NV: GLenum = 0x8644;
pub static ATTRIB_ARRAY_POINTER_NV: GLenum = 0x8645;
pub static VERTEX_ATTRIB_ARRAY_POINTER: GLenum = 0x8645;
pub static VERTEX_ATTRIB_ARRAY_POINTER_ARB: GLenum = 0x8645;
pub static PROGRAM_TARGET_NV: GLenum = 0x8646;
pub static PROGRAM_RESIDENT_NV: GLenum = 0x8647;
pub static TRACK_MATRIX_NV: GLenum = 0x8648;
pub static TRACK_MATRIX_TRANSFORM_NV: GLenum = 0x8649;
pub static VERTEX_PROGRAM_BINDING_NV: GLenum = 0x864A;
pub static PROGRAM_ERROR_POSITION_ARB: GLenum = 0x864B;
pub static PROGRAM_ERROR_POSITION_NV: GLenum = 0x864B;
pub static OFFSET_TEXTURE_RECTANGLE_NV: GLenum = 0x864C;
pub static OFFSET_TEXTURE_RECTANGLE_SCALE_NV: GLenum = 0x864D;
pub static DOT_PRODUCT_TEXTURE_RECTANGLE_NV: GLenum = 0x864E;
pub static DEPTH_CLAMP: GLenum = 0x864F;
pub static DEPTH_CLAMP_NV: GLenum = 0x864F;
pub static VERTEX_ATTRIB_ARRAY0_NV: GLenum = 0x8650;
pub static VERTEX_ATTRIB_ARRAY1_NV: GLenum = 0x8651;
pub static VERTEX_ATTRIB_ARRAY2_NV: GLenum = 0x8652;
pub static VERTEX_ATTRIB_ARRAY3_NV: GLenum = 0x8653;
pub static VERTEX_ATTRIB_ARRAY4_NV: GLenum = 0x8654;
pub static VERTEX_ATTRIB_ARRAY5_NV: GLenum = 0x8655;
pub static VERTEX_ATTRIB_ARRAY6_NV: GLenum = 0x8656;
pub static VERTEX_ATTRIB_ARRAY7_NV: GLenum = 0x8657;
pub static VERTEX_ATTRIB_ARRAY8_NV: GLenum = 0x8658;
pub static VERTEX_ATTRIB_ARRAY9_NV: GLenum = 0x8659;
pub static VERTEX_ATTRIB_ARRAY10_NV: GLenum = 0x865A;
pub static VERTEX_ATTRIB_ARRAY11_NV: GLenum = 0x865B;
pub static VERTEX_ATTRIB_ARRAY12_NV: GLenum = 0x865C;
pub static VERTEX_ATTRIB_ARRAY13_NV: GLenum = 0x865D;
pub static VERTEX_ATTRIB_ARRAY14_NV: GLenum = 0x865E;
pub static VERTEX_ATTRIB_ARRAY15_NV: GLenum = 0x865F;
pub static MAP1_VERTEX_ATTRIB0_4_NV: GLenum = 0x8660;
pub static MAP1_VERTEX_ATTRIB1_4_NV: GLenum = 0x8661;
pub static MAP1_VERTEX_ATTRIB2_4_NV: GLenum = 0x8662;
pub static MAP1_VERTEX_ATTRIB3_4_NV: GLenum = 0x8663;
pub static MAP1_VERTEX_ATTRIB4_4_NV: GLenum = 0x8664;
pub static MAP1_VERTEX_ATTRIB5_4_NV: GLenum = 0x8665;
pub static MAP1_VERTEX_ATTRIB6_4_NV: GLenum = 0x8666;
pub static MAP1_VERTEX_ATTRIB7_4_NV: GLenum = 0x8667;
pub static MAP1_VERTEX_ATTRIB8_4_NV: GLenum = 0x8668;
pub static MAP1_VERTEX_ATTRIB9_4_NV: GLenum = 0x8669;
pub static MAP1_VERTEX_ATTRIB10_4_NV: GLenum = 0x866A;
pub static MAP1_VERTEX_ATTRIB11_4_NV: GLenum = 0x866B;
pub static MAP1_VERTEX_ATTRIB12_4_NV: GLenum = 0x866C;
pub static MAP1_VERTEX_ATTRIB13_4_NV: GLenum = 0x866D;
pub static MAP1_VERTEX_ATTRIB14_4_NV: GLenum = 0x866E;
pub static MAP1_VERTEX_ATTRIB15_4_NV: GLenum = 0x866F;
pub static MAP2_VERTEX_ATTRIB0_4_NV: GLenum = 0x8670;
pub static MAP2_VERTEX_ATTRIB1_4_NV: GLenum = 0x8671;
pub static MAP2_VERTEX_ATTRIB2_4_NV: GLenum = 0x8672;
pub static MAP2_VERTEX_ATTRIB3_4_NV: GLenum = 0x8673;
pub static MAP2_VERTEX_ATTRIB4_4_NV: GLenum = 0x8674;
pub static MAP2_VERTEX_ATTRIB5_4_NV: GLenum = 0x8675;
pub static MAP2_VERTEX_ATTRIB6_4_NV: GLenum = 0x8676;
pub static MAP2_VERTEX_ATTRIB7_4_NV: GLenum = 0x8677;
pub static PROGRAM_BINDING_ARB: GLenum = 0x8677;
pub static MAP2_VERTEX_ATTRIB8_4_NV: GLenum = 0x8678;
pub static MAP2_VERTEX_ATTRIB9_4_NV: GLenum = 0x8679;
pub static MAP2_VERTEX_ATTRIB10_4_NV: GLenum = 0x867A;
pub static MAP2_VERTEX_ATTRIB11_4_NV: GLenum = 0x867B;
pub static MAP2_VERTEX_ATTRIB12_4_NV: GLenum = 0x867C;
pub static MAP2_VERTEX_ATTRIB13_4_NV: GLenum = 0x867D;
pub static MAP2_VERTEX_ATTRIB14_4_NV: GLenum = 0x867E;
pub static MAP2_VERTEX_ATTRIB15_4_NV: GLenum = 0x867F;
pub static TEXTURE_COMPRESSED_IMAGE_SIZE: GLenum = 0x86A0;
pub static TEXTURE_COMPRESSED_IMAGE_SIZE_ARB: GLenum = 0x86A0;
pub static TEXTURE_COMPRESSED: GLenum = 0x86A1;
pub static TEXTURE_COMPRESSED_ARB: GLenum = 0x86A1;
pub static NUM_COMPRESSED_TEXTURE_FORMATS: GLenum = 0x86A2;
pub static NUM_COMPRESSED_TEXTURE_FORMATS_ARB: GLenum = 0x86A2;
pub static COMPRESSED_TEXTURE_FORMATS: GLenum = 0x86A3;
pub static COMPRESSED_TEXTURE_FORMATS_ARB: GLenum = 0x86A3;
pub static MAX_VERTEX_UNITS_ARB: GLenum = 0x86A4;
pub static MAX_VERTEX_UNITS_OES: GLenum = 0x86A4;
pub static ACTIVE_VERTEX_UNITS_ARB: GLenum = 0x86A5;
pub static WEIGHT_SUM_UNITY_ARB: GLenum = 0x86A6;
pub static VERTEX_BLEND_ARB: GLenum = 0x86A7;
pub static CURRENT_WEIGHT_ARB: GLenum = 0x86A8;
pub static WEIGHT_ARRAY_TYPE_ARB: GLenum = 0x86A9;
pub static WEIGHT_ARRAY_TYPE_OES: GLenum = 0x86A9;
pub static WEIGHT_ARRAY_STRIDE_ARB: GLenum = 0x86AA;
pub static WEIGHT_ARRAY_STRIDE_OES: GLenum = 0x86AA;
pub static WEIGHT_ARRAY_SIZE_ARB: GLenum = 0x86AB;
pub static WEIGHT_ARRAY_SIZE_OES: GLenum = 0x86AB;
pub static WEIGHT_ARRAY_POINTER_ARB: GLenum = 0x86AC;
pub static WEIGHT_ARRAY_POINTER_OES: GLenum = 0x86AC;
pub static WEIGHT_ARRAY_ARB: GLenum = 0x86AD;
pub static WEIGHT_ARRAY_OES: GLenum = 0x86AD;
pub static DOT3_RGB: GLenum = 0x86AE;
pub static DOT3_RGB_ARB: GLenum = 0x86AE;
pub static DOT3_RGBA: GLenum = 0x86AF;
pub static DOT3_RGBA_ARB: GLenum = 0x86AF;
pub static DOT3_RGBA_IMG: GLenum = 0x86AF;
pub static COMPRESSED_RGB_FXT1_3DFX: GLenum = 0x86B0;
pub static COMPRESSED_RGBA_FXT1_3DFX: GLenum = 0x86B1;
pub static MULTISAMPLE_3DFX: GLenum = 0x86B2;
pub static SAMPLE_BUFFERS_3DFX: GLenum = 0x86B3;
pub static SAMPLES_3DFX: GLenum = 0x86B4;
pub static EVAL_2D_NV: GLenum = 0x86C0;
pub static EVAL_TRIANGULAR_2D_NV: GLenum = 0x86C1;
pub static MAP_TESSELLATION_NV: GLenum = 0x86C2;
pub static MAP_ATTRIB_U_ORDER_NV: GLenum = 0x86C3;
pub static MAP_ATTRIB_V_ORDER_NV: GLenum = 0x86C4;
pub static EVAL_FRACTIONAL_TESSELLATION_NV: GLenum = 0x86C5;
pub static EVAL_VERTEX_ATTRIB0_NV: GLenum = 0x86C6;
pub static EVAL_VERTEX_ATTRIB1_NV: GLenum = 0x86C7;
pub static EVAL_VERTEX_ATTRIB2_NV: GLenum = 0x86C8;
pub static EVAL_VERTEX_ATTRIB3_NV: GLenum = 0x86C9;
pub static EVAL_VERTEX_ATTRIB4_NV: GLenum = 0x86CA;
pub static EVAL_VERTEX_ATTRIB5_NV: GLenum = 0x86CB;
pub static EVAL_VERTEX_ATTRIB6_NV: GLenum = 0x86CC;
pub static EVAL_VERTEX_ATTRIB7_NV: GLenum = 0x86CD;
pub static EVAL_VERTEX_ATTRIB8_NV: GLenum = 0x86CE;
pub static EVAL_VERTEX_ATTRIB9_NV: GLenum = 0x86CF;
pub static EVAL_VERTEX_ATTRIB10_NV: GLenum = 0x86D0;
pub static EVAL_VERTEX_ATTRIB11_NV: GLenum = 0x86D1;
pub static EVAL_VERTEX_ATTRIB12_NV: GLenum = 0x86D2;
pub static EVAL_VERTEX_ATTRIB13_NV: GLenum = 0x86D3;
pub static EVAL_VERTEX_ATTRIB14_NV: GLenum = 0x86D4;
pub static EVAL_VERTEX_ATTRIB15_NV: GLenum = 0x86D5;
pub static MAX_MAP_TESSELLATION_NV: GLenum = 0x86D6;
pub static MAX_RATIONAL_EVAL_ORDER_NV: GLenum = 0x86D7;
pub static MAX_PROGRAM_PATCH_ATTRIBS_NV: GLenum = 0x86D8;
pub static RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV: GLenum = 0x86D9;
pub static UNSIGNED_INT_S8_S8_8_8_NV: GLenum = 0x86DA;
pub static UNSIGNED_INT_8_8_S8_S8_REV_NV: GLenum = 0x86DB;
pub static DSDT_MAG_INTENSITY_NV: GLenum = 0x86DC;
pub static SHADER_CONSISTENT_NV: GLenum = 0x86DD;
pub static TEXTURE_SHADER_NV: GLenum = 0x86DE;
pub static SHADER_OPERATION_NV: GLenum = 0x86DF;
pub static CULL_MODES_NV: GLenum = 0x86E0;
pub static OFFSET_TEXTURE_MATRIX_NV: GLenum = 0x86E1;
pub static OFFSET_TEXTURE_2D_MATRIX_NV: GLenum = 0x86E1;
pub static OFFSET_TEXTURE_SCALE_NV: GLenum = 0x86E2;
pub static OFFSET_TEXTURE_2D_SCALE_NV: GLenum = 0x86E2;
pub static OFFSET_TEXTURE_BIAS_NV: GLenum = 0x86E3;
pub static OFFSET_TEXTURE_2D_BIAS_NV: GLenum = 0x86E3;
pub static PREVIOUS_TEXTURE_INPUT_NV: GLenum = 0x86E4;
pub static CONST_EYE_NV: GLenum = 0x86E5;
pub static PASS_THROUGH_NV: GLenum = 0x86E6;
pub static CULL_FRAGMENT_NV: GLenum = 0x86E7;
pub static OFFSET_TEXTURE_2D_NV: GLenum = 0x86E8;
pub static DEPENDENT_AR_TEXTURE_2D_NV: GLenum = 0x86E9;
pub static DEPENDENT_GB_TEXTURE_2D_NV: GLenum = 0x86EA;
pub static SURFACE_STATE_NV: GLenum = 0x86EB;
pub static DOT_PRODUCT_NV: GLenum = 0x86EC;
pub static DOT_PRODUCT_DEPTH_REPLACE_NV: GLenum = 0x86ED;
pub static DOT_PRODUCT_TEXTURE_2D_NV: GLenum = 0x86EE;
pub static DOT_PRODUCT_TEXTURE_3D_NV: GLenum = 0x86EF;
pub static DOT_PRODUCT_TEXTURE_CUBE_MAP_NV: GLenum = 0x86F0;
pub static DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV: GLenum = 0x86F1;
pub static DOT_PRODUCT_REFLECT_CUBE_MAP_NV: GLenum = 0x86F2;
pub static DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV: GLenum = 0x86F3;
pub static HILO_NV: GLenum = 0x86F4;
pub static DSDT_NV: GLenum = 0x86F5;
pub static DSDT_MAG_NV: GLenum = 0x86F6;
pub static DSDT_MAG_VIB_NV: GLenum = 0x86F7;
pub static HILO16_NV: GLenum = 0x86F8;
pub static SIGNED_HILO_NV: GLenum = 0x86F9;
pub static SIGNED_HILO16_NV: GLenum = 0x86FA;
pub static SIGNED_RGBA_NV: GLenum = 0x86FB;
pub static SIGNED_RGBA8_NV: GLenum = 0x86FC;
pub static SURFACE_REGISTERED_NV: GLenum = 0x86FD;
pub static SIGNED_RGB_NV: GLenum = 0x86FE;
pub static SIGNED_RGB8_NV: GLenum = 0x86FF;
pub static SURFACE_MAPPED_NV: GLenum = 0x8700;
pub static SIGNED_LUMINANCE_NV: GLenum = 0x8701;
pub static SIGNED_LUMINANCE8_NV: GLenum = 0x8702;
pub static SIGNED_LUMINANCE_ALPHA_NV: GLenum = 0x8703;
pub static SIGNED_LUMINANCE8_ALPHA8_NV: GLenum = 0x8704;
pub static SIGNED_ALPHA_NV: GLenum = 0x8705;
pub static SIGNED_ALPHA8_NV: GLenum = 0x8706;
pub static SIGNED_INTENSITY_NV: GLenum = 0x8707;
pub static SIGNED_INTENSITY8_NV: GLenum = 0x8708;
pub static DSDT8_NV: GLenum = 0x8709;
pub static DSDT8_MAG8_NV: GLenum = 0x870A;
pub static DSDT8_MAG8_INTENSITY8_NV: GLenum = 0x870B;
pub static SIGNED_RGB_UNSIGNED_ALPHA_NV: GLenum = 0x870C;
pub static SIGNED_RGB8_UNSIGNED_ALPHA8_NV: GLenum = 0x870D;
pub static HI_SCALE_NV: GLenum = 0x870E;
pub static LO_SCALE_NV: GLenum = 0x870F;
pub static DS_SCALE_NV: GLenum = 0x8710;
pub static DT_SCALE_NV: GLenum = 0x8711;
pub static MAGNITUDE_SCALE_NV: GLenum = 0x8712;
pub static VIBRANCE_SCALE_NV: GLenum = 0x8713;
pub static HI_BIAS_NV: GLenum = 0x8714;
pub static LO_BIAS_NV: GLenum = 0x8715;
pub static DS_BIAS_NV: GLenum = 0x8716;
pub static DT_BIAS_NV: GLenum = 0x8717;
pub static MAGNITUDE_BIAS_NV: GLenum = 0x8718;
pub static VIBRANCE_BIAS_NV: GLenum = 0x8719;
pub static TEXTURE_BORDER_VALUES_NV: GLenum = 0x871A;
pub static TEXTURE_HI_SIZE_NV: GLenum = 0x871B;
pub static TEXTURE_LO_SIZE_NV: GLenum = 0x871C;
pub static TEXTURE_DS_SIZE_NV: GLenum = 0x871D;
pub static TEXTURE_DT_SIZE_NV: GLenum = 0x871E;
pub static TEXTURE_MAG_SIZE_NV: GLenum = 0x871F;
pub static MODELVIEW2_ARB: GLenum = 0x8722;
pub static MODELVIEW3_ARB: GLenum = 0x8723;
pub static MODELVIEW4_ARB: GLenum = 0x8724;
pub static MODELVIEW5_ARB: GLenum = 0x8725;
pub static MODELVIEW6_ARB: GLenum = 0x8726;
pub static MODELVIEW7_ARB: GLenum = 0x8727;
pub static MODELVIEW8_ARB: GLenum = 0x8728;
pub static MODELVIEW9_ARB: GLenum = 0x8729;
pub static MODELVIEW10_ARB: GLenum = 0x872A;
pub static MODELVIEW11_ARB: GLenum = 0x872B;
pub static MODELVIEW12_ARB: GLenum = 0x872C;
pub static MODELVIEW13_ARB: GLenum = 0x872D;
pub static MODELVIEW14_ARB: GLenum = 0x872E;
pub static MODELVIEW15_ARB: GLenum = 0x872F;
pub static MODELVIEW16_ARB: GLenum = 0x8730;
pub static MODELVIEW17_ARB: GLenum = 0x8731;
pub static MODELVIEW18_ARB: GLenum = 0x8732;
pub static MODELVIEW19_ARB: GLenum = 0x8733;
pub static MODELVIEW20_ARB: GLenum = 0x8734;
pub static MODELVIEW21_ARB: GLenum = 0x8735;
pub static MODELVIEW22_ARB: GLenum = 0x8736;
pub static MODELVIEW23_ARB: GLenum = 0x8737;
pub static MODELVIEW24_ARB: GLenum = 0x8738;
pub static MODELVIEW25_ARB: GLenum = 0x8739;
pub static MODELVIEW26_ARB: GLenum = 0x873A;
pub static MODELVIEW27_ARB: GLenum = 0x873B;
pub static MODELVIEW28_ARB: GLenum = 0x873C;
pub static MODELVIEW29_ARB: GLenum = 0x873D;
pub static MODELVIEW30_ARB: GLenum = 0x873E;
pub static MODELVIEW31_ARB: GLenum = 0x873F;
pub static DOT3_RGB_EXT: GLenum = 0x8740;
pub static Z400_BINARY_AMD: GLenum = 0x8740;
pub static DOT3_RGBA_EXT: GLenum = 0x8741;
pub static PROGRAM_BINARY_LENGTH_OES: GLenum = 0x8741;
pub static PROGRAM_BINARY_LENGTH: GLenum = 0x8741;
pub static MIRROR_CLAMP_ATI: GLenum = 0x8742;
pub static MIRROR_CLAMP_EXT: GLenum = 0x8742;
pub static MIRROR_CLAMP_TO_EDGE: GLenum = 0x8743;
pub static MIRROR_CLAMP_TO_EDGE_ATI: GLenum = 0x8743;
pub static MIRROR_CLAMP_TO_EDGE_EXT: GLenum = 0x8743;
pub static MODULATE_ADD_ATI: GLenum = 0x8744;
pub static MODULATE_SIGNED_ADD_ATI: GLenum = 0x8745;
pub static MODULATE_SUBTRACT_ATI: GLenum = 0x8746;
pub static SET_AMD: GLenum = 0x874A;
pub static REPLACE_VALUE_AMD: GLenum = 0x874B;
pub static STENCIL_OP_VALUE_AMD: GLenum = 0x874C;
pub static STENCIL_BACK_OP_VALUE_AMD: GLenum = 0x874D;
pub static VERTEX_ATTRIB_ARRAY_LONG: GLenum = 0x874E;
pub static DEPTH_STENCIL_MESA: GLenum = 0x8750;
pub static UNSIGNED_INT_24_8_MESA: GLenum = 0x8751;
pub static UNSIGNED_INT_8_24_REV_MESA: GLenum = 0x8752;
pub static UNSIGNED_SHORT_15_1_MESA: GLenum = 0x8753;
pub static UNSIGNED_SHORT_1_15_REV_MESA: GLenum = 0x8754;
pub static TRACE_MASK_MESA: GLenum = 0x8755;
pub static TRACE_NAME_MESA: GLenum = 0x8756;
pub static YCBCR_MESA: GLenum = 0x8757;
pub static PACK_INVERT_MESA: GLenum = 0x8758;
pub static DEBUG_OBJECT_MESA: GLenum = 0x8759;
pub static TEXTURE_1D_STACK_MESAX: GLenum = 0x8759;
pub static DEBUG_PRINT_MESA: GLenum = 0x875A;
pub static TEXTURE_2D_STACK_MESAX: GLenum = 0x875A;
pub static DEBUG_ASSERT_MESA: GLenum = 0x875B;
pub static PROXY_TEXTURE_1D_STACK_MESAX: GLenum = 0x875B;
pub static PROXY_TEXTURE_2D_STACK_MESAX: GLenum = 0x875C;
pub static TEXTURE_1D_STACK_BINDING_MESAX: GLenum = 0x875D;
pub static TEXTURE_2D_STACK_BINDING_MESAX: GLenum = 0x875E;
pub static STATIC_ATI: GLenum = 0x8760;
pub static DYNAMIC_ATI: GLenum = 0x8761;
pub static PRESERVE_ATI: GLenum = 0x8762;
pub static DISCARD_ATI: GLenum = 0x8763;
pub static BUFFER_SIZE: GLenum = 0x8764;
pub static BUFFER_SIZE_ARB: GLenum = 0x8764;
pub static OBJECT_BUFFER_SIZE_ATI: GLenum = 0x8764;
pub static BUFFER_USAGE: GLenum = 0x8765;
pub static BUFFER_USAGE_ARB: GLenum = 0x8765;
pub static OBJECT_BUFFER_USAGE_ATI: GLenum = 0x8765;
pub static ARRAY_OBJECT_BUFFER_ATI: GLenum = 0x8766;
pub static ARRAY_OBJECT_OFFSET_ATI: GLenum = 0x8767;
pub static ELEMENT_ARRAY_ATI: GLenum = 0x8768;
pub static ELEMENT_ARRAY_TYPE_ATI: GLenum = 0x8769;
pub static ELEMENT_ARRAY_POINTER_ATI: GLenum = 0x876A;
pub static MAX_VERTEX_STREAMS_ATI: GLenum = 0x876B;
pub static VERTEX_STREAM0_ATI: GLenum = 0x876C;
pub static VERTEX_STREAM1_ATI: GLenum = 0x876D;
pub static VERTEX_STREAM2_ATI: GLenum = 0x876E;
pub static VERTEX_STREAM3_ATI: GLenum = 0x876F;
pub static VERTEX_STREAM4_ATI: GLenum = 0x8770;
pub static VERTEX_STREAM5_ATI: GLenum = 0x8771;
pub static VERTEX_STREAM6_ATI: GLenum = 0x8772;
pub static VERTEX_STREAM7_ATI: GLenum = 0x8773;
pub static VERTEX_SOURCE_ATI: GLenum = 0x8774;
pub static BUMP_ROT_MATRIX_ATI: GLenum = 0x8775;
pub static BUMP_ROT_MATRIX_SIZE_ATI: GLenum = 0x8776;
pub static BUMP_NUM_TEX_UNITS_ATI: GLenum = 0x8777;
pub static BUMP_TEX_UNITS_ATI: GLenum = 0x8778;
pub static DUDV_ATI: GLenum = 0x8779;
pub static DU8DV8_ATI: GLenum = 0x877A;
pub static BUMP_ENVMAP_ATI: GLenum = 0x877B;
pub static BUMP_TARGET_ATI: GLenum = 0x877C;
pub static VERTEX_SHADER_EXT: GLenum = 0x8780;
pub static VERTEX_SHADER_BINDING_EXT: GLenum = 0x8781;
pub static OP_INDEX_EXT: GLenum = 0x8782;
pub static OP_NEGATE_EXT: GLenum = 0x8783;
pub static OP_DOT3_EXT: GLenum = 0x8784;
pub static OP_DOT4_EXT: GLenum = 0x8785;
pub static OP_MUL_EXT: GLenum = 0x8786;
pub static OP_ADD_EXT: GLenum = 0x8787;
pub static OP_MADD_EXT: GLenum = 0x8788;
pub static OP_FRAC_EXT: GLenum = 0x8789;
pub static OP_MAX_EXT: GLenum = 0x878A;
pub static OP_MIN_EXT: GLenum = 0x878B;
pub static OP_SET_GE_EXT: GLenum = 0x878C;
pub static OP_SET_LT_EXT: GLenum = 0x878D;
pub static OP_CLAMP_EXT: GLenum = 0x878E;
pub static OP_FLOOR_EXT: GLenum = 0x878F;
pub static OP_ROUND_EXT: GLenum = 0x8790;
pub static OP_EXP_BASE_2_EXT: GLenum = 0x8791;
pub static OP_LOG_BASE_2_EXT: GLenum = 0x8792;
pub static OP_POWER_EXT: GLenum = 0x8793;
pub static OP_RECIP_EXT: GLenum = 0x8794;
pub static OP_RECIP_SQRT_EXT: GLenum = 0x8795;
pub static OP_SUB_EXT: GLenum = 0x8796;
pub static OP_CROSS_PRODUCT_EXT: GLenum = 0x8797;
pub static OP_MULTIPLY_MATRIX_EXT: GLenum = 0x8798;
pub static OP_MOV_EXT: GLenum = 0x8799;
pub static OUTPUT_VERTEX_EXT: GLenum = 0x879A;
pub static OUTPUT_COLOR0_EXT: GLenum = 0x879B;
pub static OUTPUT_COLOR1_EXT: GLenum = 0x879C;
pub static OUTPUT_TEXTURE_COORD0_EXT: GLenum = 0x879D;
pub static OUTPUT_TEXTURE_COORD1_EXT: GLenum = 0x879E;
pub static OUTPUT_TEXTURE_COORD2_EXT: GLenum = 0x879F;
pub static OUTPUT_TEXTURE_COORD3_EXT: GLenum = 0x87A0;
pub static OUTPUT_TEXTURE_COORD4_EXT: GLenum = 0x87A1;
pub static OUTPUT_TEXTURE_COORD5_EXT: GLenum = 0x87A2;
pub static OUTPUT_TEXTURE_COORD6_EXT: GLenum = 0x87A3;
pub static OUTPUT_TEXTURE_COORD7_EXT: GLenum = 0x87A4;
pub static OUTPUT_TEXTURE_COORD8_EXT: GLenum = 0x87A5;
pub static OUTPUT_TEXTURE_COORD9_EXT: GLenum = 0x87A6;
pub static OUTPUT_TEXTURE_COORD10_EXT: GLenum = 0x87A7;
pub static OUTPUT_TEXTURE_COORD11_EXT: GLenum = 0x87A8;
pub static OUTPUT_TEXTURE_COORD12_EXT: GLenum = 0x87A9;
pub static OUTPUT_TEXTURE_COORD13_EXT: GLenum = 0x87AA;
pub static OUTPUT_TEXTURE_COORD14_EXT: GLenum = 0x87AB;
pub static OUTPUT_TEXTURE_COORD15_EXT: GLenum = 0x87AC;
pub static OUTPUT_TEXTURE_COORD16_EXT: GLenum = 0x87AD;
pub static OUTPUT_TEXTURE_COORD17_EXT: GLenum = 0x87AE;
pub static OUTPUT_TEXTURE_COORD18_EXT: GLenum = 0x87AF;
pub static OUTPUT_TEXTURE_COORD19_EXT: GLenum = 0x87B0;
pub static OUTPUT_TEXTURE_COORD20_EXT: GLenum = 0x87B1;
pub static OUTPUT_TEXTURE_COORD21_EXT: GLenum = 0x87B2;
pub static OUTPUT_TEXTURE_COORD22_EXT: GLenum = 0x87B3;
pub static OUTPUT_TEXTURE_COORD23_EXT: GLenum = 0x87B4;
pub static OUTPUT_TEXTURE_COORD24_EXT: GLenum = 0x87B5;
pub static OUTPUT_TEXTURE_COORD25_EXT: GLenum = 0x87B6;
pub static OUTPUT_TEXTURE_COORD26_EXT: GLenum = 0x87B7;
pub static OUTPUT_TEXTURE_COORD27_EXT: GLenum = 0x87B8;
pub static OUTPUT_TEXTURE_COORD28_EXT: GLenum = 0x87B9;
pub static OUTPUT_TEXTURE_COORD29_EXT: GLenum = 0x87BA;
pub static OUTPUT_TEXTURE_COORD30_EXT: GLenum = 0x87BB;
pub static OUTPUT_TEXTURE_COORD31_EXT: GLenum = 0x87BC;
pub static OUTPUT_FOG_EXT: GLenum = 0x87BD;
pub static SCALAR_EXT: GLenum = 0x87BE;
pub static VECTOR_EXT: GLenum = 0x87BF;
pub static MATRIX_EXT: GLenum = 0x87C0;
pub static VARIANT_EXT: GLenum = 0x87C1;
pub static INVARIANT_EXT: GLenum = 0x87C2;
pub static LOCAL_CONSTANT_EXT: GLenum = 0x87C3;
pub static LOCAL_EXT: GLenum = 0x87C4;
pub static MAX_VERTEX_SHADER_INSTRUCTIONS_EXT: GLenum = 0x87C5;
pub static MAX_VERTEX_SHADER_VARIANTS_EXT: GLenum = 0x87C6;
pub static MAX_VERTEX_SHADER_INVARIANTS_EXT: GLenum = 0x87C7;
pub static MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: GLenum = 0x87C8;
pub static MAX_VERTEX_SHADER_LOCALS_EXT: GLenum = 0x87C9;
pub static MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT: GLenum = 0x87CA;
pub static MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT: GLenum = 0x87CB;
pub static MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: GLenum = 0x87CC;
pub static MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT: GLenum = 0x87CD;
pub static MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT: GLenum = 0x87CE;
pub static VERTEX_SHADER_INSTRUCTIONS_EXT: GLenum = 0x87CF;
pub static VERTEX_SHADER_VARIANTS_EXT: GLenum = 0x87D0;
pub static VERTEX_SHADER_INVARIANTS_EXT: GLenum = 0x87D1;
pub static VERTEX_SHADER_LOCAL_CONSTANTS_EXT: GLenum = 0x87D2;
pub static VERTEX_SHADER_LOCALS_EXT: GLenum = 0x87D3;
pub static VERTEX_SHADER_OPTIMIZED_EXT: GLenum = 0x87D4;
pub static X_EXT: GLenum = 0x87D5;
pub static Y_EXT: GLenum = 0x87D6;
pub static Z_EXT: GLenum = 0x87D7;
pub static W_EXT: GLenum = 0x87D8;
pub static NEGATIVE_X_EXT: GLenum = 0x87D9;
pub static NEGATIVE_Y_EXT: GLenum = 0x87DA;
pub static NEGATIVE_Z_EXT: GLenum = 0x87DB;
pub static NEGATIVE_W_EXT: GLenum = 0x87DC;
pub static ZERO_EXT: GLenum = 0x87DD;
pub static ONE_EXT: GLenum = 0x87DE;
pub static NEGATIVE_ONE_EXT: GLenum = 0x87DF;
pub static NORMALIZED_RANGE_EXT: GLenum = 0x87E0;
pub static FULL_RANGE_EXT: GLenum = 0x87E1;
pub static CURRENT_VERTEX_EXT: GLenum = 0x87E2;
pub static MVP_MATRIX_EXT: GLenum = 0x87E3;
pub static VARIANT_VALUE_EXT: GLenum = 0x87E4;
pub static VARIANT_DATATYPE_EXT: GLenum = 0x87E5;
pub static VARIANT_ARRAY_STRIDE_EXT: GLenum = 0x87E6;
pub static VARIANT_ARRAY_TYPE_EXT: GLenum = 0x87E7;
pub static VARIANT_ARRAY_EXT: GLenum = 0x87E8;
pub static VARIANT_ARRAY_POINTER_EXT: GLenum = 0x87E9;
pub static INVARIANT_VALUE_EXT: GLenum = 0x87EA;
pub static INVARIANT_DATATYPE_EXT: GLenum = 0x87EB;
pub static LOCAL_CONSTANT_VALUE_EXT: GLenum = 0x87EC;
pub static LOCAL_CONSTANT_DATATYPE_EXT: GLenum = 0x87ED;
pub static ATC_RGBA_INTERPOLATED_ALPHA_AMD: GLenum = 0x87EE;
pub static PN_TRIANGLES_ATI: GLenum = 0x87F0;
pub static MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI: GLenum = 0x87F1;
pub static PN_TRIANGLES_POINT_MODE_ATI: GLenum = 0x87F2;
pub static PN_TRIANGLES_NORMAL_MODE_ATI: GLenum = 0x87F3;
pub static PN_TRIANGLES_TESSELATION_LEVEL_ATI: GLenum = 0x87F4;
pub static PN_TRIANGLES_POINT_MODE_LINEAR_ATI: GLenum = 0x87F5;
pub static PN_TRIANGLES_POINT_MODE_CUBIC_ATI: GLenum = 0x87F6;
pub static PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI: GLenum = 0x87F7;
pub static PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI: GLenum = 0x87F8;
pub static _3DC_X_AMD: GLenum = 0x87F9;
pub static _3DC_XY_AMD: GLenum = 0x87FA;
pub static VBO_FREE_MEMORY_ATI: GLenum = 0x87FB;
pub static TEXTURE_FREE_MEMORY_ATI: GLenum = 0x87FC;
pub static RENDERBUFFER_FREE_MEMORY_ATI: GLenum = 0x87FD;
pub static NUM_PROGRAM_BINARY_FORMATS: GLenum = 0x87FE;
pub static NUM_PROGRAM_BINARY_FORMATS_OES: GLenum = 0x87FE;
pub static PROGRAM_BINARY_FORMATS: GLenum = 0x87FF;
pub static PROGRAM_BINARY_FORMATS_OES: GLenum = 0x87FF;
pub static STENCIL_BACK_FUNC: GLenum = 0x8800;
pub static STENCIL_BACK_FUNC_ATI: GLenum = 0x8800;
pub static STENCIL_BACK_FAIL: GLenum = 0x8801;
pub static STENCIL_BACK_FAIL_ATI: GLenum = 0x8801;
pub static STENCIL_BACK_PASS_DEPTH_FAIL: GLenum = 0x8802;
pub static STENCIL_BACK_PASS_DEPTH_FAIL_ATI: GLenum = 0x8802;
pub static STENCIL_BACK_PASS_DEPTH_PASS: GLenum = 0x8803;
pub static STENCIL_BACK_PASS_DEPTH_PASS_ATI: GLenum = 0x8803;
pub static FRAGMENT_PROGRAM_ARB: GLenum = 0x8804;
pub static PROGRAM_ALU_INSTRUCTIONS_ARB: GLenum = 0x8805;
pub static PROGRAM_TEX_INSTRUCTIONS_ARB: GLenum = 0x8806;
pub static PROGRAM_TEX_INDIRECTIONS_ARB: GLenum = 0x8807;
pub static PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: GLenum = 0x8808;
pub static PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: GLenum = 0x8809;
pub static PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: GLenum = 0x880A;
pub static MAX_PROGRAM_ALU_INSTRUCTIONS_ARB: GLenum = 0x880B;
pub static MAX_PROGRAM_TEX_INSTRUCTIONS_ARB: GLenum = 0x880C;
pub static MAX_PROGRAM_TEX_INDIRECTIONS_ARB: GLenum = 0x880D;
pub static MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: GLenum = 0x880E;
pub static MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: GLenum = 0x880F;
pub static MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: GLenum = 0x8810;
pub static RGBA32F: GLenum = 0x8814;
pub static RGBA32F_ARB: GLenum = 0x8814;
pub static RGBA_FLOAT32_APPLE: GLenum = 0x8814;
pub static RGBA_FLOAT32_ATI: GLenum = 0x8814;
pub static RGB32F: GLenum = 0x8815;
pub static RGB32F_ARB: GLenum = 0x8815;
pub static RGB_FLOAT32_APPLE: GLenum = 0x8815;
pub static RGB_FLOAT32_ATI: GLenum = 0x8815;
pub static ALPHA32F_ARB: GLenum = 0x8816;
pub static ALPHA_FLOAT32_APPLE: GLenum = 0x8816;
pub static ALPHA_FLOAT32_ATI: GLenum = 0x8816;
pub static INTENSITY32F_ARB: GLenum = 0x8817;
pub static INTENSITY_FLOAT32_APPLE: GLenum = 0x8817;
pub static INTENSITY_FLOAT32_ATI: GLenum = 0x8817;
pub static LUMINANCE32F_ARB: GLenum = 0x8818;
pub static LUMINANCE_FLOAT32_APPLE: GLenum = 0x8818;
pub static LUMINANCE_FLOAT32_ATI: GLenum = 0x8818;
pub static LUMINANCE_ALPHA32F_ARB: GLenum = 0x8819;
pub static LUMINANCE_ALPHA_FLOAT32_APPLE: GLenum = 0x8819;
pub static LUMINANCE_ALPHA_FLOAT32_ATI: GLenum = 0x8819;
pub static RGBA16F: GLenum = 0x881A;
pub static RGBA16F_ARB: GLenum = 0x881A;
pub static RGBA16F_EXT: GLenum = 0x881A;
pub static RGBA_FLOAT16_APPLE: GLenum = 0x881A;
pub static RGBA_FLOAT16_ATI: GLenum = 0x881A;
pub static RGB16F: GLenum = 0x881B;
pub static RGB16F_ARB: GLenum = 0x881B;
pub static RGB16F_EXT: GLenum = 0x881B;
pub static RGB_FLOAT16_APPLE: GLenum = 0x881B;
pub static RGB_FLOAT16_ATI: GLenum = 0x881B;
pub static ALPHA16F_ARB: GLenum = 0x881C;
pub static ALPHA_FLOAT16_APPLE: GLenum = 0x881C;
pub static ALPHA_FLOAT16_ATI: GLenum = 0x881C;
pub static INTENSITY16F_ARB: GLenum = 0x881D;
pub static INTENSITY_FLOAT16_APPLE: GLenum = 0x881D;
pub static INTENSITY_FLOAT16_ATI: GLenum = 0x881D;
pub static LUMINANCE16F_ARB: GLenum = 0x881E;
pub static LUMINANCE_FLOAT16_APPLE: GLenum = 0x881E;
pub static LUMINANCE_FLOAT16_ATI: GLenum = 0x881E;
pub static LUMINANCE_ALPHA16F_ARB: GLenum = 0x881F;
pub static LUMINANCE_ALPHA_FLOAT16_APPLE: GLenum = 0x881F;
pub static LUMINANCE_ALPHA_FLOAT16_ATI: GLenum = 0x881F;
pub static RGBA_FLOAT_MODE_ARB: GLenum = 0x8820;
pub static RGBA_FLOAT_MODE_ATI: GLenum = 0x8820;
pub static WRITEONLY_RENDERING_QCOM: GLenum = 0x8823;
pub static MAX_DRAW_BUFFERS: GLenum = 0x8824;
pub static MAX_DRAW_BUFFERS_ARB: GLenum = 0x8824;
pub static MAX_DRAW_BUFFERS_ATI: GLenum = 0x8824;
pub static MAX_DRAW_BUFFERS_EXT: GLenum = 0x8824;
pub static MAX_DRAW_BUFFERS_NV: GLenum = 0x8824;
pub static DRAW_BUFFER0: GLenum = 0x8825;
pub static DRAW_BUFFER0_ARB: GLenum = 0x8825;
pub static DRAW_BUFFER0_ATI: GLenum = 0x8825;
pub static DRAW_BUFFER0_EXT: GLenum = 0x8825;
pub static DRAW_BUFFER0_NV: GLenum = 0x8825;
pub static DRAW_BUFFER1: GLenum = 0x8826;
pub static DRAW_BUFFER1_ARB: GLenum = 0x8826;
pub static DRAW_BUFFER1_ATI: GLenum = 0x8826;
pub static DRAW_BUFFER1_EXT: GLenum = 0x8826;
pub static DRAW_BUFFER1_NV: GLenum = 0x8826;
pub static DRAW_BUFFER2: GLenum = 0x8827;
pub static DRAW_BUFFER2_ARB: GLenum = 0x8827;
pub static DRAW_BUFFER2_ATI: GLenum = 0x8827;
pub static DRAW_BUFFER2_EXT: GLenum = 0x8827;
pub static DRAW_BUFFER2_NV: GLenum = 0x8827;
pub static DRAW_BUFFER3: GLenum = 0x8828;
pub static DRAW_BUFFER3_ARB: GLenum = 0x8828;
pub static DRAW_BUFFER3_ATI: GLenum = 0x8828;
pub static DRAW_BUFFER3_EXT: GLenum = 0x8828;
pub static DRAW_BUFFER3_NV: GLenum = 0x8828;
pub static DRAW_BUFFER4: GLenum = 0x8829;
pub static DRAW_BUFFER4_ARB: GLenum = 0x8829;
pub static DRAW_BUFFER4_ATI: GLenum = 0x8829;
pub static DRAW_BUFFER4_EXT: GLenum = 0x8829;
pub static DRAW_BUFFER4_NV: GLenum = 0x8829;
pub static DRAW_BUFFER5: GLenum = 0x882A;
pub static DRAW_BUFFER5_ARB: GLenum = 0x882A;
pub static DRAW_BUFFER5_ATI: GLenum = 0x882A;
pub static DRAW_BUFFER5_EXT: GLenum = 0x882A;
pub static DRAW_BUFFER5_NV: GLenum = 0x882A;
pub static DRAW_BUFFER6: GLenum = 0x882B;
pub static DRAW_BUFFER6_ARB: GLenum = 0x882B;
pub static DRAW_BUFFER6_ATI: GLenum = 0x882B;
pub static DRAW_BUFFER6_EXT: GLenum = 0x882B;
pub static DRAW_BUFFER6_NV: GLenum = 0x882B;
pub static DRAW_BUFFER7: GLenum = 0x882C;
pub static DRAW_BUFFER7_ARB: GLenum = 0x882C;
pub static DRAW_BUFFER7_ATI: GLenum = 0x882C;
pub static DRAW_BUFFER7_EXT: GLenum = 0x882C;
pub static DRAW_BUFFER7_NV: GLenum = 0x882C;
pub static DRAW_BUFFER8: GLenum = 0x882D;
pub static DRAW_BUFFER8_ARB: GLenum = 0x882D;
pub static DRAW_BUFFER8_ATI: GLenum = 0x882D;
pub static DRAW_BUFFER8_EXT: GLenum = 0x882D;
pub static DRAW_BUFFER8_NV: GLenum = 0x882D;
pub static DRAW_BUFFER9: GLenum = 0x882E;
pub static DRAW_BUFFER9_ARB: GLenum = 0x882E;
pub static DRAW_BUFFER9_ATI: GLenum = 0x882E;
pub static DRAW_BUFFER9_EXT: GLenum = 0x882E;
pub static DRAW_BUFFER9_NV: GLenum = 0x882E;
pub static DRAW_BUFFER10: GLenum = 0x882F;
pub static DRAW_BUFFER10_ARB: GLenum = 0x882F;
pub static DRAW_BUFFER10_ATI: GLenum = 0x882F;
pub static DRAW_BUFFER10_EXT: GLenum = 0x882F;
pub static DRAW_BUFFER10_NV: GLenum = 0x882F;
pub static DRAW_BUFFER11: GLenum = 0x8830;
pub static DRAW_BUFFER11_ARB: GLenum = 0x8830;
pub static DRAW_BUFFER11_ATI: GLenum = 0x8830;
pub static DRAW_BUFFER11_EXT: GLenum = 0x8830;
pub static DRAW_BUFFER11_NV: GLenum = 0x8830;
pub static DRAW_BUFFER12: GLenum = 0x8831;
pub static DRAW_BUFFER12_ARB: GLenum = 0x8831;
pub static DRAW_BUFFER12_ATI: GLenum = 0x8831;
pub static DRAW_BUFFER12_EXT: GLenum = 0x8831;
pub static DRAW_BUFFER12_NV: GLenum = 0x8831;
pub static DRAW_BUFFER13: GLenum = 0x8832;
pub static DRAW_BUFFER13_ARB: GLenum = 0x8832;
pub static DRAW_BUFFER13_ATI: GLenum = 0x8832;
pub static DRAW_BUFFER13_EXT: GLenum = 0x8832;
pub static DRAW_BUFFER13_NV: GLenum = 0x8832;
pub static DRAW_BUFFER14: GLenum = 0x8833;
pub static DRAW_BUFFER14_ARB: GLenum = 0x8833;
pub static DRAW_BUFFER14_ATI: GLenum = 0x8833;
pub static DRAW_BUFFER14_EXT: GLenum = 0x8833;
pub static DRAW_BUFFER14_NV: GLenum = 0x8833;
pub static DRAW_BUFFER15: GLenum = 0x8834;
pub static DRAW_BUFFER15_ARB: GLenum = 0x8834;
pub static DRAW_BUFFER15_ATI: GLenum = 0x8834;
pub static DRAW_BUFFER15_EXT: GLenum = 0x8834;
pub static DRAW_BUFFER15_NV: GLenum = 0x8834;
pub static COLOR_CLEAR_UNCLAMPED_VALUE_ATI: GLenum = 0x8835;
pub static BLEND_EQUATION_ALPHA: GLenum = 0x883D;
pub static BLEND_EQUATION_ALPHA_EXT: GLenum = 0x883D;
pub static BLEND_EQUATION_ALPHA_OES: GLenum = 0x883D;
pub static SUBSAMPLE_DISTANCE_AMD: GLenum = 0x883F;
pub static MATRIX_PALETTE_ARB: GLenum = 0x8840;
pub static MATRIX_PALETTE_OES: GLenum = 0x8840;
pub static MAX_MATRIX_PALETTE_STACK_DEPTH_ARB: GLenum = 0x8841;
pub static MAX_PALETTE_MATRICES_ARB: GLenum = 0x8842;
pub static MAX_PALETTE_MATRICES_OES: GLenum = 0x8842;
pub static CURRENT_PALETTE_MATRIX_ARB: GLenum = 0x8843;
pub static CURRENT_PALETTE_MATRIX_OES: GLenum = 0x8843;
pub static MATRIX_INDEX_ARRAY_ARB: GLenum = 0x8844;
pub static MATRIX_INDEX_ARRAY_OES: GLenum = 0x8844;
pub static CURRENT_MATRIX_INDEX_ARB: GLenum = 0x8845;
pub static MATRIX_INDEX_ARRAY_SIZE_ARB: GLenum = 0x8846;
pub static MATRIX_INDEX_ARRAY_SIZE_OES: GLenum = 0x8846;
pub static MATRIX_INDEX_ARRAY_TYPE_ARB: GLenum = 0x8847;
pub static MATRIX_INDEX_ARRAY_TYPE_OES: GLenum = 0x8847;
pub static MATRIX_INDEX_ARRAY_STRIDE_ARB: GLenum = 0x8848;
pub static MATRIX_INDEX_ARRAY_STRIDE_OES: GLenum = 0x8848;
pub static MATRIX_INDEX_ARRAY_POINTER_ARB: GLenum = 0x8849;
pub static MATRIX_INDEX_ARRAY_POINTER_OES: GLenum = 0x8849;
pub static TEXTURE_DEPTH_SIZE: GLenum = 0x884A;
pub static TEXTURE_DEPTH_SIZE_ARB: GLenum = 0x884A;
pub static DEPTH_TEXTURE_MODE: GLenum = 0x884B;
pub static DEPTH_TEXTURE_MODE_ARB: GLenum = 0x884B;
pub static TEXTURE_COMPARE_MODE: GLenum = 0x884C;
pub static TEXTURE_COMPARE_MODE_ARB: GLenum = 0x884C;
pub static TEXTURE_COMPARE_MODE_EXT: GLenum = 0x884C;
pub static TEXTURE_COMPARE_FUNC: GLenum = 0x884D;
pub static TEXTURE_COMPARE_FUNC_ARB: GLenum = 0x884D;
pub static TEXTURE_COMPARE_FUNC_EXT: GLenum = 0x884D;
pub static COMPARE_R_TO_TEXTURE: GLenum = 0x884E;
pub static COMPARE_R_TO_TEXTURE_ARB: GLenum = 0x884E;
pub static COMPARE_REF_DEPTH_TO_TEXTURE_EXT: GLenum = 0x884E;
pub static COMPARE_REF_TO_TEXTURE: GLenum = 0x884E;
pub static COMPARE_REF_TO_TEXTURE_EXT: GLenum = 0x884E;
pub static TEXTURE_CUBE_MAP_SEAMLESS: GLenum = 0x884F;
pub static OFFSET_PROJECTIVE_TEXTURE_2D_NV: GLenum = 0x8850;
pub static OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV: GLenum = 0x8851;
pub static OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV: GLenum = 0x8852;
pub static OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV: GLenum = 0x8853;
pub static OFFSET_HILO_TEXTURE_2D_NV: GLenum = 0x8854;
pub static OFFSET_HILO_TEXTURE_RECTANGLE_NV: GLenum = 0x8855;
pub static OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV: GLenum = 0x8856;
pub static OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV: GLenum = 0x8857;
pub static DEPENDENT_HILO_TEXTURE_2D_NV: GLenum = 0x8858;
pub static DEPENDENT_RGB_TEXTURE_3D_NV: GLenum = 0x8859;
pub static DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV: GLenum = 0x885A;
pub static DOT_PRODUCT_PASS_THROUGH_NV: GLenum = 0x885B;
pub static DOT_PRODUCT_TEXTURE_1D_NV: GLenum = 0x885C;
pub static DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV: GLenum = 0x885D;
pub static HILO8_NV: GLenum = 0x885E;
pub static SIGNED_HILO8_NV: GLenum = 0x885F;
pub static FORCE_BLUE_TO_ONE_NV: GLenum = 0x8860;
pub static POINT_SPRITE: GLenum = 0x8861;
pub static POINT_SPRITE_ARB: GLenum = 0x8861;
pub static POINT_SPRITE_NV: GLenum = 0x8861;
pub static POINT_SPRITE_OES: GLenum = 0x8861;
pub static COORD_REPLACE: GLenum = 0x8862;
pub static COORD_REPLACE_ARB: GLenum = 0x8862;
pub static COORD_REPLACE_NV: GLenum = 0x8862;
pub static COORD_REPLACE_OES: GLenum = 0x8862;
pub static POINT_SPRITE_R_MODE_NV: GLenum = 0x8863;
pub static PIXEL_COUNTER_BITS_NV: GLenum = 0x8864;
pub static QUERY_COUNTER_BITS: GLenum = 0x8864;
pub static QUERY_COUNTER_BITS_ARB: GLenum = 0x8864;
pub static QUERY_COUNTER_BITS_EXT: GLenum = 0x8864;
pub static CURRENT_OCCLUSION_QUERY_ID_NV: GLenum = 0x8865;
pub static CURRENT_QUERY: GLenum = 0x8865;
pub static CURRENT_QUERY_ARB: GLenum = 0x8865;
pub static CURRENT_QUERY_EXT: GLenum = 0x8865;
pub static PIXEL_COUNT_NV: GLenum = 0x8866;
pub static QUERY_RESULT: GLenum = 0x8866;
pub static QUERY_RESULT_ARB: GLenum = 0x8866;
pub static QUERY_RESULT_EXT: GLenum = 0x8866;
pub static PIXEL_COUNT_AVAILABLE_NV: GLenum = 0x8867;
pub static QUERY_RESULT_AVAILABLE: GLenum = 0x8867;
pub static QUERY_RESULT_AVAILABLE_ARB: GLenum = 0x8867;
pub static QUERY_RESULT_AVAILABLE_EXT: GLenum = 0x8867;
pub static MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV: GLenum = 0x8868;
pub static MAX_VERTEX_ATTRIBS: GLenum = 0x8869;
pub static MAX_VERTEX_ATTRIBS_ARB: GLenum = 0x8869;
pub static VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum = 0x886A;
pub static VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB: GLenum = 0x886A;
pub static MAX_TESS_CONTROL_INPUT_COMPONENTS: GLenum = 0x886C;
pub static MAX_TESS_EVALUATION_INPUT_COMPONENTS: GLenum = 0x886D;
pub static DEPTH_STENCIL_TO_RGBA_NV: GLenum = 0x886E;
pub static DEPTH_STENCIL_TO_BGRA_NV: GLenum = 0x886F;
pub static FRAGMENT_PROGRAM_NV: GLenum = 0x8870;
pub static MAX_TEXTURE_COORDS: GLenum = 0x8871;
pub static MAX_TEXTURE_COORDS_ARB: GLenum = 0x8871;
pub static MAX_TEXTURE_COORDS_NV: GLenum = 0x8871;
pub static MAX_TEXTURE_IMAGE_UNITS: GLenum = 0x8872;
pub static MAX_TEXTURE_IMAGE_UNITS_ARB: GLenum = 0x8872;
pub static MAX_TEXTURE_IMAGE_UNITS_NV: GLenum = 0x8872;
pub static FRAGMENT_PROGRAM_BINDING_NV: GLenum = 0x8873;
pub static PROGRAM_ERROR_STRING_ARB: GLenum = 0x8874;
pub static PROGRAM_ERROR_STRING_NV: GLenum = 0x8874;
pub static PROGRAM_FORMAT_ASCII_ARB: GLenum = 0x8875;
pub static PROGRAM_FORMAT_ARB: GLenum = 0x8876;
pub static WRITE_PIXEL_DATA_RANGE_NV: GLenum = 0x8878;
pub static READ_PIXEL_DATA_RANGE_NV: GLenum = 0x8879;
pub static WRITE_PIXEL_DATA_RANGE_LENGTH_NV: GLenum = 0x887A;
pub static READ_PIXEL_DATA_RANGE_LENGTH_NV: GLenum = 0x887B;
pub static WRITE_PIXEL_DATA_RANGE_POINTER_NV: GLenum = 0x887C;
pub static READ_PIXEL_DATA_RANGE_POINTER_NV: GLenum = 0x887D;
pub static GEOMETRY_SHADER_INVOCATIONS: GLenum = 0x887F;
pub static FLOAT_R_NV: GLenum = 0x8880;
pub static FLOAT_RG_NV: GLenum = 0x8881;
pub static FLOAT_RGB_NV: GLenum = 0x8882;
pub static FLOAT_RGBA_NV: GLenum = 0x8883;
pub static FLOAT_R16_NV: GLenum = 0x8884;
pub static FLOAT_R32_NV: GLenum = 0x8885;
pub static FLOAT_RG16_NV: GLenum = 0x8886;
pub static FLOAT_RG32_NV: GLenum = 0x8887;
pub static FLOAT_RGB16_NV: GLenum = 0x8888;
pub static FLOAT_RGB32_NV: GLenum = 0x8889;
pub static FLOAT_RGBA16_NV: GLenum = 0x888A;
pub static FLOAT_RGBA32_NV: GLenum = 0x888B;
pub static TEXTURE_FLOAT_COMPONENTS_NV: GLenum = 0x888C;
pub static FLOAT_CLEAR_COLOR_VALUE_NV: GLenum = 0x888D;
pub static FLOAT_RGBA_MODE_NV: GLenum = 0x888E;
pub static TEXTURE_UNSIGNED_REMAP_MODE_NV: GLenum = 0x888F;
pub static DEPTH_BOUNDS_TEST_EXT: GLenum = 0x8890;
pub static DEPTH_BOUNDS_EXT: GLenum = 0x8891;
pub static ARRAY_BUFFER: GLenum = 0x8892;
pub static ARRAY_BUFFER_ARB: GLenum = 0x8892;
pub static ELEMENT_ARRAY_BUFFER: GLenum = 0x8893;
pub static ELEMENT_ARRAY_BUFFER_ARB: GLenum = 0x8893;
pub static ARRAY_BUFFER_BINDING: GLenum = 0x8894;
pub static ARRAY_BUFFER_BINDING_ARB: GLenum = 0x8894;
pub static ELEMENT_ARRAY_BUFFER_BINDING: GLenum = 0x8895;
pub static ELEMENT_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x8895;
pub static VERTEX_ARRAY_BUFFER_BINDING: GLenum = 0x8896;
pub static VERTEX_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x8896;
pub static NORMAL_ARRAY_BUFFER_BINDING: GLenum = 0x8897;
pub static NORMAL_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x8897;
pub static COLOR_ARRAY_BUFFER_BINDING: GLenum = 0x8898;
pub static COLOR_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x8898;
pub static INDEX_ARRAY_BUFFER_BINDING: GLenum = 0x8899;
pub static INDEX_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x8899;
pub static TEXTURE_COORD_ARRAY_BUFFER_BINDING: GLenum = 0x889A;
pub static TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x889A;
pub static EDGE_FLAG_ARRAY_BUFFER_BINDING: GLenum = 0x889B;
pub static EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x889B;
pub static SECONDARY_COLOR_ARRAY_BUFFER_BINDING: GLenum = 0x889C;
pub static SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x889C;
pub static FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x889D;
pub static FOG_COORDINATE_ARRAY_BUFFER_BINDING: GLenum = 0x889D;
pub static FOG_COORD_ARRAY_BUFFER_BINDING: GLenum = 0x889D;
pub static WEIGHT_ARRAY_BUFFER_BINDING: GLenum = 0x889E;
pub static WEIGHT_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x889E;
pub static WEIGHT_ARRAY_BUFFER_BINDING_OES: GLenum = 0x889E;
pub static VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum = 0x889F;
pub static VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB: GLenum = 0x889F;
pub static PROGRAM_INSTRUCTIONS_ARB: GLenum = 0x88A0;
pub static MAX_PROGRAM_INSTRUCTIONS_ARB: GLenum = 0x88A1;
pub static PROGRAM_NATIVE_INSTRUCTIONS_ARB: GLenum = 0x88A2;
pub static MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB: GLenum = 0x88A3;
pub static PROGRAM_TEMPORARIES_ARB: GLenum = 0x88A4;
pub static MAX_PROGRAM_TEMPORARIES_ARB: GLenum = 0x88A5;
pub static PROGRAM_NATIVE_TEMPORARIES_ARB: GLenum = 0x88A6;
pub static MAX_PROGRAM_NATIVE_TEMPORARIES_ARB: GLenum = 0x88A7;
pub static PROGRAM_PARAMETERS_ARB: GLenum = 0x88A8;
pub static MAX_PROGRAM_PARAMETERS_ARB: GLenum = 0x88A9;
pub static PROGRAM_NATIVE_PARAMETERS_ARB: GLenum = 0x88AA;
pub static MAX_PROGRAM_NATIVE_PARAMETERS_ARB: GLenum = 0x88AB;
pub static PROGRAM_ATTRIBS_ARB: GLenum = 0x88AC;
pub static MAX_PROGRAM_ATTRIBS_ARB: GLenum = 0x88AD;
pub static PROGRAM_NATIVE_ATTRIBS_ARB: GLenum = 0x88AE;
pub static MAX_PROGRAM_NATIVE_ATTRIBS_ARB: GLenum = 0x88AF;
pub static PROGRAM_ADDRESS_REGISTERS_ARB: GLenum = 0x88B0;
pub static MAX_PROGRAM_ADDRESS_REGISTERS_ARB: GLenum = 0x88B1;
pub static PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: GLenum = 0x88B2;
pub static MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: GLenum = 0x88B3;
pub static MAX_PROGRAM_LOCAL_PARAMETERS_ARB: GLenum = 0x88B4;
pub static MAX_PROGRAM_ENV_PARAMETERS_ARB: GLenum = 0x88B5;
pub static PROGRAM_UNDER_NATIVE_LIMITS_ARB: GLenum = 0x88B6;
pub static TRANSPOSE_CURRENT_MATRIX_ARB: GLenum = 0x88B7;
pub static READ_ONLY: GLenum = 0x88B8;
pub static READ_ONLY_ARB: GLenum = 0x88B8;
pub static WRITE_ONLY: GLenum = 0x88B9;
pub static WRITE_ONLY_ARB: GLenum = 0x88B9;
pub static WRITE_ONLY_OES: GLenum = 0x88B9;
pub static READ_WRITE: GLenum = 0x88BA;
pub static READ_WRITE_ARB: GLenum = 0x88BA;
pub static BUFFER_ACCESS: GLenum = 0x88BB;
pub static BUFFER_ACCESS_ARB: GLenum = 0x88BB;
pub static BUFFER_ACCESS_OES: GLenum = 0x88BB;
pub static BUFFER_MAPPED: GLenum = 0x88BC;
pub static BUFFER_MAPPED_ARB: GLenum = 0x88BC;
pub static BUFFER_MAPPED_OES: GLenum = 0x88BC;
pub static BUFFER_MAP_POINTER: GLenum = 0x88BD;
pub static BUFFER_MAP_POINTER_ARB: GLenum = 0x88BD;
pub static BUFFER_MAP_POINTER_OES: GLenum = 0x88BD;
pub static WRITE_DISCARD_NV: GLenum = 0x88BE;
pub static TIME_ELAPSED: GLenum = 0x88BF;
pub static TIME_ELAPSED_EXT: GLenum = 0x88BF;
pub static MATRIX0_ARB: GLenum = 0x88C0;
pub static MATRIX1_ARB: GLenum = 0x88C1;
pub static MATRIX2_ARB: GLenum = 0x88C2;
pub static MATRIX3_ARB: GLenum = 0x88C3;
pub static MATRIX4_ARB: GLenum = 0x88C4;
pub static MATRIX5_ARB: GLenum = 0x88C5;
pub static MATRIX6_ARB: GLenum = 0x88C6;
pub static MATRIX7_ARB: GLenum = 0x88C7;
pub static MATRIX8_ARB: GLenum = 0x88C8;
pub static MATRIX9_ARB: GLenum = 0x88C9;
pub static MATRIX10_ARB: GLenum = 0x88CA;
pub static MATRIX11_ARB: GLenum = 0x88CB;
pub static MATRIX12_ARB: GLenum = 0x88CC;
pub static MATRIX13_ARB: GLenum = 0x88CD;
pub static MATRIX14_ARB: GLenum = 0x88CE;
pub static MATRIX15_ARB: GLenum = 0x88CF;
pub static MATRIX16_ARB: GLenum = 0x88D0;
pub static MATRIX17_ARB: GLenum = 0x88D1;
pub static MATRIX18_ARB: GLenum = 0x88D2;
pub static MATRIX19_ARB: GLenum = 0x88D3;
pub static MATRIX20_ARB: GLenum = 0x88D4;
pub static MATRIX21_ARB: GLenum = 0x88D5;
pub static MATRIX22_ARB: GLenum = 0x88D6;
pub static MATRIX23_ARB: GLenum = 0x88D7;
pub static MATRIX24_ARB: GLenum = 0x88D8;
pub static MATRIX25_ARB: GLenum = 0x88D9;
pub static MATRIX26_ARB: GLenum = 0x88DA;
pub static MATRIX27_ARB: GLenum = 0x88DB;
pub static MATRIX28_ARB: GLenum = 0x88DC;
pub static MATRIX29_ARB: GLenum = 0x88DD;
pub static MATRIX30_ARB: GLenum = 0x88DE;
pub static MATRIX31_ARB: GLenum = 0x88DF;
pub static STREAM_DRAW: GLenum = 0x88E0;
pub static STREAM_DRAW_ARB: GLenum = 0x88E0;
pub static STREAM_READ: GLenum = 0x88E1;
pub static STREAM_READ_ARB: GLenum = 0x88E1;
pub static STREAM_COPY: GLenum = 0x88E2;
pub static STREAM_COPY_ARB: GLenum = 0x88E2;
pub static STATIC_DRAW: GLenum = 0x88E4;
pub static STATIC_DRAW_ARB: GLenum = 0x88E4;
pub static STATIC_READ: GLenum = 0x88E5;
pub static STATIC_READ_ARB: GLenum = 0x88E5;
pub static STATIC_COPY: GLenum = 0x88E6;
pub static STATIC_COPY_ARB: GLenum = 0x88E6;
pub static DYNAMIC_DRAW: GLenum = 0x88E8;
pub static DYNAMIC_DRAW_ARB: GLenum = 0x88E8;
pub static DYNAMIC_READ: GLenum = 0x88E9;
pub static DYNAMIC_READ_ARB: GLenum = 0x88E9;
pub static DYNAMIC_COPY: GLenum = 0x88EA;
pub static DYNAMIC_COPY_ARB: GLenum = 0x88EA;
pub static PIXEL_PACK_BUFFER: GLenum = 0x88EB;
pub static PIXEL_PACK_BUFFER_ARB: GLenum = 0x88EB;
pub static PIXEL_PACK_BUFFER_EXT: GLenum = 0x88EB;
pub static PIXEL_UNPACK_BUFFER: GLenum = 0x88EC;
pub static PIXEL_UNPACK_BUFFER_ARB: GLenum = 0x88EC;
pub static PIXEL_UNPACK_BUFFER_EXT: GLenum = 0x88EC;
pub static PIXEL_PACK_BUFFER_BINDING: GLenum = 0x88ED;
pub static PIXEL_PACK_BUFFER_BINDING_ARB: GLenum = 0x88ED;
pub static PIXEL_PACK_BUFFER_BINDING_EXT: GLenum = 0x88ED;
pub static ETC1_SRGB8_NV: GLenum = 0x88EE;
pub static PIXEL_UNPACK_BUFFER_BINDING: GLenum = 0x88EF;
pub static PIXEL_UNPACK_BUFFER_BINDING_ARB: GLenum = 0x88EF;
pub static PIXEL_UNPACK_BUFFER_BINDING_EXT: GLenum = 0x88EF;
pub static DEPTH24_STENCIL8: GLenum = 0x88F0;
pub static DEPTH24_STENCIL8_EXT: GLenum = 0x88F0;
pub static DEPTH24_STENCIL8_OES: GLenum = 0x88F0;
pub static TEXTURE_STENCIL_SIZE: GLenum = 0x88F1;
pub static TEXTURE_STENCIL_SIZE_EXT: GLenum = 0x88F1;
pub static STENCIL_TAG_BITS_EXT: GLenum = 0x88F2;
pub static STENCIL_CLEAR_TAG_VALUE_EXT: GLenum = 0x88F3;
pub static MAX_PROGRAM_EXEC_INSTRUCTIONS_NV: GLenum = 0x88F4;
pub static MAX_PROGRAM_CALL_DEPTH_NV: GLenum = 0x88F5;
pub static MAX_PROGRAM_IF_DEPTH_NV: GLenum = 0x88F6;
pub static MAX_PROGRAM_LOOP_DEPTH_NV: GLenum = 0x88F7;
pub static MAX_PROGRAM_LOOP_COUNT_NV: GLenum = 0x88F8;
pub static SRC1_COLOR: GLenum = 0x88F9;
pub static ONE_MINUS_SRC1_COLOR: GLenum = 0x88FA;
pub static ONE_MINUS_SRC1_ALPHA: GLenum = 0x88FB;
pub static MAX_DUAL_SOURCE_DRAW_BUFFERS: GLenum = 0x88FC;
pub static VERTEX_ATTRIB_ARRAY_INTEGER: GLenum = 0x88FD;
pub static VERTEX_ATTRIB_ARRAY_INTEGER_EXT: GLenum = 0x88FD;
pub static VERTEX_ATTRIB_ARRAY_INTEGER_NV: GLenum = 0x88FD;
pub static VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum = 0x88FE;
pub static VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: GLenum = 0x88FE;
pub static VERTEX_ATTRIB_ARRAY_DIVISOR_ARB: GLenum = 0x88FE;
pub static VERTEX_ATTRIB_ARRAY_DIVISOR_NV: GLenum = 0x88FE;
pub static MAX_ARRAY_TEXTURE_LAYERS: GLenum = 0x88FF;
pub static MAX_ARRAY_TEXTURE_LAYERS_EXT: GLenum = 0x88FF;
pub static MIN_PROGRAM_TEXEL_OFFSET: GLenum = 0x8904;
pub static MIN_PROGRAM_TEXEL_OFFSET_EXT: GLenum = 0x8904;
pub static MIN_PROGRAM_TEXEL_OFFSET_NV: GLenum = 0x8904;
pub static MAX_PROGRAM_TEXEL_OFFSET: GLenum = 0x8905;
pub static MAX_PROGRAM_TEXEL_OFFSET_EXT: GLenum = 0x8905;
pub static MAX_PROGRAM_TEXEL_OFFSET_NV: GLenum = 0x8905;
pub static PROGRAM_ATTRIB_COMPONENTS_NV: GLenum = 0x8906;
pub static PROGRAM_RESULT_COMPONENTS_NV: GLenum = 0x8907;
pub static MAX_PROGRAM_ATTRIB_COMPONENTS_NV: GLenum = 0x8908;
pub static MAX_PROGRAM_RESULT_COMPONENTS_NV: GLenum = 0x8909;
pub static STENCIL_TEST_TWO_SIDE_EXT: GLenum = 0x8910;
pub static ACTIVE_STENCIL_FACE_EXT: GLenum = 0x8911;
pub static MIRROR_CLAMP_TO_BORDER_EXT: GLenum = 0x8912;
pub static SAMPLES_PASSED: GLenum = 0x8914;
pub static SAMPLES_PASSED_ARB: GLenum = 0x8914;
pub static GEOMETRY_VERTICES_OUT: GLenum = 0x8916;
pub static GEOMETRY_INPUT_TYPE: GLenum = 0x8917;
pub static GEOMETRY_OUTPUT_TYPE: GLenum = 0x8918;
pub static SAMPLER_BINDING: GLenum = 0x8919;
pub static CLAMP_VERTEX_COLOR: GLenum = 0x891A;
pub static CLAMP_VERTEX_COLOR_ARB: GLenum = 0x891A;
pub static CLAMP_FRAGMENT_COLOR: GLenum = 0x891B;
pub static CLAMP_FRAGMENT_COLOR_ARB: GLenum = 0x891B;
pub static CLAMP_READ_COLOR: GLenum = 0x891C;
pub static CLAMP_READ_COLOR_ARB: GLenum = 0x891C;
pub static FIXED_ONLY: GLenum = 0x891D;
pub static FIXED_ONLY_ARB: GLenum = 0x891D;
pub static TESS_CONTROL_PROGRAM_NV: GLenum = 0x891E;
pub static TESS_EVALUATION_PROGRAM_NV: GLenum = 0x891F;
pub static FRAGMENT_SHADER_ATI: GLenum = 0x8920;
pub static REG_0_ATI: GLenum = 0x8921;
pub static REG_1_ATI: GLenum = 0x8922;
pub static REG_2_ATI: GLenum = 0x8923;
pub static REG_3_ATI: GLenum = 0x8924;
pub static REG_4_ATI: GLenum = 0x8925;
pub static REG_5_ATI: GLenum = 0x8926;
pub static REG_6_ATI: GLenum = 0x8927;
pub static REG_7_ATI: GLenum = 0x8928;
pub static REG_8_ATI: GLenum = 0x8929;
pub static REG_9_ATI: GLenum = 0x892A;
pub static REG_10_ATI: GLenum = 0x892B;
pub static REG_11_ATI: GLenum = 0x892C;
pub static REG_12_ATI: GLenum = 0x892D;
pub static REG_13_ATI: GLenum = 0x892E;
pub static REG_14_ATI: GLenum = 0x892F;
pub static REG_15_ATI: GLenum = 0x8930;
pub static REG_16_ATI: GLenum = 0x8931;
pub static REG_17_ATI: GLenum = 0x8932;
pub static REG_18_ATI: GLenum = 0x8933;
pub static REG_19_ATI: GLenum = 0x8934;
pub static REG_20_ATI: GLenum = 0x8935;
pub static REG_21_ATI: GLenum = 0x8936;
pub static REG_22_ATI: GLenum = 0x8937;
pub static REG_23_ATI: GLenum = 0x8938;
pub static REG_24_ATI: GLenum = 0x8939;
pub static REG_25_ATI: GLenum = 0x893A;
pub static REG_26_ATI: GLenum = 0x893B;
pub static REG_27_ATI: GLenum = 0x893C;
pub static REG_28_ATI: GLenum = 0x893D;
pub static REG_29_ATI: GLenum = 0x893E;
pub static REG_30_ATI: GLenum = 0x893F;
pub static REG_31_ATI: GLenum = 0x8940;
pub static CON_0_ATI: GLenum = 0x8941;
pub static CON_1_ATI: GLenum = 0x8942;
pub static CON_2_ATI: GLenum = 0x8943;
pub static CON_3_ATI: GLenum = 0x8944;
pub static CON_4_ATI: GLenum = 0x8945;
pub static CON_5_ATI: GLenum = 0x8946;
pub static CON_6_ATI: GLenum = 0x8947;
pub static CON_7_ATI: GLenum = 0x8948;
pub static CON_8_ATI: GLenum = 0x8949;
pub static CON_9_ATI: GLenum = 0x894A;
pub static CON_10_ATI: GLenum = 0x894B;
pub static CON_11_ATI: GLenum = 0x894C;
pub static CON_12_ATI: GLenum = 0x894D;
pub static CON_13_ATI: GLenum = 0x894E;
pub static CON_14_ATI: GLenum = 0x894F;
pub static CON_15_ATI: GLenum = 0x8950;
pub static CON_16_ATI: GLenum = 0x8951;
pub static CON_17_ATI: GLenum = 0x8952;
pub static CON_18_ATI: GLenum = 0x8953;
pub static CON_19_ATI: GLenum = 0x8954;
pub static CON_20_ATI: GLenum = 0x8955;
pub static CON_21_ATI: GLenum = 0x8956;
pub static CON_22_ATI: GLenum = 0x8957;
pub static CON_23_ATI: GLenum = 0x8958;
pub static CON_24_ATI: GLenum = 0x8959;
pub static CON_25_ATI: GLenum = 0x895A;
pub static CON_26_ATI: GLenum = 0x895B;
pub static CON_27_ATI: GLenum = 0x895C;
pub static CON_28_ATI: GLenum = 0x895D;
pub static CON_29_ATI: GLenum = 0x895E;
pub static CON_30_ATI: GLenum = 0x895F;
pub static CON_31_ATI: GLenum = 0x8960;
pub static MOV_ATI: GLenum = 0x8961;
pub static ADD_ATI: GLenum = 0x8963;
pub static MUL_ATI: GLenum = 0x8964;
pub static SUB_ATI: GLenum = 0x8965;
pub static DOT3_ATI: GLenum = 0x8966;
pub static DOT4_ATI: GLenum = 0x8967;
pub static MAD_ATI: GLenum = 0x8968;
pub static LERP_ATI: GLenum = 0x8969;
pub static CND_ATI: GLenum = 0x896A;
pub static CND0_ATI: GLenum = 0x896B;
pub static DOT2_ADD_ATI: GLenum = 0x896C;
pub static SECONDARY_INTERPOLATOR_ATI: GLenum = 0x896D;
pub static NUM_FRAGMENT_REGISTERS_ATI: GLenum = 0x896E;
pub static NUM_FRAGMENT_CONSTANTS_ATI: GLenum = 0x896F;
pub static NUM_PASSES_ATI: GLenum = 0x8970;
pub static NUM_INSTRUCTIONS_PER_PASS_ATI: GLenum = 0x8971;
pub static NUM_INSTRUCTIONS_TOTAL_ATI: GLenum = 0x8972;
pub static NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI: GLenum = 0x8973;
pub static NUM_LOOPBACK_COMPONENTS_ATI: GLenum = 0x8974;
pub static COLOR_ALPHA_PAIRING_ATI: GLenum = 0x8975;
pub static SWIZZLE_STR_ATI: GLenum = 0x8976;
pub static SWIZZLE_STQ_ATI: GLenum = 0x8977;
pub static SWIZZLE_STR_DR_ATI: GLenum = 0x8978;
pub static SWIZZLE_STQ_DQ_ATI: GLenum = 0x8979;
pub static SWIZZLE_STRQ_ATI: GLenum = 0x897A;
pub static SWIZZLE_STRQ_DQ_ATI: GLenum = 0x897B;
pub static INTERLACE_OML: GLenum = 0x8980;
pub static INTERLACE_READ_OML: GLenum = 0x8981;
pub static FORMAT_SUBSAMPLE_24_24_OML: GLenum = 0x8982;
pub static FORMAT_SUBSAMPLE_244_244_OML: GLenum = 0x8983;
pub static PACK_RESAMPLE_OML: GLenum = 0x8984;
pub static UNPACK_RESAMPLE_OML: GLenum = 0x8985;
pub static RESAMPLE_REPLICATE_OML: GLenum = 0x8986;
pub static RESAMPLE_ZERO_FILL_OML: GLenum = 0x8987;
pub static RESAMPLE_AVERAGE_OML: GLenum = 0x8988;
pub static RESAMPLE_DECIMATE_OML: GLenum = 0x8989;
pub static POINT_SIZE_ARRAY_TYPE_OES: GLenum = 0x898A;
pub static POINT_SIZE_ARRAY_STRIDE_OES: GLenum = 0x898B;
pub static POINT_SIZE_ARRAY_POINTER_OES: GLenum = 0x898C;
pub static MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES: GLenum = 0x898D;
pub static PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES: GLenum = 0x898E;
pub static TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES: GLenum = 0x898F;
pub static VERTEX_ATTRIB_MAP1_APPLE: GLenum = 0x8A00;
pub static VERTEX_ATTRIB_MAP2_APPLE: GLenum = 0x8A01;
pub static VERTEX_ATTRIB_MAP1_SIZE_APPLE: GLenum = 0x8A02;
pub static VERTEX_ATTRIB_MAP1_COEFF_APPLE: GLenum = 0x8A03;
pub static VERTEX_ATTRIB_MAP1_ORDER_APPLE: GLenum = 0x8A04;
pub static VERTEX_ATTRIB_MAP1_DOMAIN_APPLE: GLenum = 0x8A05;
pub static VERTEX_ATTRIB_MAP2_SIZE_APPLE: GLenum = 0x8A06;
pub static VERTEX_ATTRIB_MAP2_COEFF_APPLE: GLenum = 0x8A07;
pub static VERTEX_ATTRIB_MAP2_ORDER_APPLE: GLenum = 0x8A08;
pub static VERTEX_ATTRIB_MAP2_DOMAIN_APPLE: GLenum = 0x8A09;
pub static DRAW_PIXELS_APPLE: GLenum = 0x8A0A;
pub static FENCE_APPLE: GLenum = 0x8A0B;
pub static ELEMENT_ARRAY_APPLE: GLenum = 0x8A0C;
pub static ELEMENT_ARRAY_TYPE_APPLE: GLenum = 0x8A0D;
pub static ELEMENT_ARRAY_POINTER_APPLE: GLenum = 0x8A0E;
pub static COLOR_FLOAT_APPLE: GLenum = 0x8A0F;
pub static UNIFORM_BUFFER: GLenum = 0x8A11;
pub static BUFFER_SERIALIZED_MODIFY_APPLE: GLenum = 0x8A12;
pub static BUFFER_FLUSHING_UNMAP_APPLE: GLenum = 0x8A13;
pub static AUX_DEPTH_STENCIL_APPLE: GLenum = 0x8A14;
pub static PACK_ROW_BYTES_APPLE: GLenum = 0x8A15;
pub static UNPACK_ROW_BYTES_APPLE: GLenum = 0x8A16;
pub static RELEASED_APPLE: GLenum = 0x8A19;
pub static VOLATILE_APPLE: GLenum = 0x8A1A;
pub static RETAINED_APPLE: GLenum = 0x8A1B;
pub static UNDEFINED_APPLE: GLenum = 0x8A1C;
pub static PURGEABLE_APPLE: GLenum = 0x8A1D;
pub static RGB_422_APPLE: GLenum = 0x8A1F;
pub static UNIFORM_BUFFER_BINDING: GLenum = 0x8A28;
pub static UNIFORM_BUFFER_START: GLenum = 0x8A29;
pub static UNIFORM_BUFFER_SIZE: GLenum = 0x8A2A;
pub static MAX_VERTEX_UNIFORM_BLOCKS: GLenum = 0x8A2B;
pub static MAX_GEOMETRY_UNIFORM_BLOCKS: GLenum = 0x8A2C;
pub static MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum = 0x8A2D;
pub static MAX_COMBINED_UNIFORM_BLOCKS: GLenum = 0x8A2E;
pub static MAX_UNIFORM_BUFFER_BINDINGS: GLenum = 0x8A2F;
pub static MAX_UNIFORM_BLOCK_SIZE: GLenum = 0x8A30;
pub static MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum = 0x8A31;
pub static MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: GLenum = 0x8A32;
pub static MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum = 0x8A33;
pub static UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum = 0x8A34;
pub static ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: GLenum = 0x8A35;
pub static ACTIVE_UNIFORM_BLOCKS: GLenum = 0x8A36;
pub static UNIFORM_TYPE: GLenum = 0x8A37;
pub static UNIFORM_SIZE: GLenum = 0x8A38;
pub static UNIFORM_NAME_LENGTH: GLenum = 0x8A39;
pub static UNIFORM_BLOCK_INDEX: GLenum = 0x8A3A;
pub static UNIFORM_OFFSET: GLenum = 0x8A3B;
pub static UNIFORM_ARRAY_STRIDE: GLenum = 0x8A3C;
pub static UNIFORM_MATRIX_STRIDE: GLenum = 0x8A3D;
pub static UNIFORM_IS_ROW_MAJOR: GLenum = 0x8A3E;
pub static UNIFORM_BLOCK_BINDING: GLenum = 0x8A3F;
pub static UNIFORM_BLOCK_DATA_SIZE: GLenum = 0x8A40;
pub static UNIFORM_BLOCK_NAME_LENGTH: GLenum = 0x8A41;
pub static UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum = 0x8A42;
pub static UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum = 0x8A43;
pub static UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum = 0x8A44;
pub static UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: GLenum = 0x8A45;
pub static UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum = 0x8A46;
pub static TEXTURE_SRGB_DECODE_EXT: GLenum = 0x8A48;
pub static DECODE_EXT: GLenum = 0x8A49;
pub static SKIP_DECODE_EXT: GLenum = 0x8A4A;
pub static PROGRAM_PIPELINE_OBJECT_EXT: GLenum = 0x8A4F;
pub static FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT: GLenum = 0x8A52;
pub static SYNC_OBJECT_APPLE: GLenum = 0x8A53;
pub static FRAGMENT_SHADER: GLenum = 0x8B30;
pub static FRAGMENT_SHADER_ARB: GLenum = 0x8B30;
pub static VERTEX_SHADER: GLenum = 0x8B31;
pub static VERTEX_SHADER_ARB: GLenum = 0x8B31;
pub static PROGRAM_OBJECT_ARB: GLenum = 0x8B40;
pub static PROGRAM_OBJECT_EXT: GLenum = 0x8B40;
pub static SHADER_OBJECT_ARB: GLenum = 0x8B48;
pub static SHADER_OBJECT_EXT: GLenum = 0x8B48;
pub static MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum = 0x8B49;
pub static MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB: GLenum = 0x8B49;
pub static MAX_VERTEX_UNIFORM_COMPONENTS: GLenum = 0x8B4A;
pub static MAX_VERTEX_UNIFORM_COMPONENTS_ARB: GLenum = 0x8B4A;
pub static MAX_VARYING_FLOATS: GLenum = 0x8B4B;
pub static MAX_VARYING_COMPONENTS: GLenum = 0x8B4B;
pub static MAX_VARYING_COMPONENTS_EXT: GLenum = 0x8B4B;
pub static MAX_VARYING_FLOATS_ARB: GLenum = 0x8B4B;
pub static MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum = 0x8B4C;
pub static MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB: GLenum = 0x8B4C;
pub static MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum = 0x8B4D;
pub static MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB: GLenum = 0x8B4D;
pub static OBJECT_TYPE_ARB: GLenum = 0x8B4E;
pub static SHADER_TYPE: GLenum = 0x8B4F;
pub static OBJECT_SUBTYPE_ARB: GLenum = 0x8B4F;
pub static FLOAT_VEC2: GLenum = 0x8B50;
pub static FLOAT_VEC2_ARB: GLenum = 0x8B50;
pub static FLOAT_VEC3: GLenum = 0x8B51;
pub static FLOAT_VEC3_ARB: GLenum = 0x8B51;
pub static FLOAT_VEC4: GLenum = 0x8B52;
pub static FLOAT_VEC4_ARB: GLenum = 0x8B52;
pub static INT_VEC2: GLenum = 0x8B53;
pub static INT_VEC2_ARB: GLenum = 0x8B53;
pub static INT_VEC3: GLenum = 0x8B54;
pub static INT_VEC3_ARB: GLenum = 0x8B54;
pub static INT_VEC4: GLenum = 0x8B55;
pub static INT_VEC4_ARB: GLenum = 0x8B55;
pub static BOOL: GLenum = 0x8B56;
pub static BOOL_ARB: GLenum = 0x8B56;
pub static BOOL_VEC2: GLenum = 0x8B57;
pub static BOOL_VEC2_ARB: GLenum = 0x8B57;
pub static BOOL_VEC3: GLenum = 0x8B58;
pub static BOOL_VEC3_ARB: GLenum = 0x8B58;
pub static BOOL_VEC4: GLenum = 0x8B59;
pub static BOOL_VEC4_ARB: GLenum = 0x8B59;
pub static FLOAT_MAT2: GLenum = 0x8B5A;
pub static FLOAT_MAT2_ARB: GLenum = 0x8B5A;
pub static FLOAT_MAT3: GLenum = 0x8B5B;
pub static FLOAT_MAT3_ARB: GLenum = 0x8B5B;
pub static FLOAT_MAT4: GLenum = 0x8B5C;
pub static FLOAT_MAT4_ARB: GLenum = 0x8B5C;
pub static SAMPLER_1D: GLenum = 0x8B5D;
pub static SAMPLER_1D_ARB: GLenum = 0x8B5D;
pub static SAMPLER_2D: GLenum = 0x8B5E;
pub static SAMPLER_2D_ARB: GLenum = 0x8B5E;
pub static SAMPLER_3D: GLenum = 0x8B5F;
pub static SAMPLER_3D_ARB: GLenum = 0x8B5F;
pub static SAMPLER_3D_OES: GLenum = 0x8B5F;
pub static SAMPLER_CUBE: GLenum = 0x8B60;
pub static SAMPLER_CUBE_ARB: GLenum = 0x8B60;
pub static SAMPLER_1D_SHADOW: GLenum = 0x8B61;
pub static SAMPLER_1D_SHADOW_ARB: GLenum = 0x8B61;
pub static SAMPLER_2D_SHADOW: GLenum = 0x8B62;
pub static SAMPLER_2D_SHADOW_ARB: GLenum = 0x8B62;
pub static SAMPLER_2D_SHADOW_EXT: GLenum = 0x8B62;
pub static SAMPLER_2D_RECT: GLenum = 0x8B63;
pub static SAMPLER_2D_RECT_ARB: GLenum = 0x8B63;
pub static SAMPLER_2D_RECT_SHADOW: GLenum = 0x8B64;
pub static SAMPLER_2D_RECT_SHADOW_ARB: GLenum = 0x8B64;
pub static FLOAT_MAT2x3: GLenum = 0x8B65;
pub static FLOAT_MAT2x4: GLenum = 0x8B66;
pub static FLOAT_MAT3x2: GLenum = 0x8B67;
pub static FLOAT_MAT3x4: GLenum = 0x8B68;
pub static FLOAT_MAT4x2: GLenum = 0x8B69;
pub static FLOAT_MAT4x3: GLenum = 0x8B6A;
pub static DELETE_STATUS: GLenum = 0x8B80;
pub static OBJECT_DELETE_STATUS_ARB: GLenum = 0x8B80;
pub static COMPILE_STATUS: GLenum = 0x8B81;
pub static OBJECT_COMPILE_STATUS_ARB: GLenum = 0x8B81;
pub static LINK_STATUS: GLenum = 0x8B82;
pub static OBJECT_LINK_STATUS_ARB: GLenum = 0x8B82;
pub static VALIDATE_STATUS: GLenum = 0x8B83;
pub static OBJECT_VALIDATE_STATUS_ARB: GLenum = 0x8B83;
pub static INFO_LOG_LENGTH: GLenum = 0x8B84;
pub static OBJECT_INFO_LOG_LENGTH_ARB: GLenum = 0x8B84;
pub static ATTACHED_SHADERS: GLenum = 0x8B85;
pub static OBJECT_ATTACHED_OBJECTS_ARB: GLenum = 0x8B85;
pub static ACTIVE_UNIFORMS: GLenum = 0x8B86;
pub static OBJECT_ACTIVE_UNIFORMS_ARB: GLenum = 0x8B86;
pub static ACTIVE_UNIFORM_MAX_LENGTH: GLenum = 0x8B87;
pub static OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB: GLenum = 0x8B87;
pub static SHADER_SOURCE_LENGTH: GLenum = 0x8B88;
pub static OBJECT_SHADER_SOURCE_LENGTH_ARB: GLenum = 0x8B88;
pub static ACTIVE_ATTRIBUTES: GLenum = 0x8B89;
pub static OBJECT_ACTIVE_ATTRIBUTES_ARB: GLenum = 0x8B89;
pub static ACTIVE_ATTRIBUTE_MAX_LENGTH: GLenum = 0x8B8A;
pub static OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB: GLenum = 0x8B8A;
pub static FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum = 0x8B8B;
pub static FRAGMENT_SHADER_DERIVATIVE_HINT_ARB: GLenum = 0x8B8B;
pub static FRAGMENT_SHADER_DERIVATIVE_HINT_OES: GLenum = 0x8B8B;
pub static SHADING_LANGUAGE_VERSION: GLenum = 0x8B8C;
pub static SHADING_LANGUAGE_VERSION_ARB: GLenum = 0x8B8C;
pub static CURRENT_PROGRAM: GLenum = 0x8B8D;
pub static PALETTE4_RGB8_OES: GLenum = 0x8B90;
pub static PALETTE4_RGBA8_OES: GLenum = 0x8B91;
pub static PALETTE4_R5_G6_B5_OES: GLenum = 0x8B92;
pub static PALETTE4_RGBA4_OES: GLenum = 0x8B93;
pub static PALETTE4_RGB5_A1_OES: GLenum = 0x8B94;
pub static PALETTE8_RGB8_OES: GLenum = 0x8B95;
pub static PALETTE8_RGBA8_OES: GLenum = 0x8B96;
pub static PALETTE8_R5_G6_B5_OES: GLenum = 0x8B97;
pub static PALETTE8_RGBA4_OES: GLenum = 0x8B98;
pub static PALETTE8_RGB5_A1_OES: GLenum = 0x8B99;
pub static IMPLEMENTATION_COLOR_READ_TYPE: GLenum = 0x8B9A;
pub static IMPLEMENTATION_COLOR_READ_TYPE_OES: GLenum = 0x8B9A;
pub static IMPLEMENTATION_COLOR_READ_FORMAT: GLenum = 0x8B9B;
pub static IMPLEMENTATION_COLOR_READ_FORMAT_OES: GLenum = 0x8B9B;
pub static POINT_SIZE_ARRAY_OES: GLenum = 0x8B9C;
pub static TEXTURE_CROP_RECT_OES: GLenum = 0x8B9D;
pub static MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES: GLenum = 0x8B9E;
pub static POINT_SIZE_ARRAY_BUFFER_BINDING_OES: GLenum = 0x8B9F;
pub static FRAGMENT_PROGRAM_POSITION_MESA: GLenum = 0x8BB0;
pub static FRAGMENT_PROGRAM_CALLBACK_MESA: GLenum = 0x8BB1;
pub static FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA: GLenum = 0x8BB2;
pub static FRAGMENT_PROGRAM_CALLBACK_DATA_MESA: GLenum = 0x8BB3;
pub static VERTEX_PROGRAM_CALLBACK_MESA: GLenum = 0x8BB4;
pub static VERTEX_PROGRAM_POSITION_MESA: GLenum = 0x8BB4;
pub static VERTEX_PROGRAM_CALLBACK_FUNC_MESA: GLenum = 0x8BB6;
pub static VERTEX_PROGRAM_CALLBACK_DATA_MESA: GLenum = 0x8BB7;
pub static COUNTER_TYPE_AMD: GLenum = 0x8BC0;
pub static COUNTER_RANGE_AMD: GLenum = 0x8BC1;
pub static UNSIGNED_INT64_AMD: GLenum = 0x8BC2;
pub static PERCENTAGE_AMD: GLenum = 0x8BC3;
pub static PERFMON_RESULT_AVAILABLE_AMD: GLenum = 0x8BC4;
pub static PERFMON_RESULT_SIZE_AMD: GLenum = 0x8BC5;
pub static PERFMON_RESULT_AMD: GLenum = 0x8BC6;
pub static TEXTURE_WIDTH_QCOM: GLenum = 0x8BD2;
pub static TEXTURE_HEIGHT_QCOM: GLenum = 0x8BD3;
pub static TEXTURE_DEPTH_QCOM: GLenum = 0x8BD4;
pub static TEXTURE_INTERNAL_FORMAT_QCOM: GLenum = 0x8BD5;
pub static TEXTURE_FORMAT_QCOM: GLenum = 0x8BD6;
pub static TEXTURE_TYPE_QCOM: GLenum = 0x8BD7;
pub static TEXTURE_IMAGE_VALID_QCOM: GLenum = 0x8BD8;
pub static TEXTURE_NUM_LEVELS_QCOM: GLenum = 0x8BD9;
pub static TEXTURE_TARGET_QCOM: GLenum = 0x8BDA;
pub static TEXTURE_OBJECT_VALID_QCOM: GLenum = 0x8BDB;
pub static STATE_RESTORE: GLenum = 0x8BDC;
pub static COMPRESSED_RGB_PVRTC_4BPPV1_IMG: GLenum = 0x8C00;
pub static COMPRESSED_RGB_PVRTC_2BPPV1_IMG: GLenum = 0x8C01;
pub static COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: GLenum = 0x8C02;
pub static COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: GLenum = 0x8C03;
pub static MODULATE_COLOR_IMG: GLenum = 0x8C04;
pub static RECIP_ADD_SIGNED_ALPHA_IMG: GLenum = 0x8C05;
pub static TEXTURE_ALPHA_MODULATE_IMG: GLenum = 0x8C06;
pub static FACTOR_ALPHA_MODULATE_IMG: GLenum = 0x8C07;
pub static FRAGMENT_ALPHA_MODULATE_IMG: GLenum = 0x8C08;
pub static ADD_BLEND_IMG: GLenum = 0x8C09;
pub static SGX_BINARY_IMG: GLenum = 0x8C0A;
pub static TEXTURE_RED_TYPE: GLenum = 0x8C10;
pub static TEXTURE_RED_TYPE_ARB: GLenum = 0x8C10;
pub static TEXTURE_GREEN_TYPE: GLenum = 0x8C11;
pub static TEXTURE_GREEN_TYPE_ARB: GLenum = 0x8C11;
pub static TEXTURE_BLUE_TYPE: GLenum = 0x8C12;
pub static TEXTURE_BLUE_TYPE_ARB: GLenum = 0x8C12;
pub static TEXTURE_ALPHA_TYPE: GLenum = 0x8C13;
pub static TEXTURE_ALPHA_TYPE_ARB: GLenum = 0x8C13;
pub static TEXTURE_LUMINANCE_TYPE: GLenum = 0x8C14;
pub static TEXTURE_LUMINANCE_TYPE_ARB: GLenum = 0x8C14;
pub static TEXTURE_INTENSITY_TYPE: GLenum = 0x8C15;
pub static TEXTURE_INTENSITY_TYPE_ARB: GLenum = 0x8C15;
pub static TEXTURE_DEPTH_TYPE: GLenum = 0x8C16;
pub static TEXTURE_DEPTH_TYPE_ARB: GLenum = 0x8C16;
pub static UNSIGNED_NORMALIZED: GLenum = 0x8C17;
pub static UNSIGNED_NORMALIZED_ARB: GLenum = 0x8C17;
pub static UNSIGNED_NORMALIZED_EXT: GLenum = 0x8C17;
pub static TEXTURE_1D_ARRAY: GLenum = 0x8C18;
pub static TEXTURE_1D_ARRAY_EXT: GLenum = 0x8C18;
pub static PROXY_TEXTURE_1D_ARRAY: GLenum = 0x8C19;
pub static PROXY_TEXTURE_1D_ARRAY_EXT: GLenum = 0x8C19;
pub static TEXTURE_2D_ARRAY: GLenum = 0x8C1A;
pub static TEXTURE_2D_ARRAY_EXT: GLenum = 0x8C1A;
pub static PROXY_TEXTURE_2D_ARRAY: GLenum = 0x8C1B;
pub static PROXY_TEXTURE_2D_ARRAY_EXT: GLenum = 0x8C1B;
pub static TEXTURE_BINDING_1D_ARRAY: GLenum = 0x8C1C;
pub static TEXTURE_BINDING_1D_ARRAY_EXT: GLenum = 0x8C1C;
pub static TEXTURE_BINDING_2D_ARRAY: GLenum = 0x8C1D;
pub static TEXTURE_BINDING_2D_ARRAY_EXT: GLenum = 0x8C1D;
pub static GEOMETRY_PROGRAM_NV: GLenum = 0x8C26;
pub static MAX_PROGRAM_OUTPUT_VERTICES_NV: GLenum = 0x8C27;
pub static MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV: GLenum = 0x8C28;
pub static MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: GLenum = 0x8C29;
pub static MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB: GLenum = 0x8C29;
pub static MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT: GLenum = 0x8C29;
pub static TEXTURE_BUFFER: GLenum = 0x8C2A;
pub static TEXTURE_BUFFER_ARB: GLenum = 0x8C2A;
pub static TEXTURE_BUFFER_EXT: GLenum = 0x8C2A;
pub static MAX_TEXTURE_BUFFER_SIZE: GLenum = 0x8C2B;
pub static MAX_TEXTURE_BUFFER_SIZE_ARB: GLenum = 0x8C2B;
pub static MAX_TEXTURE_BUFFER_SIZE_EXT: GLenum = 0x8C2B;
pub static TEXTURE_BINDING_BUFFER: GLenum = 0x8C2C;
pub static TEXTURE_BINDING_BUFFER_ARB: GLenum = 0x8C2C;
pub static TEXTURE_BINDING_BUFFER_EXT: GLenum = 0x8C2C;
pub static TEXTURE_BUFFER_DATA_STORE_BINDING: GLenum = 0x8C2D;
pub static TEXTURE_BUFFER_DATA_STORE_BINDING_ARB: GLenum = 0x8C2D;
pub static TEXTURE_BUFFER_DATA_STORE_BINDING_EXT: GLenum = 0x8C2D;
pub static TEXTURE_BUFFER_FORMAT_ARB: GLenum = 0x8C2E;
pub static TEXTURE_BUFFER_FORMAT_EXT: GLenum = 0x8C2E;
pub static ANY_SAMPLES_PASSED: GLenum = 0x8C2F;
pub static ANY_SAMPLES_PASSED_EXT: GLenum = 0x8C2F;
pub static SAMPLE_SHADING: GLenum = 0x8C36;
pub static SAMPLE_SHADING_ARB: GLenum = 0x8C36;
pub static MIN_SAMPLE_SHADING_VALUE: GLenum = 0x8C37;
pub static MIN_SAMPLE_SHADING_VALUE_ARB: GLenum = 0x8C37;
pub static R11F_G11F_B10F: GLenum = 0x8C3A;
pub static R11F_G11F_B10F_EXT: GLenum = 0x8C3A;
pub static UNSIGNED_INT_10F_11F_11F_REV: GLenum = 0x8C3B;
pub static UNSIGNED_INT_10F_11F_11F_REV_EXT: GLenum = 0x8C3B;
pub static RGBA_SIGNED_COMPONENTS_EXT: GLenum = 0x8C3C;
pub static RGB9_E5: GLenum = 0x8C3D;
pub static RGB9_E5_EXT: GLenum = 0x8C3D;
pub static UNSIGNED_INT_5_9_9_9_REV: GLenum = 0x8C3E;
pub static UNSIGNED_INT_5_9_9_9_REV_EXT: GLenum = 0x8C3E;
pub static TEXTURE_SHARED_SIZE: GLenum = 0x8C3F;
pub static TEXTURE_SHARED_SIZE_EXT: GLenum = 0x8C3F;
pub static SRGB: GLenum = 0x8C40;
pub static SRGB_EXT: GLenum = 0x8C40;
pub static SRGB8: GLenum = 0x8C41;
pub static SRGB8_EXT: GLenum = 0x8C41;
pub static SRGB8_NV: GLenum = 0x8C41;
pub static SRGB_ALPHA: GLenum = 0x8C42;
pub static SRGB_ALPHA_EXT: GLenum = 0x8C42;
pub static SRGB8_ALPHA8: GLenum = 0x8C43;
pub static SRGB8_ALPHA8_EXT: GLenum = 0x8C43;
pub static SLUMINANCE_ALPHA: GLenum = 0x8C44;
pub static SLUMINANCE_ALPHA_EXT: GLenum = 0x8C44;
pub static SLUMINANCE_ALPHA_NV: GLenum = 0x8C44;
pub static SLUMINANCE8_ALPHA8: GLenum = 0x8C45;
pub static SLUMINANCE8_ALPHA8_EXT: GLenum = 0x8C45;
pub static SLUMINANCE8_ALPHA8_NV: GLenum = 0x8C45;
pub static SLUMINANCE: GLenum = 0x8C46;
pub static SLUMINANCE_EXT: GLenum = 0x8C46;
pub static SLUMINANCE_NV: GLenum = 0x8C46;
pub static SLUMINANCE8: GLenum = 0x8C47;
pub static SLUMINANCE8_EXT: GLenum = 0x8C47;
pub static SLUMINANCE8_NV: GLenum = 0x8C47;
pub static COMPRESSED_SRGB: GLenum = 0x8C48;
pub static COMPRESSED_SRGB_EXT: GLenum = 0x8C48;
pub static COMPRESSED_SRGB_ALPHA: GLenum = 0x8C49;
pub static COMPRESSED_SRGB_ALPHA_EXT: GLenum = 0x8C49;
pub static COMPRESSED_SLUMINANCE: GLenum = 0x8C4A;
pub static COMPRESSED_SLUMINANCE_EXT: GLenum = 0x8C4A;
pub static COMPRESSED_SLUMINANCE_ALPHA: GLenum = 0x8C4B;
pub static COMPRESSED_SLUMINANCE_ALPHA_EXT: GLenum = 0x8C4B;
pub static COMPRESSED_SRGB_S3TC_DXT1_EXT: GLenum = 0x8C4C;
pub static COMPRESSED_SRGB_S3TC_DXT1_NV: GLenum = 0x8C4C;
pub static COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: GLenum = 0x8C4D;
pub static COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV: GLenum = 0x8C4D;
pub static COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: GLenum = 0x8C4E;
pub static COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV: GLenum = 0x8C4E;
pub static COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: GLenum = 0x8C4F;
pub static COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV: GLenum = 0x8C4F;
pub static COMPRESSED_LUMINANCE_LATC1_EXT: GLenum = 0x8C70;
pub static COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT: GLenum = 0x8C71;
pub static COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT: GLenum = 0x8C72;
pub static COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT: GLenum = 0x8C73;
pub static TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV: GLenum = 0x8C74;
pub static TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV: GLenum = 0x8C75;
pub static TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: GLenum = 0x8C76;
pub static TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT: GLenum = 0x8C76;
pub static BACK_PRIMARY_COLOR_NV: GLenum = 0x8C77;
pub static BACK_SECONDARY_COLOR_NV: GLenum = 0x8C78;
pub static TEXTURE_COORD_NV: GLenum = 0x8C79;
pub static CLIP_DISTANCE_NV: GLenum = 0x8C7A;
pub static VERTEX_ID_NV: GLenum = 0x8C7B;
pub static PRIMITIVE_ID_NV: GLenum = 0x8C7C;
pub static GENERIC_ATTRIB_NV: GLenum = 0x8C7D;
pub static TRANSFORM_FEEDBACK_ATTRIBS_NV: GLenum = 0x8C7E;
pub static TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum = 0x8C7F;
pub static TRANSFORM_FEEDBACK_BUFFER_MODE_EXT: GLenum = 0x8C7F;
pub static TRANSFORM_FEEDBACK_BUFFER_MODE_NV: GLenum = 0x8C7F;
pub static MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum = 0x8C80;
pub static MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT: GLenum = 0x8C80;
pub static MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV: GLenum = 0x8C80;
pub static ACTIVE_VARYINGS_NV: GLenum = 0x8C81;
pub static ACTIVE_VARYING_MAX_LENGTH_NV: GLenum = 0x8C82;
pub static TRANSFORM_FEEDBACK_VARYINGS: GLenum = 0x8C83;
pub static TRANSFORM_FEEDBACK_VARYINGS_EXT: GLenum = 0x8C83;
pub static TRANSFORM_FEEDBACK_VARYINGS_NV: GLenum = 0x8C83;
pub static TRANSFORM_FEEDBACK_BUFFER_START: GLenum = 0x8C84;
pub static TRANSFORM_FEEDBACK_BUFFER_START_EXT: GLenum = 0x8C84;
pub static TRANSFORM_FEEDBACK_BUFFER_START_NV: GLenum = 0x8C84;
pub static TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum = 0x8C85;
pub static TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT: GLenum = 0x8C85;
pub static TRANSFORM_FEEDBACK_BUFFER_SIZE_NV: GLenum = 0x8C85;
pub static TRANSFORM_FEEDBACK_RECORD_NV: GLenum = 0x8C86;
pub static PRIMITIVES_GENERATED: GLenum = 0x8C87;
pub static PRIMITIVES_GENERATED_EXT: GLenum = 0x8C87;
pub static PRIMITIVES_GENERATED_NV: GLenum = 0x8C87;
pub static TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum = 0x8C88;
pub static TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT: GLenum = 0x8C88;
pub static TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV: GLenum = 0x8C88;
pub static RASTERIZER_DISCARD: GLenum = 0x8C89;
pub static RASTERIZER_DISCARD_EXT: GLenum = 0x8C89;
pub static RASTERIZER_DISCARD_NV: GLenum = 0x8C89;
pub static MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum = 0x8C8A;
pub static MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT: GLenum = 0x8C8A;
pub static MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV: GLenum = 0x8C8A;
pub static MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum = 0x8C8B;
pub static MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT: GLenum = 0x8C8B;
pub static MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV: GLenum = 0x8C8B;
pub static INTERLEAVED_ATTRIBS: GLenum = 0x8C8C;
pub static INTERLEAVED_ATTRIBS_EXT: GLenum = 0x8C8C;
pub static INTERLEAVED_ATTRIBS_NV: GLenum = 0x8C8C;
pub static SEPARATE_ATTRIBS: GLenum = 0x8C8D;
pub static SEPARATE_ATTRIBS_EXT: GLenum = 0x8C8D;
pub static SEPARATE_ATTRIBS_NV: GLenum = 0x8C8D;
pub static TRANSFORM_FEEDBACK_BUFFER: GLenum = 0x8C8E;
pub static TRANSFORM_FEEDBACK_BUFFER_EXT: GLenum = 0x8C8E;
pub static TRANSFORM_FEEDBACK_BUFFER_NV: GLenum = 0x8C8E;
pub static TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum = 0x8C8F;
pub static TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT: GLenum = 0x8C8F;
pub static TRANSFORM_FEEDBACK_BUFFER_BINDING_NV: GLenum = 0x8C8F;
pub static ATC_RGB_AMD: GLenum = 0x8C92;
pub static ATC_RGBA_EXPLICIT_ALPHA_AMD: GLenum = 0x8C93;
pub static POINT_SPRITE_COORD_ORIGIN: GLenum = 0x8CA0;
pub static LOWER_LEFT: GLenum = 0x8CA1;
pub static UPPER_LEFT: GLenum = 0x8CA2;
pub static STENCIL_BACK_REF: GLenum = 0x8CA3;
pub static STENCIL_BACK_VALUE_MASK: GLenum = 0x8CA4;
pub static STENCIL_BACK_WRITEMASK: GLenum = 0x8CA5;
pub static DRAW_FRAMEBUFFER_BINDING: GLenum = 0x8CA6;
pub static DRAW_FRAMEBUFFER_BINDING_EXT: GLenum = 0x8CA6;
pub static DRAW_FRAMEBUFFER_BINDING_NV: GLenum = 0x8CA6;
pub static FRAMEBUFFER_BINDING: GLenum = 0x8CA6;
pub static FRAMEBUFFER_BINDING_ANGLE: GLenum = 0x8CA6;
pub static FRAMEBUFFER_BINDING_EXT: GLenum = 0x8CA6;
pub static FRAMEBUFFER_BINDING_OES: GLenum = 0x8CA6;
pub static RENDERBUFFER_BINDING: GLenum = 0x8CA7;
pub static RENDERBUFFER_BINDING_ANGLE: GLenum = 0x8CA7;
pub static RENDERBUFFER_BINDING_EXT: GLenum = 0x8CA7;
pub static RENDERBUFFER_BINDING_OES: GLenum = 0x8CA7;
pub static READ_FRAMEBUFFER: GLenum = 0x8CA8;
pub static READ_FRAMEBUFFER_ANGLE: GLenum = 0x8CA8;
pub static READ_FRAMEBUFFER_EXT: GLenum = 0x8CA8;
pub static READ_FRAMEBUFFER_NV: GLenum = 0x8CA8;
pub static DRAW_FRAMEBUFFER: GLenum = 0x8CA9;
pub static DRAW_FRAMEBUFFER_ANGLE: GLenum = 0x8CA9;
pub static DRAW_FRAMEBUFFER_EXT: GLenum = 0x8CA9;
pub static DRAW_FRAMEBUFFER_NV: GLenum = 0x8CA9;
pub static READ_FRAMEBUFFER_BINDING: GLenum = 0x8CAA;
pub static READ_FRAMEBUFFER_BINDING_EXT: GLenum = 0x8CAA;
pub static READ_FRAMEBUFFER_BINDING_NV: GLenum = 0x8CAA;
pub static RENDERBUFFER_COVERAGE_SAMPLES_NV: GLenum = 0x8CAB;
pub static RENDERBUFFER_SAMPLES: GLenum = 0x8CAB;
pub static RENDERBUFFER_SAMPLES_ANGLE: GLenum = 0x8CAB;
pub static RENDERBUFFER_SAMPLES_EXT: GLenum = 0x8CAB;
pub static RENDERBUFFER_SAMPLES_NV: GLenum = 0x8CAB;
pub static DEPTH_COMPONENT32F: GLenum = 0x8CAC;
pub static DEPTH32F_STENCIL8: GLenum = 0x8CAD;
pub static FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum = 0x8CD0;
pub static FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT: GLenum = 0x8CD0;
pub static FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES: GLenum = 0x8CD0;
pub static FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum = 0x8CD1;
pub static FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT: GLenum = 0x8CD1;
pub static FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES: GLenum = 0x8CD1;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum = 0x8CD2;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT: GLenum = 0x8CD2;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES: GLenum = 0x8CD2;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum = 0x8CD3;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT: GLenum = 0x8CD3;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES: GLenum = 0x8CD3;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT: GLenum = 0x8CD4;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES: GLenum = 0x8CD4;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum = 0x8CD4;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT: GLenum = 0x8CD4;
pub static FRAMEBUFFER_COMPLETE: GLenum = 0x8CD5;
pub static FRAMEBUFFER_COMPLETE_EXT: GLenum = 0x8CD5;
pub static FRAMEBUFFER_COMPLETE_OES: GLenum = 0x8CD5;
pub static FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum = 0x8CD6;
pub static FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT: GLenum = 0x8CD6;
pub static FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES: GLenum = 0x8CD6;
pub static FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum = 0x8CD7;
pub static FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT: GLenum = 0x8CD7;
pub static FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES: GLenum = 0x8CD7;
pub static FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum = 0x8CD9;
pub static FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT: GLenum = 0x8CD9;
pub static FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES: GLenum = 0x8CD9;
pub static FRAMEBUFFER_INCOMPLETE_FORMATS_EXT: GLenum = 0x8CDA;
pub static FRAMEBUFFER_INCOMPLETE_FORMATS_OES: GLenum = 0x8CDA;
pub static FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: GLenum = 0x8CDB;
pub static FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT: GLenum = 0x8CDB;
pub static FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES: GLenum = 0x8CDB;
pub static FRAMEBUFFER_INCOMPLETE_READ_BUFFER: GLenum = 0x8CDC;
pub static FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT: GLenum = 0x8CDC;
pub static FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES: GLenum = 0x8CDC;
pub static FRAMEBUFFER_UNSUPPORTED: GLenum = 0x8CDD;
pub static FRAMEBUFFER_UNSUPPORTED_EXT: GLenum = 0x8CDD;
pub static FRAMEBUFFER_UNSUPPORTED_OES: GLenum = 0x8CDD;
pub static MAX_COLOR_ATTACHMENTS: GLenum = 0x8CDF;
pub static MAX_COLOR_ATTACHMENTS_EXT: GLenum = 0x8CDF;
pub static MAX_COLOR_ATTACHMENTS_NV: GLenum = 0x8CDF;
pub static COLOR_ATTACHMENT0: GLenum = 0x8CE0;
pub static COLOR_ATTACHMENT0_EXT: GLenum = 0x8CE0;
pub static COLOR_ATTACHMENT0_NV: GLenum = 0x8CE0;
pub static COLOR_ATTACHMENT0_OES: GLenum = 0x8CE0;
pub static COLOR_ATTACHMENT1: GLenum = 0x8CE1;
pub static COLOR_ATTACHMENT1_EXT: GLenum = 0x8CE1;
pub static COLOR_ATTACHMENT1_NV: GLenum = 0x8CE1;
pub static COLOR_ATTACHMENT2: GLenum = 0x8CE2;
pub static COLOR_ATTACHMENT2_EXT: GLenum = 0x8CE2;
pub static COLOR_ATTACHMENT2_NV: GLenum = 0x8CE2;
pub static COLOR_ATTACHMENT3: GLenum = 0x8CE3;
pub static COLOR_ATTACHMENT3_EXT: GLenum = 0x8CE3;
pub static COLOR_ATTACHMENT3_NV: GLenum = 0x8CE3;
pub static COLOR_ATTACHMENT4: GLenum = 0x8CE4;
pub static COLOR_ATTACHMENT4_EXT: GLenum = 0x8CE4;
pub static COLOR_ATTACHMENT4_NV: GLenum = 0x8CE4;
pub static COLOR_ATTACHMENT5: GLenum = 0x8CE5;
pub static COLOR_ATTACHMENT5_EXT: GLenum = 0x8CE5;
pub static COLOR_ATTACHMENT5_NV: GLenum = 0x8CE5;
pub static COLOR_ATTACHMENT6: GLenum = 0x8CE6;
pub static COLOR_ATTACHMENT6_EXT: GLenum = 0x8CE6;
pub static COLOR_ATTACHMENT6_NV: GLenum = 0x8CE6;
pub static COLOR_ATTACHMENT7: GLenum = 0x8CE7;
pub static COLOR_ATTACHMENT7_EXT: GLenum = 0x8CE7;
pub static COLOR_ATTACHMENT7_NV: GLenum = 0x8CE7;
pub static COLOR_ATTACHMENT8: GLenum = 0x8CE8;
pub static COLOR_ATTACHMENT8_EXT: GLenum = 0x8CE8;
pub static COLOR_ATTACHMENT8_NV: GLenum = 0x8CE8;
pub static COLOR_ATTACHMENT9: GLenum = 0x8CE9;
pub static COLOR_ATTACHMENT9_EXT: GLenum = 0x8CE9;
pub static COLOR_ATTACHMENT9_NV: GLenum = 0x8CE9;
pub static COLOR_ATTACHMENT10: GLenum = 0x8CEA;
pub static COLOR_ATTACHMENT10_EXT: GLenum = 0x8CEA;
pub static COLOR_ATTACHMENT10_NV: GLenum = 0x8CEA;
pub static COLOR_ATTACHMENT11: GLenum = 0x8CEB;
pub static COLOR_ATTACHMENT11_EXT: GLenum = 0x8CEB;
pub static COLOR_ATTACHMENT11_NV: GLenum = 0x8CEB;
pub static COLOR_ATTACHMENT12: GLenum = 0x8CEC;
pub static COLOR_ATTACHMENT12_EXT: GLenum = 0x8CEC;
pub static COLOR_ATTACHMENT12_NV: GLenum = 0x8CEC;
pub static COLOR_ATTACHMENT13: GLenum = 0x8CED;
pub static COLOR_ATTACHMENT13_EXT: GLenum = 0x8CED;
pub static COLOR_ATTACHMENT13_NV: GLenum = 0x8CED;
pub static COLOR_ATTACHMENT14: GLenum = 0x8CEE;
pub static COLOR_ATTACHMENT14_EXT: GLenum = 0x8CEE;
pub static COLOR_ATTACHMENT14_NV: GLenum = 0x8CEE;
pub static COLOR_ATTACHMENT15: GLenum = 0x8CEF;
pub static COLOR_ATTACHMENT15_EXT: GLenum = 0x8CEF;
pub static COLOR_ATTACHMENT15_NV: GLenum = 0x8CEF;
pub static DEPTH_ATTACHMENT: GLenum = 0x8D00;
pub static DEPTH_ATTACHMENT_EXT: GLenum = 0x8D00;
pub static DEPTH_ATTACHMENT_OES: GLenum = 0x8D00;
pub static STENCIL_ATTACHMENT: GLenum = 0x8D20;
pub static STENCIL_ATTACHMENT_EXT: GLenum = 0x8D20;
pub static STENCIL_ATTACHMENT_OES: GLenum = 0x8D20;
pub static FRAMEBUFFER: GLenum = 0x8D40;
pub static FRAMEBUFFER_EXT: GLenum = 0x8D40;
pub static FRAMEBUFFER_OES: GLenum = 0x8D40;
pub static RENDERBUFFER: GLenum = 0x8D41;
pub static RENDERBUFFER_EXT: GLenum = 0x8D41;
pub static RENDERBUFFER_OES: GLenum = 0x8D41;
pub static RENDERBUFFER_WIDTH: GLenum = 0x8D42;
pub static RENDERBUFFER_WIDTH_EXT: GLenum = 0x8D42;
pub static RENDERBUFFER_WIDTH_OES: GLenum = 0x8D42;
pub static RENDERBUFFER_HEIGHT: GLenum = 0x8D43;
pub static RENDERBUFFER_HEIGHT_EXT: GLenum = 0x8D43;
pub static RENDERBUFFER_HEIGHT_OES: GLenum = 0x8D43;
pub static RENDERBUFFER_INTERNAL_FORMAT: GLenum = 0x8D44;
pub static RENDERBUFFER_INTERNAL_FORMAT_EXT: GLenum = 0x8D44;
pub static RENDERBUFFER_INTERNAL_FORMAT_OES: GLenum = 0x8D44;
pub static STENCIL_INDEX1: GLenum = 0x8D46;
pub static STENCIL_INDEX1_EXT: GLenum = 0x8D46;
pub static STENCIL_INDEX1_OES: GLenum = 0x8D46;
pub static STENCIL_INDEX4: GLenum = 0x8D47;
pub static STENCIL_INDEX4_EXT: GLenum = 0x8D47;
pub static STENCIL_INDEX4_OES: GLenum = 0x8D47;
pub static STENCIL_INDEX8: GLenum = 0x8D48;
pub static STENCIL_INDEX8_EXT: GLenum = 0x8D48;
pub static STENCIL_INDEX8_OES: GLenum = 0x8D48;
pub static STENCIL_INDEX16: GLenum = 0x8D49;
pub static STENCIL_INDEX16_EXT: GLenum = 0x8D49;
pub static RENDERBUFFER_RED_SIZE: GLenum = 0x8D50;
pub static RENDERBUFFER_RED_SIZE_EXT: GLenum = 0x8D50;
pub static RENDERBUFFER_RED_SIZE_OES: GLenum = 0x8D50;
pub static RENDERBUFFER_GREEN_SIZE: GLenum = 0x8D51;
pub static RENDERBUFFER_GREEN_SIZE_EXT: GLenum = 0x8D51;
pub static RENDERBUFFER_GREEN_SIZE_OES: GLenum = 0x8D51;
pub static RENDERBUFFER_BLUE_SIZE: GLenum = 0x8D52;
pub static RENDERBUFFER_BLUE_SIZE_EXT: GLenum = 0x8D52;
pub static RENDERBUFFER_BLUE_SIZE_OES: GLenum = 0x8D52;
pub static RENDERBUFFER_ALPHA_SIZE: GLenum = 0x8D53;
pub static RENDERBUFFER_ALPHA_SIZE_EXT: GLenum = 0x8D53;
pub static RENDERBUFFER_ALPHA_SIZE_OES: GLenum = 0x8D53;
pub static RENDERBUFFER_DEPTH_SIZE: GLenum = 0x8D54;
pub static RENDERBUFFER_DEPTH_SIZE_EXT: GLenum = 0x8D54;
pub static RENDERBUFFER_DEPTH_SIZE_OES: GLenum = 0x8D54;
pub static RENDERBUFFER_STENCIL_SIZE: GLenum = 0x8D55;
pub static RENDERBUFFER_STENCIL_SIZE_EXT: GLenum = 0x8D55;
pub static RENDERBUFFER_STENCIL_SIZE_OES: GLenum = 0x8D55;
pub static FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum = 0x8D56;
pub static FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE: GLenum = 0x8D56;
pub static FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT: GLenum = 0x8D56;
pub static FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV: GLenum = 0x8D56;
pub static MAX_SAMPLES: GLenum = 0x8D57;
pub static MAX_SAMPLES_ANGLE: GLenum = 0x8D57;
pub static MAX_SAMPLES_EXT: GLenum = 0x8D57;
pub static MAX_SAMPLES_NV: GLenum = 0x8D57;
pub static TEXTURE_GEN_STR_OES: GLenum = 0x8D60;
pub static HALF_FLOAT_OES: GLenum = 0x8D61;
pub static RGB565_OES: GLenum = 0x8D62;
pub static RGB565: GLenum = 0x8D62;
pub static ETC1_RGB8_OES: GLenum = 0x8D64;
pub static TEXTURE_EXTERNAL_OES: GLenum = 0x8D65;
pub static SAMPLER_EXTERNAL_OES: GLenum = 0x8D66;
pub static TEXTURE_BINDING_EXTERNAL_OES: GLenum = 0x8D67;
pub static REQUIRED_TEXTURE_IMAGE_UNITS_OES: GLenum = 0x8D68;
pub static PRIMITIVE_RESTART_FIXED_INDEX: GLenum = 0x8D69;
pub static ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum = 0x8D6A;
pub static ANY_SAMPLES_PASSED_CONSERVATIVE_EXT: GLenum = 0x8D6A;
pub static MAX_ELEMENT_INDEX: GLenum = 0x8D6B;
pub static FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT: GLenum = 0x8D6C;
pub static RGBA32UI: GLenum = 0x8D70;
pub static RGBA32UI_EXT: GLenum = 0x8D70;
pub static RGB32UI: GLenum = 0x8D71;
pub static RGB32UI_EXT: GLenum = 0x8D71;
pub static ALPHA32UI_EXT: GLenum = 0x8D72;
pub static INTENSITY32UI_EXT: GLenum = 0x8D73;
pub static LUMINANCE32UI_EXT: GLenum = 0x8D74;
pub static LUMINANCE_ALPHA32UI_EXT: GLenum = 0x8D75;
pub static RGBA16UI: GLenum = 0x8D76;
pub static RGBA16UI_EXT: GLenum = 0x8D76;
pub static RGB16UI: GLenum = 0x8D77;
pub static RGB16UI_EXT: GLenum = 0x8D77;
pub static ALPHA16UI_EXT: GLenum = 0x8D78;
pub static INTENSITY16UI_EXT: GLenum = 0x8D79;
pub static LUMINANCE16UI_EXT: GLenum = 0x8D7A;
pub static LUMINANCE_ALPHA16UI_EXT: GLenum = 0x8D7B;
pub static RGBA8UI: GLenum = 0x8D7C;
pub static RGBA8UI_EXT: GLenum = 0x8D7C;
pub static RGB8UI: GLenum = 0x8D7D;
pub static RGB8UI_EXT: GLenum = 0x8D7D;
pub static ALPHA8UI_EXT: GLenum = 0x8D7E;
pub static INTENSITY8UI_EXT: GLenum = 0x8D7F;
pub static LUMINANCE8UI_EXT: GLenum = 0x8D80;
pub static LUMINANCE_ALPHA8UI_EXT: GLenum = 0x8D81;
pub static RGBA32I: GLenum = 0x8D82;
pub static RGBA32I_EXT: GLenum = 0x8D82;
pub static RGB32I: GLenum = 0x8D83;
pub static RGB32I_EXT: GLenum = 0x8D83;
pub static ALPHA32I_EXT: GLenum = 0x8D84;
pub static INTENSITY32I_EXT: GLenum = 0x8D85;
pub static LUMINANCE32I_EXT: GLenum = 0x8D86;
pub static LUMINANCE_ALPHA32I_EXT: GLenum = 0x8D87;
pub static RGBA16I: GLenum = 0x8D88;
pub static RGBA16I_EXT: GLenum = 0x8D88;
pub static RGB16I: GLenum = 0x8D89;
pub static RGB16I_EXT: GLenum = 0x8D89;
pub static ALPHA16I_EXT: GLenum = 0x8D8A;
pub static INTENSITY16I_EXT: GLenum = 0x8D8B;
pub static LUMINANCE16I_EXT: GLenum = 0x8D8C;
pub static LUMINANCE_ALPHA16I_EXT: GLenum = 0x8D8D;
pub static RGBA8I: GLenum = 0x8D8E;
pub static RGBA8I_EXT: GLenum = 0x8D8E;
pub static RGB8I: GLenum = 0x8D8F;
pub static RGB8I_EXT: GLenum = 0x8D8F;
pub static ALPHA8I_EXT: GLenum = 0x8D90;
pub static INTENSITY8I_EXT: GLenum = 0x8D91;
pub static LUMINANCE8I_EXT: GLenum = 0x8D92;
pub static LUMINANCE_ALPHA8I_EXT: GLenum = 0x8D93;
pub static RED_INTEGER: GLenum = 0x8D94;
pub static RED_INTEGER_EXT: GLenum = 0x8D94;
pub static GREEN_INTEGER: GLenum = 0x8D95;
pub static GREEN_INTEGER_EXT: GLenum = 0x8D95;
pub static BLUE_INTEGER: GLenum = 0x8D96;
pub static BLUE_INTEGER_EXT: GLenum = 0x8D96;
pub static ALPHA_INTEGER: GLenum = 0x8D97;
pub static ALPHA_INTEGER_EXT: GLenum = 0x8D97;
pub static RGB_INTEGER: GLenum = 0x8D98;
pub static RGB_INTEGER_EXT: GLenum = 0x8D98;
pub static RGBA_INTEGER: GLenum = 0x8D99;
pub static RGBA_INTEGER_EXT: GLenum = 0x8D99;
pub static BGR_INTEGER: GLenum = 0x8D9A;
pub static BGR_INTEGER_EXT: GLenum = 0x8D9A;
pub static BGRA_INTEGER: GLenum = 0x8D9B;
pub static BGRA_INTEGER_EXT: GLenum = 0x8D9B;
pub static LUMINANCE_INTEGER_EXT: GLenum = 0x8D9C;
pub static LUMINANCE_ALPHA_INTEGER_EXT: GLenum = 0x8D9D;
pub static RGBA_INTEGER_MODE_EXT: GLenum = 0x8D9E;
pub static INT_2_10_10_10_REV: GLenum = 0x8D9F;
pub static MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV: GLenum = 0x8DA0;
pub static MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV: GLenum = 0x8DA1;
pub static VERTEX_PROGRAM_PARAMETER_BUFFER_NV: GLenum = 0x8DA2;
pub static GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV: GLenum = 0x8DA3;
pub static FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV: GLenum = 0x8DA4;
pub static MAX_PROGRAM_GENERIC_ATTRIBS_NV: GLenum = 0x8DA5;
pub static MAX_PROGRAM_GENERIC_RESULTS_NV: GLenum = 0x8DA6;
pub static FRAMEBUFFER_ATTACHMENT_LAYERED: GLenum = 0x8DA7;
pub static FRAMEBUFFER_ATTACHMENT_LAYERED_ARB: GLenum = 0x8DA7;
pub static FRAMEBUFFER_ATTACHMENT_LAYERED_EXT: GLenum = 0x8DA7;
pub static FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: GLenum = 0x8DA8;
pub static FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB: GLenum = 0x8DA8;
pub static FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT: GLenum = 0x8DA8;
pub static FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB: GLenum = 0x8DA9;
pub static FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT: GLenum = 0x8DA9;
pub static LAYER_NV: GLenum = 0x8DAA;
pub static DEPTH_COMPONENT32F_NV: GLenum = 0x8DAB;
pub static DEPTH32F_STENCIL8_NV: GLenum = 0x8DAC;
pub static FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum = 0x8DAD;
pub static FLOAT_32_UNSIGNED_INT_24_8_REV_NV: GLenum = 0x8DAD;
pub static SHADER_INCLUDE_ARB: GLenum = 0x8DAE;
pub static DEPTH_BUFFER_FLOAT_MODE_NV: GLenum = 0x8DAF;
pub static FRAMEBUFFER_SRGB: GLenum = 0x8DB9;
pub static FRAMEBUFFER_SRGB_EXT: GLenum = 0x8DB9;
pub static FRAMEBUFFER_SRGB_CAPABLE_EXT: GLenum = 0x8DBA;
pub static COMPRESSED_RED_RGTC1: GLenum = 0x8DBB;
pub static COMPRESSED_RED_RGTC1_EXT: GLenum = 0x8DBB;
pub static COMPRESSED_SIGNED_RED_RGTC1: GLenum = 0x8DBC;
pub static COMPRESSED_SIGNED_RED_RGTC1_EXT: GLenum = 0x8DBC;
pub static COMPRESSED_RED_GREEN_RGTC2_EXT: GLenum = 0x8DBD;
pub static COMPRESSED_RG_RGTC2: GLenum = 0x8DBD;
pub static COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: GLenum = 0x8DBE;
pub static COMPRESSED_SIGNED_RG_RGTC2: GLenum = 0x8DBE;
pub static SAMPLER_1D_ARRAY: GLenum = 0x8DC0;
pub static SAMPLER_1D_ARRAY_EXT: GLenum = 0x8DC0;
pub static SAMPLER_2D_ARRAY: GLenum = 0x8DC1;
pub static SAMPLER_2D_ARRAY_EXT: GLenum = 0x8DC1;
pub static SAMPLER_BUFFER: GLenum = 0x8DC2;
pub static SAMPLER_BUFFER_EXT: GLenum = 0x8DC2;
pub static SAMPLER_1D_ARRAY_SHADOW: GLenum = 0x8DC3;
pub static SAMPLER_1D_ARRAY_SHADOW_EXT: GLenum = 0x8DC3;
pub static SAMPLER_2D_ARRAY_SHADOW: GLenum = 0x8DC4;
pub static SAMPLER_2D_ARRAY_SHADOW_EXT: GLenum = 0x8DC4;
pub static SAMPLER_2D_ARRAY_SHADOW_NV: GLenum = 0x8DC4;
pub static SAMPLER_CUBE_SHADOW: GLenum = 0x8DC5;
pub static SAMPLER_CUBE_SHADOW_EXT: GLenum = 0x8DC5;
pub static SAMPLER_CUBE_SHADOW_NV: GLenum = 0x8DC5;
pub static UNSIGNED_INT_VEC2: GLenum = 0x8DC6;
pub static UNSIGNED_INT_VEC2_EXT: GLenum = 0x8DC6;
pub static UNSIGNED_INT_VEC3: GLenum = 0x8DC7;
pub static UNSIGNED_INT_VEC3_EXT: GLenum = 0x8DC7;
pub static UNSIGNED_INT_VEC4: GLenum = 0x8DC8;
pub static UNSIGNED_INT_VEC4_EXT: GLenum = 0x8DC8;
pub static INT_SAMPLER_1D: GLenum = 0x8DC9;
pub static INT_SAMPLER_1D_EXT: GLenum = 0x8DC9;
pub static INT_SAMPLER_2D: GLenum = 0x8DCA;
pub static INT_SAMPLER_2D_EXT: GLenum = 0x8DCA;
pub static INT_SAMPLER_3D: GLenum = 0x8DCB;
pub static INT_SAMPLER_3D_EXT: GLenum = 0x8DCB;
pub static INT_SAMPLER_CUBE: GLenum = 0x8DCC;
pub static INT_SAMPLER_CUBE_EXT: GLenum = 0x8DCC;
pub static INT_SAMPLER_2D_RECT: GLenum = 0x8DCD;
pub static INT_SAMPLER_2D_RECT_EXT: GLenum = 0x8DCD;
pub static INT_SAMPLER_1D_ARRAY: GLenum = 0x8DCE;
pub static INT_SAMPLER_1D_ARRAY_EXT: GLenum = 0x8DCE;
pub static INT_SAMPLER_2D_ARRAY: GLenum = 0x8DCF;
pub static INT_SAMPLER_2D_ARRAY_EXT: GLenum = 0x8DCF;
pub static INT_SAMPLER_BUFFER: GLenum = 0x8DD0;
pub static INT_SAMPLER_BUFFER_EXT: GLenum = 0x8DD0;
pub static UNSIGNED_INT_SAMPLER_1D: GLenum = 0x8DD1;
pub static UNSIGNED_INT_SAMPLER_1D_EXT: GLenum = 0x8DD1;
pub static UNSIGNED_INT_SAMPLER_2D: GLenum = 0x8DD2;
pub static UNSIGNED_INT_SAMPLER_2D_EXT: GLenum = 0x8DD2;
pub static UNSIGNED_INT_SAMPLER_3D: GLenum = 0x8DD3;
pub static UNSIGNED_INT_SAMPLER_3D_EXT: GLenum = 0x8DD3;
pub static UNSIGNED_INT_SAMPLER_CUBE: GLenum = 0x8DD4;
pub static UNSIGNED_INT_SAMPLER_CUBE_EXT: GLenum = 0x8DD4;
pub static UNSIGNED_INT_SAMPLER_2D_RECT: GLenum = 0x8DD5;
pub static UNSIGNED_INT_SAMPLER_2D_RECT_EXT: GLenum = 0x8DD5;
pub static UNSIGNED_INT_SAMPLER_1D_ARRAY: GLenum = 0x8DD6;
pub static UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT: GLenum = 0x8DD6;
pub static UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum = 0x8DD7;
pub static UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT: GLenum = 0x8DD7;
pub static UNSIGNED_INT_SAMPLER_BUFFER: GLenum = 0x8DD8;
pub static UNSIGNED_INT_SAMPLER_BUFFER_EXT: GLenum = 0x8DD8;
pub static GEOMETRY_SHADER: GLenum = 0x8DD9;
pub static GEOMETRY_SHADER_ARB: GLenum = 0x8DD9;
pub static GEOMETRY_SHADER_EXT: GLenum = 0x8DD9;
pub static GEOMETRY_VERTICES_OUT_ARB: GLenum = 0x8DDA;
pub static GEOMETRY_VERTICES_OUT_EXT: GLenum = 0x8DDA;
pub static GEOMETRY_INPUT_TYPE_ARB: GLenum = 0x8DDB;
pub static GEOMETRY_INPUT_TYPE_EXT: GLenum = 0x8DDB;
pub static GEOMETRY_OUTPUT_TYPE_ARB: GLenum = 0x8DDC;
pub static GEOMETRY_OUTPUT_TYPE_EXT: GLenum = 0x8DDC;
pub static MAX_GEOMETRY_VARYING_COMPONENTS_ARB: GLenum = 0x8DDD;
pub static MAX_GEOMETRY_VARYING_COMPONENTS_EXT: GLenum = 0x8DDD;
pub static MAX_VERTEX_VARYING_COMPONENTS_ARB: GLenum = 0x8DDE;
pub static MAX_VERTEX_VARYING_COMPONENTS_EXT: GLenum = 0x8DDE;
pub static MAX_GEOMETRY_UNIFORM_COMPONENTS: GLenum = 0x8DDF;
pub static MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB: GLenum = 0x8DDF;
pub static MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT: GLenum = 0x8DDF;
pub static MAX_GEOMETRY_OUTPUT_VERTICES: GLenum = 0x8DE0;
pub static MAX_GEOMETRY_OUTPUT_VERTICES_ARB: GLenum = 0x8DE0;
pub static MAX_GEOMETRY_OUTPUT_VERTICES_EXT: GLenum = 0x8DE0;
pub static MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: GLenum = 0x8DE1;
pub static MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB: GLenum = 0x8DE1;
pub static MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT: GLenum = 0x8DE1;
pub static MAX_VERTEX_BINDABLE_UNIFORMS_EXT: GLenum = 0x8DE2;
pub static MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT: GLenum = 0x8DE3;
pub static MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT: GLenum = 0x8DE4;
pub static ACTIVE_SUBROUTINES: GLenum = 0x8DE5;
pub static ACTIVE_SUBROUTINE_UNIFORMS: GLenum = 0x8DE6;
pub static MAX_SUBROUTINES: GLenum = 0x8DE7;
pub static MAX_SUBROUTINE_UNIFORM_LOCATIONS: GLenum = 0x8DE8;
pub static NAMED_STRING_LENGTH_ARB: GLenum = 0x8DE9;
pub static NAMED_STRING_TYPE_ARB: GLenum = 0x8DEA;
pub static MAX_BINDABLE_UNIFORM_SIZE_EXT: GLenum = 0x8DED;
pub static UNIFORM_BUFFER_EXT: GLenum = 0x8DEE;
pub static UNIFORM_BUFFER_BINDING_EXT: GLenum = 0x8DEF;
pub static LOW_FLOAT: GLenum = 0x8DF0;
pub static MEDIUM_FLOAT: GLenum = 0x8DF1;
pub static HIGH_FLOAT: GLenum = 0x8DF2;
pub static LOW_INT: GLenum = 0x8DF3;
pub static MEDIUM_INT: GLenum = 0x8DF4;
pub static HIGH_INT: GLenum = 0x8DF5;
pub static UNSIGNED_INT_10_10_10_2_OES: GLenum = 0x8DF6;
pub static INT_10_10_10_2_OES: GLenum = 0x8DF7;
pub static SHADER_BINARY_FORMATS: GLenum = 0x8DF8;
pub static NUM_SHADER_BINARY_FORMATS: GLenum = 0x8DF9;
pub static SHADER_COMPILER: GLenum = 0x8DFA;
pub static MAX_VERTEX_UNIFORM_VECTORS: GLenum = 0x8DFB;
pub static MAX_VARYING_VECTORS: GLenum = 0x8DFC;
pub static MAX_FRAGMENT_UNIFORM_VECTORS: GLenum = 0x8DFD;
pub static RENDERBUFFER_COLOR_SAMPLES_NV: GLenum = 0x8E10;
pub static MAX_MULTISAMPLE_COVERAGE_MODES_NV: GLenum = 0x8E11;
pub static MULTISAMPLE_COVERAGE_MODES_NV: GLenum = 0x8E12;
pub static QUERY_WAIT: GLenum = 0x8E13;
pub static QUERY_WAIT_NV: GLenum = 0x8E13;
pub static QUERY_NO_WAIT: GLenum = 0x8E14;
pub static QUERY_NO_WAIT_NV: GLenum = 0x8E14;
pub static QUERY_BY_REGION_WAIT: GLenum = 0x8E15;
pub static QUERY_BY_REGION_WAIT_NV: GLenum = 0x8E15;
pub static QUERY_BY_REGION_NO_WAIT: GLenum = 0x8E16;
pub static QUERY_BY_REGION_NO_WAIT_NV: GLenum = 0x8E16;
pub static MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS: GLenum = 0x8E1E;
pub static MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS: GLenum = 0x8E1F;
pub static COLOR_SAMPLES_NV: GLenum = 0x8E20;
pub static TRANSFORM_FEEDBACK: GLenum = 0x8E22;
pub static TRANSFORM_FEEDBACK_NV: GLenum = 0x8E22;
pub static TRANSFORM_FEEDBACK_BUFFER_PAUSED: GLenum = 0x8E23;
pub static TRANSFORM_FEEDBACK_PAUSED: GLenum = 0x8E23;
pub static TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV: GLenum = 0x8E23;
pub static TRANSFORM_FEEDBACK_BUFFER_ACTIVE: GLenum = 0x8E24;
pub static TRANSFORM_FEEDBACK_ACTIVE: GLenum = 0x8E24;
pub static TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV: GLenum = 0x8E24;
pub static TRANSFORM_FEEDBACK_BINDING: GLenum = 0x8E25;
pub static TRANSFORM_FEEDBACK_BINDING_NV: GLenum = 0x8E25;
pub static FRAME_NV: GLenum = 0x8E26;
pub static FIELDS_NV: GLenum = 0x8E27;
pub static CURRENT_TIME_NV: GLenum = 0x8E28;
pub static TIMESTAMP: GLenum = 0x8E28;
pub static TIMESTAMP_EXT: GLenum = 0x8E28;
pub static NUM_FILL_STREAMS_NV: GLenum = 0x8E29;
pub static PRESENT_TIME_NV: GLenum = 0x8E2A;
pub static PRESENT_DURATION_NV: GLenum = 0x8E2B;
pub static DEPTH_COMPONENT16_NONLINEAR_NV: GLenum = 0x8E2C;
pub static PROGRAM_MATRIX_EXT: GLenum = 0x8E2D;
pub static TRANSPOSE_PROGRAM_MATRIX_EXT: GLenum = 0x8E2E;
pub static PROGRAM_MATRIX_STACK_DEPTH_EXT: GLenum = 0x8E2F;
pub static TEXTURE_SWIZZLE_R: GLenum = 0x8E42;
pub static TEXTURE_SWIZZLE_R_EXT: GLenum = 0x8E42;
pub static TEXTURE_SWIZZLE_G: GLenum = 0x8E43;
pub static TEXTURE_SWIZZLE_G_EXT: GLenum = 0x8E43;
pub static TEXTURE_SWIZZLE_B: GLenum = 0x8E44;
pub static TEXTURE_SWIZZLE_B_EXT: GLenum = 0x8E44;
pub static TEXTURE_SWIZZLE_A: GLenum = 0x8E45;
pub static TEXTURE_SWIZZLE_A_EXT: GLenum = 0x8E45;
pub static TEXTURE_SWIZZLE_RGBA: GLenum = 0x8E46;
pub static TEXTURE_SWIZZLE_RGBA_EXT: GLenum = 0x8E46;
pub static ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS: GLenum = 0x8E47;
pub static ACTIVE_SUBROUTINE_MAX_LENGTH: GLenum = 0x8E48;
pub static ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH: GLenum = 0x8E49;
pub static NUM_COMPATIBLE_SUBROUTINES: GLenum = 0x8E4A;
pub static COMPATIBLE_SUBROUTINES: GLenum = 0x8E4B;
pub static QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: GLenum = 0x8E4C;
pub static QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT: GLenum = 0x8E4C;
pub static FIRST_VERTEX_CONVENTION: GLenum = 0x8E4D;
pub static FIRST_VERTEX_CONVENTION_EXT: GLenum = 0x8E4D;
pub static LAST_VERTEX_CONVENTION: GLenum = 0x8E4E;
pub static LAST_VERTEX_CONVENTION_EXT: GLenum = 0x8E4E;
pub static PROVOKING_VERTEX: GLenum = 0x8E4F;
pub static PROVOKING_VERTEX_EXT: GLenum = 0x8E4F;
pub static SAMPLE_POSITION: GLenum = 0x8E50;
pub static SAMPLE_POSITION_NV: GLenum = 0x8E50;
pub static SAMPLE_MASK: GLenum = 0x8E51;
pub static SAMPLE_MASK_NV: GLenum = 0x8E51;
pub static SAMPLE_MASK_VALUE: GLenum = 0x8E52;
pub static SAMPLE_MASK_VALUE_NV: GLenum = 0x8E52;
pub static TEXTURE_BINDING_RENDERBUFFER_NV: GLenum = 0x8E53;
pub static TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV: GLenum = 0x8E54;
pub static TEXTURE_RENDERBUFFER_NV: GLenum = 0x8E55;
pub static SAMPLER_RENDERBUFFER_NV: GLenum = 0x8E56;
pub static INT_SAMPLER_RENDERBUFFER_NV: GLenum = 0x8E57;
pub static UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV: GLenum = 0x8E58;
pub static MAX_SAMPLE_MASK_WORDS: GLenum = 0x8E59;
pub static MAX_SAMPLE_MASK_WORDS_NV: GLenum = 0x8E59;
pub static MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV: GLenum = 0x8E5A;
pub static MAX_GEOMETRY_SHADER_INVOCATIONS: GLenum = 0x8E5A;
pub static MIN_FRAGMENT_INTERPOLATION_OFFSET: GLenum = 0x8E5B;
pub static MIN_FRAGMENT_INTERPOLATION_OFFSET_NV: GLenum = 0x8E5B;
pub static MAX_FRAGMENT_INTERPOLATION_OFFSET: GLenum = 0x8E5C;
pub static MAX_FRAGMENT_INTERPOLATION_OFFSET_NV: GLenum = 0x8E5C;
pub static FRAGMENT_INTERPOLATION_OFFSET_BITS: GLenum = 0x8E5D;
pub static FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV: GLenum = 0x8E5D;
pub static MIN_PROGRAM_TEXTURE_GATHER_OFFSET: GLenum = 0x8E5E;
pub static MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB: GLenum = 0x8E5E;
pub static MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV: GLenum = 0x8E5E;
pub static MAX_PROGRAM_TEXTURE_GATHER_OFFSET: GLenum = 0x8E5F;
pub static MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB: GLenum = 0x8E5F;
pub static MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV: GLenum = 0x8E5F;
pub static MAX_TRANSFORM_FEEDBACK_BUFFERS: GLenum = 0x8E70;
pub static MAX_VERTEX_STREAMS: GLenum = 0x8E71;
pub static PATCH_VERTICES: GLenum = 0x8E72;
pub static PATCH_DEFAULT_INNER_LEVEL: GLenum = 0x8E73;
pub static PATCH_DEFAULT_OUTER_LEVEL: GLenum = 0x8E74;
pub static TESS_CONTROL_OUTPUT_VERTICES: GLenum = 0x8E75;
pub static TESS_GEN_MODE: GLenum = 0x8E76;
pub static TESS_GEN_SPACING: GLenum = 0x8E77;
pub static TESS_GEN_VERTEX_ORDER: GLenum = 0x8E78;
pub static TESS_GEN_POINT_MODE: GLenum = 0x8E79;
pub static ISOLINES: GLenum = 0x8E7A;
pub static FRACTIONAL_ODD: GLenum = 0x8E7B;
pub static FRACTIONAL_EVEN: GLenum = 0x8E7C;
pub static MAX_PATCH_VERTICES: GLenum = 0x8E7D;
pub static MAX_TESS_GEN_LEVEL: GLenum = 0x8E7E;
pub static MAX_TESS_CONTROL_UNIFORM_COMPONENTS: GLenum = 0x8E7F;
pub static MAX_TESS_EVALUATION_UNIFORM_COMPONENTS: GLenum = 0x8E80;
pub static MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS: GLenum = 0x8E81;
pub static MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS: GLenum = 0x8E82;
pub static MAX_TESS_CONTROL_OUTPUT_COMPONENTS: GLenum = 0x8E83;
pub static MAX_TESS_PATCH_COMPONENTS: GLenum = 0x8E84;
pub static MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS: GLenum = 0x8E85;
pub static MAX_TESS_EVALUATION_OUTPUT_COMPONENTS: GLenum = 0x8E86;
pub static TESS_EVALUATION_SHADER: GLenum = 0x8E87;
pub static TESS_CONTROL_SHADER: GLenum = 0x8E88;
pub static MAX_TESS_CONTROL_UNIFORM_BLOCKS: GLenum = 0x8E89;
pub static MAX_TESS_EVALUATION_UNIFORM_BLOCKS: GLenum = 0x8E8A;
pub static COMPRESSED_RGBA_BPTC_UNORM_ARB: GLenum = 0x8E8C;
pub static COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB: GLenum = 0x8E8D;
pub static COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB: GLenum = 0x8E8E;
pub static COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB: GLenum = 0x8E8F;
pub static COVERAGE_COMPONENT_NV: GLenum = 0x8ED0;
pub static COVERAGE_COMPONENT4_NV: GLenum = 0x8ED1;
pub static COVERAGE_ATTACHMENT_NV: GLenum = 0x8ED2;
pub static COVERAGE_BUFFERS_NV: GLenum = 0x8ED3;
pub static COVERAGE_SAMPLES_NV: GLenum = 0x8ED4;
pub static COVERAGE_ALL_FRAGMENTS_NV: GLenum = 0x8ED5;
pub static COVERAGE_EDGE_FRAGMENTS_NV: GLenum = 0x8ED6;
pub static COVERAGE_AUTOMATIC_NV: GLenum = 0x8ED7;
pub static BUFFER_GPU_ADDRESS_NV: GLenum = 0x8F1D;
pub static VERTEX_ATTRIB_ARRAY_UNIFIED_NV: GLenum = 0x8F1E;
pub static ELEMENT_ARRAY_UNIFIED_NV: GLenum = 0x8F1F;
pub static VERTEX_ATTRIB_ARRAY_ADDRESS_NV: GLenum = 0x8F20;
pub static VERTEX_ARRAY_ADDRESS_NV: GLenum = 0x8F21;
pub static NORMAL_ARRAY_ADDRESS_NV: GLenum = 0x8F22;
pub static COLOR_ARRAY_ADDRESS_NV: GLenum = 0x8F23;
pub static INDEX_ARRAY_ADDRESS_NV: GLenum = 0x8F24;
pub static TEXTURE_COORD_ARRAY_ADDRESS_NV: GLenum = 0x8F25;
pub static EDGE_FLAG_ARRAY_ADDRESS_NV: GLenum = 0x8F26;
pub static SECONDARY_COLOR_ARRAY_ADDRESS_NV: GLenum = 0x8F27;
pub static FOG_COORD_ARRAY_ADDRESS_NV: GLenum = 0x8F28;
pub static ELEMENT_ARRAY_ADDRESS_NV: GLenum = 0x8F29;
pub static VERTEX_ATTRIB_ARRAY_LENGTH_NV: GLenum = 0x8F2A;
pub static VERTEX_ARRAY_LENGTH_NV: GLenum = 0x8F2B;
pub static NORMAL_ARRAY_LENGTH_NV: GLenum = 0x8F2C;
pub static COLOR_ARRAY_LENGTH_NV: GLenum = 0x8F2D;
pub static INDEX_ARRAY_LENGTH_NV: GLenum = 0x8F2E;
pub static TEXTURE_COORD_ARRAY_LENGTH_NV: GLenum = 0x8F2F;
pub static EDGE_FLAG_ARRAY_LENGTH_NV: GLenum = 0x8F30;
pub static SECONDARY_COLOR_ARRAY_LENGTH_NV: GLenum = 0x8F31;
pub static FOG_COORD_ARRAY_LENGTH_NV: GLenum = 0x8F32;
pub static ELEMENT_ARRAY_LENGTH_NV: GLenum = 0x8F33;
pub static GPU_ADDRESS_NV: GLenum = 0x8F34;
pub static MAX_SHADER_BUFFER_ADDRESS_NV: GLenum = 0x8F35;
pub static COPY_READ_BUFFER: GLenum = 0x8F36;
pub static COPY_READ_BUFFER_BINDING: GLenum = 0x8F36;
pub static COPY_WRITE_BUFFER: GLenum = 0x8F37;
pub static COPY_WRITE_BUFFER_BINDING: GLenum = 0x8F37;
pub static MAX_IMAGE_UNITS: GLenum = 0x8F38;
pub static MAX_IMAGE_UNITS_EXT: GLenum = 0x8F38;
pub static MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS: GLenum = 0x8F39;
pub static MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT: GLenum = 0x8F39;
pub static MAX_COMBINED_SHADER_OUTPUT_RESOURCES: GLenum = 0x8F39;
pub static IMAGE_BINDING_NAME: GLenum = 0x8F3A;
pub static IMAGE_BINDING_NAME_EXT: GLenum = 0x8F3A;
pub static IMAGE_BINDING_LEVEL: GLenum = 0x8F3B;
pub static IMAGE_BINDING_LEVEL_EXT: GLenum = 0x8F3B;
pub static IMAGE_BINDING_LAYERED: GLenum = 0x8F3C;
pub static IMAGE_BINDING_LAYERED_EXT: GLenum = 0x8F3C;
pub static IMAGE_BINDING_LAYER: GLenum = 0x8F3D;
pub static IMAGE_BINDING_LAYER_EXT: GLenum = 0x8F3D;
pub static IMAGE_BINDING_ACCESS: GLenum = 0x8F3E;
pub static IMAGE_BINDING_ACCESS_EXT: GLenum = 0x8F3E;
pub static DRAW_INDIRECT_BUFFER: GLenum = 0x8F3F;
pub static DRAW_INDIRECT_UNIFIED_NV: GLenum = 0x8F40;
pub static DRAW_INDIRECT_ADDRESS_NV: GLenum = 0x8F41;
pub static DRAW_INDIRECT_LENGTH_NV: GLenum = 0x8F42;
pub static DRAW_INDIRECT_BUFFER_BINDING: GLenum = 0x8F43;
pub static MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV: GLenum = 0x8F44;
pub static MAX_PROGRAM_SUBROUTINE_NUM_NV: GLenum = 0x8F45;
pub static DOUBLE_MAT2: GLenum = 0x8F46;
pub static DOUBLE_MAT2_EXT: GLenum = 0x8F46;
pub static DOUBLE_MAT3: GLenum = 0x8F47;
pub static DOUBLE_MAT3_EXT: GLenum = 0x8F47;
pub static DOUBLE_MAT4: GLenum = 0x8F48;
pub static DOUBLE_MAT4_EXT: GLenum = 0x8F48;
pub static DOUBLE_MAT2x3: GLenum = 0x8F49;
pub static DOUBLE_MAT2x3_EXT: GLenum = 0x8F49;
pub static DOUBLE_MAT2x4: GLenum = 0x8F4A;
pub static DOUBLE_MAT2x4_EXT: GLenum = 0x8F4A;
pub static DOUBLE_MAT3x2: GLenum = 0x8F4B;
pub static DOUBLE_MAT3x2_EXT: GLenum = 0x8F4B;
pub static DOUBLE_MAT3x4: GLenum = 0x8F4C;
pub static DOUBLE_MAT3x4_EXT: GLenum = 0x8F4C;
pub static DOUBLE_MAT4x2: GLenum = 0x8F4D;
pub static DOUBLE_MAT4x2_EXT: GLenum = 0x8F4D;
pub static DOUBLE_MAT4x3: GLenum = 0x8F4E;
pub static DOUBLE_MAT4x3_EXT: GLenum = 0x8F4E;
pub static MALI_SHADER_BINARY_ARM: GLenum = 0x8F60;
pub static MALI_PROGRAM_BINARY_ARM: GLenum = 0x8F61;
pub static RED_SNORM: GLenum = 0x8F90;
pub static RG_SNORM: GLenum = 0x8F91;
pub static RGB_SNORM: GLenum = 0x8F92;
pub static RGBA_SNORM: GLenum = 0x8F93;
pub static R8_SNORM: GLenum = 0x8F94;
pub static RG8_SNORM: GLenum = 0x8F95;
pub static RGB8_SNORM: GLenum = 0x8F96;
pub static RGBA8_SNORM: GLenum = 0x8F97;
pub static R16_SNORM: GLenum = 0x8F98;
pub static RG16_SNORM: GLenum = 0x8F99;
pub static RGB16_SNORM: GLenum = 0x8F9A;
pub static RGBA16_SNORM: GLenum = 0x8F9B;
pub static SIGNED_NORMALIZED: GLenum = 0x8F9C;
pub static PRIMITIVE_RESTART: GLenum = 0x8F9D;
pub static PRIMITIVE_RESTART_INDEX: GLenum = 0x8F9E;
pub static MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB: GLenum = 0x8F9F;
pub static PERFMON_GLOBAL_MODE_QCOM: GLenum = 0x8FA0;
pub static BINNING_CONTROL_HINT_QCOM: GLenum = 0x8FB0;
pub static CPU_OPTIMIZED_QCOM: GLenum = 0x8FB1;
pub static GPU_OPTIMIZED_QCOM: GLenum = 0x8FB2;
pub static RENDER_DIRECT_TO_FRAMEBUFFER_QCOM: GLenum = 0x8FB3;
pub static GPU_DISJOINT_EXT: GLenum = 0x8FBB;
pub static SHADER_BINARY_VIV: GLenum = 0x8FC4;
pub static INT8_NV: GLenum = 0x8FE0;
pub static INT8_VEC2_NV: GLenum = 0x8FE1;
pub static INT8_VEC3_NV: GLenum = 0x8FE2;
pub static INT8_VEC4_NV: GLenum = 0x8FE3;
pub static INT16_NV: GLenum = 0x8FE4;
pub static INT16_VEC2_NV: GLenum = 0x8FE5;
pub static INT16_VEC3_NV: GLenum = 0x8FE6;
pub static INT16_VEC4_NV: GLenum = 0x8FE7;
pub static INT64_VEC2_NV: GLenum = 0x8FE9;
pub static INT64_VEC3_NV: GLenum = 0x8FEA;
pub static INT64_VEC4_NV: GLenum = 0x8FEB;
pub static UNSIGNED_INT8_NV: GLenum = 0x8FEC;
pub static UNSIGNED_INT8_VEC2_NV: GLenum = 0x8FED;
pub static UNSIGNED_INT8_VEC3_NV: GLenum = 0x8FEE;
pub static UNSIGNED_INT8_VEC4_NV: GLenum = 0x8FEF;
pub static UNSIGNED_INT16_NV: GLenum = 0x8FF0;
pub static UNSIGNED_INT16_VEC2_NV: GLenum = 0x8FF1;
pub static UNSIGNED_INT16_VEC3_NV: GLenum = 0x8FF2;
pub static UNSIGNED_INT16_VEC4_NV: GLenum = 0x8FF3;
pub static UNSIGNED_INT64_VEC2_NV: GLenum = 0x8FF5;
pub static UNSIGNED_INT64_VEC3_NV: GLenum = 0x8FF6;
pub static UNSIGNED_INT64_VEC4_NV: GLenum = 0x8FF7;
pub static FLOAT16_NV: GLenum = 0x8FF8;
pub static FLOAT16_VEC2_NV: GLenum = 0x8FF9;
pub static FLOAT16_VEC3_NV: GLenum = 0x8FFA;
pub static FLOAT16_VEC4_NV: GLenum = 0x8FFB;
pub static DOUBLE_VEC2: GLenum = 0x8FFC;
pub static DOUBLE_VEC2_EXT: GLenum = 0x8FFC;
pub static DOUBLE_VEC3: GLenum = 0x8FFD;
pub static DOUBLE_VEC3_EXT: GLenum = 0x8FFD;
pub static DOUBLE_VEC4: GLenum = 0x8FFE;
pub static DOUBLE_VEC4_EXT: GLenum = 0x8FFE;
pub static SAMPLER_BUFFER_AMD: GLenum = 0x9001;
pub static INT_SAMPLER_BUFFER_AMD: GLenum = 0x9002;
pub static UNSIGNED_INT_SAMPLER_BUFFER_AMD: GLenum = 0x9003;
pub static TESSELLATION_MODE_AMD: GLenum = 0x9004;
pub static TESSELLATION_FACTOR_AMD: GLenum = 0x9005;
pub static DISCRETE_AMD: GLenum = 0x9006;
pub static CONTINUOUS_AMD: GLenum = 0x9007;
pub static TEXTURE_CUBE_MAP_ARRAY: GLenum = 0x9009;
pub static TEXTURE_CUBE_MAP_ARRAY_ARB: GLenum = 0x9009;
pub static TEXTURE_BINDING_CUBE_MAP_ARRAY: GLenum = 0x900A;
pub static TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB: GLenum = 0x900A;
pub static PROXY_TEXTURE_CUBE_MAP_ARRAY: GLenum = 0x900B;
pub static PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB: GLenum = 0x900B;
pub static SAMPLER_CUBE_MAP_ARRAY: GLenum = 0x900C;
pub static SAMPLER_CUBE_MAP_ARRAY_ARB: GLenum = 0x900C;
pub static SAMPLER_CUBE_MAP_ARRAY_SHADOW: GLenum = 0x900D;
pub static SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB: GLenum = 0x900D;
pub static INT_SAMPLER_CUBE_MAP_ARRAY: GLenum = 0x900E;
pub static INT_SAMPLER_CUBE_MAP_ARRAY_ARB: GLenum = 0x900E;
pub static UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY: GLenum = 0x900F;
pub static UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB: GLenum = 0x900F;
pub static ALPHA_SNORM: GLenum = 0x9010;
pub static LUMINANCE_SNORM: GLenum = 0x9011;
pub static LUMINANCE_ALPHA_SNORM: GLenum = 0x9012;
pub static INTENSITY_SNORM: GLenum = 0x9013;
pub static ALPHA8_SNORM: GLenum = 0x9014;
pub static LUMINANCE8_SNORM: GLenum = 0x9015;
pub static LUMINANCE8_ALPHA8_SNORM: GLenum = 0x9016;
pub static INTENSITY8_SNORM: GLenum = 0x9017;
pub static ALPHA16_SNORM: GLenum = 0x9018;
pub static LUMINANCE16_SNORM: GLenum = 0x9019;
pub static LUMINANCE16_ALPHA16_SNORM: GLenum = 0x901A;
pub static INTENSITY16_SNORM: GLenum = 0x901B;
pub static FACTOR_MIN_AMD: GLenum = 0x901C;
pub static FACTOR_MAX_AMD: GLenum = 0x901D;
pub static DEPTH_CLAMP_NEAR_AMD: GLenum = 0x901E;
pub static DEPTH_CLAMP_FAR_AMD: GLenum = 0x901F;
pub static VIDEO_BUFFER_NV: GLenum = 0x9020;
pub static VIDEO_BUFFER_BINDING_NV: GLenum = 0x9021;
pub static FIELD_UPPER_NV: GLenum = 0x9022;
pub static FIELD_LOWER_NV: GLenum = 0x9023;
pub static NUM_VIDEO_CAPTURE_STREAMS_NV: GLenum = 0x9024;
pub static NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV: GLenum = 0x9025;
pub static VIDEO_CAPTURE_TO_422_SUPPORTED_NV: GLenum = 0x9026;
pub static LAST_VIDEO_CAPTURE_STATUS_NV: GLenum = 0x9027;
pub static VIDEO_BUFFER_PITCH_NV: GLenum = 0x9028;
pub static VIDEO_COLOR_CONVERSION_MATRIX_NV: GLenum = 0x9029;
pub static VIDEO_COLOR_CONVERSION_MAX_NV: GLenum = 0x902A;
pub static VIDEO_COLOR_CONVERSION_MIN_NV: GLenum = 0x902B;
pub static VIDEO_COLOR_CONVERSION_OFFSET_NV: GLenum = 0x902C;
pub static VIDEO_BUFFER_INTERNAL_FORMAT_NV: GLenum = 0x902D;
pub static PARTIAL_SUCCESS_NV: GLenum = 0x902E;
pub static SUCCESS_NV: GLenum = 0x902F;
pub static FAILURE_NV: GLenum = 0x9030;
pub static YCBYCR8_422_NV: GLenum = 0x9031;
pub static YCBAYCR8A_4224_NV: GLenum = 0x9032;
pub static Z6Y10Z6CB10Z6Y10Z6CR10_422_NV: GLenum = 0x9033;
pub static Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV: GLenum = 0x9034;
pub static Z4Y12Z4CB12Z4Y12Z4CR12_422_NV: GLenum = 0x9035;
pub static Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV: GLenum = 0x9036;
pub static Z4Y12Z4CB12Z4CR12_444_NV: GLenum = 0x9037;
pub static VIDEO_CAPTURE_FRAME_WIDTH_NV: GLenum = 0x9038;
pub static VIDEO_CAPTURE_FRAME_HEIGHT_NV: GLenum = 0x9039;
pub static VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV: GLenum = 0x903A;
pub static VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV: GLenum = 0x903B;
pub static VIDEO_CAPTURE_SURFACE_ORIGIN_NV: GLenum = 0x903C;
pub static TEXTURE_COVERAGE_SAMPLES_NV: GLenum = 0x9045;
pub static TEXTURE_COLOR_SAMPLES_NV: GLenum = 0x9046;
pub static IMAGE_1D: GLenum = 0x904C;
pub static IMAGE_1D_EXT: GLenum = 0x904C;
pub static IMAGE_2D: GLenum = 0x904D;
pub static IMAGE_2D_EXT: GLenum = 0x904D;
pub static IMAGE_3D: GLenum = 0x904E;
pub static IMAGE_3D_EXT: GLenum = 0x904E;
pub static IMAGE_2D_RECT: GLenum = 0x904F;
pub static IMAGE_2D_RECT_EXT: GLenum = 0x904F;
pub static IMAGE_CUBE: GLenum = 0x9050;
pub static IMAGE_CUBE_EXT: GLenum = 0x9050;
pub static IMAGE_BUFFER: GLenum = 0x9051;
pub static IMAGE_BUFFER_EXT: GLenum = 0x9051;
pub static IMAGE_1D_ARRAY: GLenum = 0x9052;
pub static IMAGE_1D_ARRAY_EXT: GLenum = 0x9052;
pub static IMAGE_2D_ARRAY: GLenum = 0x9053;
pub static IMAGE_2D_ARRAY_EXT: GLenum = 0x9053;
pub static IMAGE_CUBE_MAP_ARRAY: GLenum = 0x9054;
pub static IMAGE_CUBE_MAP_ARRAY_EXT: GLenum = 0x9054;
pub static IMAGE_2D_MULTISAMPLE: GLenum = 0x9055;
pub static IMAGE_2D_MULTISAMPLE_EXT: GLenum = 0x9055;
pub static IMAGE_2D_MULTISAMPLE_ARRAY: GLenum = 0x9056;
pub static IMAGE_2D_MULTISAMPLE_ARRAY_EXT: GLenum = 0x9056;
pub static INT_IMAGE_1D: GLenum = 0x9057;
pub static INT_IMAGE_1D_EXT: GLenum = 0x9057;
pub static INT_IMAGE_2D: GLenum = 0x9058;
pub static INT_IMAGE_2D_EXT: GLenum = 0x9058;
pub static INT_IMAGE_3D: GLenum = 0x9059;
pub static INT_IMAGE_3D_EXT: GLenum = 0x9059;
pub static INT_IMAGE_2D_RECT: GLenum = 0x905A;
pub static INT_IMAGE_2D_RECT_EXT: GLenum = 0x905A;
pub static INT_IMAGE_CUBE: GLenum = 0x905B;
pub static INT_IMAGE_CUBE_EXT: GLenum = 0x905B;
pub static INT_IMAGE_BUFFER: GLenum = 0x905C;
pub static INT_IMAGE_BUFFER_EXT: GLenum = 0x905C;
pub static INT_IMAGE_1D_ARRAY: GLenum = 0x905D;
pub static INT_IMAGE_1D_ARRAY_EXT: GLenum = 0x905D;
pub static INT_IMAGE_2D_ARRAY: GLenum = 0x905E;
pub static INT_IMAGE_2D_ARRAY_EXT: GLenum = 0x905E;
pub static INT_IMAGE_CUBE_MAP_ARRAY: GLenum = 0x905F;
pub static INT_IMAGE_CUBE_MAP_ARRAY_EXT: GLenum = 0x905F;
pub static INT_IMAGE_2D_MULTISAMPLE: GLenum = 0x9060;
pub static INT_IMAGE_2D_MULTISAMPLE_EXT: GLenum = 0x9060;
pub static INT_IMAGE_2D_MULTISAMPLE_ARRAY: GLenum = 0x9061;
pub static INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: GLenum = 0x9061;
pub static UNSIGNED_INT_IMAGE_1D: GLenum = 0x9062;
pub static UNSIGNED_INT_IMAGE_1D_EXT: GLenum = 0x9062;
pub static UNSIGNED_INT_IMAGE_2D: GLenum = 0x9063;
pub static UNSIGNED_INT_IMAGE_2D_EXT: GLenum = 0x9063;
pub static UNSIGNED_INT_IMAGE_3D: GLenum = 0x9064;
pub static UNSIGNED_INT_IMAGE_3D_EXT: GLenum = 0x9064;
pub static UNSIGNED_INT_IMAGE_2D_RECT: GLenum = 0x9065;
pub static UNSIGNED_INT_IMAGE_2D_RECT_EXT: GLenum = 0x9065;
pub static UNSIGNED_INT_IMAGE_CUBE: GLenum = 0x9066;
pub static UNSIGNED_INT_IMAGE_CUBE_EXT: GLenum = 0x9066;
pub static UNSIGNED_INT_IMAGE_BUFFER: GLenum = 0x9067;
pub static UNSIGNED_INT_IMAGE_BUFFER_EXT: GLenum = 0x9067;
pub static UNSIGNED_INT_IMAGE_1D_ARRAY: GLenum = 0x9068;
pub static UNSIGNED_INT_IMAGE_1D_ARRAY_EXT: GLenum = 0x9068;
pub static UNSIGNED_INT_IMAGE_2D_ARRAY: GLenum = 0x9069;
pub static UNSIGNED_INT_IMAGE_2D_ARRAY_EXT: GLenum = 0x9069;
pub static UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY: GLenum = 0x906A;
pub static UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT: GLenum = 0x906A;
pub static UNSIGNED_INT_IMAGE_2D_MULTISAMPLE: GLenum = 0x906B;
pub static UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT: GLenum = 0x906B;
pub static UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY: GLenum = 0x906C;
pub static UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: GLenum = 0x906C;
pub static MAX_IMAGE_SAMPLES: GLenum = 0x906D;
pub static MAX_IMAGE_SAMPLES_EXT: GLenum = 0x906D;
pub static IMAGE_BINDING_FORMAT: GLenum = 0x906E;
pub static IMAGE_BINDING_FORMAT_EXT: GLenum = 0x906E;
pub static RGB10_A2UI: GLenum = 0x906F;
pub static PATH_FORMAT_SVG_NV: GLenum = 0x9070;
pub static PATH_FORMAT_PS_NV: GLenum = 0x9071;
pub static STANDARD_FONT_NAME_NV: GLenum = 0x9072;
pub static SYSTEM_FONT_NAME_NV: GLenum = 0x9073;
pub static FILE_NAME_NV: GLenum = 0x9074;
pub static PATH_STROKE_WIDTH_NV: GLenum = 0x9075;
pub static PATH_END_CAPS_NV: GLenum = 0x9076;
pub static PATH_INITIAL_END_CAP_NV: GLenum = 0x9077;
pub static PATH_TERMINAL_END_CAP_NV: GLenum = 0x9078;
pub static PATH_JOIN_STYLE_NV: GLenum = 0x9079;
pub static PATH_MITER_LIMIT_NV: GLenum = 0x907A;
pub static PATH_DASH_CAPS_NV: GLenum = 0x907B;
pub static PATH_INITIAL_DASH_CAP_NV: GLenum = 0x907C;
pub static PATH_TERMINAL_DASH_CAP_NV: GLenum = 0x907D;
pub static PATH_DASH_OFFSET_NV: GLenum = 0x907E;
pub static PATH_CLIENT_LENGTH_NV: GLenum = 0x907F;
pub static PATH_FILL_MODE_NV: GLenum = 0x9080;
pub static PATH_FILL_MASK_NV: GLenum = 0x9081;
pub static PATH_FILL_COVER_MODE_NV: GLenum = 0x9082;
pub static PATH_STROKE_COVER_MODE_NV: GLenum = 0x9083;
pub static PATH_STROKE_MASK_NV: GLenum = 0x9084;
pub static COUNT_UP_NV: GLenum = 0x9088;
pub static COUNT_DOWN_NV: GLenum = 0x9089;
pub static PATH_OBJECT_BOUNDING_BOX_NV: GLenum = 0x908A;
pub static CONVEX_HULL_NV: GLenum = 0x908B;
pub static BOUNDING_BOX_NV: GLenum = 0x908D;
pub static TRANSLATE_X_NV: GLenum = 0x908E;
pub static TRANSLATE_Y_NV: GLenum = 0x908F;
pub static TRANSLATE_2D_NV: GLenum = 0x9090;
pub static TRANSLATE_3D_NV: GLenum = 0x9091;
pub static AFFINE_2D_NV: GLenum = 0x9092;
pub static AFFINE_3D_NV: GLenum = 0x9094;
pub static TRANSPOSE_AFFINE_2D_NV: GLenum = 0x9096;
pub static TRANSPOSE_AFFINE_3D_NV: GLenum = 0x9098;
pub static UTF8_NV: GLenum = 0x909A;
pub static UTF16_NV: GLenum = 0x909B;
pub static BOUNDING_BOX_OF_BOUNDING_BOXES_NV: GLenum = 0x909C;
pub static PATH_COMMAND_COUNT_NV: GLenum = 0x909D;
pub static PATH_COORD_COUNT_NV: GLenum = 0x909E;
pub static PATH_DASH_ARRAY_COUNT_NV: GLenum = 0x909F;
pub static PATH_COMPUTED_LENGTH_NV: GLenum = 0x90A0;
pub static PATH_FILL_BOUNDING_BOX_NV: GLenum = 0x90A1;
pub static PATH_STROKE_BOUNDING_BOX_NV: GLenum = 0x90A2;
pub static SQUARE_NV: GLenum = 0x90A3;
pub static ROUND_NV: GLenum = 0x90A4;
pub static TRIANGULAR_NV: GLenum = 0x90A5;
pub static BEVEL_NV: GLenum = 0x90A6;
pub static MITER_REVERT_NV: GLenum = 0x90A7;
pub static MITER_TRUNCATE_NV: GLenum = 0x90A8;
pub static SKIP_MISSING_GLYPH_NV: GLenum = 0x90A9;
pub static USE_MISSING_GLYPH_NV: GLenum = 0x90AA;
pub static PATH_ERROR_POSITION_NV: GLenum = 0x90AB;
pub static PATH_FOG_GEN_MODE_NV: GLenum = 0x90AC;
pub static ACCUM_ADJACENT_PAIRS_NV: GLenum = 0x90AD;
pub static ADJACENT_PAIRS_NV: GLenum = 0x90AE;
pub static FIRST_TO_REST_NV: GLenum = 0x90AF;
pub static PATH_GEN_MODE_NV: GLenum = 0x90B0;
pub static PATH_GEN_COEFF_NV: GLenum = 0x90B1;
pub static PATH_GEN_COLOR_FORMAT_NV: GLenum = 0x90B2;
pub static PATH_GEN_COMPONENTS_NV: GLenum = 0x90B3;
pub static PATH_DASH_OFFSET_RESET_NV: GLenum = 0x90B4;
pub static MOVE_TO_RESETS_NV: GLenum = 0x90B5;
pub static MOVE_TO_CONTINUES_NV: GLenum = 0x90B6;
pub static PATH_STENCIL_FUNC_NV: GLenum = 0x90B7;
pub static PATH_STENCIL_REF_NV: GLenum = 0x90B8;
pub static PATH_STENCIL_VALUE_MASK_NV: GLenum = 0x90B9;
pub static SCALED_RESOLVE_FASTEST_EXT: GLenum = 0x90BA;
pub static SCALED_RESOLVE_NICEST_EXT: GLenum = 0x90BB;
pub static MIN_MAP_BUFFER_ALIGNMENT: GLenum = 0x90BC;
pub static PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV: GLenum = 0x90BD;
pub static PATH_STENCIL_DEPTH_OFFSET_UNITS_NV: GLenum = 0x90BE;
pub static PATH_COVER_DEPTH_FUNC_NV: GLenum = 0x90BF;
pub static IMAGE_FORMAT_COMPATIBILITY_TYPE: GLenum = 0x90C7;
pub static IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: GLenum = 0x90C8;
pub static IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: GLenum = 0x90C9;
pub static MAX_VERTEX_IMAGE_UNIFORMS: GLenum = 0x90CA;
pub static MAX_TESS_CONTROL_IMAGE_UNIFORMS: GLenum = 0x90CB;
pub static MAX_TESS_EVALUATION_IMAGE_UNIFORMS: GLenum = 0x90CC;
pub static MAX_GEOMETRY_IMAGE_UNIFORMS: GLenum = 0x90CD;
pub static MAX_FRAGMENT_IMAGE_UNIFORMS: GLenum = 0x90CE;
pub static MAX_COMBINED_IMAGE_UNIFORMS: GLenum = 0x90CF;
pub static MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV: GLenum = 0x90D0;
pub static MAX_DEEP_3D_TEXTURE_DEPTH_NV: GLenum = 0x90D1;
pub static SHADER_STORAGE_BUFFER: GLenum = 0x90D2;
pub static SHADER_STORAGE_BUFFER_BINDING: GLenum = 0x90D3;
pub static SHADER_STORAGE_BUFFER_START: GLenum = 0x90D4;
pub static SHADER_STORAGE_BUFFER_SIZE: GLenum = 0x90D5;
pub static MAX_VERTEX_SHADER_STORAGE_BLOCKS: GLenum = 0x90D6;
pub static MAX_GEOMETRY_SHADER_STORAGE_BLOCKS: GLenum = 0x90D7;
pub static MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS: GLenum = 0x90D8;
pub static MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS: GLenum = 0x90D9;
pub static MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: GLenum = 0x90DA;
pub static MAX_COMPUTE_SHADER_STORAGE_BLOCKS: GLenum = 0x90DB;
pub static MAX_COMBINED_SHADER_STORAGE_BLOCKS: GLenum = 0x90DC;
pub static MAX_SHADER_STORAGE_BUFFER_BINDINGS: GLenum = 0x90DD;
pub static MAX_SHADER_STORAGE_BLOCK_SIZE: GLenum = 0x90DE;
pub static SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: GLenum = 0x90DF;
pub static SYNC_X11_FENCE_EXT: GLenum = 0x90E1;
pub static DEPTH_STENCIL_TEXTURE_MODE: GLenum = 0x90EA;
pub static MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB: GLenum = 0x90EB;
pub static MAX_COMPUTE_LOCAL_INVOCATIONS: GLenum = 0x90EB;
pub static UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER: GLenum = 0x90EC;
pub static ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER: GLenum = 0x90ED;
pub static DISPATCH_INDIRECT_BUFFER: GLenum = 0x90EE;
pub static DISPATCH_INDIRECT_BUFFER_BINDING: GLenum = 0x90EF;
pub static COLOR_ATTACHMENT_EXT: GLenum = 0x90F0;
pub static MULTIVIEW_EXT: GLenum = 0x90F1;
pub static MAX_MULTIVIEW_BUFFERS_EXT: GLenum = 0x90F2;
pub static COMPUTE_PROGRAM_NV: GLenum = 0x90FB;
pub static COMPUTE_PROGRAM_PARAMETER_BUFFER_NV: GLenum = 0x90FC;
pub static TEXTURE_2D_MULTISAMPLE: GLenum = 0x9100;
pub static PROXY_TEXTURE_2D_MULTISAMPLE: GLenum = 0x9101;
pub static TEXTURE_2D_MULTISAMPLE_ARRAY: GLenum = 0x9102;
pub static PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: GLenum = 0x9103;
pub static TEXTURE_BINDING_2D_MULTISAMPLE: GLenum = 0x9104;
pub static TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: GLenum = 0x9105;
pub static TEXTURE_SAMPLES: GLenum = 0x9106;
pub static TEXTURE_FIXED_SAMPLE_LOCATIONS: GLenum = 0x9107;
pub static SAMPLER_2D_MULTISAMPLE: GLenum = 0x9108;
pub static INT_SAMPLER_2D_MULTISAMPLE: GLenum = 0x9109;
pub static UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: GLenum = 0x910A;
pub static SAMPLER_2D_MULTISAMPLE_ARRAY: GLenum = 0x910B;
pub static INT_SAMPLER_2D_MULTISAMPLE_ARRAY: GLenum = 0x910C;
pub static UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: GLenum = 0x910D;
pub static MAX_COLOR_TEXTURE_SAMPLES: GLenum = 0x910E;
pub static MAX_DEPTH_TEXTURE_SAMPLES: GLenum = 0x910F;
pub static MAX_INTEGER_SAMPLES: GLenum = 0x9110;
pub static MAX_SERVER_WAIT_TIMEOUT: GLenum = 0x9111;
pub static MAX_SERVER_WAIT_TIMEOUT_APPLE: GLenum = 0x9111;
pub static OBJECT_TYPE: GLenum = 0x9112;
pub static OBJECT_TYPE_APPLE: GLenum = 0x9112;
pub static SYNC_CONDITION: GLenum = 0x9113;
pub static SYNC_CONDITION_APPLE: GLenum = 0x9113;
pub static SYNC_STATUS: GLenum = 0x9114;
pub static SYNC_STATUS_APPLE: GLenum = 0x9114;
pub static SYNC_FLAGS: GLenum = 0x9115;
pub static SYNC_FLAGS_APPLE: GLenum = 0x9115;
pub static SYNC_FENCE: GLenum = 0x9116;
pub static SYNC_FENCE_APPLE: GLenum = 0x9116;
pub static SYNC_GPU_COMMANDS_COMPLETE: GLenum = 0x9117;
pub static SYNC_GPU_COMMANDS_COMPLETE_APPLE: GLenum = 0x9117;
pub static UNSIGNALED: GLenum = 0x9118;
pub static UNSIGNALED_APPLE: GLenum = 0x9118;
pub static SIGNALED: GLenum = 0x9119;
pub static SIGNALED_APPLE: GLenum = 0x9119;
pub static ALREADY_SIGNALED: GLenum = 0x911A;
pub static ALREADY_SIGNALED_APPLE: GLenum = 0x911A;
pub static TIMEOUT_EXPIRED: GLenum = 0x911B;
pub static TIMEOUT_EXPIRED_APPLE: GLenum = 0x911B;
pub static CONDITION_SATISFIED: GLenum = 0x911C;
pub static CONDITION_SATISFIED_APPLE: GLenum = 0x911C;
pub static WAIT_FAILED: GLenum = 0x911D;
pub static WAIT_FAILED_APPLE: GLenum = 0x911D;
pub static BUFFER_ACCESS_FLAGS: GLenum = 0x911F;
pub static BUFFER_MAP_LENGTH: GLenum = 0x9120;
pub static BUFFER_MAP_OFFSET: GLenum = 0x9121;
pub static MAX_VERTEX_OUTPUT_COMPONENTS: GLenum = 0x9122;
pub static MAX_GEOMETRY_INPUT_COMPONENTS: GLenum = 0x9123;
pub static MAX_GEOMETRY_OUTPUT_COMPONENTS: GLenum = 0x9124;
pub static MAX_FRAGMENT_INPUT_COMPONENTS: GLenum = 0x9125;
pub static CONTEXT_PROFILE_MASK: GLenum = 0x9126;
pub static UNPACK_COMPRESSED_BLOCK_WIDTH: GLenum = 0x9127;
pub static UNPACK_COMPRESSED_BLOCK_HEIGHT: GLenum = 0x9128;
pub static UNPACK_COMPRESSED_BLOCK_DEPTH: GLenum = 0x9129;
pub static UNPACK_COMPRESSED_BLOCK_SIZE: GLenum = 0x912A;
pub static PACK_COMPRESSED_BLOCK_WIDTH: GLenum = 0x912B;
pub static PACK_COMPRESSED_BLOCK_HEIGHT: GLenum = 0x912C;
pub static PACK_COMPRESSED_BLOCK_DEPTH: GLenum = 0x912D;
pub static PACK_COMPRESSED_BLOCK_SIZE: GLenum = 0x912E;
pub static TEXTURE_IMMUTABLE_FORMAT: GLenum = 0x912F;
pub static SGX_PROGRAM_BINARY_IMG: GLenum = 0x9130;
pub static RENDERBUFFER_SAMPLES_IMG: GLenum = 0x9133;
pub static FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG: GLenum = 0x9134;
pub static MAX_SAMPLES_IMG: GLenum = 0x9135;
pub static TEXTURE_SAMPLES_IMG: GLenum = 0x9136;
pub static COMPRESSED_RGBA_PVRTC_2BPPV2_IMG: GLenum = 0x9137;
pub static COMPRESSED_RGBA_PVRTC_4BPPV2_IMG: GLenum = 0x9138;
pub static MAX_DEBUG_MESSAGE_LENGTH: GLenum = 0x9143;
pub static MAX_DEBUG_MESSAGE_LENGTH_AMD: GLenum = 0x9143;
pub static MAX_DEBUG_MESSAGE_LENGTH_ARB: GLenum = 0x9143;
pub static MAX_DEBUG_MESSAGE_LENGTH_KHR: GLenum = 0x9143;
pub static MAX_DEBUG_LOGGED_MESSAGES: GLenum = 0x9144;
pub static MAX_DEBUG_LOGGED_MESSAGES_AMD: GLenum = 0x9144;
pub static MAX_DEBUG_LOGGED_MESSAGES_ARB: GLenum = 0x9144;
pub static MAX_DEBUG_LOGGED_MESSAGES_KHR: GLenum = 0x9144;
pub static DEBUG_LOGGED_MESSAGES: GLenum = 0x9145;
pub static DEBUG_LOGGED_MESSAGES_AMD: GLenum = 0x9145;
pub static DEBUG_LOGGED_MESSAGES_ARB: GLenum = 0x9145;
pub static DEBUG_LOGGED_MESSAGES_KHR: GLenum = 0x9145;
pub static DEBUG_SEVERITY_HIGH: GLenum = 0x9146;
pub static DEBUG_SEVERITY_HIGH_AMD: GLenum = 0x9146;
pub static DEBUG_SEVERITY_HIGH_ARB: GLenum = 0x9146;
pub static DEBUG_SEVERITY_HIGH_KHR: GLenum = 0x9146;
pub static DEBUG_SEVERITY_MEDIUM: GLenum = 0x9147;
pub static DEBUG_SEVERITY_MEDIUM_AMD: GLenum = 0x9147;
pub static DEBUG_SEVERITY_MEDIUM_ARB: GLenum = 0x9147;
pub static DEBUG_SEVERITY_MEDIUM_KHR: GLenum = 0x9147;
pub static DEBUG_SEVERITY_LOW: GLenum = 0x9148;
pub static DEBUG_SEVERITY_LOW_AMD: GLenum = 0x9148;
pub static DEBUG_SEVERITY_LOW_ARB: GLenum = 0x9148;
pub static DEBUG_SEVERITY_LOW_KHR: GLenum = 0x9148;
pub static DEBUG_CATEGORY_API_ERROR_AMD: GLenum = 0x9149;
pub static DEBUG_CATEGORY_WINDOW_SYSTEM_AMD: GLenum = 0x914A;
pub static DEBUG_CATEGORY_DEPRECATION_AMD: GLenum = 0x914B;
pub static DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD: GLenum = 0x914C;
pub static DEBUG_CATEGORY_PERFORMANCE_AMD: GLenum = 0x914D;
pub static DEBUG_CATEGORY_SHADER_COMPILER_AMD: GLenum = 0x914E;
pub static DEBUG_CATEGORY_APPLICATION_AMD: GLenum = 0x914F;
pub static DEBUG_CATEGORY_OTHER_AMD: GLenum = 0x9150;
pub static BUFFER_OBJECT_EXT: GLenum = 0x9151;
pub static DATA_BUFFER_AMD: GLenum = 0x9151;
pub static PERFORMANCE_MONITOR_AMD: GLenum = 0x9152;
pub static QUERY_OBJECT_AMD: GLenum = 0x9153;
pub static QUERY_OBJECT_EXT: GLenum = 0x9153;
pub static VERTEX_ARRAY_OBJECT_AMD: GLenum = 0x9154;
pub static VERTEX_ARRAY_OBJECT_EXT: GLenum = 0x9154;
pub static SAMPLER_OBJECT_AMD: GLenum = 0x9155;
pub static EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD: GLenum = 0x9160;
pub static QUERY_BUFFER: GLenum = 0x9192;
pub static QUERY_BUFFER_AMD: GLenum = 0x9192;
pub static QUERY_BUFFER_BINDING: GLenum = 0x9193;
pub static QUERY_BUFFER_BINDING_AMD: GLenum = 0x9193;
pub static QUERY_RESULT_NO_WAIT: GLenum = 0x9194;
pub static QUERY_RESULT_NO_WAIT_AMD: GLenum = 0x9194;
pub static VIRTUAL_PAGE_SIZE_X_ARB: GLenum = 0x9195;
pub static VIRTUAL_PAGE_SIZE_X_AMD: GLenum = 0x9195;
pub static VIRTUAL_PAGE_SIZE_Y_ARB: GLenum = 0x9196;
pub static VIRTUAL_PAGE_SIZE_Y_AMD: GLenum = 0x9196;
pub static VIRTUAL_PAGE_SIZE_Z_ARB: GLenum = 0x9197;
pub static VIRTUAL_PAGE_SIZE_Z_AMD: GLenum = 0x9197;
pub static MAX_SPARSE_TEXTURE_SIZE_ARB: GLenum = 0x9198;
pub static MAX_SPARSE_TEXTURE_SIZE_AMD: GLenum = 0x9198;
pub static MAX_SPARSE_3D_TEXTURE_SIZE_ARB: GLenum = 0x9199;
pub static MAX_SPARSE_3D_TEXTURE_SIZE_AMD: GLenum = 0x9199;
pub static MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB: GLenum = 0x919A;
pub static MAX_SPARSE_ARRAY_TEXTURE_LAYERS: GLenum = 0x919A;
pub static MIN_SPARSE_LEVEL_ARB: GLenum = 0x919B;
pub static MIN_SPARSE_LEVEL_AMD: GLenum = 0x919B;
pub static MIN_LOD_WARNING_AMD: GLenum = 0x919C;
pub static TEXTURE_BUFFER_OFFSET: GLenum = 0x919D;
pub static TEXTURE_BUFFER_SIZE: GLenum = 0x919E;
pub static TEXTURE_BUFFER_OFFSET_ALIGNMENT: GLenum = 0x919F;
pub static VERTEX_ELEMENT_SWIZZLE_AMD: GLenum = 0x91A4;
pub static VERTEX_ID_SWIZZLE_AMD: GLenum = 0x91A5;
pub static TEXTURE_SPARSE_ARB: GLenum = 0x91A6;
pub static VIRTUAL_PAGE_SIZE_INDEX_ARB: GLenum = 0x91A7;
pub static NUM_VIRTUAL_PAGE_SIZES_ARB: GLenum = 0x91A8;
pub static SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB: GLenum = 0x91A9;
pub static COMPUTE_SHADER: GLenum = 0x91B9;
pub static MAX_COMPUTE_UNIFORM_BLOCKS: GLenum = 0x91BB;
pub static MAX_COMPUTE_TEXTURE_IMAGE_UNITS: GLenum = 0x91BC;
pub static MAX_COMPUTE_IMAGE_UNIFORMS: GLenum = 0x91BD;
pub static MAX_COMPUTE_WORK_GROUP_COUNT: GLenum = 0x91BE;
pub static MAX_COMPUTE_FIXED_GROUP_SIZE_ARB: GLenum = 0x91BF;
pub static MAX_COMPUTE_WORK_GROUP_SIZE: GLenum = 0x91BF;
pub static UNPACK_FLIP_Y_WEBGL: GLenum = 0x9240;
pub static UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum = 0x9241;
pub static CONTEXT_LOST_WEBGL: GLenum = 0x9242;
pub static UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum = 0x9243;
pub static BROWSER_DEFAULT_WEBGL: GLenum = 0x9244;
pub static SHADER_BINARY_DMP: GLenum = 0x9250;
pub static GCCSO_SHADER_BINARY_FJ: GLenum = 0x9260;
pub static COMPRESSED_R11_EAC: GLenum = 0x9270;
pub static COMPRESSED_R11_EAC_OES: GLenum = 0x9270;
pub static COMPRESSED_SIGNED_R11_EAC: GLenum = 0x9271;
pub static COMPRESSED_SIGNED_R11_EAC_OES: GLenum = 0x9271;
pub static COMPRESSED_RG11_EAC: GLenum = 0x9272;
pub static COMPRESSED_RG11_EAC_OES: GLenum = 0x9272;
pub static COMPRESSED_SIGNED_RG11_EAC: GLenum = 0x9273;
pub static COMPRESSED_SIGNED_RG11_EAC_OES: GLenum = 0x9273;
pub static COMPRESSED_RGB8_ETC2: GLenum = 0x9274;
pub static COMPRESSED_RGB8_ETC2_OES: GLenum = 0x9274;
pub static COMPRESSED_SRGB8_ETC2: GLenum = 0x9275;
pub static COMPRESSED_SRGB8_ETC2_OES: GLenum = 0x9275;
pub static COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: GLenum = 0x9276;
pub static COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES: GLenum = 0x9276;
pub static COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: GLenum = 0x9277;
pub static COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES: GLenum = 0x9277;
pub static COMPRESSED_RGBA8_ETC2_EAC: GLenum = 0x9278;
pub static COMPRESSED_RGBA8_ETC2_EAC_OES: GLenum = 0x9278;
pub static COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: GLenum = 0x9279;
pub static COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES: GLenum = 0x9279;
pub static BLEND_PREMULTIPLIED_SRC_NV: GLenum = 0x9280;
pub static BLEND_OVERLAP_NV: GLenum = 0x9281;
pub static UNCORRELATED_NV: GLenum = 0x9282;
pub static DISJOINT_NV: GLenum = 0x9283;
pub static CONJOINT_NV: GLenum = 0x9284;
pub static BLEND_ADVANCED_COHERENT_NV: GLenum = 0x9285;
pub static SRC_NV: GLenum = 0x9286;
pub static DST_NV: GLenum = 0x9287;
pub static SRC_OVER_NV: GLenum = 0x9288;
pub static DST_OVER_NV: GLenum = 0x9289;
pub static SRC_IN_NV: GLenum = 0x928A;
pub static DST_IN_NV: GLenum = 0x928B;
pub static SRC_OUT_NV: GLenum = 0x928C;
pub static DST_OUT_NV: GLenum = 0x928D;
pub static SRC_ATOP_NV: GLenum = 0x928E;
pub static DST_ATOP_NV: GLenum = 0x928F;
pub static PLUS_NV: GLenum = 0x9291;
pub static PLUS_DARKER_NV: GLenum = 0x9292;
pub static MULTIPLY_NV: GLenum = 0x9294;
pub static SCREEN_NV: GLenum = 0x9295;
pub static OVERLAY_NV: GLenum = 0x9296;
pub static DARKEN_NV: GLenum = 0x9297;
pub static LIGHTEN_NV: GLenum = 0x9298;
pub static COLORDODGE_NV: GLenum = 0x9299;
pub static COLORBURN_NV: GLenum = 0x929A;
pub static HARDLIGHT_NV: GLenum = 0x929B;
pub static SOFTLIGHT_NV: GLenum = 0x929C;
pub static DIFFERENCE_NV: GLenum = 0x929E;
pub static MINUS_NV: GLenum = 0x929F;
pub static EXCLUSION_NV: GLenum = 0x92A0;
pub static CONTRAST_NV: GLenum = 0x92A1;
pub static INVERT_RGB_NV: GLenum = 0x92A3;
pub static LINEARDODGE_NV: GLenum = 0x92A4;
pub static LINEARBURN_NV: GLenum = 0x92A5;
pub static VIVIDLIGHT_NV: GLenum = 0x92A6;
pub static LINEARLIGHT_NV: GLenum = 0x92A7;
pub static PINLIGHT_NV: GLenum = 0x92A8;
pub static HARDMIX_NV: GLenum = 0x92A9;
pub static HSL_HUE_NV: GLenum = 0x92AD;
pub static HSL_SATURATION_NV: GLenum = 0x92AE;
pub static HSL_COLOR_NV: GLenum = 0x92AF;
pub static HSL_LUMINOSITY_NV: GLenum = 0x92B0;
pub static PLUS_CLAMPED_NV: GLenum = 0x92B1;
pub static PLUS_CLAMPED_ALPHA_NV: GLenum = 0x92B2;
pub static MINUS_CLAMPED_NV: GLenum = 0x92B3;
pub static INVERT_OVG_NV: GLenum = 0x92B4;
pub static ATOMIC_COUNTER_BUFFER: GLenum = 0x92C0;
pub static ATOMIC_COUNTER_BUFFER_BINDING: GLenum = 0x92C1;
pub static ATOMIC_COUNTER_BUFFER_START: GLenum = 0x92C2;
pub static ATOMIC_COUNTER_BUFFER_SIZE: GLenum = 0x92C3;
pub static ATOMIC_COUNTER_BUFFER_DATA_SIZE: GLenum = 0x92C4;
pub static ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS: GLenum = 0x92C5;
pub static ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES: GLenum = 0x92C6;
pub static ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER: GLenum = 0x92C7;
pub static ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER: GLenum = 0x92C8;
pub static ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER: GLenum = 0x92C9;
pub static ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER: GLenum = 0x92CA;
pub static ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER: GLenum = 0x92CB;
pub static MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92CC;
pub static MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92CD;
pub static MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92CE;
pub static MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92CF;
pub static MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92D0;
pub static MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92D1;
pub static MAX_VERTEX_ATOMIC_COUNTERS: GLenum = 0x92D2;
pub static MAX_TESS_CONTROL_ATOMIC_COUNTERS: GLenum = 0x92D3;
pub static MAX_TESS_EVALUATION_ATOMIC_COUNTERS: GLenum = 0x92D4;
pub static MAX_GEOMETRY_ATOMIC_COUNTERS: GLenum = 0x92D5;
pub static MAX_FRAGMENT_ATOMIC_COUNTERS: GLenum = 0x92D6;
pub static MAX_COMBINED_ATOMIC_COUNTERS: GLenum = 0x92D7;
pub static MAX_ATOMIC_COUNTER_BUFFER_SIZE: GLenum = 0x92D8;
pub static ACTIVE_ATOMIC_COUNTER_BUFFERS: GLenum = 0x92D9;
pub static UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX: GLenum = 0x92DA;
pub static UNSIGNED_INT_ATOMIC_COUNTER: GLenum = 0x92DB;
pub static MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: GLenum = 0x92DC;
pub static DEBUG_OUTPUT: GLenum = 0x92E0;
pub static DEBUG_OUTPUT_KHR: GLenum = 0x92E0;
pub static UNIFORM: GLenum = 0x92E1;
pub static UNIFORM_BLOCK: GLenum = 0x92E2;
pub static PROGRAM_INPUT: GLenum = 0x92E3;
pub static PROGRAM_OUTPUT: GLenum = 0x92E4;
pub static BUFFER_VARIABLE: GLenum = 0x92E5;
pub static SHADER_STORAGE_BLOCK: GLenum = 0x92E6;
pub static IS_PER_PATCH: GLenum = 0x92E7;
pub static VERTEX_SUBROUTINE: GLenum = 0x92E8;
pub static TESS_CONTROL_SUBROUTINE: GLenum = 0x92E9;
pub static TESS_EVALUATION_SUBROUTINE: GLenum = 0x92EA;
pub static GEOMETRY_SUBROUTINE: GLenum = 0x92EB;
pub static FRAGMENT_SUBROUTINE: GLenum = 0x92EC;
pub static COMPUTE_SUBROUTINE: GLenum = 0x92ED;
pub static VERTEX_SUBROUTINE_UNIFORM: GLenum = 0x92EE;
pub static TESS_CONTROL_SUBROUTINE_UNIFORM: GLenum = 0x92EF;
pub static TESS_EVALUATION_SUBROUTINE_UNIFORM: GLenum = 0x92F0;
pub static GEOMETRY_SUBROUTINE_UNIFORM: GLenum = 0x92F1;
pub static FRAGMENT_SUBROUTINE_UNIFORM: GLenum = 0x92F2;
pub static COMPUTE_SUBROUTINE_UNIFORM: GLenum = 0x92F3;
pub static TRANSFORM_FEEDBACK_VARYING: GLenum = 0x92F4;
pub static ACTIVE_RESOURCES: GLenum = 0x92F5;
pub static MAX_NAME_LENGTH: GLenum = 0x92F6;
pub static MAX_NUM_ACTIVE_VARIABLES: GLenum = 0x92F7;
pub static MAX_NUM_COMPATIBLE_SUBROUTINES: GLenum = 0x92F8;
pub static NAME_LENGTH: GLenum = 0x92F9;
pub static TYPE: GLenum = 0x92FA;
pub static ARRAY_SIZE: GLenum = 0x92FB;
pub static OFFSET: GLenum = 0x92FC;
pub static BLOCK_INDEX: GLenum = 0x92FD;
pub static ARRAY_STRIDE: GLenum = 0x92FE;
pub static MATRIX_STRIDE: GLenum = 0x92FF;
pub static IS_ROW_MAJOR: GLenum = 0x9300;
pub static ATOMIC_COUNTER_BUFFER_INDEX: GLenum = 0x9301;
pub static BUFFER_BINDING: GLenum = 0x9302;
pub static BUFFER_DATA_SIZE: GLenum = 0x9303;
pub static NUM_ACTIVE_VARIABLES: GLenum = 0x9304;
pub static ACTIVE_VARIABLES: GLenum = 0x9305;
pub static REFERENCED_BY_VERTEX_SHADER: GLenum = 0x9306;
pub static REFERENCED_BY_TESS_CONTROL_SHADER: GLenum = 0x9307;
pub static REFERENCED_BY_TESS_EVALUATION_SHADER: GLenum = 0x9308;
pub static REFERENCED_BY_GEOMETRY_SHADER: GLenum = 0x9309;
pub static REFERENCED_BY_FRAGMENT_SHADER: GLenum = 0x930A;
pub static REFERENCED_BY_COMPUTE_SHADER: GLenum = 0x930B;
pub static TOP_LEVEL_ARRAY_SIZE: GLenum = 0x930C;
pub static TOP_LEVEL_ARRAY_STRIDE: GLenum = 0x930D;
pub static LOCATION: GLenum = 0x930E;
pub static LOCATION_INDEX: GLenum = 0x930F;
pub static FRAMEBUFFER_DEFAULT_WIDTH: GLenum = 0x9310;
pub static FRAMEBUFFER_DEFAULT_HEIGHT: GLenum = 0x9311;
pub static FRAMEBUFFER_DEFAULT_LAYERS: GLenum = 0x9312;
pub static FRAMEBUFFER_DEFAULT_SAMPLES: GLenum = 0x9313;
pub static FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: GLenum = 0x9314;
pub static MAX_FRAMEBUFFER_WIDTH: GLenum = 0x9315;
pub static MAX_FRAMEBUFFER_HEIGHT: GLenum = 0x9316;
pub static MAX_FRAMEBUFFER_LAYERS: GLenum = 0x9317;
pub static MAX_FRAMEBUFFER_SAMPLES: GLenum = 0x9318;
pub static MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB: GLenum = 0x9344;
pub static MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB: GLenum = 0x9345;
pub static LOCATION_COMPONENT: GLenum = 0x934A;
pub static TRANSFORM_FEEDBACK_BUFFER_INDEX: GLenum = 0x934B;
pub static TRANSFORM_FEEDBACK_BUFFER_STRIDE: GLenum = 0x934C;
pub static CLEAR_TEXTURE: GLenum = 0x9365;
pub static NUM_SAMPLE_COUNTS: GLenum = 0x9380;
pub static TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE: GLenum = 0x93A0;
pub static TEXTURE_USAGE_ANGLE: GLenum = 0x93A2;
pub static FRAMEBUFFER_ATTACHMENT_ANGLE: GLenum = 0x93A3;
pub static PACK_REVERSE_ROW_ORDER_ANGLE: GLenum = 0x93A4;
pub static PROGRAM_BINARY_ANGLE: GLenum = 0x93A6;
pub static COMPRESSED_RGBA_ASTC_4x4_KHR: GLenum = 0x93B0;
pub static COMPRESSED_RGBA_ASTC_5x4_KHR: GLenum = 0x93B1;
pub static COMPRESSED_RGBA_ASTC_5x5_KHR: GLenum = 0x93B2;
pub static COMPRESSED_RGBA_ASTC_6x5_KHR: GLenum = 0x93B3;
pub static COMPRESSED_RGBA_ASTC_6x6_KHR: GLenum = 0x93B4;
pub static COMPRESSED_RGBA_ASTC_8x5_KHR: GLenum = 0x93B5;
pub static COMPRESSED_RGBA_ASTC_8x6_KHR: GLenum = 0x93B6;
pub static COMPRESSED_RGBA_ASTC_8x8_KHR: GLenum = 0x93B7;
pub static COMPRESSED_RGBA_ASTC_10x5_KHR: GLenum = 0x93B8;
pub static COMPRESSED_RGBA_ASTC_10x6_KHR: GLenum = 0x93B9;
pub static COMPRESSED_RGBA_ASTC_10x8_KHR: GLenum = 0x93BA;
pub static COMPRESSED_RGBA_ASTC_10x10_KHR: GLenum = 0x93BB;
pub static COMPRESSED_RGBA_ASTC_12x10_KHR: GLenum = 0x93BC;
pub static COMPRESSED_RGBA_ASTC_12x12_KHR: GLenum = 0x93BD;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: GLenum = 0x93D0;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: GLenum = 0x93D1;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: GLenum = 0x93D2;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: GLenum = 0x93D3;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: GLenum = 0x93D4;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: GLenum = 0x93D5;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: GLenum = 0x93D6;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: GLenum = 0x93D7;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: GLenum = 0x93D8;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: GLenum = 0x93D9;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: GLenum = 0x93DA;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: GLenum = 0x93DB;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: GLenum = 0x93DC;
pub static COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: GLenum = 0x93DD;
pub static RASTER_POSITION_UNCLIPPED_IBM: GLenum = 0x19262;
pub static CULL_VERTEX_IBM: GLenum = 103050;
pub static ALL_STATIC_DATA_IBM: GLenum = 103060;
pub static STATIC_VERTEX_ARRAY_IBM: GLenum = 103061;
pub static VERTEX_ARRAY_LIST_IBM: GLenum = 103070;
pub static NORMAL_ARRAY_LIST_IBM: GLenum = 103071;
pub static COLOR_ARRAY_LIST_IBM: GLenum = 103072;
pub static INDEX_ARRAY_LIST_IBM: GLenum = 103073;
pub static TEXTURE_COORD_ARRAY_LIST_IBM: GLenum = 103074;
pub static EDGE_FLAG_ARRAY_LIST_IBM: GLenum = 103075;
pub static FOG_COORDINATE_ARRAY_LIST_IBM: GLenum = 103076;
pub static SECONDARY_COLOR_ARRAY_LIST_IBM: GLenum = 103077;
pub static VERTEX_ARRAY_LIST_STRIDE_IBM: GLenum = 103080;
pub static NORMAL_ARRAY_LIST_STRIDE_IBM: GLenum = 103081;
pub static COLOR_ARRAY_LIST_STRIDE_IBM: GLenum = 103082;
pub static INDEX_ARRAY_LIST_STRIDE_IBM: GLenum = 103083;
pub static TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM: GLenum = 103084;
pub static EDGE_FLAG_ARRAY_LIST_STRIDE_IBM: GLenum = 103085;
pub static FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM: GLenum = 103086;
pub static SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM: GLenum = 103087;
pub static PREFER_DOUBLEBUFFER_HINT_PGI: GLenum = 0x1A1F8;
pub static CONSERVE_MEMORY_HINT_PGI: GLenum = 0x1A1FD;
pub static RECLAIM_MEMORY_HINT_PGI: GLenum = 0x1A1FE;
pub static NATIVE_GRAPHICS_HANDLE_PGI: GLenum = 0x1A202;
pub static NATIVE_GRAPHICS_BEGIN_HINT_PGI: GLenum = 0x1A203;
pub static NATIVE_GRAPHICS_END_HINT_PGI: GLenum = 0x1A204;
pub static ALWAYS_FAST_HINT_PGI: GLenum = 0x1A20C;
pub static ALWAYS_SOFT_HINT_PGI: GLenum = 0x1A20D;
pub static ALLOW_DRAW_OBJ_HINT_PGI: GLenum = 0x1A20E;
pub static ALLOW_DRAW_WIN_HINT_PGI: GLenum = 0x1A20F;
pub static ALLOW_DRAW_FRG_HINT_PGI: GLenum = 0x1A210;
pub static ALLOW_DRAW_MEM_HINT_PGI: GLenum = 0x1A211;
pub static STRICT_DEPTHFUNC_HINT_PGI: GLenum = 0x1A216;
pub static STRICT_LIGHTING_HINT_PGI: GLenum = 0x1A217;
pub static STRICT_SCISSOR_HINT_PGI: GLenum = 0x1A218;
pub static FULL_STIPPLE_HINT_PGI: GLenum = 0x1A219;
pub static CLIP_NEAR_HINT_PGI: GLenum = 0x1A220;
pub static CLIP_FAR_HINT_PGI: GLenum = 0x1A221;
pub static WIDE_LINE_HINT_PGI: GLenum = 0x1A222;
pub static BACK_NORMALS_HINT_PGI: GLenum = 0x1A223;
pub static VERTEX_DATA_HINT_PGI: GLenum = 0x1A22A;
pub static VERTEX_CONSISTENT_HINT_PGI: GLenum = 0x1A22B;
pub static MATERIAL_SIDE_HINT_PGI: GLenum = 0x1A22C;
pub static MAX_VERTEX_HINT_PGI: GLenum = 0x1A22D;
pub static MAX_CLIP_PLANES_IMG: GLenum = 0x0D32;
pub static TEXTURE_GEN_MODE_OES: GLenum = 0x2500;
pub static CLIP_PLANE0_IMG: GLenum = 0x3000;
pub static CLIP_PLANE1_IMG: GLenum = 0x3001;
pub static CLIP_PLANE2_IMG: GLenum = 0x3002;
pub static CLIP_PLANE3_IMG: GLenum = 0x3003;
pub static CLIP_PLANE4_IMG: GLenum = 0x3004;
pub static CLIP_PLANE5_IMG: GLenum = 0x3005;
pub static ALPHA8_OES: GLenum = 0x803C;
pub static LUMINANCE8_OES: GLenum = 0x8040;
pub static LUMINANCE4_ALPHA4_OES: GLenum = 0x8043;
pub static LUMINANCE8_ALPHA8_OES: GLenum = 0x8045;
pub static RGB8_OES: GLenum = 0x8051;
pub static TEXTURE_BINDING_3D_OES: GLenum = 0x806A;
pub static BGRA_IMG: GLenum = 0x80E1;
pub static TEXTURE_MAX_LEVEL_APPLE: GLenum = 0x813D;
pub static FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: GLenum = 0x8210;
pub static R32F_EXT: GLenum = 0x822E;
pub static RG32F_EXT: GLenum = 0x8230;
pub static LOSE_CONTEXT_ON_RESET_EXT: GLenum = 0x8252;
pub static GUILTY_CONTEXT_RESET_EXT: GLenum = 0x8253;
pub static INNOCENT_CONTEXT_RESET_EXT: GLenum = 0x8254;
pub static UNKNOWN_CONTEXT_RESET_EXT: GLenum = 0x8255;
pub static RESET_NOTIFICATION_STRATEGY_EXT: GLenum = 0x8256;
pub static NO_RESET_NOTIFICATION_EXT: GLenum = 0x8261;
pub static UNSIGNED_SHORT_4_4_4_4_REV_IMG: GLenum = 0x8365;
pub static VERTEX_ARRAY_BINDING_OES: GLenum = 0x85B5;
pub static RGBA32F_EXT: GLenum = 0x8814;
pub static RGB32F_EXT: GLenum = 0x8815;
pub static ALPHA32F_EXT: GLenum = 0x8816;
pub static LUMINANCE32F_EXT: GLenum = 0x8818;
pub static LUMINANCE_ALPHA32F_EXT: GLenum = 0x8819;
pub static ALPHA16F_EXT: GLenum = 0x881C;
pub static LUMINANCE16F_EXT: GLenum = 0x881E;
pub static LUMINANCE_ALPHA16F_EXT: GLenum = 0x881F;
pub static DRAW_FRAMEBUFFER_BINDING_ANGLE: GLenum = 0x8CA6;
pub static DRAW_FRAMEBUFFER_BINDING_APPLE: GLenum = 0x8CA6;
pub static READ_FRAMEBUFFER_APPLE: GLenum = 0x8CA8;
pub static DRAW_FRAMEBUFFER_APPLE: GLenum = 0x8CA9;
pub static READ_FRAMEBUFFER_BINDING_ANGLE: GLenum = 0x8CAA;
pub static READ_FRAMEBUFFER_BINDING_APPLE: GLenum = 0x8CAA;
pub static RENDERBUFFER_SAMPLES_APPLE: GLenum = 0x8CAB;
pub static FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE: GLenum = 0x8D56;
pub static MAX_SAMPLES_APPLE: GLenum = 0x8D57;
pub static CONTEXT_ROBUST_ACCESS_EXT: GLenum = 0x90F3;
pub static TEXTURE_IMMUTABLE_FORMAT_EXT: GLenum = 0x912F;
pub static BGRA8_EXT: GLenum = 0x93A1;

#[fixed_stack_segment] #[inline] pub fn Accum(op: GLenum, value: GLfloat) -> c_void { unsafe { (storage::Accum.f)(op, value) } }
#[fixed_stack_segment] #[inline] pub fn AccumxOES(op: GLenum, value: GLfixed) -> c_void { unsafe { (storage::AccumxOES.f)(op, value) } }
#[fixed_stack_segment] #[inline] pub fn ActiveProgramEXT(program: GLuint) -> c_void { unsafe { (storage::ActiveProgramEXT.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn ActiveShaderProgram(pipeline: GLuint, program: GLuint) -> c_void { unsafe { (storage::ActiveShaderProgram.f)(pipeline, program) } }
#[fixed_stack_segment] #[inline] pub fn ActiveShaderProgramEXT(pipeline: GLuint, program: GLuint) -> c_void { unsafe { (storage::ActiveShaderProgramEXT.f)(pipeline, program) } }
#[fixed_stack_segment] #[inline] pub fn ActiveStencilFaceEXT(face: GLenum) -> c_void { unsafe { (storage::ActiveStencilFaceEXT.f)(face) } }
#[fixed_stack_segment] #[inline] pub fn ActiveTexture(texture: GLenum) -> c_void { unsafe { (storage::ActiveTexture.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn ActiveTextureARB(texture: GLenum) -> c_void { unsafe { (storage::ActiveTextureARB.f)(texture) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ActiveVaryingNV(program: GLuint, name: *GLchar) -> c_void { (storage::ActiveVaryingNV.f)(program, name) }
#[fixed_stack_segment] #[inline] pub fn AlphaFragmentOp1ATI(op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint) -> c_void { unsafe { (storage::AlphaFragmentOp1ATI.f)(op, dst, dstMod, arg1, arg1Rep, arg1Mod) } }
#[fixed_stack_segment] #[inline] pub fn AlphaFragmentOp2ATI(op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint) -> c_void { unsafe { (storage::AlphaFragmentOp2ATI.f)(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod) } }
#[fixed_stack_segment] #[inline] pub fn AlphaFragmentOp3ATI(op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint) -> c_void { unsafe { (storage::AlphaFragmentOp3ATI.f)(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod) } }
#[fixed_stack_segment] #[inline] pub fn AlphaFunc(func: GLenum, ref_: GLfloat) -> c_void { unsafe { (storage::AlphaFunc.f)(func, ref_) } }
#[fixed_stack_segment] #[inline] pub fn AlphaFuncQCOM(func: GLenum, ref_: GLclampf) -> c_void { unsafe { (storage::AlphaFuncQCOM.f)(func, ref_) } }
#[fixed_stack_segment] #[inline] pub fn AlphaFuncx(func: GLenum, ref_: GLfixed) -> c_void { unsafe { (storage::AlphaFuncx.f)(func, ref_) } }
#[fixed_stack_segment] #[inline] pub fn AlphaFuncxOES(func: GLenum, ref_: GLfixed) -> c_void { unsafe { (storage::AlphaFuncxOES.f)(func, ref_) } }
#[fixed_stack_segment] #[inline] pub fn ApplyTextureEXT(mode: GLenum) -> c_void { unsafe { (storage::ApplyTextureEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn AreProgramsResidentNV(n: GLsizei, programs: *GLuint, residences: *GLboolean) -> GLboolean { (storage::AreProgramsResidentNV.f)(n, programs, residences) }
#[fixed_stack_segment] #[inline] pub unsafe fn AreTexturesResident(n: GLsizei, textures: *GLuint, residences: *GLboolean) -> GLboolean { (storage::AreTexturesResident.f)(n, textures, residences) }
#[fixed_stack_segment] #[inline] pub unsafe fn AreTexturesResidentEXT(n: GLsizei, textures: *GLuint, residences: *GLboolean) -> GLboolean { (storage::AreTexturesResidentEXT.f)(n, textures, residences) }
#[fixed_stack_segment] #[inline] pub fn ArrayElement(i: GLint) -> c_void { unsafe { (storage::ArrayElement.f)(i) } }
#[fixed_stack_segment] #[inline] pub fn ArrayElementEXT(i: GLint) -> c_void { unsafe { (storage::ArrayElementEXT.f)(i) } }
#[fixed_stack_segment] #[inline] pub fn ArrayObjectATI(array: GLenum, size: GLint, type_: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint) -> c_void { unsafe { (storage::ArrayObjectATI.f)(array, size, type_, stride, buffer, offset) } }
#[fixed_stack_segment] #[inline] pub fn AsyncMarkerSGIX(marker: GLuint) -> c_void { unsafe { (storage::AsyncMarkerSGIX.f)(marker) } }
#[fixed_stack_segment] #[inline] pub fn AttachObjectARB(containerObj: GLhandleARB, obj: GLhandleARB) -> c_void { unsafe { (storage::AttachObjectARB.f)(containerObj, obj) } }
#[fixed_stack_segment] #[inline] pub fn AttachShader(program: GLuint, shader: GLuint) -> c_void { unsafe { (storage::AttachShader.f)(program, shader) } }
#[fixed_stack_segment] #[inline] pub fn Begin(mode: GLenum) -> c_void { unsafe { (storage::Begin.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn BeginConditionalRender(id: GLuint, mode: GLenum) -> c_void { unsafe { (storage::BeginConditionalRender.f)(id, mode) } }
#[fixed_stack_segment] #[inline] pub fn BeginConditionalRenderNV(id: GLuint, mode: GLenum) -> c_void { unsafe { (storage::BeginConditionalRenderNV.f)(id, mode) } }
#[fixed_stack_segment] #[inline] pub fn BeginConditionalRenderNVX(id: GLuint) -> c_void { unsafe { (storage::BeginConditionalRenderNVX.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn BeginFragmentShaderATI() -> c_void { unsafe { (storage::BeginFragmentShaderATI.f)() } }
#[fixed_stack_segment] #[inline] pub fn BeginOcclusionQueryNV(id: GLuint) -> c_void { unsafe { (storage::BeginOcclusionQueryNV.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn BeginPerfMonitorAMD(monitor: GLuint) -> c_void { unsafe { (storage::BeginPerfMonitorAMD.f)(monitor) } }
#[fixed_stack_segment] #[inline] pub fn BeginQuery(target: GLenum, id: GLuint) -> c_void { unsafe { (storage::BeginQuery.f)(target, id) } }
#[fixed_stack_segment] #[inline] pub fn BeginQueryARB(target: GLenum, id: GLuint) -> c_void { unsafe { (storage::BeginQueryARB.f)(target, id) } }
#[fixed_stack_segment] #[inline] pub fn BeginQueryEXT(target: GLenum, id: GLuint) -> c_void { unsafe { (storage::BeginQueryEXT.f)(target, id) } }
#[fixed_stack_segment] #[inline] pub fn BeginQueryIndexed(target: GLenum, index: GLuint, id: GLuint) -> c_void { unsafe { (storage::BeginQueryIndexed.f)(target, index, id) } }
#[fixed_stack_segment] #[inline] pub fn BeginTransformFeedback(primitiveMode: GLenum) -> c_void { unsafe { (storage::BeginTransformFeedback.f)(primitiveMode) } }
#[fixed_stack_segment] #[inline] pub fn BeginTransformFeedbackEXT(primitiveMode: GLenum) -> c_void { unsafe { (storage::BeginTransformFeedbackEXT.f)(primitiveMode) } }
#[fixed_stack_segment] #[inline] pub fn BeginTransformFeedbackNV(primitiveMode: GLenum) -> c_void { unsafe { (storage::BeginTransformFeedbackNV.f)(primitiveMode) } }
#[fixed_stack_segment] #[inline] pub fn BeginVertexShaderEXT() -> c_void { unsafe { (storage::BeginVertexShaderEXT.f)() } }
#[fixed_stack_segment] #[inline] pub fn BeginVideoCaptureNV(video_capture_slot: GLuint) -> c_void { unsafe { (storage::BeginVideoCaptureNV.f)(video_capture_slot) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BindAttribLocation(program: GLuint, index: GLuint, name: *GLchar) -> c_void { (storage::BindAttribLocation.f)(program, index, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn BindAttribLocationARB(programObj: GLhandleARB, index: GLuint, name: *GLcharARB) -> c_void { (storage::BindAttribLocationARB.f)(programObj, index, name) }
#[fixed_stack_segment] #[inline] pub fn BindBuffer(target: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::BindBuffer.f)(target, buffer) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferARB(target: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::BindBufferARB.f)(target, buffer) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferBase(target: GLenum, index: GLuint, buffer: GLuint) -> c_void { unsafe { (storage::BindBufferBase.f)(target, index, buffer) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferBaseEXT(target: GLenum, index: GLuint, buffer: GLuint) -> c_void { unsafe { (storage::BindBufferBaseEXT.f)(target, index, buffer) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferBaseNV(target: GLenum, index: GLuint, buffer: GLuint) -> c_void { unsafe { (storage::BindBufferBaseNV.f)(target, index, buffer) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferOffsetEXT(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr) -> c_void { unsafe { (storage::BindBufferOffsetEXT.f)(target, index, buffer, offset) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferOffsetNV(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr) -> c_void { unsafe { (storage::BindBufferOffsetNV.f)(target, index, buffer, offset) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferRange(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::BindBufferRange.f)(target, index, buffer, offset, size) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferRangeEXT(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::BindBufferRangeEXT.f)(target, index, buffer, offset, size) } }
#[fixed_stack_segment] #[inline] pub fn BindBufferRangeNV(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::BindBufferRangeNV.f)(target, index, buffer, offset, size) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BindBuffersBase(target: GLenum, first: GLuint, count: GLsizei, buffers: *GLuint) -> c_void { (storage::BindBuffersBase.f)(target, first, count, buffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn BindBuffersRange(target: GLenum, first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, sizes: *GLsizeiptr) -> c_void { (storage::BindBuffersRange.f)(target, first, count, buffers, offsets, sizes) }
#[fixed_stack_segment] #[inline] pub unsafe fn BindFragDataLocation(program: GLuint, color: GLuint, name: *GLchar) -> c_void { (storage::BindFragDataLocation.f)(program, color, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn BindFragDataLocationEXT(program: GLuint, color: GLuint, name: *GLchar) -> c_void { (storage::BindFragDataLocationEXT.f)(program, color, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn BindFragDataLocationIndexed(program: GLuint, colorNumber: GLuint, index: GLuint, name: *GLchar) -> c_void { (storage::BindFragDataLocationIndexed.f)(program, colorNumber, index, name) }
#[fixed_stack_segment] #[inline] pub fn BindFragmentShaderATI(id: GLuint) -> c_void { unsafe { (storage::BindFragmentShaderATI.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn BindFramebuffer(target: GLenum, framebuffer: GLuint) -> c_void { unsafe { (storage::BindFramebuffer.f)(target, framebuffer) } }
#[fixed_stack_segment] #[inline] pub fn BindFramebufferEXT(target: GLenum, framebuffer: GLuint) -> c_void { unsafe { (storage::BindFramebufferEXT.f)(target, framebuffer) } }
#[fixed_stack_segment] #[inline] pub fn BindFramebufferOES(target: GLenum, framebuffer: GLuint) -> c_void { unsafe { (storage::BindFramebufferOES.f)(target, framebuffer) } }
#[fixed_stack_segment] #[inline] pub fn BindImageTexture(unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum) -> c_void { unsafe { (storage::BindImageTexture.f)(unit, texture, level, layered, layer, access, format) } }
#[fixed_stack_segment] #[inline] pub fn BindImageTextureEXT(index: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLint) -> c_void { unsafe { (storage::BindImageTextureEXT.f)(index, texture, level, layered, layer, access, format) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BindImageTextures(first: GLuint, count: GLsizei, textures: *GLuint) -> c_void { (storage::BindImageTextures.f)(first, count, textures) }
#[fixed_stack_segment] #[inline] pub fn BindLightParameterEXT(light: GLenum, value: GLenum) -> GLuint { unsafe { (storage::BindLightParameterEXT.f)(light, value) } }
#[fixed_stack_segment] #[inline] pub fn BindMaterialParameterEXT(face: GLenum, value: GLenum) -> GLuint { unsafe { (storage::BindMaterialParameterEXT.f)(face, value) } }
#[fixed_stack_segment] #[inline] pub fn BindMultiTextureEXT(texunit: GLenum, target: GLenum, texture: GLuint) -> c_void { unsafe { (storage::BindMultiTextureEXT.f)(texunit, target, texture) } }
#[fixed_stack_segment] #[inline] pub fn BindParameterEXT(value: GLenum) -> GLuint { unsafe { (storage::BindParameterEXT.f)(value) } }
#[fixed_stack_segment] #[inline] pub fn BindProgramARB(target: GLenum, program: GLuint) -> c_void { unsafe { (storage::BindProgramARB.f)(target, program) } }
#[fixed_stack_segment] #[inline] pub fn BindProgramNV(target: GLenum, id: GLuint) -> c_void { unsafe { (storage::BindProgramNV.f)(target, id) } }
#[fixed_stack_segment] #[inline] pub fn BindProgramPipeline(pipeline: GLuint) -> c_void { unsafe { (storage::BindProgramPipeline.f)(pipeline) } }
#[fixed_stack_segment] #[inline] pub fn BindProgramPipelineEXT(pipeline: GLuint) -> c_void { unsafe { (storage::BindProgramPipelineEXT.f)(pipeline) } }
#[fixed_stack_segment] #[inline] pub fn BindRenderbuffer(target: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::BindRenderbuffer.f)(target, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn BindRenderbufferEXT(target: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::BindRenderbufferEXT.f)(target, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn BindRenderbufferOES(target: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::BindRenderbufferOES.f)(target, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn BindSampler(unit: GLuint, sampler: GLuint) -> c_void { unsafe { (storage::BindSampler.f)(unit, sampler) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BindSamplers(first: GLuint, count: GLsizei, samplers: *GLuint) -> c_void { (storage::BindSamplers.f)(first, count, samplers) }
#[fixed_stack_segment] #[inline] pub fn BindTexGenParameterEXT(unit: GLenum, coord: GLenum, value: GLenum) -> GLuint { unsafe { (storage::BindTexGenParameterEXT.f)(unit, coord, value) } }
#[fixed_stack_segment] #[inline] pub fn BindTexture(target: GLenum, texture: GLuint) -> c_void { unsafe { (storage::BindTexture.f)(target, texture) } }
#[fixed_stack_segment] #[inline] pub fn BindTextureEXT(target: GLenum, texture: GLuint) -> c_void { unsafe { (storage::BindTextureEXT.f)(target, texture) } }
#[fixed_stack_segment] #[inline] pub fn BindTextureUnitParameterEXT(unit: GLenum, value: GLenum) -> GLuint { unsafe { (storage::BindTextureUnitParameterEXT.f)(unit, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BindTextures(first: GLuint, count: GLsizei, textures: *GLuint) -> c_void { (storage::BindTextures.f)(first, count, textures) }
#[fixed_stack_segment] #[inline] pub fn BindTransformFeedback(target: GLenum, id: GLuint) -> c_void { unsafe { (storage::BindTransformFeedback.f)(target, id) } }
#[fixed_stack_segment] #[inline] pub fn BindTransformFeedbackNV(target: GLenum, id: GLuint) -> c_void { unsafe { (storage::BindTransformFeedbackNV.f)(target, id) } }
#[fixed_stack_segment] #[inline] pub fn BindVertexArray(array: GLuint) -> c_void { unsafe { (storage::BindVertexArray.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn BindVertexArrayAPPLE(array: GLuint) -> c_void { unsafe { (storage::BindVertexArrayAPPLE.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn BindVertexArrayOES(array: GLuint) -> c_void { unsafe { (storage::BindVertexArrayOES.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn BindVertexBuffer(bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) -> c_void { unsafe { (storage::BindVertexBuffer.f)(bindingindex, buffer, offset, stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BindVertexBuffers(first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, strides: *GLsizei) -> c_void { (storage::BindVertexBuffers.f)(first, count, buffers, offsets, strides) }
#[fixed_stack_segment] #[inline] pub fn BindVertexShaderEXT(id: GLuint) -> c_void { unsafe { (storage::BindVertexShaderEXT.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn BindVideoCaptureStreamBufferNV(video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, offset: GLintptrARB) -> c_void { unsafe { (storage::BindVideoCaptureStreamBufferNV.f)(video_capture_slot, stream, frame_region, offset) } }
#[fixed_stack_segment] #[inline] pub fn BindVideoCaptureStreamTextureNV(video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, target: GLenum, texture: GLuint) -> c_void { unsafe { (storage::BindVideoCaptureStreamTextureNV.f)(video_capture_slot, stream, frame_region, target, texture) } }
#[fixed_stack_segment] #[inline] pub fn Binormal3bEXT(bx: GLbyte, by: GLbyte, bz: GLbyte) -> c_void { unsafe { (storage::Binormal3bEXT.f)(bx, by, bz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Binormal3bvEXT(v: *GLbyte) -> c_void { (storage::Binormal3bvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Binormal3dEXT(bx: GLdouble, by: GLdouble, bz: GLdouble) -> c_void { unsafe { (storage::Binormal3dEXT.f)(bx, by, bz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Binormal3dvEXT(v: *GLdouble) -> c_void { (storage::Binormal3dvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Binormal3fEXT(bx: GLfloat, by: GLfloat, bz: GLfloat) -> c_void { unsafe { (storage::Binormal3fEXT.f)(bx, by, bz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Binormal3fvEXT(v: *GLfloat) -> c_void { (storage::Binormal3fvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Binormal3iEXT(bx: GLint, by: GLint, bz: GLint) -> c_void { unsafe { (storage::Binormal3iEXT.f)(bx, by, bz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Binormal3ivEXT(v: *GLint) -> c_void { (storage::Binormal3ivEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Binormal3sEXT(bx: GLshort, by: GLshort, bz: GLshort) -> c_void { unsafe { (storage::Binormal3sEXT.f)(bx, by, bz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Binormal3svEXT(v: *GLshort) -> c_void { (storage::Binormal3svEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn BinormalPointerEXT(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::BinormalPointerEXT.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn Bitmap(width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: *GLubyte) -> c_void { (storage::Bitmap.f)(width, height, xorig, yorig, xmove, ymove, bitmap) }
#[fixed_stack_segment] #[inline] pub unsafe fn BitmapxOES(width: GLsizei, height: GLsizei, xorig: GLfixed, yorig: GLfixed, xmove: GLfixed, ymove: GLfixed, bitmap: *GLubyte) -> c_void { (storage::BitmapxOES.f)(width, height, xorig, yorig, xmove, ymove, bitmap) }
#[fixed_stack_segment] #[inline] pub fn BlendColor(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void { unsafe { (storage::BlendColor.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendColorEXT(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void { unsafe { (storage::BlendColorEXT.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendColorxOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void { unsafe { (storage::BlendColorxOES.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquation(mode: GLenum) -> c_void { unsafe { (storage::BlendEquation.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationEXT(mode: GLenum) -> c_void { unsafe { (storage::BlendEquationEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationIndexedAMD(buf: GLuint, mode: GLenum) -> c_void { unsafe { (storage::BlendEquationIndexedAMD.f)(buf, mode) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationOES(mode: GLenum) -> c_void { unsafe { (storage::BlendEquationOES.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum) -> c_void { unsafe { (storage::BlendEquationSeparate.f)(modeRGB, modeAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationSeparateEXT(modeRGB: GLenum, modeAlpha: GLenum) -> c_void { unsafe { (storage::BlendEquationSeparateEXT.f)(modeRGB, modeAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationSeparateIndexedAMD(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) -> c_void { unsafe { (storage::BlendEquationSeparateIndexedAMD.f)(buf, modeRGB, modeAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationSeparateOES(modeRGB: GLenum, modeAlpha: GLenum) -> c_void { unsafe { (storage::BlendEquationSeparateOES.f)(modeRGB, modeAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationSeparatei(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) -> c_void { unsafe { (storage::BlendEquationSeparatei.f)(buf, modeRGB, modeAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationSeparateiARB(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) -> c_void { unsafe { (storage::BlendEquationSeparateiARB.f)(buf, modeRGB, modeAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationi(buf: GLuint, mode: GLenum) -> c_void { unsafe { (storage::BlendEquationi.f)(buf, mode) } }
#[fixed_stack_segment] #[inline] pub fn BlendEquationiARB(buf: GLuint, mode: GLenum) -> c_void { unsafe { (storage::BlendEquationiARB.f)(buf, mode) } }
#[fixed_stack_segment] #[inline] pub fn BlendFunc(sfactor: GLenum, dfactor: GLenum) -> c_void { unsafe { (storage::BlendFunc.f)(sfactor, dfactor) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncIndexedAMD(buf: GLuint, src: GLenum, dst: GLenum) -> c_void { unsafe { (storage::BlendFuncIndexedAMD.f)(buf, src, dst) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparate(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparate.f)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparateEXT(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparateEXT.f)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparateINGR(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparateINGR.f)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparateIndexedAMD(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparateIndexedAMD.f)(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparateOES(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparateOES.f)(srcRGB, dstRGB, srcAlpha, dstAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparatei(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparatei.f)(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFuncSeparateiARB(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void { unsafe { (storage::BlendFuncSeparateiARB.f)(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) } }
#[fixed_stack_segment] #[inline] pub fn BlendFunci(buf: GLuint, src: GLenum, dst: GLenum) -> c_void { unsafe { (storage::BlendFunci.f)(buf, src, dst) } }
#[fixed_stack_segment] #[inline] pub fn BlendFunciARB(buf: GLuint, src: GLenum, dst: GLenum) -> c_void { unsafe { (storage::BlendFunciARB.f)(buf, src, dst) } }
#[fixed_stack_segment] #[inline] pub fn BlendParameteriNV(pname: GLenum, value: GLint) -> c_void { unsafe { (storage::BlendParameteriNV.f)(pname, value) } }
#[fixed_stack_segment] #[inline] pub fn BlendBarrierNV() -> c_void { unsafe { (storage::BlendBarrierNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn BlitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void { unsafe { (storage::BlitFramebuffer.f)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) } }
#[fixed_stack_segment] #[inline] pub fn BlitFramebufferANGLE(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void { unsafe { (storage::BlitFramebufferANGLE.f)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) } }
#[fixed_stack_segment] #[inline] pub fn BlitFramebufferEXT(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void { unsafe { (storage::BlitFramebufferEXT.f)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) } }
#[fixed_stack_segment] #[inline] pub fn BlitFramebufferNV(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void { unsafe { (storage::BlitFramebufferNV.f)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) } }
#[fixed_stack_segment] #[inline] pub fn BufferAddressRangeNV(pname: GLenum, index: GLuint, address: GLuint64EXT, length: GLsizeiptr) -> c_void { unsafe { (storage::BufferAddressRangeNV.f)(pname, index, address, length) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BufferData(target: GLenum, size: GLsizeiptr, data: *GLvoid, usage: GLenum) -> c_void { (storage::BufferData.f)(target, size, data, usage) }
#[fixed_stack_segment] #[inline] pub unsafe fn BufferDataARB(target: GLenum, size: GLsizeiptrARB, data: *GLvoid, usage: GLenum) -> c_void { (storage::BufferDataARB.f)(target, size, data, usage) }
#[fixed_stack_segment] #[inline] pub fn BufferParameteriAPPLE(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::BufferParameteriAPPLE.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn BufferStorage(target: GLenum, size: GLsizeiptr, data: *c_void, flags: GLbitfield) -> c_void { (storage::BufferStorage.f)(target, size, data, flags) }
#[fixed_stack_segment] #[inline] pub unsafe fn BufferSubData(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void { (storage::BufferSubData.f)(target, offset, size, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn BufferSubDataARB(target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: *GLvoid) -> c_void { (storage::BufferSubDataARB.f)(target, offset, size, data) }
#[fixed_stack_segment] #[inline] pub fn CallList(list: GLuint) -> c_void { unsafe { (storage::CallList.f)(list) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CallLists(n: GLsizei, type_: GLenum, lists: *GLvoid) -> c_void { (storage::CallLists.f)(n, type_, lists) }
#[fixed_stack_segment] #[inline] pub fn CheckFramebufferStatus(target: GLenum) -> GLenum { unsafe { (storage::CheckFramebufferStatus.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn CheckFramebufferStatusEXT(target: GLenum) -> GLenum { unsafe { (storage::CheckFramebufferStatusEXT.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn CheckFramebufferStatusOES(target: GLenum) -> GLenum { unsafe { (storage::CheckFramebufferStatusOES.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn CheckNamedFramebufferStatusEXT(framebuffer: GLuint, target: GLenum) -> GLenum { unsafe { (storage::CheckNamedFramebufferStatusEXT.f)(framebuffer, target) } }
#[fixed_stack_segment] #[inline] pub fn ClampColor(target: GLenum, clamp: GLenum) -> c_void { unsafe { (storage::ClampColor.f)(target, clamp) } }
#[fixed_stack_segment] #[inline] pub fn ClampColorARB(target: GLenum, clamp: GLenum) -> c_void { unsafe { (storage::ClampColorARB.f)(target, clamp) } }
#[fixed_stack_segment] #[inline] pub fn Clear(mask: GLbitfield) -> c_void { unsafe { (storage::Clear.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn ClearAccum(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void { unsafe { (storage::ClearAccum.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ClearAccumxOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void { unsafe { (storage::ClearAccumxOES.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearBufferData(target: GLenum, internalformat: GLenum, format: GLenum, type_: GLenum, data: *c_void) -> c_void { (storage::ClearBufferData.f)(target, internalformat, format, type_, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearBufferSubData(target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type_: GLenum, data: *c_void) -> c_void { (storage::ClearBufferSubData.f)(target, internalformat, offset, size, format, type_, data) }
#[fixed_stack_segment] #[inline] pub fn ClearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) -> c_void { unsafe { (storage::ClearBufferfi.f)(buffer, drawbuffer, depth, stencil) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearBufferfv(buffer: GLenum, drawbuffer: GLint, value: *GLfloat) -> c_void { (storage::ClearBufferfv.f)(buffer, drawbuffer, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearBufferiv(buffer: GLenum, drawbuffer: GLint, value: *GLint) -> c_void { (storage::ClearBufferiv.f)(buffer, drawbuffer, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearBufferuiv(buffer: GLenum, drawbuffer: GLint, value: *GLuint) -> c_void { (storage::ClearBufferuiv.f)(buffer, drawbuffer, value) }
#[fixed_stack_segment] #[inline] pub fn ClearColor(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void { unsafe { (storage::ClearColor.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ClearColorIiEXT(red: GLint, green: GLint, blue: GLint, alpha: GLint) -> c_void { unsafe { (storage::ClearColorIiEXT.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ClearColorIuiEXT(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) -> c_void { unsafe { (storage::ClearColorIuiEXT.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ClearColorx(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void { unsafe { (storage::ClearColorx.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ClearColorxOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void { unsafe { (storage::ClearColorxOES.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ClearDepth(depth: GLdouble) -> c_void { unsafe { (storage::ClearDepth.f)(depth) } }
#[fixed_stack_segment] #[inline] pub fn ClearDepthdNV(depth: GLdouble) -> c_void { unsafe { (storage::ClearDepthdNV.f)(depth) } }
#[fixed_stack_segment] #[inline] pub fn ClearDepthf(d: GLfloat) -> c_void { unsafe { (storage::ClearDepthf.f)(d) } }
#[fixed_stack_segment] #[inline] pub fn ClearDepthfOES(depth: GLclampf) -> c_void { unsafe { (storage::ClearDepthfOES.f)(depth) } }
#[fixed_stack_segment] #[inline] pub fn ClearDepthx(depth: GLfixed) -> c_void { unsafe { (storage::ClearDepthx.f)(depth) } }
#[fixed_stack_segment] #[inline] pub fn ClearDepthxOES(depth: GLfixed) -> c_void { unsafe { (storage::ClearDepthxOES.f)(depth) } }
#[fixed_stack_segment] #[inline] pub fn ClearIndex(c: GLfloat) -> c_void { unsafe { (storage::ClearIndex.f)(c) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearNamedBufferDataEXT(buffer: GLuint, internalformat: GLenum, format: GLenum, type_: GLenum, data: *c_void) -> c_void { (storage::ClearNamedBufferDataEXT.f)(buffer, internalformat, format, type_, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearNamedBufferSubDataEXT(buffer: GLuint, internalformat: GLenum, format: GLenum, type_: GLenum, offset: GLsizeiptr, size: GLsizeiptr, data: *c_void) -> c_void { (storage::ClearNamedBufferSubDataEXT.f)(buffer, internalformat, format, type_, offset, size, data) }
#[fixed_stack_segment] #[inline] pub fn ClearStencil(s: GLint) -> c_void { unsafe { (storage::ClearStencil.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearTexImage(texture: GLuint, level: GLint, format: GLenum, type_: GLenum, data: *c_void) -> c_void { (storage::ClearTexImage.f)(texture, level, format, type_, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClearTexSubImage(texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, data: *c_void) -> c_void { (storage::ClearTexSubImage.f)(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, data) }
#[fixed_stack_segment] #[inline] pub fn ClientActiveTexture(texture: GLenum) -> c_void { unsafe { (storage::ClientActiveTexture.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn ClientActiveTextureARB(texture: GLenum) -> c_void { unsafe { (storage::ClientActiveTextureARB.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn ClientActiveVertexStreamATI(stream: GLenum) -> c_void { unsafe { (storage::ClientActiveVertexStreamATI.f)(stream) } }
#[fixed_stack_segment] #[inline] pub fn ClientAttribDefaultEXT(mask: GLbitfield) -> c_void { unsafe { (storage::ClientAttribDefaultEXT.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn ClientWaitSync(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum { unsafe { (storage::ClientWaitSync.f)(sync, flags, timeout) } }
#[fixed_stack_segment] #[inline] pub fn ClientWaitSyncAPPLE(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum { unsafe { (storage::ClientWaitSyncAPPLE.f)(sync, flags, timeout) } }
#[fixed_stack_segment] #[inline] pub fn ClipControlARB(origin: GLenum, depth: GLenum) -> c_void { unsafe { (storage::ClipControlARB.f)(origin, depth) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlane(plane: GLenum, equation: *GLdouble) -> c_void { (storage::ClipPlane.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlanef(p: GLenum, eqn: *GLfloat) -> c_void { (storage::ClipPlanef.f)(p, eqn) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlanefIMG(p: GLenum, eqn: *GLfloat) -> c_void { (storage::ClipPlanefIMG.f)(p, eqn) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlanefOES(plane: GLenum, equation: *GLfloat) -> c_void { (storage::ClipPlanefOES.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlanex(plane: GLenum, equation: *GLfixed) -> c_void { (storage::ClipPlanex.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlanexIMG(p: GLenum, eqn: *GLfixed) -> c_void { (storage::ClipPlanexIMG.f)(p, eqn) }
#[fixed_stack_segment] #[inline] pub unsafe fn ClipPlanexOES(plane: GLenum, equation: *GLfixed) -> c_void { (storage::ClipPlanexOES.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub fn Color3b(red: GLbyte, green: GLbyte, blue: GLbyte) -> c_void { unsafe { (storage::Color3b.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3bv(v: *GLbyte) -> c_void { (storage::Color3bv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3d(red: GLdouble, green: GLdouble, blue: GLdouble) -> c_void { unsafe { (storage::Color3d.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3dv(v: *GLdouble) -> c_void { (storage::Color3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3f(red: GLfloat, green: GLfloat, blue: GLfloat) -> c_void { unsafe { (storage::Color3f.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn Color3fVertex3fSUN(r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Color3fVertex3fSUN.f)(r, g, b, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3fVertex3fvSUN(c: *GLfloat, v: *GLfloat) -> c_void { (storage::Color3fVertex3fvSUN.f)(c, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3fv(v: *GLfloat) -> c_void { (storage::Color3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3hNV(red: GLhalfNV, green: GLhalfNV, blue: GLhalfNV) -> c_void { unsafe { (storage::Color3hNV.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3hvNV(v: *GLhalfNV) -> c_void { (storage::Color3hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3i(red: GLint, green: GLint, blue: GLint) -> c_void { unsafe { (storage::Color3i.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3iv(v: *GLint) -> c_void { (storage::Color3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3s(red: GLshort, green: GLshort, blue: GLshort) -> c_void { unsafe { (storage::Color3s.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3sv(v: *GLshort) -> c_void { (storage::Color3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3ub(red: GLubyte, green: GLubyte, blue: GLubyte) -> c_void { unsafe { (storage::Color3ub.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3ubv(v: *GLubyte) -> c_void { (storage::Color3ubv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3ui(red: GLuint, green: GLuint, blue: GLuint) -> c_void { unsafe { (storage::Color3ui.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3uiv(v: *GLuint) -> c_void { (storage::Color3uiv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3us(red: GLushort, green: GLushort, blue: GLushort) -> c_void { unsafe { (storage::Color3us.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3usv(v: *GLushort) -> c_void { (storage::Color3usv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color3xOES(red: GLfixed, green: GLfixed, blue: GLfixed) -> c_void { unsafe { (storage::Color3xOES.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color3xvOES(components: *GLfixed) -> c_void { (storage::Color3xvOES.f)(components) }
#[fixed_stack_segment] #[inline] pub fn Color4b(red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) -> c_void { unsafe { (storage::Color4b.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4bv(v: *GLbyte) -> c_void { (storage::Color4bv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4d(red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) -> c_void { unsafe { (storage::Color4d.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4dv(v: *GLdouble) -> c_void { (storage::Color4dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4f(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void { unsafe { (storage::Color4f.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn Color4fNormal3fVertex3fSUN(r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Color4fNormal3fVertex3fSUN.f)(r, g, b, a, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4fNormal3fVertex3fvSUN(c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::Color4fNormal3fVertex3fvSUN.f)(c, n, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4fv(v: *GLfloat) -> c_void { (storage::Color4fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4hNV(red: GLhalfNV, green: GLhalfNV, blue: GLhalfNV, alpha: GLhalfNV) -> c_void { unsafe { (storage::Color4hNV.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4hvNV(v: *GLhalfNV) -> c_void { (storage::Color4hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4i(red: GLint, green: GLint, blue: GLint, alpha: GLint) -> c_void { unsafe { (storage::Color4i.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4iv(v: *GLint) -> c_void { (storage::Color4iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4s(red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) -> c_void { unsafe { (storage::Color4s.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4sv(v: *GLshort) -> c_void { (storage::Color4sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4ub(red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) -> c_void { unsafe { (storage::Color4ub.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn Color4ubVertex2fSUN(r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::Color4ubVertex2fSUN.f)(r, g, b, a, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4ubVertex2fvSUN(c: *GLubyte, v: *GLfloat) -> c_void { (storage::Color4ubVertex2fvSUN.f)(c, v) }
#[fixed_stack_segment] #[inline] pub fn Color4ubVertex3fSUN(r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Color4ubVertex3fSUN.f)(r, g, b, a, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4ubVertex3fvSUN(c: *GLubyte, v: *GLfloat) -> c_void { (storage::Color4ubVertex3fvSUN.f)(c, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4ubv(v: *GLubyte) -> c_void { (storage::Color4ubv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4ui(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) -> c_void { unsafe { (storage::Color4ui.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4uiv(v: *GLuint) -> c_void { (storage::Color4uiv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4us(red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) -> c_void { unsafe { (storage::Color4us.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4usv(v: *GLushort) -> c_void { (storage::Color4usv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Color4x(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void { unsafe { (storage::Color4x.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn Color4xOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void { unsafe { (storage::Color4xOES.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Color4xvOES(components: *GLfixed) -> c_void { (storage::Color4xvOES.f)(components) }
#[fixed_stack_segment] #[inline] pub fn ColorFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::ColorFormatNV.f)(size, type_, stride) } }
#[fixed_stack_segment] #[inline] pub fn ColorFragmentOp1ATI(op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint) -> c_void { unsafe { (storage::ColorFragmentOp1ATI.f)(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod) } }
#[fixed_stack_segment] #[inline] pub fn ColorFragmentOp2ATI(op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint) -> c_void { unsafe { (storage::ColorFragmentOp2ATI.f)(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod) } }
#[fixed_stack_segment] #[inline] pub fn ColorFragmentOp3ATI(op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint) -> c_void { unsafe { (storage::ColorFragmentOp3ATI.f)(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod) } }
#[fixed_stack_segment] #[inline] pub fn ColorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) -> c_void { unsafe { (storage::ColorMask.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub fn ColorMaskIndexedEXT(index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) -> c_void { unsafe { (storage::ColorMaskIndexedEXT.f)(index, r, g, b, a) } }
#[fixed_stack_segment] #[inline] pub fn ColorMaski(index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) -> c_void { unsafe { (storage::ColorMaski.f)(index, r, g, b, a) } }
#[fixed_stack_segment] #[inline] pub fn ColorMaterial(face: GLenum, mode: GLenum) -> c_void { unsafe { (storage::ColorMaterial.f)(face, mode) } }
#[fixed_stack_segment] #[inline] pub fn ColorP3ui(type_: GLenum, color: GLuint) -> c_void { unsafe { (storage::ColorP3ui.f)(type_, color) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorP3uiv(type_: GLenum, color: *GLuint) -> c_void { (storage::ColorP3uiv.f)(type_, color) }
#[fixed_stack_segment] #[inline] pub fn ColorP4ui(type_: GLenum, color: GLuint) -> c_void { unsafe { (storage::ColorP4ui.f)(type_, color) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorP4uiv(type_: GLenum, color: *GLuint) -> c_void { (storage::ColorP4uiv.f)(type_, color) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::ColorPointer.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void { (storage::ColorPointerEXT.f)(size, type_, stride, count, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::ColorPointerListIBM.f)(size, type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorPointervINTEL(size: GLint, type_: GLenum, pointer: **GLvoid) -> c_void { (storage::ColorPointervINTEL.f)(size, type_, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorSubTable(target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type_: GLenum, data: *GLvoid) -> c_void { (storage::ColorSubTable.f)(target, start, count, format, type_, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorSubTableEXT(target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type_: GLenum, data: *GLvoid) -> c_void { (storage::ColorSubTableEXT.f)(target, start, count, format, type_, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTable(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void { (storage::ColorTable.f)(target, internalformat, width, format, type_, table) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTableEXT(target: GLenum, internalFormat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void { (storage::ColorTableEXT.f)(target, internalFormat, width, format, type_, table) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTableParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::ColorTableParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTableParameterfvSGI(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::ColorTableParameterfvSGI.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTableParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::ColorTableParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTableParameterivSGI(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::ColorTableParameterivSGI.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ColorTableSGI(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void { (storage::ColorTableSGI.f)(target, internalformat, width, format, type_, table) }
#[fixed_stack_segment] #[inline] pub fn CombinerInputNV(stage: GLenum, portion: GLenum, variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum) -> c_void { unsafe { (storage::CombinerInputNV.f)(stage, portion, variable, input, mapping, componentUsage) } }
#[fixed_stack_segment] #[inline] pub fn CombinerOutputNV(stage: GLenum, portion: GLenum, abOutput: GLenum, cdOutput: GLenum, sumOutput: GLenum, scale: GLenum, bias: GLenum, abDotProduct: GLboolean, cdDotProduct: GLboolean, muxSum: GLboolean) -> c_void { unsafe { (storage::CombinerOutputNV.f)(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum) } }
#[fixed_stack_segment] #[inline] pub fn CombinerParameterfNV(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::CombinerParameterfNV.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CombinerParameterfvNV(pname: GLenum, params: *GLfloat) -> c_void { (storage::CombinerParameterfvNV.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn CombinerParameteriNV(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::CombinerParameteriNV.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CombinerParameterivNV(pname: GLenum, params: *GLint) -> c_void { (storage::CombinerParameterivNV.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn CombinerStageParameterfvNV(stage: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::CombinerStageParameterfvNV.f)(stage, pname, params) }
#[fixed_stack_segment] #[inline] pub fn CompileShader(shader: GLuint) -> c_void { unsafe { (storage::CompileShader.f)(shader) } }
#[fixed_stack_segment] #[inline] pub fn CompileShaderARB(shaderObj: GLhandleARB) -> c_void { unsafe { (storage::CompileShaderARB.f)(shaderObj) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CompileShaderIncludeARB(shader: GLuint, count: GLsizei, path: **GLchar, length: *GLint) -> c_void { (storage::CompileShaderIncludeARB.f)(shader, count, path, length) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedMultiTexImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedMultiTexImage1DEXT.f)(texunit, target, level, internalformat, width, border, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedMultiTexImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedMultiTexImage2DEXT.f)(texunit, target, level, internalformat, width, height, border, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedMultiTexImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedMultiTexImage3DEXT.f)(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedMultiTexSubImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedMultiTexSubImage1DEXT.f)(texunit, target, level, xoffset, width, format, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedMultiTexSubImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedMultiTexSubImage2DEXT.f)(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedMultiTexSubImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedMultiTexSubImage3DEXT.f)(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage1D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage1D.f)(target, level, internalformat, width, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage1DARB(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage1DARB.f)(target, level, internalformat, width, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage2D.f)(target, level, internalformat, width, height, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage2DARB(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage2DARB.f)(target, level, internalformat, width, height, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage3D.f)(target, level, internalformat, width, height, depth, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage3DARB(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage3DARB.f)(target, level, internalformat, width, height, depth, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexImage3DOES(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexImage3DOES.f)(target, level, internalformat, width, height, depth, border, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage1D.f)(target, level, xoffset, width, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage1DARB(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage1DARB.f)(target, level, xoffset, width, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage2D.f)(target, level, xoffset, yoffset, width, height, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage2DARB(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage2DARB.f)(target, level, xoffset, yoffset, width, height, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage3D.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage3DARB(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage3DARB.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTexSubImage3DOES(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void { (storage::CompressedTexSubImage3DOES.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTextureImage1DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedTextureImage1DEXT.f)(texture, target, level, internalformat, width, border, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTextureImage2DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedTextureImage2DEXT.f)(texture, target, level, internalformat, width, height, border, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTextureImage3DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedTextureImage3DEXT.f)(texture, target, level, internalformat, width, height, depth, border, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTextureSubImage1DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedTextureSubImage1DEXT.f)(texture, target, level, xoffset, width, format, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTextureSubImage2DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedTextureSubImage2DEXT.f)(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn CompressedTextureSubImage3DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void { (storage::CompressedTextureSubImage3DEXT.f)(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits) }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionFilter1D(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void { (storage::ConvolutionFilter1D.f)(target, internalformat, width, format, type_, image) }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionFilter1DEXT(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void { (storage::ConvolutionFilter1DEXT.f)(target, internalformat, width, format, type_, image) }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionFilter2D(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void { (storage::ConvolutionFilter2D.f)(target, internalformat, width, height, format, type_, image) }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionFilter2DEXT(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void { (storage::ConvolutionFilter2DEXT.f)(target, internalformat, width, height, format, type_, image) }
#[fixed_stack_segment] #[inline] pub fn ConvolutionParameterf(target: GLenum, pname: GLenum, params: GLfloat) -> c_void { unsafe { (storage::ConvolutionParameterf.f)(target, pname, params) } }
#[fixed_stack_segment] #[inline] pub fn ConvolutionParameterfEXT(target: GLenum, pname: GLenum, params: GLfloat) -> c_void { unsafe { (storage::ConvolutionParameterfEXT.f)(target, pname, params) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::ConvolutionParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::ConvolutionParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn ConvolutionParameteri(target: GLenum, pname: GLenum, params: GLint) -> c_void { unsafe { (storage::ConvolutionParameteri.f)(target, pname, params) } }
#[fixed_stack_segment] #[inline] pub fn ConvolutionParameteriEXT(target: GLenum, pname: GLenum, params: GLint) -> c_void { unsafe { (storage::ConvolutionParameteriEXT.f)(target, pname, params) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::ConvolutionParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::ConvolutionParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn ConvolutionParameterxOES(target: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::ConvolutionParameterxOES.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ConvolutionParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::ConvolutionParameterxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn CopyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::CopyBufferSubData.f)(readTarget, writeTarget, readOffset, writeOffset, size) } }
#[fixed_stack_segment] #[inline] pub fn CopyColorSubTable(target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyColorSubTable.f)(target, start, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyColorSubTableEXT(target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyColorSubTableEXT.f)(target, start, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyColorTable(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyColorTable.f)(target, internalformat, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyColorTableSGI(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyColorTableSGI.f)(target, internalformat, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyConvolutionFilter1D(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyConvolutionFilter1D.f)(target, internalformat, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyConvolutionFilter1DEXT(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyConvolutionFilter1DEXT.f)(target, internalformat, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyConvolutionFilter2D(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyConvolutionFilter2D.f)(target, internalformat, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyConvolutionFilter2DEXT(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyConvolutionFilter2DEXT.f)(target, internalformat, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyImageSubData(srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) -> c_void { unsafe { (storage::CopyImageSubData.f)(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth) } }
#[fixed_stack_segment] #[inline] pub fn CopyImageSubDataNV(srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void { unsafe { (storage::CopyImageSubDataNV.f)(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth) } }
#[fixed_stack_segment] #[inline] pub fn CopyMultiTexImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyMultiTexImage1DEXT.f)(texunit, target, level, internalformat, x, y, width, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyMultiTexImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyMultiTexImage2DEXT.f)(texunit, target, level, internalformat, x, y, width, height, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyMultiTexSubImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyMultiTexSubImage1DEXT.f)(texunit, target, level, xoffset, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyMultiTexSubImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyMultiTexSubImage2DEXT.f)(texunit, target, level, xoffset, yoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyMultiTexSubImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyMultiTexSubImage3DEXT.f)(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyPathNV(resultPath: GLuint, srcPath: GLuint) -> c_void { unsafe { (storage::CopyPathNV.f)(resultPath, srcPath) } }
#[fixed_stack_segment] #[inline] pub fn CopyPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, type_: GLenum) -> c_void { unsafe { (storage::CopyPixels.f)(x, y, width, height, type_) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexImage1D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyTexImage1D.f)(target, level, internalformat, x, y, width, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexImage1DEXT(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyTexImage1DEXT.f)(target, level, internalformat, x, y, width, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyTexImage2D.f)(target, level, internalformat, x, y, width, height, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexImage2DEXT(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyTexImage2DEXT.f)(target, level, internalformat, x, y, width, height, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage1D.f)(target, level, xoffset, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage1DEXT(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage1DEXT.f)(target, level, xoffset, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage2D.f)(target, level, xoffset, yoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage2DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage2DEXT.f)(target, level, xoffset, yoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage3D.f)(target, level, xoffset, yoffset, zoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage3DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage3DEXT.f)(target, level, xoffset, yoffset, zoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyTexSubImage3DOES(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTexSubImage3DOES.f)(target, level, xoffset, yoffset, zoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyTextureImage1DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyTextureImage1DEXT.f)(texture, target, level, internalformat, x, y, width, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyTextureImage2DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void { unsafe { (storage::CopyTextureImage2DEXT.f)(texture, target, level, internalformat, x, y, width, height, border) } }
#[fixed_stack_segment] #[inline] pub fn CopyTextureLevelsAPPLE(destinationTexture: GLuint, sourceTexture: GLuint, sourceBaseLevel: GLint, sourceLevelCount: GLsizei) -> c_void { unsafe { (storage::CopyTextureLevelsAPPLE.f)(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount) } }
#[fixed_stack_segment] #[inline] pub fn CopyTextureSubImage1DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void { unsafe { (storage::CopyTextureSubImage1DEXT.f)(texture, target, level, xoffset, x, y, width) } }
#[fixed_stack_segment] #[inline] pub fn CopyTextureSubImage2DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTextureSubImage2DEXT.f)(texture, target, level, xoffset, yoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub fn CopyTextureSubImage3DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::CopyTextureSubImage3DEXT.f)(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CoverFillPathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: *GLfloat) -> c_void { (storage::CoverFillPathInstancedNV.f)(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues) }
#[fixed_stack_segment] #[inline] pub fn CoverFillPathNV(path: GLuint, coverMode: GLenum) -> c_void { unsafe { (storage::CoverFillPathNV.f)(path, coverMode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CoverStrokePathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: *GLfloat) -> c_void { (storage::CoverStrokePathInstancedNV.f)(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues) }
#[fixed_stack_segment] #[inline] pub fn CoverStrokePathNV(path: GLuint, coverMode: GLenum) -> c_void { unsafe { (storage::CoverStrokePathNV.f)(path, coverMode) } }
#[fixed_stack_segment] #[inline] pub fn CoverageMaskNV(mask: GLboolean) -> c_void { unsafe { (storage::CoverageMaskNV.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn CoverageOperationNV(operation: GLenum) -> c_void { unsafe { (storage::CoverageOperationNV.f)(operation) } }
#[fixed_stack_segment] #[inline] pub fn CreateProgram() -> GLuint { unsafe { (storage::CreateProgram.f)() } }
#[fixed_stack_segment] #[inline] pub fn CreateProgramObjectARB() -> GLhandleARB { unsafe { (storage::CreateProgramObjectARB.f)() } }
#[fixed_stack_segment] #[inline] pub fn CreateShader(type_: GLenum) -> GLuint { unsafe { (storage::CreateShader.f)(type_) } }
#[fixed_stack_segment] #[inline] pub fn CreateShaderObjectARB(shaderType: GLenum) -> GLhandleARB { unsafe { (storage::CreateShaderObjectARB.f)(shaderType) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CreateShaderProgramEXT(type_: GLenum, string: *GLchar) -> GLuint { (storage::CreateShaderProgramEXT.f)(type_, string) }
#[fixed_stack_segment] #[inline] pub unsafe fn CreateShaderProgramv(type_: GLenum, count: GLsizei, strings: **GLchar) -> GLuint { (storage::CreateShaderProgramv.f)(type_, count, strings) }
#[fixed_stack_segment] #[inline] pub unsafe fn CreateShaderProgramvEXT(type_: GLenum, count: GLsizei, strings: **GLchar) -> GLuint { (storage::CreateShaderProgramvEXT.f)(type_, count, strings) }
#[fixed_stack_segment] #[inline] pub unsafe fn CreateSyncFromCLeventARB(context: *_cl_context, event: *_cl_event, flags: GLbitfield) -> GLsync { (storage::CreateSyncFromCLeventARB.f)(context, event, flags) }
#[fixed_stack_segment] #[inline] pub fn CullFace(mode: GLenum) -> c_void { unsafe { (storage::CullFace.f)(mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn CullParameterdvEXT(pname: GLenum, params: *GLdouble) -> c_void { (storage::CullParameterdvEXT.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn CullParameterfvEXT(pname: GLenum, params: *GLfloat) -> c_void { (storage::CullParameterfvEXT.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn CurrentPaletteMatrixARB(index: GLint) -> c_void { unsafe { (storage::CurrentPaletteMatrixARB.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn CurrentPaletteMatrixOES(matrixpaletteindex: GLuint) -> c_void { unsafe { (storage::CurrentPaletteMatrixOES.f)(matrixpaletteindex) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageCallback(callback: GLDEBUGPROC, userParam: *c_void) -> c_void { (storage::DebugMessageCallback.f)(callback, userParam) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageCallbackAMD(callback: GLDEBUGPROCAMD, userParam: *c_void) -> c_void { (storage::DebugMessageCallbackAMD.f)(callback, userParam) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageCallbackARB(callback: GLDEBUGPROCARB, userParam: *c_void) -> c_void { (storage::DebugMessageCallbackARB.f)(callback, userParam) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageCallbackKHR(callback: GLDEBUGPROCKHR, userParam: *c_void) -> c_void { (storage::DebugMessageCallbackKHR.f)(callback, userParam) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageControl(source: GLenum, type_: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void { (storage::DebugMessageControl.f)(source, type_, severity, count, ids, enabled) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageControlARB(source: GLenum, type_: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void { (storage::DebugMessageControlARB.f)(source, type_, severity, count, ids, enabled) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageControlKHR(source: GLenum, type_: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void { (storage::DebugMessageControlKHR.f)(source, type_, severity, count, ids, enabled) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageEnableAMD(category: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void { (storage::DebugMessageEnableAMD.f)(category, severity, count, ids, enabled) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageInsert(source: GLenum, type_: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) -> c_void { (storage::DebugMessageInsert.f)(source, type_, id, severity, length, buf) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageInsertAMD(category: GLenum, severity: GLenum, id: GLuint, length: GLsizei, buf: *GLchar) -> c_void { (storage::DebugMessageInsertAMD.f)(category, severity, id, length, buf) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageInsertARB(source: GLenum, type_: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) -> c_void { (storage::DebugMessageInsertARB.f)(source, type_, id, severity, length, buf) }
#[fixed_stack_segment] #[inline] pub unsafe fn DebugMessageInsertKHR(source: GLenum, type_: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) -> c_void { (storage::DebugMessageInsertKHR.f)(source, type_, id, severity, length, buf) }
#[fixed_stack_segment] #[inline] pub fn DeformSGIX(mask: GLbitfield) -> c_void { unsafe { (storage::DeformSGIX.f)(mask) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeformationMap3dSGIX(target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, w1: GLdouble, w2: GLdouble, wstride: GLint, worder: GLint, points: *GLdouble) -> c_void { (storage::DeformationMap3dSGIX.f)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeformationMap3fSGIX(target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, w1: GLfloat, w2: GLfloat, wstride: GLint, worder: GLint, points: *GLfloat) -> c_void { (storage::DeformationMap3fSGIX.f)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points) }
#[fixed_stack_segment] #[inline] pub fn DeleteAsyncMarkersSGIX(marker: GLuint, range: GLsizei) -> c_void { unsafe { (storage::DeleteAsyncMarkersSGIX.f)(marker, range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteBuffers(n: GLsizei, buffers: *GLuint) -> c_void { (storage::DeleteBuffers.f)(n, buffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteBuffersARB(n: GLsizei, buffers: *GLuint) -> c_void { (storage::DeleteBuffersARB.f)(n, buffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteFencesAPPLE(n: GLsizei, fences: *GLuint) -> c_void { (storage::DeleteFencesAPPLE.f)(n, fences) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteFencesNV(n: GLsizei, fences: *GLuint) -> c_void { (storage::DeleteFencesNV.f)(n, fences) }
#[fixed_stack_segment] #[inline] pub fn DeleteFragmentShaderATI(id: GLuint) -> c_void { unsafe { (storage::DeleteFragmentShaderATI.f)(id) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteFramebuffers(n: GLsizei, framebuffers: *GLuint) -> c_void { (storage::DeleteFramebuffers.f)(n, framebuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteFramebuffersEXT(n: GLsizei, framebuffers: *GLuint) -> c_void { (storage::DeleteFramebuffersEXT.f)(n, framebuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteFramebuffersOES(n: GLsizei, framebuffers: *GLuint) -> c_void { (storage::DeleteFramebuffersOES.f)(n, framebuffers) }
#[fixed_stack_segment] #[inline] pub fn DeleteLists(list: GLuint, range: GLsizei) -> c_void { unsafe { (storage::DeleteLists.f)(list, range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteNamedStringARB(namelen: GLint, name: *GLchar) -> c_void { (storage::DeleteNamedStringARB.f)(namelen, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteNamesAMD(identifier: GLenum, num: GLuint, names: *GLuint) -> c_void { (storage::DeleteNamesAMD.f)(identifier, num, names) }
#[fixed_stack_segment] #[inline] pub fn DeleteObjectARB(obj: GLhandleARB) -> c_void { unsafe { (storage::DeleteObjectARB.f)(obj) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteOcclusionQueriesNV(n: GLsizei, ids: *GLuint) -> c_void { (storage::DeleteOcclusionQueriesNV.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub fn DeletePathsNV(path: GLuint, range: GLsizei) -> c_void { unsafe { (storage::DeletePathsNV.f)(path, range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeletePerfMonitorsAMD(n: GLsizei, monitors: *GLuint) -> c_void { (storage::DeletePerfMonitorsAMD.f)(n, monitors) }
#[fixed_stack_segment] #[inline] pub fn DeleteProgram(program: GLuint) -> c_void { unsafe { (storage::DeleteProgram.f)(program) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteProgramPipelines(n: GLsizei, pipelines: *GLuint) -> c_void { (storage::DeleteProgramPipelines.f)(n, pipelines) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteProgramPipelinesEXT(n: GLsizei, pipelines: *GLuint) -> c_void { (storage::DeleteProgramPipelinesEXT.f)(n, pipelines) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteProgramsARB(n: GLsizei, programs: *GLuint) -> c_void { (storage::DeleteProgramsARB.f)(n, programs) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteProgramsNV(n: GLsizei, programs: *GLuint) -> c_void { (storage::DeleteProgramsNV.f)(n, programs) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteQueries(n: GLsizei, ids: *GLuint) -> c_void { (storage::DeleteQueries.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteQueriesARB(n: GLsizei, ids: *GLuint) -> c_void { (storage::DeleteQueriesARB.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteQueriesEXT(n: GLsizei, ids: *GLuint) -> c_void { (storage::DeleteQueriesEXT.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteRenderbuffers(n: GLsizei, renderbuffers: *GLuint) -> c_void { (storage::DeleteRenderbuffers.f)(n, renderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteRenderbuffersEXT(n: GLsizei, renderbuffers: *GLuint) -> c_void { (storage::DeleteRenderbuffersEXT.f)(n, renderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteRenderbuffersOES(n: GLsizei, renderbuffers: *GLuint) -> c_void { (storage::DeleteRenderbuffersOES.f)(n, renderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteSamplers(count: GLsizei, samplers: *GLuint) -> c_void { (storage::DeleteSamplers.f)(count, samplers) }
#[fixed_stack_segment] #[inline] pub fn DeleteShader(shader: GLuint) -> c_void { unsafe { (storage::DeleteShader.f)(shader) } }
#[fixed_stack_segment] #[inline] pub fn DeleteSync(sync: GLsync) -> c_void { unsafe { (storage::DeleteSync.f)(sync) } }
#[fixed_stack_segment] #[inline] pub fn DeleteSyncAPPLE(sync: GLsync) -> c_void { unsafe { (storage::DeleteSyncAPPLE.f)(sync) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteTextures(n: GLsizei, textures: *GLuint) -> c_void { (storage::DeleteTextures.f)(n, textures) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteTexturesEXT(n: GLsizei, textures: *GLuint) -> c_void { (storage::DeleteTexturesEXT.f)(n, textures) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteTransformFeedbacks(n: GLsizei, ids: *GLuint) -> c_void { (storage::DeleteTransformFeedbacks.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteTransformFeedbacksNV(n: GLsizei, ids: *GLuint) -> c_void { (storage::DeleteTransformFeedbacksNV.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteVertexArrays(n: GLsizei, arrays: *GLuint) -> c_void { (storage::DeleteVertexArrays.f)(n, arrays) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteVertexArraysAPPLE(n: GLsizei, arrays: *GLuint) -> c_void { (storage::DeleteVertexArraysAPPLE.f)(n, arrays) }
#[fixed_stack_segment] #[inline] pub unsafe fn DeleteVertexArraysOES(n: GLsizei, arrays: *GLuint) -> c_void { (storage::DeleteVertexArraysOES.f)(n, arrays) }
#[fixed_stack_segment] #[inline] pub fn DeleteVertexShaderEXT(id: GLuint) -> c_void { unsafe { (storage::DeleteVertexShaderEXT.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn DepthBoundsEXT(zmin: GLclampd, zmax: GLclampd) -> c_void { unsafe { (storage::DepthBoundsEXT.f)(zmin, zmax) } }
#[fixed_stack_segment] #[inline] pub fn DepthBoundsdNV(zmin: GLdouble, zmax: GLdouble) -> c_void { unsafe { (storage::DepthBoundsdNV.f)(zmin, zmax) } }
#[fixed_stack_segment] #[inline] pub fn DepthFunc(func: GLenum) -> c_void { unsafe { (storage::DepthFunc.f)(func) } }
#[fixed_stack_segment] #[inline] pub fn DepthMask(flag: GLboolean) -> c_void { unsafe { (storage::DepthMask.f)(flag) } }
#[fixed_stack_segment] #[inline] pub fn DepthRange(near: GLdouble, far: GLdouble) -> c_void { unsafe { (storage::DepthRange.f)(near, far) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DepthRangeArrayv(first: GLuint, count: GLsizei, v: *GLdouble) -> c_void { (storage::DepthRangeArrayv.f)(first, count, v) }
#[fixed_stack_segment] #[inline] pub fn DepthRangeIndexed(index: GLuint, n: GLdouble, f: GLdouble) -> c_void { unsafe { (storage::DepthRangeIndexed.f)(index, n, f) } }
#[fixed_stack_segment] #[inline] pub fn DepthRangedNV(zNear: GLdouble, zFar: GLdouble) -> c_void { unsafe { (storage::DepthRangedNV.f)(zNear, zFar) } }
#[fixed_stack_segment] #[inline] pub fn DepthRangef(n: GLfloat, f: GLfloat) -> c_void { unsafe { (storage::DepthRangef.f)(n, f) } }
#[fixed_stack_segment] #[inline] pub fn DepthRangefOES(n: GLclampf, f: GLclampf) -> c_void { unsafe { (storage::DepthRangefOES.f)(n, f) } }
#[fixed_stack_segment] #[inline] pub fn DepthRangex(n: GLfixed, f: GLfixed) -> c_void { unsafe { (storage::DepthRangex.f)(n, f) } }
#[fixed_stack_segment] #[inline] pub fn DepthRangexOES(n: GLfixed, f: GLfixed) -> c_void { unsafe { (storage::DepthRangexOES.f)(n, f) } }
#[fixed_stack_segment] #[inline] pub fn DetachObjectARB(containerObj: GLhandleARB, attachedObj: GLhandleARB) -> c_void { unsafe { (storage::DetachObjectARB.f)(containerObj, attachedObj) } }
#[fixed_stack_segment] #[inline] pub fn DetachShader(program: GLuint, shader: GLuint) -> c_void { unsafe { (storage::DetachShader.f)(program, shader) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DetailTexFuncSGIS(target: GLenum, n: GLsizei, points: *GLfloat) -> c_void { (storage::DetailTexFuncSGIS.f)(target, n, points) }
#[fixed_stack_segment] #[inline] pub fn Disable(cap: GLenum) -> c_void { unsafe { (storage::Disable.f)(cap) } }
#[fixed_stack_segment] #[inline] pub fn DisableClientState(array: GLenum) -> c_void { unsafe { (storage::DisableClientState.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn DisableClientStateIndexedEXT(array: GLenum, index: GLuint) -> c_void { unsafe { (storage::DisableClientStateIndexedEXT.f)(array, index) } }
#[fixed_stack_segment] #[inline] pub fn DisableClientStateiEXT(array: GLenum, index: GLuint) -> c_void { unsafe { (storage::DisableClientStateiEXT.f)(array, index) } }
#[fixed_stack_segment] #[inline] pub fn DisableDriverControlQCOM(driverControl: GLuint) -> c_void { unsafe { (storage::DisableDriverControlQCOM.f)(driverControl) } }
#[fixed_stack_segment] #[inline] pub fn DisableIndexedEXT(target: GLenum, index: GLuint) -> c_void { unsafe { (storage::DisableIndexedEXT.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub fn DisableVariantClientStateEXT(id: GLuint) -> c_void { unsafe { (storage::DisableVariantClientStateEXT.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn DisableVertexArrayAttribEXT(vaobj: GLuint, index: GLuint) -> c_void { unsafe { (storage::DisableVertexArrayAttribEXT.f)(vaobj, index) } }
#[fixed_stack_segment] #[inline] pub fn DisableVertexArrayEXT(vaobj: GLuint, array: GLenum) -> c_void { unsafe { (storage::DisableVertexArrayEXT.f)(vaobj, array) } }
#[fixed_stack_segment] #[inline] pub fn DisableVertexAttribAPPLE(index: GLuint, pname: GLenum) -> c_void { unsafe { (storage::DisableVertexAttribAPPLE.f)(index, pname) } }
#[fixed_stack_segment] #[inline] pub fn DisableVertexAttribArray(index: GLuint) -> c_void { unsafe { (storage::DisableVertexAttribArray.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn DisableVertexAttribArrayARB(index: GLuint) -> c_void { unsafe { (storage::DisableVertexAttribArrayARB.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn Disablei(target: GLenum, index: GLuint) -> c_void { unsafe { (storage::Disablei.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DiscardFramebufferEXT(target: GLenum, numAttachments: GLsizei, attachments: *GLenum) -> c_void { (storage::DiscardFramebufferEXT.f)(target, numAttachments, attachments) }
#[fixed_stack_segment] #[inline] pub fn DispatchCompute(num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint) -> c_void { unsafe { (storage::DispatchCompute.f)(num_groups_x, num_groups_y, num_groups_z) } }
#[fixed_stack_segment] #[inline] pub fn DispatchComputeGroupSizeARB(num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint, group_size_x: GLuint, group_size_y: GLuint, group_size_z: GLuint) -> c_void { unsafe { (storage::DispatchComputeGroupSizeARB.f)(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z) } }
#[fixed_stack_segment] #[inline] pub fn DispatchComputeIndirect(indirect: GLintptr) -> c_void { unsafe { (storage::DispatchComputeIndirect.f)(indirect) } }
#[fixed_stack_segment] #[inline] pub fn DrawArrays(mode: GLenum, first: GLint, count: GLsizei) -> c_void { unsafe { (storage::DrawArrays.f)(mode, first, count) } }
#[fixed_stack_segment] #[inline] pub fn DrawArraysEXT(mode: GLenum, first: GLint, count: GLsizei) -> c_void { unsafe { (storage::DrawArraysEXT.f)(mode, first, count) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawArraysIndirect(mode: GLenum, indirect: *GLvoid) -> c_void { (storage::DrawArraysIndirect.f)(mode, indirect) }
#[fixed_stack_segment] #[inline] pub fn DrawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei) -> c_void { unsafe { (storage::DrawArraysInstanced.f)(mode, first, count, instancecount) } }
#[fixed_stack_segment] #[inline] pub fn DrawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) -> c_void { unsafe { (storage::DrawArraysInstancedANGLE.f)(mode, first, count, primcount) } }
#[fixed_stack_segment] #[inline] pub fn DrawArraysInstancedARB(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) -> c_void { unsafe { (storage::DrawArraysInstancedARB.f)(mode, first, count, primcount) } }
#[fixed_stack_segment] #[inline] pub fn DrawArraysInstancedBaseInstance(mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint) -> c_void { unsafe { (storage::DrawArraysInstancedBaseInstance.f)(mode, first, count, instancecount, baseinstance) } }
#[fixed_stack_segment] #[inline] pub fn DrawArraysInstancedEXT(mode: GLenum, start: GLint, count: GLsizei, primcount: GLsizei) -> c_void { unsafe { (storage::DrawArraysInstancedEXT.f)(mode, start, count, primcount) } }
#[fixed_stack_segment] #[inline] pub fn DrawArraysInstancedNV(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) -> c_void { unsafe { (storage::DrawArraysInstancedNV.f)(mode, first, count, primcount) } }
#[fixed_stack_segment] #[inline] pub fn DrawBuffer(mode: GLenum) -> c_void { unsafe { (storage::DrawBuffer.f)(mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawBuffers(n: GLsizei, bufs: *GLenum) -> c_void { (storage::DrawBuffers.f)(n, bufs) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawBuffersARB(n: GLsizei, bufs: *GLenum) -> c_void { (storage::DrawBuffersARB.f)(n, bufs) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawBuffersATI(n: GLsizei, bufs: *GLenum) -> c_void { (storage::DrawBuffersATI.f)(n, bufs) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawBuffersEXT(n: GLsizei, bufs: *GLenum) -> c_void { (storage::DrawBuffersEXT.f)(n, bufs) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawBuffersIndexedEXT(n: GLint, location: *GLenum, indices: *GLint) -> c_void { (storage::DrawBuffersIndexedEXT.f)(n, location, indices) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawBuffersNV(n: GLsizei, bufs: *GLenum) -> c_void { (storage::DrawBuffersNV.f)(n, bufs) }
#[fixed_stack_segment] #[inline] pub fn DrawElementArrayAPPLE(mode: GLenum, first: GLint, count: GLsizei) -> c_void { unsafe { (storage::DrawElementArrayAPPLE.f)(mode, first, count) } }
#[fixed_stack_segment] #[inline] pub fn DrawElementArrayATI(mode: GLenum, count: GLsizei) -> c_void { unsafe { (storage::DrawElementArrayATI.f)(mode, count) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElements(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid) -> c_void { (storage::DrawElements.f)(mode, count, type_, indices) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsBaseVertex(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, basevertex: GLint) -> c_void { (storage::DrawElementsBaseVertex.f)(mode, count, type_, indices, basevertex) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsIndirect(mode: GLenum, type_: GLenum, indirect: *GLvoid) -> c_void { (storage::DrawElementsIndirect.f)(mode, type_, indirect) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstanced(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, instancecount: GLsizei) -> c_void { (storage::DrawElementsInstanced.f)(mode, count, type_, indices, instancecount) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type_: GLenum, indices: *c_void, primcount: GLsizei) -> c_void { (storage::DrawElementsInstancedANGLE.f)(mode, count, type_, indices, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedARB(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, primcount: GLsizei) -> c_void { (storage::DrawElementsInstancedARB.f)(mode, count, type_, indices, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedBaseInstance(mode: GLenum, count: GLsizei, type_: GLenum, indices: *c_void, instancecount: GLsizei, baseinstance: GLuint) -> c_void { (storage::DrawElementsInstancedBaseInstance.f)(mode, count, type_, indices, instancecount, baseinstance) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedBaseVertex(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, instancecount: GLsizei, basevertex: GLint) -> c_void { (storage::DrawElementsInstancedBaseVertex.f)(mode, count, type_, indices, instancecount, basevertex) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedBaseVertexBaseInstance(mode: GLenum, count: GLsizei, type_: GLenum, indices: *c_void, instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint) -> c_void { (storage::DrawElementsInstancedBaseVertexBaseInstance.f)(mode, count, type_, indices, instancecount, basevertex, baseinstance) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedEXT(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, primcount: GLsizei) -> c_void { (storage::DrawElementsInstancedEXT.f)(mode, count, type_, indices, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawElementsInstancedNV(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, primcount: GLsizei) -> c_void { (storage::DrawElementsInstancedNV.f)(mode, count, type_, indices, primcount) }
#[fixed_stack_segment] #[inline] pub fn DrawMeshArraysSUN(mode: GLenum, first: GLint, count: GLsizei, width: GLsizei) -> c_void { unsafe { (storage::DrawMeshArraysSUN.f)(mode, first, count, width) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawPixels(width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::DrawPixels.f)(width, height, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn DrawRangeElementArrayAPPLE(mode: GLenum, start: GLuint, end: GLuint, first: GLint, count: GLsizei) -> c_void { unsafe { (storage::DrawRangeElementArrayAPPLE.f)(mode, start, end, first, count) } }
#[fixed_stack_segment] #[inline] pub fn DrawRangeElementArrayATI(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei) -> c_void { unsafe { (storage::DrawRangeElementArrayATI.f)(mode, start, end, count) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type_: GLenum, indices: *GLvoid) -> c_void { (storage::DrawRangeElements.f)(mode, start, end, count, type_, indices) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawRangeElementsBaseVertex(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type_: GLenum, indices: *GLvoid, basevertex: GLint) -> c_void { (storage::DrawRangeElementsBaseVertex.f)(mode, start, end, count, type_, indices, basevertex) }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawRangeElementsEXT(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type_: GLenum, indices: *GLvoid) -> c_void { (storage::DrawRangeElementsEXT.f)(mode, start, end, count, type_, indices) }
#[fixed_stack_segment] #[inline] pub fn DrawTexfOES(x: GLfloat, y: GLfloat, z: GLfloat, width: GLfloat, height: GLfloat) -> c_void { unsafe { (storage::DrawTexfOES.f)(x, y, z, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawTexfvOES(coords: *GLfloat) -> c_void { (storage::DrawTexfvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn DrawTexiOES(x: GLint, y: GLint, z: GLint, width: GLint, height: GLint) -> c_void { unsafe { (storage::DrawTexiOES.f)(x, y, z, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawTexivOES(coords: *GLint) -> c_void { (storage::DrawTexivOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn DrawTexsOES(x: GLshort, y: GLshort, z: GLshort, width: GLshort, height: GLshort) -> c_void { unsafe { (storage::DrawTexsOES.f)(x, y, z, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawTexsvOES(coords: *GLshort) -> c_void { (storage::DrawTexsvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn DrawTextureNV(texture: GLuint, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat) -> c_void { unsafe { (storage::DrawTextureNV.f)(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1) } }
#[fixed_stack_segment] #[inline] pub fn DrawTexxOES(x: GLfixed, y: GLfixed, z: GLfixed, width: GLfixed, height: GLfixed) -> c_void { unsafe { (storage::DrawTexxOES.f)(x, y, z, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn DrawTexxvOES(coords: *GLfixed) -> c_void { (storage::DrawTexxvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn DrawTransformFeedback(mode: GLenum, id: GLuint) -> c_void { unsafe { (storage::DrawTransformFeedback.f)(mode, id) } }
#[fixed_stack_segment] #[inline] pub fn DrawTransformFeedbackInstanced(mode: GLenum, id: GLuint, instancecount: GLsizei) -> c_void { unsafe { (storage::DrawTransformFeedbackInstanced.f)(mode, id, instancecount) } }
#[fixed_stack_segment] #[inline] pub fn DrawTransformFeedbackNV(mode: GLenum, id: GLuint) -> c_void { unsafe { (storage::DrawTransformFeedbackNV.f)(mode, id) } }
#[fixed_stack_segment] #[inline] pub fn DrawTransformFeedbackStream(mode: GLenum, id: GLuint, stream: GLuint) -> c_void { unsafe { (storage::DrawTransformFeedbackStream.f)(mode, id, stream) } }
#[fixed_stack_segment] #[inline] pub fn DrawTransformFeedbackStreamInstanced(mode: GLenum, id: GLuint, stream: GLuint, instancecount: GLsizei) -> c_void { unsafe { (storage::DrawTransformFeedbackStreamInstanced.f)(mode, id, stream, instancecount) } }
#[fixed_stack_segment] #[inline] pub fn EGLImageTargetRenderbufferStorageOES(target: GLenum, image: GLeglImageOES) -> c_void { unsafe { (storage::EGLImageTargetRenderbufferStorageOES.f)(target, image) } }
#[fixed_stack_segment] #[inline] pub fn EGLImageTargetTexture2DOES(target: GLenum, image: GLeglImageOES) -> c_void { unsafe { (storage::EGLImageTargetTexture2DOES.f)(target, image) } }
#[fixed_stack_segment] #[inline] pub fn EdgeFlag(flag: GLboolean) -> c_void { unsafe { (storage::EdgeFlag.f)(flag) } }
#[fixed_stack_segment] #[inline] pub fn EdgeFlagFormatNV(stride: GLsizei) -> c_void { unsafe { (storage::EdgeFlagFormatNV.f)(stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EdgeFlagPointer(stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::EdgeFlagPointer.f)(stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn EdgeFlagPointerEXT(stride: GLsizei, count: GLsizei, pointer: *GLboolean) -> c_void { (storage::EdgeFlagPointerEXT.f)(stride, count, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn EdgeFlagPointerListIBM(stride: GLint, pointer: **GLboolean, ptrstride: GLint) -> c_void { (storage::EdgeFlagPointerListIBM.f)(stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub unsafe fn EdgeFlagv(flag: *GLboolean) -> c_void { (storage::EdgeFlagv.f)(flag) }
#[fixed_stack_segment] #[inline] pub unsafe fn ElementPointerAPPLE(type_: GLenum, pointer: *GLvoid) -> c_void { (storage::ElementPointerAPPLE.f)(type_, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn ElementPointerATI(type_: GLenum, pointer: *GLvoid) -> c_void { (storage::ElementPointerATI.f)(type_, pointer) }
#[fixed_stack_segment] #[inline] pub fn Enable(cap: GLenum) -> c_void { unsafe { (storage::Enable.f)(cap) } }
#[fixed_stack_segment] #[inline] pub fn EnableClientState(array: GLenum) -> c_void { unsafe { (storage::EnableClientState.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn EnableClientStateIndexedEXT(array: GLenum, index: GLuint) -> c_void { unsafe { (storage::EnableClientStateIndexedEXT.f)(array, index) } }
#[fixed_stack_segment] #[inline] pub fn EnableClientStateiEXT(array: GLenum, index: GLuint) -> c_void { unsafe { (storage::EnableClientStateiEXT.f)(array, index) } }
#[fixed_stack_segment] #[inline] pub fn EnableDriverControlQCOM(driverControl: GLuint) -> c_void { unsafe { (storage::EnableDriverControlQCOM.f)(driverControl) } }
#[fixed_stack_segment] #[inline] pub fn EnableIndexedEXT(target: GLenum, index: GLuint) -> c_void { unsafe { (storage::EnableIndexedEXT.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub fn EnableVariantClientStateEXT(id: GLuint) -> c_void { unsafe { (storage::EnableVariantClientStateEXT.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn EnableVertexArrayAttribEXT(vaobj: GLuint, index: GLuint) -> c_void { unsafe { (storage::EnableVertexArrayAttribEXT.f)(vaobj, index) } }
#[fixed_stack_segment] #[inline] pub fn EnableVertexArrayEXT(vaobj: GLuint, array: GLenum) -> c_void { unsafe { (storage::EnableVertexArrayEXT.f)(vaobj, array) } }
#[fixed_stack_segment] #[inline] pub fn EnableVertexAttribAPPLE(index: GLuint, pname: GLenum) -> c_void { unsafe { (storage::EnableVertexAttribAPPLE.f)(index, pname) } }
#[fixed_stack_segment] #[inline] pub fn EnableVertexAttribArray(index: GLuint) -> c_void { unsafe { (storage::EnableVertexAttribArray.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn EnableVertexAttribArrayARB(index: GLuint) -> c_void { unsafe { (storage::EnableVertexAttribArrayARB.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn Enablei(target: GLenum, index: GLuint) -> c_void { unsafe { (storage::Enablei.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub fn End() -> c_void { unsafe { (storage::End.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndConditionalRender() -> c_void { unsafe { (storage::EndConditionalRender.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndConditionalRenderNV() -> c_void { unsafe { (storage::EndConditionalRenderNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndConditionalRenderNVX() -> c_void { unsafe { (storage::EndConditionalRenderNVX.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndFragmentShaderATI() -> c_void { unsafe { (storage::EndFragmentShaderATI.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndList() -> c_void { unsafe { (storage::EndList.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndOcclusionQueryNV() -> c_void { unsafe { (storage::EndOcclusionQueryNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndPerfMonitorAMD(monitor: GLuint) -> c_void { unsafe { (storage::EndPerfMonitorAMD.f)(monitor) } }
#[fixed_stack_segment] #[inline] pub fn EndQuery(target: GLenum) -> c_void { unsafe { (storage::EndQuery.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn EndQueryARB(target: GLenum) -> c_void { unsafe { (storage::EndQueryARB.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn EndQueryEXT(target: GLenum) -> c_void { unsafe { (storage::EndQueryEXT.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn EndQueryIndexed(target: GLenum, index: GLuint) -> c_void { unsafe { (storage::EndQueryIndexed.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub fn EndTilingQCOM(preserveMask: GLbitfield) -> c_void { unsafe { (storage::EndTilingQCOM.f)(preserveMask) } }
#[fixed_stack_segment] #[inline] pub fn EndTransformFeedback() -> c_void { unsafe { (storage::EndTransformFeedback.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndTransformFeedbackEXT() -> c_void { unsafe { (storage::EndTransformFeedbackEXT.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndTransformFeedbackNV() -> c_void { unsafe { (storage::EndTransformFeedbackNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndVertexShaderEXT() -> c_void { unsafe { (storage::EndVertexShaderEXT.f)() } }
#[fixed_stack_segment] #[inline] pub fn EndVideoCaptureNV(video_capture_slot: GLuint) -> c_void { unsafe { (storage::EndVideoCaptureNV.f)(video_capture_slot) } }
#[fixed_stack_segment] #[inline] pub fn EvalCoord1d(u: GLdouble) -> c_void { unsafe { (storage::EvalCoord1d.f)(u) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EvalCoord1dv(u: *GLdouble) -> c_void { (storage::EvalCoord1dv.f)(u) }
#[fixed_stack_segment] #[inline] pub fn EvalCoord1f(u: GLfloat) -> c_void { unsafe { (storage::EvalCoord1f.f)(u) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EvalCoord1fv(u: *GLfloat) -> c_void { (storage::EvalCoord1fv.f)(u) }
#[fixed_stack_segment] #[inline] pub fn EvalCoord1xOES(u: GLfixed) -> c_void { unsafe { (storage::EvalCoord1xOES.f)(u) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EvalCoord1xvOES(coords: *GLfixed) -> c_void { (storage::EvalCoord1xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn EvalCoord2d(u: GLdouble, v: GLdouble) -> c_void { unsafe { (storage::EvalCoord2d.f)(u, v) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EvalCoord2dv(u: *GLdouble) -> c_void { (storage::EvalCoord2dv.f)(u) }
#[fixed_stack_segment] #[inline] pub fn EvalCoord2f(u: GLfloat, v: GLfloat) -> c_void { unsafe { (storage::EvalCoord2f.f)(u, v) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EvalCoord2fv(u: *GLfloat) -> c_void { (storage::EvalCoord2fv.f)(u) }
#[fixed_stack_segment] #[inline] pub fn EvalCoord2xOES(u: GLfixed, v: GLfixed) -> c_void { unsafe { (storage::EvalCoord2xOES.f)(u, v) } }
#[fixed_stack_segment] #[inline] pub unsafe fn EvalCoord2xvOES(coords: *GLfixed) -> c_void { (storage::EvalCoord2xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn EvalMapsNV(target: GLenum, mode: GLenum) -> c_void { unsafe { (storage::EvalMapsNV.f)(target, mode) } }
#[fixed_stack_segment] #[inline] pub fn EvalMesh1(mode: GLenum, i1: GLint, i2: GLint) -> c_void { unsafe { (storage::EvalMesh1.f)(mode, i1, i2) } }
#[fixed_stack_segment] #[inline] pub fn EvalMesh2(mode: GLenum, i1: GLint, i2: GLint, j1: GLint, j2: GLint) -> c_void { unsafe { (storage::EvalMesh2.f)(mode, i1, i2, j1, j2) } }
#[fixed_stack_segment] #[inline] pub fn EvalPoint1(i: GLint) -> c_void { unsafe { (storage::EvalPoint1.f)(i) } }
#[fixed_stack_segment] #[inline] pub fn EvalPoint2(i: GLint, j: GLint) -> c_void { unsafe { (storage::EvalPoint2.f)(i, j) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ExecuteProgramNV(target: GLenum, id: GLuint, params: *GLfloat) -> c_void { (storage::ExecuteProgramNV.f)(target, id, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetBufferPointervQCOM(target: GLenum, params: **GLvoid) -> c_void { (storage::ExtGetBufferPointervQCOM.f)(target, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetBuffersQCOM(buffers: *GLuint, maxBuffers: GLint, numBuffers: *GLint) -> c_void { (storage::ExtGetBuffersQCOM.f)(buffers, maxBuffers, numBuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetFramebuffersQCOM(framebuffers: *GLuint, maxFramebuffers: GLint, numFramebuffers: *GLint) -> c_void { (storage::ExtGetFramebuffersQCOM.f)(framebuffers, maxFramebuffers, numFramebuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetProgramBinarySourceQCOM(program: GLuint, shadertype: GLenum, source: *GLchar, length: *GLint) -> c_void { (storage::ExtGetProgramBinarySourceQCOM.f)(program, shadertype, source, length) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetProgramsQCOM(programs: *GLuint, maxPrograms: GLint, numPrograms: *GLint) -> c_void { (storage::ExtGetProgramsQCOM.f)(programs, maxPrograms, numPrograms) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetRenderbuffersQCOM(renderbuffers: *GLuint, maxRenderbuffers: GLint, numRenderbuffers: *GLint) -> c_void { (storage::ExtGetRenderbuffersQCOM.f)(renderbuffers, maxRenderbuffers, numRenderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetShadersQCOM(shaders: *GLuint, maxShaders: GLint, numShaders: *GLint) -> c_void { (storage::ExtGetShadersQCOM.f)(shaders, maxShaders, numShaders) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetTexLevelParameterivQCOM(texture: GLuint, face: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void { (storage::ExtGetTexLevelParameterivQCOM.f)(texture, face, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetTexSubImageQCOM(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, texels: *GLvoid) -> c_void { (storage::ExtGetTexSubImageQCOM.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, texels) }
#[fixed_stack_segment] #[inline] pub unsafe fn ExtGetTexturesQCOM(textures: *GLuint, maxTextures: GLint, numTextures: *GLint) -> c_void { (storage::ExtGetTexturesQCOM.f)(textures, maxTextures, numTextures) }
#[fixed_stack_segment] #[inline] pub fn ExtIsProgramBinaryQCOM(program: GLuint) -> GLboolean { unsafe { (storage::ExtIsProgramBinaryQCOM.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn ExtTexObjectStateOverrideiQCOM(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::ExtTexObjectStateOverrideiQCOM.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn ExtractComponentEXT(res: GLuint, src: GLuint, num: GLuint) -> c_void { unsafe { (storage::ExtractComponentEXT.f)(res, src, num) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FeedbackBuffer(size: GLsizei, type_: GLenum, buffer: *GLfloat) -> c_void { (storage::FeedbackBuffer.f)(size, type_, buffer) }
#[fixed_stack_segment] #[inline] pub unsafe fn FeedbackBufferxOES(n: GLsizei, type_: GLenum, buffer: *GLfixed) -> c_void { (storage::FeedbackBufferxOES.f)(n, type_, buffer) }
#[fixed_stack_segment] #[inline] pub fn FenceSync(condition: GLenum, flags: GLbitfield) -> GLsync { unsafe { (storage::FenceSync.f)(condition, flags) } }
#[fixed_stack_segment] #[inline] pub fn FenceSyncAPPLE(condition: GLenum, flags: GLbitfield) -> GLsync { unsafe { (storage::FenceSyncAPPLE.f)(condition, flags) } }
#[fixed_stack_segment] #[inline] pub fn FinalCombinerInputNV(variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum) -> c_void { unsafe { (storage::FinalCombinerInputNV.f)(variable, input, mapping, componentUsage) } }
#[fixed_stack_segment] #[inline] pub fn Finish() -> c_void { unsafe { (storage::Finish.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn FinishAsyncSGIX(markerp: *GLuint) -> GLint { (storage::FinishAsyncSGIX.f)(markerp) }
#[fixed_stack_segment] #[inline] pub fn FinishFenceAPPLE(fence: GLuint) -> c_void { unsafe { (storage::FinishFenceAPPLE.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn FinishFenceNV(fence: GLuint) -> c_void { unsafe { (storage::FinishFenceNV.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn FinishObjectAPPLE(object: GLenum, name: GLint) -> c_void { unsafe { (storage::FinishObjectAPPLE.f)(object, name) } }
#[fixed_stack_segment] #[inline] pub fn FinishTextureSUNX() -> c_void { unsafe { (storage::FinishTextureSUNX.f)() } }
#[fixed_stack_segment] #[inline] pub fn Flush() -> c_void { unsafe { (storage::Flush.f)() } }
#[fixed_stack_segment] #[inline] pub fn FlushMappedBufferRange(target: GLenum, offset: GLintptr, length: GLsizeiptr) -> c_void { unsafe { (storage::FlushMappedBufferRange.f)(target, offset, length) } }
#[fixed_stack_segment] #[inline] pub fn FlushMappedBufferRangeAPPLE(target: GLenum, offset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::FlushMappedBufferRangeAPPLE.f)(target, offset, size) } }
#[fixed_stack_segment] #[inline] pub fn FlushMappedBufferRangeEXT(target: GLenum, offset: GLintptr, length: GLsizeiptr) -> c_void { unsafe { (storage::FlushMappedBufferRangeEXT.f)(target, offset, length) } }
#[fixed_stack_segment] #[inline] pub fn FlushMappedNamedBufferRangeEXT(buffer: GLuint, offset: GLintptr, length: GLsizeiptr) -> c_void { unsafe { (storage::FlushMappedNamedBufferRangeEXT.f)(buffer, offset, length) } }
#[fixed_stack_segment] #[inline] pub fn FlushPixelDataRangeNV(target: GLenum) -> c_void { unsafe { (storage::FlushPixelDataRangeNV.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn FlushRasterSGIX() -> c_void { unsafe { (storage::FlushRasterSGIX.f)() } }
#[fixed_stack_segment] #[inline] pub fn FlushStaticDataIBM(target: GLenum) -> c_void { unsafe { (storage::FlushStaticDataIBM.f)(target) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FlushVertexArrayRangeAPPLE(length: GLsizei, pointer: *GLvoid) -> c_void { (storage::FlushVertexArrayRangeAPPLE.f)(length, pointer) }
#[fixed_stack_segment] #[inline] pub fn FlushVertexArrayRangeNV() -> c_void { unsafe { (storage::FlushVertexArrayRangeNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn FogCoordFormatNV(type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::FogCoordFormatNV.f)(type_, stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoordPointer(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::FogCoordPointer.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoordPointerEXT(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::FogCoordPointerEXT.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoordPointerListIBM(type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::FogCoordPointerListIBM.f)(type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub fn FogCoordd(coord: GLdouble) -> c_void { unsafe { (storage::FogCoordd.f)(coord) } }
#[fixed_stack_segment] #[inline] pub fn FogCoorddEXT(coord: GLdouble) -> c_void { unsafe { (storage::FogCoorddEXT.f)(coord) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoorddv(coord: *GLdouble) -> c_void { (storage::FogCoorddv.f)(coord) }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoorddvEXT(coord: *GLdouble) -> c_void { (storage::FogCoorddvEXT.f)(coord) }
#[fixed_stack_segment] #[inline] pub fn FogCoordf(coord: GLfloat) -> c_void { unsafe { (storage::FogCoordf.f)(coord) } }
#[fixed_stack_segment] #[inline] pub fn FogCoordfEXT(coord: GLfloat) -> c_void { unsafe { (storage::FogCoordfEXT.f)(coord) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoordfv(coord: *GLfloat) -> c_void { (storage::FogCoordfv.f)(coord) }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoordfvEXT(coord: *GLfloat) -> c_void { (storage::FogCoordfvEXT.f)(coord) }
#[fixed_stack_segment] #[inline] pub fn FogCoordhNV(fog: GLhalfNV) -> c_void { unsafe { (storage::FogCoordhNV.f)(fog) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FogCoordhvNV(fog: *GLhalfNV) -> c_void { (storage::FogCoordhvNV.f)(fog) }
#[fixed_stack_segment] #[inline] pub unsafe fn FogFuncSGIS(n: GLsizei, points: *GLfloat) -> c_void { (storage::FogFuncSGIS.f)(n, points) }
#[fixed_stack_segment] #[inline] pub fn Fogf(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::Fogf.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Fogfv(pname: GLenum, params: *GLfloat) -> c_void { (storage::Fogfv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn Fogi(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::Fogi.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Fogiv(pname: GLenum, params: *GLint) -> c_void { (storage::Fogiv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn Fogx(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::Fogx.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn FogxOES(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::FogxOES.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Fogxv(pname: GLenum, param: *GLfixed) -> c_void { (storage::Fogxv.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn FogxvOES(pname: GLenum, param: *GLfixed) -> c_void { (storage::FogxvOES.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub fn FragmentColorMaterialSGIX(face: GLenum, mode: GLenum) -> c_void { unsafe { (storage::FragmentColorMaterialSGIX.f)(face, mode) } }
#[fixed_stack_segment] #[inline] pub fn FragmentLightModelfSGIX(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::FragmentLightModelfSGIX.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FragmentLightModelfvSGIX(pname: GLenum, params: *GLfloat) -> c_void { (storage::FragmentLightModelfvSGIX.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn FragmentLightModeliSGIX(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::FragmentLightModeliSGIX.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FragmentLightModelivSGIX(pname: GLenum, params: *GLint) -> c_void { (storage::FragmentLightModelivSGIX.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn FragmentLightfSGIX(light: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::FragmentLightfSGIX.f)(light, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FragmentLightfvSGIX(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::FragmentLightfvSGIX.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub fn FragmentLightiSGIX(light: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::FragmentLightiSGIX.f)(light, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FragmentLightivSGIX(light: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::FragmentLightivSGIX.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub fn FragmentMaterialfSGIX(face: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::FragmentMaterialfSGIX.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FragmentMaterialfvSGIX(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::FragmentMaterialfvSGIX.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub fn FragmentMaterialiSGIX(face: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::FragmentMaterialiSGIX.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FragmentMaterialivSGIX(face: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::FragmentMaterialivSGIX.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub fn FrameTerminatorGREMEDY() -> c_void { unsafe { (storage::FrameTerminatorGREMEDY.f)() } }
#[fixed_stack_segment] #[inline] pub fn FrameZoomSGIX(factor: GLint) -> c_void { unsafe { (storage::FrameZoomSGIX.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferDrawBufferEXT(framebuffer: GLuint, mode: GLenum) -> c_void { unsafe { (storage::FramebufferDrawBufferEXT.f)(framebuffer, mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn FramebufferDrawBuffersEXT(framebuffer: GLuint, n: GLsizei, bufs: *GLenum) -> c_void { (storage::FramebufferDrawBuffersEXT.f)(framebuffer, n, bufs) }
#[fixed_stack_segment] #[inline] pub fn FramebufferParameteri(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::FramebufferParameteri.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferReadBufferEXT(framebuffer: GLuint, mode: GLenum) -> c_void { unsafe { (storage::FramebufferReadBufferEXT.f)(framebuffer, mode) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::FramebufferRenderbuffer.f)(target, attachment, renderbuffertarget, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferRenderbufferEXT(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::FramebufferRenderbufferEXT.f)(target, attachment, renderbuffertarget, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferRenderbufferOES(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::FramebufferRenderbufferOES.f)(target, attachment, renderbuffertarget, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTexture.f)(target, attachment, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture1D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTexture1D.f)(target, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture1DEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTexture1DEXT.f)(target, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTexture2D.f)(target, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture2DEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTexture2DEXT.f)(target, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture2DMultisampleEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei) -> c_void { unsafe { (storage::FramebufferTexture2DMultisampleEXT.f)(target, attachment, textarget, texture, level, samples) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture2DMultisampleIMG(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei) -> c_void { unsafe { (storage::FramebufferTexture2DMultisampleIMG.f)(target, attachment, textarget, texture, level, samples) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture2DOES(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTexture2DOES.f)(target, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture3D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void { unsafe { (storage::FramebufferTexture3D.f)(target, attachment, textarget, texture, level, zoffset) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture3DEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void { unsafe { (storage::FramebufferTexture3DEXT.f)(target, attachment, textarget, texture, level, zoffset) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTexture3DOES(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void { unsafe { (storage::FramebufferTexture3DOES.f)(target, attachment, textarget, texture, level, zoffset) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureARB(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTextureARB.f)(target, attachment, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureEXT(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::FramebufferTextureEXT.f)(target, attachment, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureFaceARB(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) -> c_void { unsafe { (storage::FramebufferTextureFaceARB.f)(target, attachment, texture, level, face) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureFaceEXT(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) -> c_void { unsafe { (storage::FramebufferTextureFaceEXT.f)(target, attachment, texture, level, face) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureLayer(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void { unsafe { (storage::FramebufferTextureLayer.f)(target, attachment, texture, level, layer) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureLayerARB(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void { unsafe { (storage::FramebufferTextureLayerARB.f)(target, attachment, texture, level, layer) } }
#[fixed_stack_segment] #[inline] pub fn FramebufferTextureLayerEXT(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void { unsafe { (storage::FramebufferTextureLayerEXT.f)(target, attachment, texture, level, layer) } }
#[fixed_stack_segment] #[inline] pub fn FreeObjectBufferATI(buffer: GLuint) -> c_void { unsafe { (storage::FreeObjectBufferATI.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn FrontFace(mode: GLenum) -> c_void { unsafe { (storage::FrontFace.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn Frustum(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void { unsafe { (storage::Frustum.f)(left, right, bottom, top, zNear, zFar) } }
#[fixed_stack_segment] #[inline] pub fn Frustumf(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void { unsafe { (storage::Frustumf.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn FrustumfOES(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void { unsafe { (storage::FrustumfOES.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn Frustumx(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void { unsafe { (storage::Frustumx.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn FrustumxOES(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void { unsafe { (storage::FrustumxOES.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn GenAsyncMarkersSGIX(range: GLsizei) -> GLuint { unsafe { (storage::GenAsyncMarkersSGIX.f)(range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GenBuffers(n: GLsizei, buffers: *GLuint) -> c_void { (storage::GenBuffers.f)(n, buffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenBuffersARB(n: GLsizei, buffers: *GLuint) -> c_void { (storage::GenBuffersARB.f)(n, buffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenFencesAPPLE(n: GLsizei, fences: *GLuint) -> c_void { (storage::GenFencesAPPLE.f)(n, fences) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenFencesNV(n: GLsizei, fences: *GLuint) -> c_void { (storage::GenFencesNV.f)(n, fences) }
#[fixed_stack_segment] #[inline] pub fn GenFragmentShadersATI(range: GLuint) -> GLuint { unsafe { (storage::GenFragmentShadersATI.f)(range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GenFramebuffers(n: GLsizei, framebuffers: *GLuint) -> c_void { (storage::GenFramebuffers.f)(n, framebuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenFramebuffersEXT(n: GLsizei, framebuffers: *GLuint) -> c_void { (storage::GenFramebuffersEXT.f)(n, framebuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenFramebuffersOES(n: GLsizei, framebuffers: *GLuint) -> c_void { (storage::GenFramebuffersOES.f)(n, framebuffers) }
#[fixed_stack_segment] #[inline] pub fn GenLists(range: GLsizei) -> GLuint { unsafe { (storage::GenLists.f)(range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GenNamesAMD(identifier: GLenum, num: GLuint, names: *GLuint) -> c_void { (storage::GenNamesAMD.f)(identifier, num, names) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenOcclusionQueriesNV(n: GLsizei, ids: *GLuint) -> c_void { (storage::GenOcclusionQueriesNV.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub fn GenPathsNV(range: GLsizei) -> GLuint { unsafe { (storage::GenPathsNV.f)(range) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GenPerfMonitorsAMD(n: GLsizei, monitors: *GLuint) -> c_void { (storage::GenPerfMonitorsAMD.f)(n, monitors) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenProgramPipelines(n: GLsizei, pipelines: *GLuint) -> c_void { (storage::GenProgramPipelines.f)(n, pipelines) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenProgramPipelinesEXT(n: GLsizei, pipelines: *GLuint) -> c_void { (storage::GenProgramPipelinesEXT.f)(n, pipelines) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenProgramsARB(n: GLsizei, programs: *GLuint) -> c_void { (storage::GenProgramsARB.f)(n, programs) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenProgramsNV(n: GLsizei, programs: *GLuint) -> c_void { (storage::GenProgramsNV.f)(n, programs) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenQueries(n: GLsizei, ids: *GLuint) -> c_void { (storage::GenQueries.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenQueriesARB(n: GLsizei, ids: *GLuint) -> c_void { (storage::GenQueriesARB.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenQueriesEXT(n: GLsizei, ids: *GLuint) -> c_void { (storage::GenQueriesEXT.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenRenderbuffers(n: GLsizei, renderbuffers: *GLuint) -> c_void { (storage::GenRenderbuffers.f)(n, renderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenRenderbuffersEXT(n: GLsizei, renderbuffers: *GLuint) -> c_void { (storage::GenRenderbuffersEXT.f)(n, renderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenRenderbuffersOES(n: GLsizei, renderbuffers: *GLuint) -> c_void { (storage::GenRenderbuffersOES.f)(n, renderbuffers) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenSamplers(count: GLsizei, samplers: *GLuint) -> c_void { (storage::GenSamplers.f)(count, samplers) }
#[fixed_stack_segment] #[inline] pub fn GenSymbolsEXT(datatype: GLenum, storagetype: GLenum, range: GLenum, components: GLuint) -> GLuint { unsafe { (storage::GenSymbolsEXT.f)(datatype, storagetype, range, components) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GenTextures(n: GLsizei, textures: *GLuint) -> c_void { (storage::GenTextures.f)(n, textures) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenTexturesEXT(n: GLsizei, textures: *GLuint) -> c_void { (storage::GenTexturesEXT.f)(n, textures) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenTransformFeedbacks(n: GLsizei, ids: *GLuint) -> c_void { (storage::GenTransformFeedbacks.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenTransformFeedbacksNV(n: GLsizei, ids: *GLuint) -> c_void { (storage::GenTransformFeedbacksNV.f)(n, ids) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenVertexArrays(n: GLsizei, arrays: *GLuint) -> c_void { (storage::GenVertexArrays.f)(n, arrays) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenVertexArraysAPPLE(n: GLsizei, arrays: *GLuint) -> c_void { (storage::GenVertexArraysAPPLE.f)(n, arrays) }
#[fixed_stack_segment] #[inline] pub unsafe fn GenVertexArraysOES(n: GLsizei, arrays: *GLuint) -> c_void { (storage::GenVertexArraysOES.f)(n, arrays) }
#[fixed_stack_segment] #[inline] pub fn GenVertexShadersEXT(range: GLuint) -> GLuint { unsafe { (storage::GenVertexShadersEXT.f)(range) } }
#[fixed_stack_segment] #[inline] pub fn GenerateMipmap(target: GLenum) -> c_void { unsafe { (storage::GenerateMipmap.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn GenerateMipmapEXT(target: GLenum) -> c_void { unsafe { (storage::GenerateMipmapEXT.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn GenerateMipmapOES(target: GLenum) -> c_void { unsafe { (storage::GenerateMipmapOES.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn GenerateMultiTexMipmapEXT(texunit: GLenum, target: GLenum) -> c_void { unsafe { (storage::GenerateMultiTexMipmapEXT.f)(texunit, target) } }
#[fixed_stack_segment] #[inline] pub fn GenerateTextureMipmapEXT(texture: GLuint, target: GLenum) -> c_void { unsafe { (storage::GenerateTextureMipmapEXT.f)(texture, target) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveAtomicCounterBufferiv(program: GLuint, bufferIndex: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetActiveAtomicCounterBufferiv.f)(program, bufferIndex, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveAttrib(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLchar) -> c_void { (storage::GetActiveAttrib.f)(program, index, bufSize, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveAttribARB(programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLcharARB) -> c_void { (storage::GetActiveAttribARB.f)(programObj, index, maxLength, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveSubroutineName(program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: *GLsizei, name: *GLchar) -> c_void { (storage::GetActiveSubroutineName.f)(program, shadertype, index, bufsize, length, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveSubroutineUniformName(program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: *GLsizei, name: *GLchar) -> c_void { (storage::GetActiveSubroutineUniformName.f)(program, shadertype, index, bufsize, length, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveSubroutineUniformiv(program: GLuint, shadertype: GLenum, index: GLuint, pname: GLenum, values: *GLint) -> c_void { (storage::GetActiveSubroutineUniformiv.f)(program, shadertype, index, pname, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveUniform(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLchar) -> c_void { (storage::GetActiveUniform.f)(program, index, bufSize, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveUniformARB(programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLcharARB) -> c_void { (storage::GetActiveUniformARB.f)(programObj, index, maxLength, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveUniformBlockName(program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformBlockName: *GLchar) -> c_void { (storage::GetActiveUniformBlockName.f)(program, uniformBlockIndex, bufSize, length, uniformBlockName) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveUniformBlockiv(program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetActiveUniformBlockiv.f)(program, uniformBlockIndex, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveUniformName(program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformName: *GLchar) -> c_void { (storage::GetActiveUniformName.f)(program, uniformIndex, bufSize, length, uniformName) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveUniformsiv(program: GLuint, uniformCount: GLsizei, uniformIndices: *GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetActiveUniformsiv.f)(program, uniformCount, uniformIndices, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetActiveVaryingNV(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type_: *GLenum, name: *GLchar) -> c_void { (storage::GetActiveVaryingNV.f)(program, index, bufSize, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetArrayObjectfvATI(array: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetArrayObjectfvATI.f)(array, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetArrayObjectivATI(array: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetArrayObjectivATI.f)(array, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetAttachedObjectsARB(containerObj: GLhandleARB, maxCount: GLsizei, count: *GLsizei, obj: *GLhandleARB) -> c_void { (storage::GetAttachedObjectsARB.f)(containerObj, maxCount, count, obj) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetAttachedShaders(program: GLuint, maxCount: GLsizei, count: *GLsizei, shaders: *GLuint) -> c_void { (storage::GetAttachedShaders.f)(program, maxCount, count, shaders) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetAttribLocation(program: GLuint, name: *GLchar) -> GLint { (storage::GetAttribLocation.f)(program, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetAttribLocationARB(programObj: GLhandleARB, name: *GLcharARB) -> GLint { (storage::GetAttribLocationARB.f)(programObj, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBooleanIndexedvEXT(target: GLenum, index: GLuint, data: *GLboolean) -> c_void { (storage::GetBooleanIndexedvEXT.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBooleani_v(target: GLenum, index: GLuint, data: *GLboolean) -> c_void { (storage::GetBooleani_v.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBooleanv(pname: GLenum, params: *GLboolean) -> c_void { (storage::GetBooleanv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferParameteri64v(target: GLenum, pname: GLenum, params: *GLint64) -> c_void { (storage::GetBufferParameteri64v.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetBufferParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferParameterivARB(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetBufferParameterivARB.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferParameterui64vNV(target: GLenum, pname: GLenum, params: *GLuint64EXT) -> c_void { (storage::GetBufferParameterui64vNV.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferPointerv(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void { (storage::GetBufferPointerv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferPointervARB(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void { (storage::GetBufferPointervARB.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferPointervOES(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void { (storage::GetBufferPointervOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferSubData(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void { (storage::GetBufferSubData.f)(target, offset, size, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetBufferSubDataARB(target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: *GLvoid) -> c_void { (storage::GetBufferSubDataARB.f)(target, offset, size, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetClipPlane(plane: GLenum, equation: *GLdouble) -> c_void { (storage::GetClipPlane.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetClipPlanef(plane: GLenum, equation: *GLfloat) -> c_void { (storage::GetClipPlanef.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetClipPlanefOES(plane: GLenum, equation: *GLfloat) -> c_void { (storage::GetClipPlanefOES.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetClipPlanex(plane: GLenum, equation: *GLfixed) -> c_void { (storage::GetClipPlanex.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetClipPlanexOES(plane: GLenum, equation: *GLfixed) -> c_void { (storage::GetClipPlanexOES.f)(plane, equation) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTable(target: GLenum, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void { (storage::GetColorTable.f)(target, format, type_, table) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableEXT(target: GLenum, format: GLenum, type_: GLenum, data: *GLvoid) -> c_void { (storage::GetColorTableEXT.f)(target, format, type_, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetColorTableParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetColorTableParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableParameterfvSGI(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetColorTableParameterfvSGI.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetColorTableParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetColorTableParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableParameterivSGI(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetColorTableParameterivSGI.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetColorTableSGI(target: GLenum, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void { (storage::GetColorTableSGI.f)(target, format, type_, table) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCombinerInputParameterfvNV(stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetCombinerInputParameterfvNV.f)(stage, portion, variable, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCombinerInputParameterivNV(stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetCombinerInputParameterivNV.f)(stage, portion, variable, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCombinerOutputParameterfvNV(stage: GLenum, portion: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetCombinerOutputParameterfvNV.f)(stage, portion, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCombinerOutputParameterivNV(stage: GLenum, portion: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetCombinerOutputParameterivNV.f)(stage, portion, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCombinerStageParameterfvNV(stage: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetCombinerStageParameterfvNV.f)(stage, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCompressedMultiTexImageEXT(texunit: GLenum, target: GLenum, lod: GLint, img: *GLvoid) -> c_void { (storage::GetCompressedMultiTexImageEXT.f)(texunit, target, lod, img) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCompressedTexImage(target: GLenum, level: GLint, img: *GLvoid) -> c_void { (storage::GetCompressedTexImage.f)(target, level, img) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCompressedTexImageARB(target: GLenum, level: GLint, img: *GLvoid) -> c_void { (storage::GetCompressedTexImageARB.f)(target, level, img) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetCompressedTextureImageEXT(texture: GLuint, target: GLenum, lod: GLint, img: *GLvoid) -> c_void { (storage::GetCompressedTextureImageEXT.f)(texture, target, lod, img) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionFilter(target: GLenum, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void { (storage::GetConvolutionFilter.f)(target, format, type_, image) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionFilterEXT(target: GLenum, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void { (storage::GetConvolutionFilterEXT.f)(target, format, type_, image) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetConvolutionParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetConvolutionParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetConvolutionParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetConvolutionParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetConvolutionParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetConvolutionParameterxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDebugMessageLog(count: GLuint, bufsize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint { (storage::GetDebugMessageLog.f)(count, bufsize, sources, types, ids, severities, lengths, messageLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDebugMessageLogAMD(count: GLuint, bufsize: GLsizei, categories: *GLenum, severities: *GLuint, ids: *GLuint, lengths: *GLsizei, message: *GLchar) -> GLuint { (storage::GetDebugMessageLogAMD.f)(count, bufsize, categories, severities, ids, lengths, message) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDebugMessageLogARB(count: GLuint, bufsize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint { (storage::GetDebugMessageLogARB.f)(count, bufsize, sources, types, ids, severities, lengths, messageLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDebugMessageLogKHR(count: GLuint, bufsize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint { (storage::GetDebugMessageLogKHR.f)(count, bufsize, sources, types, ids, severities, lengths, messageLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDetailTexFuncSGIS(target: GLenum, points: *GLfloat) -> c_void { (storage::GetDetailTexFuncSGIS.f)(target, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDoubleIndexedvEXT(target: GLenum, index: GLuint, data: *GLdouble) -> c_void { (storage::GetDoubleIndexedvEXT.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDoublei_v(target: GLenum, index: GLuint, data: *GLdouble) -> c_void { (storage::GetDoublei_v.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDoublei_vEXT(pname: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::GetDoublei_vEXT.f)(pname, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDoublev(pname: GLenum, params: *GLdouble) -> c_void { (storage::GetDoublev.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDriverControlStringQCOM(driverControl: GLuint, bufSize: GLsizei, length: *GLsizei, driverControlString: *GLchar) -> c_void { (storage::GetDriverControlStringQCOM.f)(driverControl, bufSize, length, driverControlString) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetDriverControlsQCOM(num: *GLint, size: GLsizei, driverControls: *GLuint) -> c_void { (storage::GetDriverControlsQCOM.f)(num, size, driverControls) }
#[fixed_stack_segment] #[inline] pub fn GetError() -> GLenum { unsafe { (storage::GetError.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFenceivNV(fence: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetFenceivNV.f)(fence, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFinalCombinerInputParameterfvNV(variable: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetFinalCombinerInputParameterfvNV.f)(variable, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFinalCombinerInputParameterivNV(variable: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFinalCombinerInputParameterivNV.f)(variable, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFixedv(pname: GLenum, params: *GLfixed) -> c_void { (storage::GetFixedv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFixedvOES(pname: GLenum, params: *GLfixed) -> c_void { (storage::GetFixedvOES.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFloatIndexedvEXT(target: GLenum, index: GLuint, data: *GLfloat) -> c_void { (storage::GetFloatIndexedvEXT.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFloati_v(target: GLenum, index: GLuint, data: *GLfloat) -> c_void { (storage::GetFloati_v.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFloati_vEXT(pname: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::GetFloati_vEXT.f)(pname, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFloatv(pname: GLenum, params: *GLfloat) -> c_void { (storage::GetFloatv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFogFuncSGIS(points: *GLfloat) -> c_void { (storage::GetFogFuncSGIS.f)(points) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragDataIndex(program: GLuint, name: *GLchar) -> GLint { (storage::GetFragDataIndex.f)(program, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragDataLocation(program: GLuint, name: *GLchar) -> GLint { (storage::GetFragDataLocation.f)(program, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragDataLocationEXT(program: GLuint, name: *GLchar) -> GLint { (storage::GetFragDataLocationEXT.f)(program, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragmentLightfvSGIX(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetFragmentLightfvSGIX.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragmentLightivSGIX(light: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFragmentLightivSGIX.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragmentMaterialfvSGIX(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetFragmentMaterialfvSGIX.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFragmentMaterialivSGIX(face: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFragmentMaterialivSGIX.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFramebufferAttachmentParameteriv(target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFramebufferAttachmentParameteriv.f)(target, attachment, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFramebufferAttachmentParameterivEXT(target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFramebufferAttachmentParameterivEXT.f)(target, attachment, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFramebufferAttachmentParameterivOES(target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFramebufferAttachmentParameterivOES.f)(target, attachment, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFramebufferParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetFramebufferParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetFramebufferParameterivEXT(framebuffer: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetFramebufferParameterivEXT.f)(framebuffer, pname, params) }
#[fixed_stack_segment] #[inline] pub fn GetGraphicsResetStatusARB() -> GLenum { unsafe { (storage::GetGraphicsResetStatusARB.f)() } }
#[fixed_stack_segment] #[inline] pub fn GetGraphicsResetStatusEXT() -> GLenum { unsafe { (storage::GetGraphicsResetStatusEXT.f)() } }
#[fixed_stack_segment] #[inline] pub fn GetHandleARB(pname: GLenum) -> GLhandleARB { unsafe { (storage::GetHandleARB.f)(pname) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogram(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void { (storage::GetHistogram.f)(target, reset, format, type_, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogramEXT(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void { (storage::GetHistogramEXT.f)(target, reset, format, type_, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogramParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetHistogramParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogramParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetHistogramParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogramParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetHistogramParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogramParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetHistogramParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetHistogramParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetHistogramParameterxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn GetImageHandleARB(texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64 { unsafe { (storage::GetImageHandleARB.f)(texture, level, layered, layer, format) } }
#[fixed_stack_segment] #[inline] pub fn GetImageHandleNV(texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64 { unsafe { (storage::GetImageHandleNV.f)(texture, level, layered, layer, format) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetImageTransformParameterfvHP(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetImageTransformParameterfvHP.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetImageTransformParameterivHP(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetImageTransformParameterivHP.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInfoLogARB(obj: GLhandleARB, maxLength: GLsizei, length: *GLsizei, infoLog: *GLcharARB) -> c_void { (storage::GetInfoLogARB.f)(obj, maxLength, length, infoLog) }
#[fixed_stack_segment] #[inline] pub fn GetInstrumentsSGIX() -> GLint { unsafe { (storage::GetInstrumentsSGIX.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInteger64i_v(target: GLenum, index: GLuint, data: *GLint64) -> c_void { (storage::GetInteger64i_v.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInteger64v(pname: GLenum, params: *GLint64) -> c_void { (storage::GetInteger64v.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInteger64vAPPLE(pname: GLenum, params: *GLint64) -> c_void { (storage::GetInteger64vAPPLE.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetIntegerIndexedvEXT(target: GLenum, index: GLuint, data: *GLint) -> c_void { (storage::GetIntegerIndexedvEXT.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetIntegeri_v(target: GLenum, index: GLuint, data: *GLint) -> c_void { (storage::GetIntegeri_v.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetIntegeri_vEXT(target: GLenum, index: GLuint, data: *GLint) -> c_void { (storage::GetIntegeri_vEXT.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetIntegerui64i_vNV(value: GLenum, index: GLuint, result: *GLuint64EXT) -> c_void { (storage::GetIntegerui64i_vNV.f)(value, index, result) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetIntegerui64vNV(value: GLenum, result: *GLuint64EXT) -> c_void { (storage::GetIntegerui64vNV.f)(value, result) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetIntegerv(pname: GLenum, params: *GLint) -> c_void { (storage::GetIntegerv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInternalformati64v(target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: *GLint64) -> c_void { (storage::GetInternalformati64v.f)(target, internalformat, pname, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInternalformativ(target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: *GLint) -> c_void { (storage::GetInternalformativ.f)(target, internalformat, pname, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInvariantBooleanvEXT(id: GLuint, value: GLenum, data: *GLboolean) -> c_void { (storage::GetInvariantBooleanvEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInvariantFloatvEXT(id: GLuint, value: GLenum, data: *GLfloat) -> c_void { (storage::GetInvariantFloatvEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetInvariantIntegervEXT(id: GLuint, value: GLenum, data: *GLint) -> c_void { (storage::GetInvariantIntegervEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLightfv(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetLightfv.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLightiv(light: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetLightiv.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLightx(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetLightx.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLightxOES(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetLightxOES.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLightxv(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetLightxv.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLightxvOES(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetLightxvOES.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetListParameterfvSGIX(list: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetListParameterfvSGIX.f)(list, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetListParameterivSGIX(list: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetListParameterivSGIX.f)(list, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLocalConstantBooleanvEXT(id: GLuint, value: GLenum, data: *GLboolean) -> c_void { (storage::GetLocalConstantBooleanvEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLocalConstantFloatvEXT(id: GLuint, value: GLenum, data: *GLfloat) -> c_void { (storage::GetLocalConstantFloatvEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetLocalConstantIntegervEXT(id: GLuint, value: GLenum, data: *GLint) -> c_void { (storage::GetLocalConstantIntegervEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapAttribParameterfvNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMapAttribParameterfvNV.f)(target, index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapAttribParameterivNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetMapAttribParameterivNV.f)(target, index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapControlPointsNV(target: GLenum, index: GLuint, type_: GLenum, ustride: GLsizei, vstride: GLsizei, packed: GLboolean, points: *GLvoid) -> c_void { (storage::GetMapControlPointsNV.f)(target, index, type_, ustride, vstride, packed, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapParameterfvNV(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMapParameterfvNV.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapParameterivNV(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMapParameterivNV.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapdv(target: GLenum, query: GLenum, v: *GLdouble) -> c_void { (storage::GetMapdv.f)(target, query, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapfv(target: GLenum, query: GLenum, v: *GLfloat) -> c_void { (storage::GetMapfv.f)(target, query, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapiv(target: GLenum, query: GLenum, v: *GLint) -> c_void { (storage::GetMapiv.f)(target, query, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMapxvOES(target: GLenum, query: GLenum, v: *GLfixed) -> c_void { (storage::GetMapxvOES.f)(target, query, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMaterialfv(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMaterialfv.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMaterialiv(face: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMaterialiv.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub fn GetMaterialx(face: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::GetMaterialx.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn GetMaterialxOES(face: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::GetMaterialxOES.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMaterialxv(face: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetMaterialxv.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMaterialxvOES(face: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetMaterialxvOES.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMinmax(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void { (storage::GetMinmax.f)(target, reset, format, type_, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMinmaxEXT(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void { (storage::GetMinmaxEXT.f)(target, reset, format, type_, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMinmaxParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMinmaxParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMinmaxParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMinmaxParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMinmaxParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMinmaxParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMinmaxParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMinmaxParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexEnvfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMultiTexEnvfvEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexEnvivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMultiTexEnvivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexGendvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetMultiTexGendvEXT.f)(texunit, coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexGenfvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMultiTexGenfvEXT.f)(texunit, coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexGenivEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMultiTexGenivEXT.f)(texunit, coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexImageEXT(texunit: GLenum, target: GLenum, level: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::GetMultiTexImageEXT.f)(texunit, target, level, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexLevelParameterfvEXT(texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMultiTexLevelParameterfvEXT.f)(texunit, target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexLevelParameterivEXT(texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void { (storage::GetMultiTexLevelParameterivEXT.f)(texunit, target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexParameterIivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMultiTexParameterIivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexParameterIuivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::GetMultiTexParameterIuivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexParameterfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetMultiTexParameterfvEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultiTexParameterivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetMultiTexParameterivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultisamplefv(pname: GLenum, index: GLuint, val: *GLfloat) -> c_void { (storage::GetMultisamplefv.f)(pname, index, val) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetMultisamplefvNV(pname: GLenum, index: GLuint, val: *GLfloat) -> c_void { (storage::GetMultisamplefvNV.f)(pname, index, val) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedBufferParameterivEXT(buffer: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetNamedBufferParameterivEXT.f)(buffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedBufferParameterui64vNV(buffer: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void { (storage::GetNamedBufferParameterui64vNV.f)(buffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedBufferPointervEXT(buffer: GLuint, pname: GLenum, params: **GLvoid) -> c_void { (storage::GetNamedBufferPointervEXT.f)(buffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedBufferSubDataEXT(buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void { (storage::GetNamedBufferSubDataEXT.f)(buffer, offset, size, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedFramebufferAttachmentParameterivEXT(framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetNamedFramebufferAttachmentParameterivEXT.f)(framebuffer, attachment, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedFramebufferParameterivEXT(framebuffer: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetNamedFramebufferParameterivEXT.f)(framebuffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedProgramLocalParameterIivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLint) -> c_void { (storage::GetNamedProgramLocalParameterIivEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedProgramLocalParameterIuivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLuint) -> c_void { (storage::GetNamedProgramLocalParameterIuivEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedProgramLocalParameterdvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::GetNamedProgramLocalParameterdvEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedProgramLocalParameterfvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::GetNamedProgramLocalParameterfvEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedProgramStringEXT(program: GLuint, target: GLenum, pname: GLenum, string: *GLvoid) -> c_void { (storage::GetNamedProgramStringEXT.f)(program, target, pname, string) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedProgramivEXT(program: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetNamedProgramivEXT.f)(program, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedRenderbufferParameterivEXT(renderbuffer: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetNamedRenderbufferParameterivEXT.f)(renderbuffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedStringARB(namelen: GLint, name: *GLchar, bufSize: GLsizei, stringlen: *GLint, string: *GLchar) -> c_void { (storage::GetNamedStringARB.f)(namelen, name, bufSize, stringlen, string) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetNamedStringivARB(namelen: GLint, name: *GLchar, pname: GLenum, params: *GLint) -> c_void { (storage::GetNamedStringivARB.f)(namelen, name, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectBufferfvATI(buffer: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetObjectBufferfvATI.f)(buffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectBufferivATI(buffer: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetObjectBufferivATI.f)(buffer, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectLabel(identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void { (storage::GetObjectLabel.f)(identifier, name, bufSize, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectLabelEXT(type_: GLenum, object: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void { (storage::GetObjectLabelEXT.f)(type_, object, bufSize, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectLabelKHR(identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void { (storage::GetObjectLabelKHR.f)(identifier, name, bufSize, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectParameterfvARB(obj: GLhandleARB, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetObjectParameterfvARB.f)(obj, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectParameterivAPPLE(objectType: GLenum, name: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetObjectParameterivAPPLE.f)(objectType, name, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectParameterivARB(obj: GLhandleARB, pname: GLenum, params: *GLint) -> c_void { (storage::GetObjectParameterivARB.f)(obj, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectPtrLabel(ptr: *c_void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void { (storage::GetObjectPtrLabel.f)(ptr, bufSize, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetObjectPtrLabelKHR(ptr: *c_void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void { (storage::GetObjectPtrLabelKHR.f)(ptr, bufSize, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetOcclusionQueryivNV(id: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetOcclusionQueryivNV.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetOcclusionQueryuivNV(id: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetOcclusionQueryuivNV.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathColorGenfvNV(color: GLenum, pname: GLenum, value: *GLfloat) -> c_void { (storage::GetPathColorGenfvNV.f)(color, pname, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathColorGenivNV(color: GLenum, pname: GLenum, value: *GLint) -> c_void { (storage::GetPathColorGenivNV.f)(color, pname, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathCommandsNV(path: GLuint, commands: *GLubyte) -> c_void { (storage::GetPathCommandsNV.f)(path, commands) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathCoordsNV(path: GLuint, coords: *GLfloat) -> c_void { (storage::GetPathCoordsNV.f)(path, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathDashArrayNV(path: GLuint, dashArray: *GLfloat) -> c_void { (storage::GetPathDashArrayNV.f)(path, dashArray) }
#[fixed_stack_segment] #[inline] pub fn GetPathLengthNV(path: GLuint, startSegment: GLsizei, numSegments: GLsizei) -> GLfloat { unsafe { (storage::GetPathLengthNV.f)(path, startSegment, numSegments) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathMetricRangeNV(metricQueryMask: GLbitfield, firstPathName: GLuint, numPaths: GLsizei, stride: GLsizei, metrics: *GLfloat) -> c_void { (storage::GetPathMetricRangeNV.f)(metricQueryMask, firstPathName, numPaths, stride, metrics) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathMetricsNV(metricQueryMask: GLbitfield, numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, stride: GLsizei, metrics: *GLfloat) -> c_void { (storage::GetPathMetricsNV.f)(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathParameterfvNV(path: GLuint, pname: GLenum, value: *GLfloat) -> c_void { (storage::GetPathParameterfvNV.f)(path, pname, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathParameterivNV(path: GLuint, pname: GLenum, value: *GLint) -> c_void { (storage::GetPathParameterivNV.f)(path, pname, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathSpacingNV(pathListMode: GLenum, numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, advanceScale: GLfloat, kerningScale: GLfloat, transformType: GLenum, returnedSpacing: *GLfloat) -> c_void { (storage::GetPathSpacingNV.f)(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathTexGenfvNV(texCoordSet: GLenum, pname: GLenum, value: *GLfloat) -> c_void { (storage::GetPathTexGenfvNV.f)(texCoordSet, pname, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPathTexGenivNV(texCoordSet: GLenum, pname: GLenum, value: *GLint) -> c_void { (storage::GetPathTexGenivNV.f)(texCoordSet, pname, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPerfMonitorCounterDataAMD(monitor: GLuint, pname: GLenum, dataSize: GLsizei, data: *GLuint, bytesWritten: *GLint) -> c_void { (storage::GetPerfMonitorCounterDataAMD.f)(monitor, pname, dataSize, data, bytesWritten) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPerfMonitorCounterInfoAMD(group: GLuint, counter: GLuint, pname: GLenum, data: *GLvoid) -> c_void { (storage::GetPerfMonitorCounterInfoAMD.f)(group, counter, pname, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPerfMonitorCounterStringAMD(group: GLuint, counter: GLuint, bufSize: GLsizei, length: *GLsizei, counterString: *GLchar) -> c_void { (storage::GetPerfMonitorCounterStringAMD.f)(group, counter, bufSize, length, counterString) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPerfMonitorCountersAMD(group: GLuint, numCounters: *GLint, maxActiveCounters: *GLint, counterSize: GLsizei, counters: *GLuint) -> c_void { (storage::GetPerfMonitorCountersAMD.f)(group, numCounters, maxActiveCounters, counterSize, counters) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPerfMonitorGroupStringAMD(group: GLuint, bufSize: GLsizei, length: *GLsizei, groupString: *GLchar) -> c_void { (storage::GetPerfMonitorGroupStringAMD.f)(group, bufSize, length, groupString) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPerfMonitorGroupsAMD(numGroups: *GLint, groupsSize: GLsizei, groups: *GLuint) -> c_void { (storage::GetPerfMonitorGroupsAMD.f)(numGroups, groupsSize, groups) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelMapfv(map: GLenum, values: *GLfloat) -> c_void { (storage::GetPixelMapfv.f)(map, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelMapuiv(map: GLenum, values: *GLuint) -> c_void { (storage::GetPixelMapuiv.f)(map, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelMapusv(map: GLenum, values: *GLushort) -> c_void { (storage::GetPixelMapusv.f)(map, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelMapxv(map: GLenum, size: GLint, values: *GLfixed) -> c_void { (storage::GetPixelMapxv.f)(map, size, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelTexGenParameterfvSGIS(pname: GLenum, params: *GLfloat) -> c_void { (storage::GetPixelTexGenParameterfvSGIS.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelTexGenParameterivSGIS(pname: GLenum, params: *GLint) -> c_void { (storage::GetPixelTexGenParameterivSGIS.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelTransformParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetPixelTransformParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPixelTransformParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetPixelTransformParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPointerIndexedvEXT(target: GLenum, index: GLuint, data: **GLvoid) -> c_void { (storage::GetPointerIndexedvEXT.f)(target, index, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPointeri_vEXT(pname: GLenum, index: GLuint, params: **GLvoid) -> c_void { (storage::GetPointeri_vEXT.f)(pname, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPointerv(pname: GLenum, params: **GLvoid) -> c_void { (storage::GetPointerv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPointervEXT(pname: GLenum, params: **GLvoid) -> c_void { (storage::GetPointervEXT.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPointervKHR(pname: GLenum, params: **GLvoid) -> c_void { (storage::GetPointervKHR.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetPolygonStipple(mask: *GLubyte) -> c_void { (storage::GetPolygonStipple.f)(mask) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramBinary(program: GLuint, bufSize: GLsizei, length: *GLsizei, binaryFormat: *GLenum, binary: *GLvoid) -> c_void { (storage::GetProgramBinary.f)(program, bufSize, length, binaryFormat, binary) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramBinaryOES(program: GLuint, bufSize: GLsizei, length: *GLsizei, binaryFormat: *GLenum, binary: *GLvoid) -> c_void { (storage::GetProgramBinaryOES.f)(program, bufSize, length, binaryFormat, binary) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramEnvParameterIivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void { (storage::GetProgramEnvParameterIivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramEnvParameterIuivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void { (storage::GetProgramEnvParameterIuivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramEnvParameterdvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::GetProgramEnvParameterdvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramEnvParameterfvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::GetProgramEnvParameterfvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramInfoLog(program: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void { (storage::GetProgramInfoLog.f)(program, bufSize, length, infoLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramInterfaceiv(program: GLuint, programInterface: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetProgramInterfaceiv.f)(program, programInterface, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramLocalParameterIivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void { (storage::GetProgramLocalParameterIivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramLocalParameterIuivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void { (storage::GetProgramLocalParameterIuivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramLocalParameterdvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::GetProgramLocalParameterdvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramLocalParameterfvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::GetProgramLocalParameterfvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramNamedParameterdvNV(id: GLuint, len: GLsizei, name: *GLubyte, params: *GLdouble) -> c_void { (storage::GetProgramNamedParameterdvNV.f)(id, len, name, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramNamedParameterfvNV(id: GLuint, len: GLsizei, name: *GLubyte, params: *GLfloat) -> c_void { (storage::GetProgramNamedParameterfvNV.f)(id, len, name, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramParameterdvNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetProgramParameterdvNV.f)(target, index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramParameterfvNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetProgramParameterfvNV.f)(target, index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramPipelineInfoLog(pipeline: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void { (storage::GetProgramPipelineInfoLog.f)(pipeline, bufSize, length, infoLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramPipelineInfoLogEXT(pipeline: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void { (storage::GetProgramPipelineInfoLogEXT.f)(pipeline, bufSize, length, infoLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramPipelineiv(pipeline: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetProgramPipelineiv.f)(pipeline, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramPipelineivEXT(pipeline: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetProgramPipelineivEXT.f)(pipeline, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramResourceIndex(program: GLuint, programInterface: GLenum, name: *GLchar) -> GLuint { (storage::GetProgramResourceIndex.f)(program, programInterface, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramResourceLocation(program: GLuint, programInterface: GLenum, name: *GLchar) -> GLint { (storage::GetProgramResourceLocation.f)(program, programInterface, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramResourceLocationIndex(program: GLuint, programInterface: GLenum, name: *GLchar) -> GLint { (storage::GetProgramResourceLocationIndex.f)(program, programInterface, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramResourceName(program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: *GLsizei, name: *GLchar) -> c_void { (storage::GetProgramResourceName.f)(program, programInterface, index, bufSize, length, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramResourceiv(program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: *GLenum, bufSize: GLsizei, length: *GLsizei, params: *GLint) -> c_void { (storage::GetProgramResourceiv.f)(program, programInterface, index, propCount, props, bufSize, length, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramStageiv(program: GLuint, shadertype: GLenum, pname: GLenum, values: *GLint) -> c_void { (storage::GetProgramStageiv.f)(program, shadertype, pname, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramStringARB(target: GLenum, pname: GLenum, string: *GLvoid) -> c_void { (storage::GetProgramStringARB.f)(target, pname, string) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramStringNV(id: GLuint, pname: GLenum, program: *GLubyte) -> c_void { (storage::GetProgramStringNV.f)(id, pname, program) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramSubroutineParameteruivNV(target: GLenum, index: GLuint, param: *GLuint) -> c_void { (storage::GetProgramSubroutineParameteruivNV.f)(target, index, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramiv(program: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetProgramiv.f)(program, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramivARB(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetProgramivARB.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetProgramivNV(id: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetProgramivNV.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryIndexediv(target: GLenum, index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryIndexediv.f)(target, index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjecti64v(id: GLuint, pname: GLenum, params: *GLint64) -> c_void { (storage::GetQueryObjecti64v.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjecti64vEXT(id: GLuint, pname: GLenum, params: *GLint64) -> c_void { (storage::GetQueryObjecti64vEXT.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectiv(id: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryObjectiv.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectivARB(id: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryObjectivARB.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectivEXT(id: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryObjectivEXT.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectui64v(id: GLuint, pname: GLenum, params: *GLuint64) -> c_void { (storage::GetQueryObjectui64v.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectui64vEXT(id: GLuint, pname: GLenum, params: *GLuint64) -> c_void { (storage::GetQueryObjectui64vEXT.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectuiv(id: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetQueryObjectuiv.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectuivARB(id: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetQueryObjectuivARB.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryObjectuivEXT(id: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetQueryObjectuivEXT.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryiv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryiv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryivARB(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryivARB.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetQueryivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetQueryivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetRenderbufferParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetRenderbufferParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetRenderbufferParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetRenderbufferParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetRenderbufferParameterivOES(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetRenderbufferParameterivOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSamplerParameterIiv(sampler: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetSamplerParameterIiv.f)(sampler, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSamplerParameterIuiv(sampler: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetSamplerParameterIuiv.f)(sampler, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSamplerParameterfv(sampler: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetSamplerParameterfv.f)(sampler, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSamplerParameteriv(sampler: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetSamplerParameteriv.f)(sampler, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSeparableFilter(target: GLenum, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid, span: *GLvoid) -> c_void { (storage::GetSeparableFilter.f)(target, format, type_, row, column, span) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSeparableFilterEXT(target: GLenum, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid, span: *GLvoid) -> c_void { (storage::GetSeparableFilterEXT.f)(target, format, type_, row, column, span) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetShaderInfoLog(shader: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void { (storage::GetShaderInfoLog.f)(shader, bufSize, length, infoLog) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum, range: *GLint, precision: *GLint) -> c_void { (storage::GetShaderPrecisionFormat.f)(shadertype, precisiontype, range, precision) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetShaderSource(shader: GLuint, bufSize: GLsizei, length: *GLsizei, source: *GLchar) -> c_void { (storage::GetShaderSource.f)(shader, bufSize, length, source) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetShaderSourceARB(obj: GLhandleARB, maxLength: GLsizei, length: *GLsizei, source: *GLcharARB) -> c_void { (storage::GetShaderSourceARB.f)(obj, maxLength, length, source) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetShaderiv(shader: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetShaderiv.f)(shader, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSharpenTexFuncSGIS(target: GLenum, points: *GLfloat) -> c_void { (storage::GetSharpenTexFuncSGIS.f)(target, points) }
#[fixed_stack_segment] #[inline] pub fn GetString(name: GLenum) -> *GLubyte { unsafe { (storage::GetString.f)(name) } }
#[fixed_stack_segment] #[inline] pub fn GetStringi(name: GLenum, index: GLuint) -> *GLubyte { unsafe { (storage::GetStringi.f)(name, index) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSubroutineIndex(program: GLuint, shadertype: GLenum, name: *GLchar) -> GLuint { (storage::GetSubroutineIndex.f)(program, shadertype, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSubroutineUniformLocation(program: GLuint, shadertype: GLenum, name: *GLchar) -> GLint { (storage::GetSubroutineUniformLocation.f)(program, shadertype, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSynciv(sync: GLsync, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) -> c_void { (storage::GetSynciv.f)(sync, pname, bufSize, length, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetSyncivAPPLE(sync: GLsync, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) -> c_void { (storage::GetSyncivAPPLE.f)(sync, pname, bufSize, length, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexBumpParameterfvATI(pname: GLenum, param: *GLfloat) -> c_void { (storage::GetTexBumpParameterfvATI.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexBumpParameterivATI(pname: GLenum, param: *GLint) -> c_void { (storage::GetTexBumpParameterivATI.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexEnvfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTexEnvfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexEnviv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexEnviv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexEnvxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetTexEnvxv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexEnvxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetTexEnvxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexFilterFuncSGIS(target: GLenum, filter: GLenum, weights: *GLfloat) -> c_void { (storage::GetTexFilterFuncSGIS.f)(target, filter, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexGendv(coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetTexGendv.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexGenfv(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTexGenfv.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexGenfvOES(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTexGenfvOES.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexGeniv(coord: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexGeniv.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexGenivOES(coord: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexGenivOES.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexGenxvOES(coord: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetTexGenxvOES.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexImage(target: GLenum, level: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::GetTexImage.f)(target, level, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexLevelParameterfv(target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTexLevelParameterfv.f)(target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexLevelParameteriv(target: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexLevelParameteriv.f)(target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexLevelParameterxvOES(target: GLenum, level: GLint, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetTexLevelParameterxvOES.f)(target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterIiv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexParameterIiv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterIivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexParameterIivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterIuiv(target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::GetTexParameterIuiv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterIuivEXT(target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::GetTexParameterIuivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterPointervAPPLE(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void { (storage::GetTexParameterPointervAPPLE.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTexParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTexParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetTexParameterxv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTexParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::GetTexParameterxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn GetTextureHandleARB(texture: GLuint) -> GLuint64 { unsafe { (storage::GetTextureHandleARB.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn GetTextureHandleNV(texture: GLuint) -> GLuint64 { unsafe { (storage::GetTextureHandleNV.f)(texture) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureImageEXT(texture: GLuint, target: GLenum, level: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::GetTextureImageEXT.f)(texture, target, level, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureLevelParameterfvEXT(texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTextureLevelParameterfvEXT.f)(texture, target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureLevelParameterivEXT(texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void { (storage::GetTextureLevelParameterivEXT.f)(texture, target, level, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureParameterIivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTextureParameterIivEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureParameterIuivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::GetTextureParameterIuivEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureParameterfvEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetTextureParameterfvEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTextureParameterivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::GetTextureParameterivEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn GetTextureSamplerHandleARB(texture: GLuint, sampler: GLuint) -> GLuint64 { unsafe { (storage::GetTextureSamplerHandleARB.f)(texture, sampler) } }
#[fixed_stack_segment] #[inline] pub fn GetTextureSamplerHandleNV(texture: GLuint, sampler: GLuint) -> GLuint64 { unsafe { (storage::GetTextureSamplerHandleNV.f)(texture, sampler) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTrackMatrixivNV(target: GLenum, address: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetTrackMatrixivNV.f)(target, address, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTransformFeedbackVarying(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type_: *GLenum, name: *GLchar) -> c_void { (storage::GetTransformFeedbackVarying.f)(program, index, bufSize, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTransformFeedbackVaryingEXT(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type_: *GLenum, name: *GLchar) -> c_void { (storage::GetTransformFeedbackVaryingEXT.f)(program, index, bufSize, length, size, type_, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTransformFeedbackVaryingNV(program: GLuint, index: GLuint, location: *GLint) -> c_void { (storage::GetTransformFeedbackVaryingNV.f)(program, index, location) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetTranslatedShaderSourceANGLE(shader: GLuint, bufsize: GLsizei, length: *GLsizei, source: *GLchar) -> c_void { (storage::GetTranslatedShaderSourceANGLE.f)(shader, bufsize, length, source) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformBlockIndex(program: GLuint, uniformBlockName: *GLchar) -> GLuint { (storage::GetUniformBlockIndex.f)(program, uniformBlockName) }
#[fixed_stack_segment] #[inline] pub fn GetUniformBufferSizeEXT(program: GLuint, location: GLint) -> GLint { unsafe { (storage::GetUniformBufferSizeEXT.f)(program, location) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformIndices(program: GLuint, uniformCount: GLsizei, uniformNames: **GLchar, uniformIndices: *GLuint) -> c_void { (storage::GetUniformIndices.f)(program, uniformCount, uniformNames, uniformIndices) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformLocation(program: GLuint, name: *GLchar) -> GLint { (storage::GetUniformLocation.f)(program, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformLocationARB(programObj: GLhandleARB, name: *GLcharARB) -> GLint { (storage::GetUniformLocationARB.f)(programObj, name) }
#[fixed_stack_segment] #[inline] pub fn GetUniformOffsetEXT(program: GLuint, location: GLint) -> GLintptr { unsafe { (storage::GetUniformOffsetEXT.f)(program, location) } }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformSubroutineuiv(shadertype: GLenum, location: GLint, params: *GLuint) -> c_void { (storage::GetUniformSubroutineuiv.f)(shadertype, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformdv(program: GLuint, location: GLint, params: *GLdouble) -> c_void { (storage::GetUniformdv.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformfv(program: GLuint, location: GLint, params: *GLfloat) -> c_void { (storage::GetUniformfv.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformfvARB(programObj: GLhandleARB, location: GLint, params: *GLfloat) -> c_void { (storage::GetUniformfvARB.f)(programObj, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformi64vNV(program: GLuint, location: GLint, params: *GLint64EXT) -> c_void { (storage::GetUniformi64vNV.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformiv(program: GLuint, location: GLint, params: *GLint) -> c_void { (storage::GetUniformiv.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformivARB(programObj: GLhandleARB, location: GLint, params: *GLint) -> c_void { (storage::GetUniformivARB.f)(programObj, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformui64vNV(program: GLuint, location: GLint, params: *GLuint64EXT) -> c_void { (storage::GetUniformui64vNV.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformuiv(program: GLuint, location: GLint, params: *GLuint) -> c_void { (storage::GetUniformuiv.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetUniformuivEXT(program: GLuint, location: GLint, params: *GLuint) -> c_void { (storage::GetUniformuivEXT.f)(program, location, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVariantArrayObjectfvATI(id: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetVariantArrayObjectfvATI.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVariantArrayObjectivATI(id: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVariantArrayObjectivATI.f)(id, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVariantBooleanvEXT(id: GLuint, value: GLenum, data: *GLboolean) -> c_void { (storage::GetVariantBooleanvEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVariantFloatvEXT(id: GLuint, value: GLenum, data: *GLfloat) -> c_void { (storage::GetVariantFloatvEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVariantIntegervEXT(id: GLuint, value: GLenum, data: *GLint) -> c_void { (storage::GetVariantIntegervEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVariantPointervEXT(id: GLuint, value: GLenum, data: **GLvoid) -> c_void { (storage::GetVariantPointervEXT.f)(id, value, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVaryingLocationNV(program: GLuint, name: *GLchar) -> GLint { (storage::GetVaryingLocationNV.f)(program, name) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexArrayIntegeri_vEXT(vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint) -> c_void { (storage::GetVertexArrayIntegeri_vEXT.f)(vaobj, index, pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexArrayIntegervEXT(vaobj: GLuint, pname: GLenum, param: *GLint) -> c_void { (storage::GetVertexArrayIntegervEXT.f)(vaobj, pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexArrayPointeri_vEXT(vaobj: GLuint, index: GLuint, pname: GLenum, param: **GLvoid) -> c_void { (storage::GetVertexArrayPointeri_vEXT.f)(vaobj, index, pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexArrayPointervEXT(vaobj: GLuint, pname: GLenum, param: **GLvoid) -> c_void { (storage::GetVertexArrayPointervEXT.f)(vaobj, pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribArrayObjectfvATI(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetVertexAttribArrayObjectfvATI.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribArrayObjectivATI(index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVertexAttribArrayObjectivATI.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribIiv(index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVertexAttribIiv.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribIivEXT(index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVertexAttribIivEXT.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribIuiv(index: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetVertexAttribIuiv.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribIuivEXT(index: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetVertexAttribIuivEXT.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribLdv(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetVertexAttribLdv.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribLdvEXT(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetVertexAttribLdvEXT.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribLi64vNV(index: GLuint, pname: GLenum, params: *GLint64EXT) -> c_void { (storage::GetVertexAttribLi64vNV.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribLui64vARB(index: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void { (storage::GetVertexAttribLui64vARB.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribLui64vNV(index: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void { (storage::GetVertexAttribLui64vNV.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribPointerv(index: GLuint, pname: GLenum, pointer: **GLvoid) -> c_void { (storage::GetVertexAttribPointerv.f)(index, pname, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribPointervARB(index: GLuint, pname: GLenum, pointer: **GLvoid) -> c_void { (storage::GetVertexAttribPointervARB.f)(index, pname, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribPointervNV(index: GLuint, pname: GLenum, pointer: **GLvoid) -> c_void { (storage::GetVertexAttribPointervNV.f)(index, pname, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribdv(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetVertexAttribdv.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribdvARB(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetVertexAttribdvARB.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribdvNV(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetVertexAttribdvNV.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribfv(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetVertexAttribfv.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribfvARB(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetVertexAttribfvARB.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribfvNV(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetVertexAttribfvNV.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribiv(index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVertexAttribiv.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribivARB(index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVertexAttribivARB.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVertexAttribivNV(index: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVertexAttribivNV.f)(index, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoCaptureStreamdvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::GetVideoCaptureStreamdvNV.f)(video_capture_slot, stream, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoCaptureStreamfvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::GetVideoCaptureStreamfvNV.f)(video_capture_slot, stream, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoCaptureStreamivNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVideoCaptureStreamivNV.f)(video_capture_slot, stream, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoCaptureivNV(video_capture_slot: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVideoCaptureivNV.f)(video_capture_slot, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoi64vNV(video_slot: GLuint, pname: GLenum, params: *GLint64EXT) -> c_void { (storage::GetVideoi64vNV.f)(video_slot, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoivNV(video_slot: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::GetVideoivNV.f)(video_slot, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideoui64vNV(video_slot: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void { (storage::GetVideoui64vNV.f)(video_slot, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetVideouivNV(video_slot: GLuint, pname: GLenum, params: *GLuint) -> c_void { (storage::GetVideouivNV.f)(video_slot, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnColorTableARB(target: GLenum, format: GLenum, type_: GLenum, bufSize: GLsizei, table: *GLvoid) -> c_void { (storage::GetnColorTableARB.f)(target, format, type_, bufSize, table) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnCompressedTexImageARB(target: GLenum, lod: GLint, bufSize: GLsizei, img: *GLvoid) -> c_void { (storage::GetnCompressedTexImageARB.f)(target, lod, bufSize, img) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnConvolutionFilterARB(target: GLenum, format: GLenum, type_: GLenum, bufSize: GLsizei, image: *GLvoid) -> c_void { (storage::GetnConvolutionFilterARB.f)(target, format, type_, bufSize, image) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnHistogramARB(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, bufSize: GLsizei, values: *GLvoid) -> c_void { (storage::GetnHistogramARB.f)(target, reset, format, type_, bufSize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnMapdvARB(target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLdouble) -> c_void { (storage::GetnMapdvARB.f)(target, query, bufSize, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnMapfvARB(target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLfloat) -> c_void { (storage::GetnMapfvARB.f)(target, query, bufSize, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnMapivARB(target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLint) -> c_void { (storage::GetnMapivARB.f)(target, query, bufSize, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnMinmaxARB(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, bufSize: GLsizei, values: *GLvoid) -> c_void { (storage::GetnMinmaxARB.f)(target, reset, format, type_, bufSize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnPixelMapfvARB(map: GLenum, bufSize: GLsizei, values: *GLfloat) -> c_void { (storage::GetnPixelMapfvARB.f)(map, bufSize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnPixelMapuivARB(map: GLenum, bufSize: GLsizei, values: *GLuint) -> c_void { (storage::GetnPixelMapuivARB.f)(map, bufSize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnPixelMapusvARB(map: GLenum, bufSize: GLsizei, values: *GLushort) -> c_void { (storage::GetnPixelMapusvARB.f)(map, bufSize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnPolygonStippleARB(bufSize: GLsizei, pattern: *GLubyte) -> c_void { (storage::GetnPolygonStippleARB.f)(bufSize, pattern) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnSeparableFilterARB(target: GLenum, format: GLenum, type_: GLenum, rowBufSize: GLsizei, row: *GLvoid, columnBufSize: GLsizei, column: *GLvoid, span: *GLvoid) -> c_void { (storage::GetnSeparableFilterARB.f)(target, format, type_, rowBufSize, row, columnBufSize, column, span) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnTexImageARB(target: GLenum, level: GLint, format: GLenum, type_: GLenum, bufSize: GLsizei, img: *GLvoid) -> c_void { (storage::GetnTexImageARB.f)(target, level, format, type_, bufSize, img) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnUniformdvARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLdouble) -> c_void { (storage::GetnUniformdvARB.f)(program, location, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnUniformfvARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLfloat) -> c_void { (storage::GetnUniformfvARB.f)(program, location, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnUniformfvEXT(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLfloat) -> c_void { (storage::GetnUniformfvEXT.f)(program, location, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnUniformivARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLint) -> c_void { (storage::GetnUniformivARB.f)(program, location, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnUniformivEXT(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLint) -> c_void { (storage::GetnUniformivEXT.f)(program, location, bufSize, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn GetnUniformuivARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLuint) -> c_void { (storage::GetnUniformuivARB.f)(program, location, bufSize, params) }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactorbSUN(factor: GLbyte) -> c_void { unsafe { (storage::GlobalAlphaFactorbSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactordSUN(factor: GLdouble) -> c_void { unsafe { (storage::GlobalAlphaFactordSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactorfSUN(factor: GLfloat) -> c_void { unsafe { (storage::GlobalAlphaFactorfSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactoriSUN(factor: GLint) -> c_void { unsafe { (storage::GlobalAlphaFactoriSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactorsSUN(factor: GLshort) -> c_void { unsafe { (storage::GlobalAlphaFactorsSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactorubSUN(factor: GLubyte) -> c_void { unsafe { (storage::GlobalAlphaFactorubSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactoruiSUN(factor: GLuint) -> c_void { unsafe { (storage::GlobalAlphaFactoruiSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn GlobalAlphaFactorusSUN(factor: GLushort) -> c_void { unsafe { (storage::GlobalAlphaFactorusSUN.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn Hint(target: GLenum, mode: GLenum) -> c_void { unsafe { (storage::Hint.f)(target, mode) } }
#[fixed_stack_segment] #[inline] pub fn HintPGI(target: GLenum, mode: GLint) -> c_void { unsafe { (storage::HintPGI.f)(target, mode) } }
#[fixed_stack_segment] #[inline] pub fn Histogram(target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) -> c_void { unsafe { (storage::Histogram.f)(target, width, internalformat, sink) } }
#[fixed_stack_segment] #[inline] pub fn HistogramEXT(target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) -> c_void { unsafe { (storage::HistogramEXT.f)(target, width, internalformat, sink) } }
#[fixed_stack_segment] #[inline] pub unsafe fn IglooInterfaceSGIX(pname: GLenum, params: *GLvoid) -> c_void { (storage::IglooInterfaceSGIX.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn ImageTransformParameterfHP(target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::ImageTransformParameterfHP.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ImageTransformParameterfvHP(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::ImageTransformParameterfvHP.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn ImageTransformParameteriHP(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::ImageTransformParameteriHP.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ImageTransformParameterivHP(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::ImageTransformParameterivHP.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn ImportSyncEXT(external_sync_type: GLenum, external_sync: GLintptr, flags: GLbitfield) -> GLsync { unsafe { (storage::ImportSyncEXT.f)(external_sync_type, external_sync, flags) } }
#[fixed_stack_segment] #[inline] pub fn IndexFormatNV(type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::IndexFormatNV.f)(type_, stride) } }
#[fixed_stack_segment] #[inline] pub fn IndexFuncEXT(func: GLenum, ref_: GLclampf) -> c_void { unsafe { (storage::IndexFuncEXT.f)(func, ref_) } }
#[fixed_stack_segment] #[inline] pub fn IndexMask(mask: GLuint) -> c_void { unsafe { (storage::IndexMask.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn IndexMaterialEXT(face: GLenum, mode: GLenum) -> c_void { unsafe { (storage::IndexMaterialEXT.f)(face, mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn IndexPointer(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::IndexPointer.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn IndexPointerEXT(type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void { (storage::IndexPointerEXT.f)(type_, stride, count, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn IndexPointerListIBM(type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::IndexPointerListIBM.f)(type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub fn Indexd(c: GLdouble) -> c_void { unsafe { (storage::Indexd.f)(c) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Indexdv(c: *GLdouble) -> c_void { (storage::Indexdv.f)(c) }
#[fixed_stack_segment] #[inline] pub fn Indexf(c: GLfloat) -> c_void { unsafe { (storage::Indexf.f)(c) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Indexfv(c: *GLfloat) -> c_void { (storage::Indexfv.f)(c) }
#[fixed_stack_segment] #[inline] pub fn Indexi(c: GLint) -> c_void { unsafe { (storage::Indexi.f)(c) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Indexiv(c: *GLint) -> c_void { (storage::Indexiv.f)(c) }
#[fixed_stack_segment] #[inline] pub fn Indexs(c: GLshort) -> c_void { unsafe { (storage::Indexs.f)(c) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Indexsv(c: *GLshort) -> c_void { (storage::Indexsv.f)(c) }
#[fixed_stack_segment] #[inline] pub fn Indexub(c: GLubyte) -> c_void { unsafe { (storage::Indexub.f)(c) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Indexubv(c: *GLubyte) -> c_void { (storage::Indexubv.f)(c) }
#[fixed_stack_segment] #[inline] pub fn IndexxOES(component: GLfixed) -> c_void { unsafe { (storage::IndexxOES.f)(component) } }
#[fixed_stack_segment] #[inline] pub unsafe fn IndexxvOES(component: *GLfixed) -> c_void { (storage::IndexxvOES.f)(component) }
#[fixed_stack_segment] #[inline] pub fn InitNames() -> c_void { unsafe { (storage::InitNames.f)() } }
#[fixed_stack_segment] #[inline] pub fn InsertComponentEXT(res: GLuint, src: GLuint, num: GLuint) -> c_void { unsafe { (storage::InsertComponentEXT.f)(res, src, num) } }
#[fixed_stack_segment] #[inline] pub unsafe fn InsertEventMarkerEXT(length: GLsizei, marker: *GLchar) -> c_void { (storage::InsertEventMarkerEXT.f)(length, marker) }
#[fixed_stack_segment] #[inline] pub unsafe fn InstrumentsBufferSGIX(size: GLsizei, buffer: *GLint) -> c_void { (storage::InstrumentsBufferSGIX.f)(size, buffer) }
#[fixed_stack_segment] #[inline] pub unsafe fn InterleavedArrays(format: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::InterleavedArrays.f)(format, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn InterpolatePathsNV(resultPath: GLuint, pathA: GLuint, pathB: GLuint, weight: GLfloat) -> c_void { unsafe { (storage::InterpolatePathsNV.f)(resultPath, pathA, pathB, weight) } }
#[fixed_stack_segment] #[inline] pub fn InvalidateBufferData(buffer: GLuint) -> c_void { unsafe { (storage::InvalidateBufferData.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn InvalidateBufferSubData(buffer: GLuint, offset: GLintptr, length: GLsizeiptr) -> c_void { unsafe { (storage::InvalidateBufferSubData.f)(buffer, offset, length) } }
#[fixed_stack_segment] #[inline] pub unsafe fn InvalidateFramebuffer(target: GLenum, numAttachments: GLsizei, attachments: *GLenum) -> c_void { (storage::InvalidateFramebuffer.f)(target, numAttachments, attachments) }
#[fixed_stack_segment] #[inline] pub unsafe fn InvalidateSubFramebuffer(target: GLenum, numAttachments: GLsizei, attachments: *GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { (storage::InvalidateSubFramebuffer.f)(target, numAttachments, attachments, x, y, width, height) }
#[fixed_stack_segment] #[inline] pub fn InvalidateTexImage(texture: GLuint, level: GLint) -> c_void { unsafe { (storage::InvalidateTexImage.f)(texture, level) } }
#[fixed_stack_segment] #[inline] pub fn InvalidateTexSubImage(texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void { unsafe { (storage::InvalidateTexSubImage.f)(texture, level, xoffset, yoffset, zoffset, width, height, depth) } }
#[fixed_stack_segment] #[inline] pub fn IsAsyncMarkerSGIX(marker: GLuint) -> GLboolean { unsafe { (storage::IsAsyncMarkerSGIX.f)(marker) } }
#[fixed_stack_segment] #[inline] pub fn IsBuffer(buffer: GLuint) -> GLboolean { unsafe { (storage::IsBuffer.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn IsBufferARB(buffer: GLuint) -> GLboolean { unsafe { (storage::IsBufferARB.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn IsBufferResidentNV(target: GLenum) -> GLboolean { unsafe { (storage::IsBufferResidentNV.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn IsEnabled(cap: GLenum) -> GLboolean { unsafe { (storage::IsEnabled.f)(cap) } }
#[fixed_stack_segment] #[inline] pub fn IsEnabledIndexedEXT(target: GLenum, index: GLuint) -> GLboolean { unsafe { (storage::IsEnabledIndexedEXT.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub fn IsEnabledi(target: GLenum, index: GLuint) -> GLboolean { unsafe { (storage::IsEnabledi.f)(target, index) } }
#[fixed_stack_segment] #[inline] pub fn IsFenceAPPLE(fence: GLuint) -> GLboolean { unsafe { (storage::IsFenceAPPLE.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn IsFenceNV(fence: GLuint) -> GLboolean { unsafe { (storage::IsFenceNV.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn IsFramebuffer(framebuffer: GLuint) -> GLboolean { unsafe { (storage::IsFramebuffer.f)(framebuffer) } }
#[fixed_stack_segment] #[inline] pub fn IsFramebufferEXT(framebuffer: GLuint) -> GLboolean { unsafe { (storage::IsFramebufferEXT.f)(framebuffer) } }
#[fixed_stack_segment] #[inline] pub fn IsFramebufferOES(framebuffer: GLuint) -> GLboolean { unsafe { (storage::IsFramebufferOES.f)(framebuffer) } }
#[fixed_stack_segment] #[inline] pub fn IsImageHandleResidentARB(handle: GLuint64) -> GLboolean { unsafe { (storage::IsImageHandleResidentARB.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn IsImageHandleResidentNV(handle: GLuint64) -> GLboolean { unsafe { (storage::IsImageHandleResidentNV.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn IsList(list: GLuint) -> GLboolean { unsafe { (storage::IsList.f)(list) } }
#[fixed_stack_segment] #[inline] pub fn IsNameAMD(identifier: GLenum, name: GLuint) -> GLboolean { unsafe { (storage::IsNameAMD.f)(identifier, name) } }
#[fixed_stack_segment] #[inline] pub fn IsNamedBufferResidentNV(buffer: GLuint) -> GLboolean { unsafe { (storage::IsNamedBufferResidentNV.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub unsafe fn IsNamedStringARB(namelen: GLint, name: *GLchar) -> GLboolean { (storage::IsNamedStringARB.f)(namelen, name) }
#[fixed_stack_segment] #[inline] pub fn IsObjectBufferATI(buffer: GLuint) -> GLboolean { unsafe { (storage::IsObjectBufferATI.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn IsOcclusionQueryNV(id: GLuint) -> GLboolean { unsafe { (storage::IsOcclusionQueryNV.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsPathNV(path: GLuint) -> GLboolean { unsafe { (storage::IsPathNV.f)(path) } }
#[fixed_stack_segment] #[inline] pub fn IsPointInFillPathNV(path: GLuint, mask: GLuint, x: GLfloat, y: GLfloat) -> GLboolean { unsafe { (storage::IsPointInFillPathNV.f)(path, mask, x, y) } }
#[fixed_stack_segment] #[inline] pub fn IsPointInStrokePathNV(path: GLuint, x: GLfloat, y: GLfloat) -> GLboolean { unsafe { (storage::IsPointInStrokePathNV.f)(path, x, y) } }
#[fixed_stack_segment] #[inline] pub fn IsProgram(program: GLuint) -> GLboolean { unsafe { (storage::IsProgram.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn IsProgramARB(program: GLuint) -> GLboolean { unsafe { (storage::IsProgramARB.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn IsProgramNV(id: GLuint) -> GLboolean { unsafe { (storage::IsProgramNV.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsProgramPipeline(pipeline: GLuint) -> GLboolean { unsafe { (storage::IsProgramPipeline.f)(pipeline) } }
#[fixed_stack_segment] #[inline] pub fn IsProgramPipelineEXT(pipeline: GLuint) -> GLboolean { unsafe { (storage::IsProgramPipelineEXT.f)(pipeline) } }
#[fixed_stack_segment] #[inline] pub fn IsQuery(id: GLuint) -> GLboolean { unsafe { (storage::IsQuery.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsQueryARB(id: GLuint) -> GLboolean { unsafe { (storage::IsQueryARB.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsQueryEXT(id: GLuint) -> GLboolean { unsafe { (storage::IsQueryEXT.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsRenderbuffer(renderbuffer: GLuint) -> GLboolean { unsafe { (storage::IsRenderbuffer.f)(renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn IsRenderbufferEXT(renderbuffer: GLuint) -> GLboolean { unsafe { (storage::IsRenderbufferEXT.f)(renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn IsRenderbufferOES(renderbuffer: GLuint) -> GLboolean { unsafe { (storage::IsRenderbufferOES.f)(renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn IsSampler(sampler: GLuint) -> GLboolean { unsafe { (storage::IsSampler.f)(sampler) } }
#[fixed_stack_segment] #[inline] pub fn IsShader(shader: GLuint) -> GLboolean { unsafe { (storage::IsShader.f)(shader) } }
#[fixed_stack_segment] #[inline] pub fn IsSync(sync: GLsync) -> GLboolean { unsafe { (storage::IsSync.f)(sync) } }
#[fixed_stack_segment] #[inline] pub fn IsSyncAPPLE(sync: GLsync) -> GLboolean { unsafe { (storage::IsSyncAPPLE.f)(sync) } }
#[fixed_stack_segment] #[inline] pub fn IsTexture(texture: GLuint) -> GLboolean { unsafe { (storage::IsTexture.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn IsTextureEXT(texture: GLuint) -> GLboolean { unsafe { (storage::IsTextureEXT.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn IsTextureHandleResidentARB(handle: GLuint64) -> GLboolean { unsafe { (storage::IsTextureHandleResidentARB.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn IsTextureHandleResidentNV(handle: GLuint64) -> GLboolean { unsafe { (storage::IsTextureHandleResidentNV.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn IsTransformFeedback(id: GLuint) -> GLboolean { unsafe { (storage::IsTransformFeedback.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsTransformFeedbackNV(id: GLuint) -> GLboolean { unsafe { (storage::IsTransformFeedbackNV.f)(id) } }
#[fixed_stack_segment] #[inline] pub fn IsVariantEnabledEXT(id: GLuint, cap: GLenum) -> GLboolean { unsafe { (storage::IsVariantEnabledEXT.f)(id, cap) } }
#[fixed_stack_segment] #[inline] pub fn IsVertexArray(array: GLuint) -> GLboolean { unsafe { (storage::IsVertexArray.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn IsVertexArrayAPPLE(array: GLuint) -> GLboolean { unsafe { (storage::IsVertexArrayAPPLE.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn IsVertexArrayOES(array: GLuint) -> GLboolean { unsafe { (storage::IsVertexArrayOES.f)(array) } }
#[fixed_stack_segment] #[inline] pub fn IsVertexAttribEnabledAPPLE(index: GLuint, pname: GLenum) -> GLboolean { unsafe { (storage::IsVertexAttribEnabledAPPLE.f)(index, pname) } }
#[fixed_stack_segment] #[inline] pub unsafe fn LabelObjectEXT(type_: GLenum, object: GLuint, length: GLsizei, label: *GLchar) -> c_void { (storage::LabelObjectEXT.f)(type_, object, length, label) }
#[fixed_stack_segment] #[inline] pub fn LightEnviSGIX(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::LightEnviSGIX.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn LightModelf(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::LightModelf.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn LightModelfv(pname: GLenum, params: *GLfloat) -> c_void { (storage::LightModelfv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn LightModeli(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::LightModeli.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn LightModeliv(pname: GLenum, params: *GLint) -> c_void { (storage::LightModeliv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn LightModelx(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::LightModelx.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn LightModelxOES(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::LightModelxOES.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn LightModelxv(pname: GLenum, param: *GLfixed) -> c_void { (storage::LightModelxv.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn LightModelxvOES(pname: GLenum, param: *GLfixed) -> c_void { (storage::LightModelxvOES.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub fn Lightf(light: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::Lightf.f)(light, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Lightfv(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::Lightfv.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub fn Lighti(light: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::Lighti.f)(light, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Lightiv(light: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::Lightiv.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub fn Lightx(light: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::Lightx.f)(light, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn LightxOES(light: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::LightxOES.f)(light, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Lightxv(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::Lightxv.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn LightxvOES(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::LightxvOES.f)(light, pname, params) }
#[fixed_stack_segment] #[inline] pub fn LineStipple(factor: GLint, pattern: GLushort) -> c_void { unsafe { (storage::LineStipple.f)(factor, pattern) } }
#[fixed_stack_segment] #[inline] pub fn LineWidth(width: GLfloat) -> c_void { unsafe { (storage::LineWidth.f)(width) } }
#[fixed_stack_segment] #[inline] pub fn LineWidthx(width: GLfixed) -> c_void { unsafe { (storage::LineWidthx.f)(width) } }
#[fixed_stack_segment] #[inline] pub fn LineWidthxOES(width: GLfixed) -> c_void { unsafe { (storage::LineWidthxOES.f)(width) } }
#[fixed_stack_segment] #[inline] pub fn LinkProgram(program: GLuint) -> c_void { unsafe { (storage::LinkProgram.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn LinkProgramARB(programObj: GLhandleARB) -> c_void { unsafe { (storage::LinkProgramARB.f)(programObj) } }
#[fixed_stack_segment] #[inline] pub fn ListBase(base: GLuint) -> c_void { unsafe { (storage::ListBase.f)(base) } }
#[fixed_stack_segment] #[inline] pub fn ListParameterfSGIX(list: GLuint, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::ListParameterfSGIX.f)(list, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ListParameterfvSGIX(list: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::ListParameterfvSGIX.f)(list, pname, params) }
#[fixed_stack_segment] #[inline] pub fn ListParameteriSGIX(list: GLuint, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::ListParameteriSGIX.f)(list, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ListParameterivSGIX(list: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::ListParameterivSGIX.f)(list, pname, params) }
#[fixed_stack_segment] #[inline] pub fn LoadIdentity() -> c_void { unsafe { (storage::LoadIdentity.f)() } }
#[fixed_stack_segment] #[inline] pub fn LoadIdentityDeformationMapSGIX(mask: GLbitfield) -> c_void { unsafe { (storage::LoadIdentityDeformationMapSGIX.f)(mask) } }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadMatrixd(m: *GLdouble) -> c_void { (storage::LoadMatrixd.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadMatrixf(m: *GLfloat) -> c_void { (storage::LoadMatrixf.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadMatrixx(m: *GLfixed) -> c_void { (storage::LoadMatrixx.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadMatrixxOES(m: *GLfixed) -> c_void { (storage::LoadMatrixxOES.f)(m) }
#[fixed_stack_segment] #[inline] pub fn LoadName(name: GLuint) -> c_void { unsafe { (storage::LoadName.f)(name) } }
#[fixed_stack_segment] #[inline] pub fn LoadPaletteFromModelViewMatrixOES() -> c_void { unsafe { (storage::LoadPaletteFromModelViewMatrixOES.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadProgramNV(target: GLenum, id: GLuint, len: GLsizei, program: *GLubyte) -> c_void { (storage::LoadProgramNV.f)(target, id, len, program) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadTransposeMatrixd(m: *GLdouble) -> c_void { (storage::LoadTransposeMatrixd.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadTransposeMatrixdARB(m: *GLdouble) -> c_void { (storage::LoadTransposeMatrixdARB.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadTransposeMatrixf(m: *GLfloat) -> c_void { (storage::LoadTransposeMatrixf.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadTransposeMatrixfARB(m: *GLfloat) -> c_void { (storage::LoadTransposeMatrixfARB.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn LoadTransposeMatrixxOES(m: *GLfixed) -> c_void { (storage::LoadTransposeMatrixxOES.f)(m) }
#[fixed_stack_segment] #[inline] pub fn LockArraysEXT(first: GLint, count: GLsizei) -> c_void { unsafe { (storage::LockArraysEXT.f)(first, count) } }
#[fixed_stack_segment] #[inline] pub fn LogicOp(opcode: GLenum) -> c_void { unsafe { (storage::LogicOp.f)(opcode) } }
#[fixed_stack_segment] #[inline] pub fn MakeBufferNonResidentNV(target: GLenum) -> c_void { unsafe { (storage::MakeBufferNonResidentNV.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn MakeBufferResidentNV(target: GLenum, access: GLenum) -> c_void { unsafe { (storage::MakeBufferResidentNV.f)(target, access) } }
#[fixed_stack_segment] #[inline] pub fn MakeImageHandleNonResidentARB(handle: GLuint64) -> c_void { unsafe { (storage::MakeImageHandleNonResidentARB.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn MakeImageHandleNonResidentNV(handle: GLuint64) -> c_void { unsafe { (storage::MakeImageHandleNonResidentNV.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn MakeImageHandleResidentARB(handle: GLuint64, access: GLenum) -> c_void { unsafe { (storage::MakeImageHandleResidentARB.f)(handle, access) } }
#[fixed_stack_segment] #[inline] pub fn MakeImageHandleResidentNV(handle: GLuint64, access: GLenum) -> c_void { unsafe { (storage::MakeImageHandleResidentNV.f)(handle, access) } }
#[fixed_stack_segment] #[inline] pub fn MakeNamedBufferNonResidentNV(buffer: GLuint) -> c_void { unsafe { (storage::MakeNamedBufferNonResidentNV.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn MakeNamedBufferResidentNV(buffer: GLuint, access: GLenum) -> c_void { unsafe { (storage::MakeNamedBufferResidentNV.f)(buffer, access) } }
#[fixed_stack_segment] #[inline] pub fn MakeTextureHandleNonResidentARB(handle: GLuint64) -> c_void { unsafe { (storage::MakeTextureHandleNonResidentARB.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn MakeTextureHandleNonResidentNV(handle: GLuint64) -> c_void { unsafe { (storage::MakeTextureHandleNonResidentNV.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn MakeTextureHandleResidentARB(handle: GLuint64) -> c_void { unsafe { (storage::MakeTextureHandleResidentARB.f)(handle) } }
#[fixed_stack_segment] #[inline] pub fn MakeTextureHandleResidentNV(handle: GLuint64) -> c_void { unsafe { (storage::MakeTextureHandleResidentNV.f)(handle) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Map1d(target: GLenum, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: *GLdouble) -> c_void { (storage::Map1d.f)(target, u1, u2, stride, order, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn Map1f(target: GLenum, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: *GLfloat) -> c_void { (storage::Map1f.f)(target, u1, u2, stride, order, points) }
#[fixed_stack_segment] #[inline] pub fn Map1xOES(target: GLenum, u1: GLfixed, u2: GLfixed, stride: GLint, order: GLint, points: GLfixed) -> c_void { unsafe { (storage::Map1xOES.f)(target, u1, u2, stride, order, points) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Map2d(target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: *GLdouble) -> c_void { (storage::Map2d.f)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn Map2f(target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: *GLfloat) -> c_void { (storage::Map2f.f)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) }
#[fixed_stack_segment] #[inline] pub fn Map2xOES(target: GLenum, u1: GLfixed, u2: GLfixed, ustride: GLint, uorder: GLint, v1: GLfixed, v2: GLfixed, vstride: GLint, vorder: GLint, points: GLfixed) -> c_void { unsafe { (storage::Map2xOES.f)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) } }
#[fixed_stack_segment] #[inline] pub fn MapBuffer(target: GLenum, access: GLenum) -> *c_void { unsafe { (storage::MapBuffer.f)(target, access) } }
#[fixed_stack_segment] #[inline] pub fn MapBufferARB(target: GLenum, access: GLenum) -> *c_void { unsafe { (storage::MapBufferARB.f)(target, access) } }
#[fixed_stack_segment] #[inline] pub fn MapBufferOES(target: GLenum, access: GLenum) -> *c_void { unsafe { (storage::MapBufferOES.f)(target, access) } }
#[fixed_stack_segment] #[inline] pub fn MapBufferRange(target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *c_void { unsafe { (storage::MapBufferRange.f)(target, offset, length, access) } }
#[fixed_stack_segment] #[inline] pub fn MapBufferRangeEXT(target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *c_void { unsafe { (storage::MapBufferRangeEXT.f)(target, offset, length, access) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MapControlPointsNV(target: GLenum, index: GLuint, type_: GLenum, ustride: GLsizei, vstride: GLsizei, uorder: GLint, vorder: GLint, packed: GLboolean, points: *GLvoid) -> c_void { (storage::MapControlPointsNV.f)(target, index, type_, ustride, vstride, uorder, vorder, packed, points) }
#[fixed_stack_segment] #[inline] pub fn MapGrid1d(un: GLint, u1: GLdouble, u2: GLdouble) -> c_void { unsafe { (storage::MapGrid1d.f)(un, u1, u2) } }
#[fixed_stack_segment] #[inline] pub fn MapGrid1f(un: GLint, u1: GLfloat, u2: GLfloat) -> c_void { unsafe { (storage::MapGrid1f.f)(un, u1, u2) } }
#[fixed_stack_segment] #[inline] pub fn MapGrid1xOES(n: GLint, u1: GLfixed, u2: GLfixed) -> c_void { unsafe { (storage::MapGrid1xOES.f)(n, u1, u2) } }
#[fixed_stack_segment] #[inline] pub fn MapGrid2d(un: GLint, u1: GLdouble, u2: GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble) -> c_void { unsafe { (storage::MapGrid2d.f)(un, u1, u2, vn, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn MapGrid2f(un: GLint, u1: GLfloat, u2: GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat) -> c_void { unsafe { (storage::MapGrid2f.f)(un, u1, u2, vn, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn MapGrid2xOES(n: GLint, u1: GLfixed, u2: GLfixed, v1: GLfixed, v2: GLfixed) -> c_void { unsafe { (storage::MapGrid2xOES.f)(n, u1, u2, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn MapNamedBufferEXT(buffer: GLuint, access: GLenum) -> *c_void { unsafe { (storage::MapNamedBufferEXT.f)(buffer, access) } }
#[fixed_stack_segment] #[inline] pub fn MapNamedBufferRangeEXT(buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *c_void { unsafe { (storage::MapNamedBufferRangeEXT.f)(buffer, offset, length, access) } }
#[fixed_stack_segment] #[inline] pub fn MapObjectBufferATI(buffer: GLuint) -> *c_void { unsafe { (storage::MapObjectBufferATI.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MapParameterfvNV(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::MapParameterfvNV.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn MapParameterivNV(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::MapParameterivNV.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn MapTexture2DINTEL(texture: GLuint, level: GLint, access: GLbitfield, stride: *GLint, layout: *GLenum) -> *c_void { (storage::MapTexture2DINTEL.f)(texture, level, access, stride, layout) }
#[fixed_stack_segment] #[inline] pub unsafe fn MapVertexAttrib1dAPPLE(index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: *GLdouble) -> c_void { (storage::MapVertexAttrib1dAPPLE.f)(index, size, u1, u2, stride, order, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn MapVertexAttrib1fAPPLE(index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: *GLfloat) -> c_void { (storage::MapVertexAttrib1fAPPLE.f)(index, size, u1, u2, stride, order, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn MapVertexAttrib2dAPPLE(index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: *GLdouble) -> c_void { (storage::MapVertexAttrib2dAPPLE.f)(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) }
#[fixed_stack_segment] #[inline] pub unsafe fn MapVertexAttrib2fAPPLE(index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: *GLfloat) -> c_void { (storage::MapVertexAttrib2fAPPLE.f)(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) }
#[fixed_stack_segment] #[inline] pub fn Materialf(face: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::Materialf.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Materialfv(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::Materialfv.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub fn Materiali(face: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::Materiali.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Materialiv(face: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::Materialiv.f)(face, pname, params) }
#[fixed_stack_segment] #[inline] pub fn Materialx(face: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::Materialx.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn MaterialxOES(face: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::MaterialxOES.f)(face, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Materialxv(face: GLenum, pname: GLenum, param: *GLfixed) -> c_void { (storage::Materialxv.f)(face, pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn MaterialxvOES(face: GLenum, pname: GLenum, param: *GLfixed) -> c_void { (storage::MaterialxvOES.f)(face, pname, param) }
#[fixed_stack_segment] #[inline] pub fn MatrixFrustumEXT(mode: GLenum, left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void { unsafe { (storage::MatrixFrustumEXT.f)(mode, left, right, bottom, top, zNear, zFar) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixIndexPointerARB(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::MatrixIndexPointerARB.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixIndexPointerOES(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::MatrixIndexPointerOES.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixIndexubvARB(size: GLint, indices: *GLubyte) -> c_void { (storage::MatrixIndexubvARB.f)(size, indices) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixIndexuivARB(size: GLint, indices: *GLuint) -> c_void { (storage::MatrixIndexuivARB.f)(size, indices) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixIndexusvARB(size: GLint, indices: *GLushort) -> c_void { (storage::MatrixIndexusvARB.f)(size, indices) }
#[fixed_stack_segment] #[inline] pub fn MatrixLoadIdentityEXT(mode: GLenum) -> c_void { unsafe { (storage::MatrixLoadIdentityEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixLoadTransposedEXT(mode: GLenum, m: *GLdouble) -> c_void { (storage::MatrixLoadTransposedEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixLoadTransposefEXT(mode: GLenum, m: *GLfloat) -> c_void { (storage::MatrixLoadTransposefEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixLoaddEXT(mode: GLenum, m: *GLdouble) -> c_void { (storage::MatrixLoaddEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixLoadfEXT(mode: GLenum, m: *GLfloat) -> c_void { (storage::MatrixLoadfEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub fn MatrixMode(mode: GLenum) -> c_void { unsafe { (storage::MatrixMode.f)(mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixMultTransposedEXT(mode: GLenum, m: *GLdouble) -> c_void { (storage::MatrixMultTransposedEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixMultTransposefEXT(mode: GLenum, m: *GLfloat) -> c_void { (storage::MatrixMultTransposefEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixMultdEXT(mode: GLenum, m: *GLdouble) -> c_void { (storage::MatrixMultdEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MatrixMultfEXT(mode: GLenum, m: *GLfloat) -> c_void { (storage::MatrixMultfEXT.f)(mode, m) }
#[fixed_stack_segment] #[inline] pub fn MatrixOrthoEXT(mode: GLenum, left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void { unsafe { (storage::MatrixOrthoEXT.f)(mode, left, right, bottom, top, zNear, zFar) } }
#[fixed_stack_segment] #[inline] pub fn MatrixPopEXT(mode: GLenum) -> c_void { unsafe { (storage::MatrixPopEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn MatrixPushEXT(mode: GLenum) -> c_void { unsafe { (storage::MatrixPushEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn MatrixRotatedEXT(mode: GLenum, angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::MatrixRotatedEXT.f)(mode, angle, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn MatrixRotatefEXT(mode: GLenum, angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::MatrixRotatefEXT.f)(mode, angle, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn MatrixScaledEXT(mode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::MatrixScaledEXT.f)(mode, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn MatrixScalefEXT(mode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::MatrixScalefEXT.f)(mode, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn MatrixTranslatedEXT(mode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::MatrixTranslatedEXT.f)(mode, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn MatrixTranslatefEXT(mode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::MatrixTranslatefEXT.f)(mode, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn MemoryBarrier(barriers: GLbitfield) -> c_void { unsafe { (storage::MemoryBarrier.f)(barriers) } }
#[fixed_stack_segment] #[inline] pub fn MemoryBarrierEXT(barriers: GLbitfield) -> c_void { unsafe { (storage::MemoryBarrierEXT.f)(barriers) } }
#[fixed_stack_segment] #[inline] pub fn MinSampleShading(value: GLfloat) -> c_void { unsafe { (storage::MinSampleShading.f)(value) } }
#[fixed_stack_segment] #[inline] pub fn MinSampleShadingARB(value: GLfloat) -> c_void { unsafe { (storage::MinSampleShadingARB.f)(value) } }
#[fixed_stack_segment] #[inline] pub fn Minmax(target: GLenum, internalformat: GLenum, sink: GLboolean) -> c_void { unsafe { (storage::Minmax.f)(target, internalformat, sink) } }
#[fixed_stack_segment] #[inline] pub fn MinmaxEXT(target: GLenum, internalformat: GLenum, sink: GLboolean) -> c_void { unsafe { (storage::MinmaxEXT.f)(target, internalformat, sink) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultMatrixd(m: *GLdouble) -> c_void { (storage::MultMatrixd.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultMatrixf(m: *GLfloat) -> c_void { (storage::MultMatrixf.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultMatrixx(m: *GLfixed) -> c_void { (storage::MultMatrixx.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultMatrixxOES(m: *GLfixed) -> c_void { (storage::MultMatrixxOES.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultTransposeMatrixd(m: *GLdouble) -> c_void { (storage::MultTransposeMatrixd.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultTransposeMatrixdARB(m: *GLdouble) -> c_void { (storage::MultTransposeMatrixdARB.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultTransposeMatrixf(m: *GLfloat) -> c_void { (storage::MultTransposeMatrixf.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultTransposeMatrixfARB(m: *GLfloat) -> c_void { (storage::MultTransposeMatrixfARB.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultTransposeMatrixxOES(m: *GLfixed) -> c_void { (storage::MultTransposeMatrixxOES.f)(m) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawArrays(mode: GLenum, first: *GLint, count: *GLsizei, drawcount: GLsizei) -> c_void { (storage::MultiDrawArrays.f)(mode, first, count, drawcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawArraysEXT(mode: GLenum, first: *GLint, count: *GLsizei, primcount: GLsizei) -> c_void { (storage::MultiDrawArraysEXT.f)(mode, first, count, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawArraysIndirect(mode: GLenum, indirect: *c_void, drawcount: GLsizei, stride: GLsizei) -> c_void { (storage::MultiDrawArraysIndirect.f)(mode, indirect, drawcount, stride) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawArraysIndirectAMD(mode: GLenum, indirect: *GLvoid, primcount: GLsizei, stride: GLsizei) -> c_void { (storage::MultiDrawArraysIndirectAMD.f)(mode, indirect, primcount, stride) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawArraysIndirectBindlessNV(mode: GLenum, indirect: *GLvoid, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) -> c_void { (storage::MultiDrawArraysIndirectBindlessNV.f)(mode, indirect, drawCount, stride, vertexBufferCount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElementsIndirectBindlessNV(mode: GLenum, type_: GLenum, indirect: *GLvoid, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) -> c_void { (storage::MultiDrawElementsIndirectBindlessNV.f)(mode, type_, indirect, drawCount, stride, vertexBufferCount) }
#[fixed_stack_segment] #[inline] pub fn MultiDrawArraysIndirectCountARB(mode: GLenum, indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) -> c_void { unsafe { (storage::MultiDrawArraysIndirectCountARB.f)(mode, indirect, drawcount, maxdrawcount, stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElementArrayAPPLE(mode: GLenum, first: *GLint, count: *GLsizei, primcount: GLsizei) -> c_void { (storage::MultiDrawElementArrayAPPLE.f)(mode, first, count, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElements(mode: GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, drawcount: GLsizei) -> c_void { (storage::MultiDrawElements.f)(mode, count, type_, indices, drawcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElementsBaseVertex(mode: GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, drawcount: GLsizei, basevertex: *GLint) -> c_void { (storage::MultiDrawElementsBaseVertex.f)(mode, count, type_, indices, drawcount, basevertex) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElementsEXT(mode: GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, primcount: GLsizei) -> c_void { (storage::MultiDrawElementsEXT.f)(mode, count, type_, indices, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElementsIndirect(mode: GLenum, type_: GLenum, indirect: *c_void, drawcount: GLsizei, stride: GLsizei) -> c_void { (storage::MultiDrawElementsIndirect.f)(mode, type_, indirect, drawcount, stride) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawElementsIndirectAMD(mode: GLenum, type_: GLenum, indirect: *GLvoid, primcount: GLsizei, stride: GLsizei) -> c_void { (storage::MultiDrawElementsIndirectAMD.f)(mode, type_, indirect, primcount, stride) }
#[fixed_stack_segment] #[inline] pub fn MultiDrawElementsIndirectCountARB(mode: GLenum, type_: GLenum, indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) -> c_void { unsafe { (storage::MultiDrawElementsIndirectCountARB.f)(mode, type_, indirect, drawcount, maxdrawcount, stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiDrawRangeElementArrayAPPLE(mode: GLenum, start: GLuint, end: GLuint, first: *GLint, count: *GLsizei, primcount: GLsizei) -> c_void { (storage::MultiDrawRangeElementArrayAPPLE.f)(mode, start, end, first, count, primcount) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiModeDrawArraysIBM(mode: *GLenum, first: *GLint, count: *GLsizei, primcount: GLsizei, modestride: GLint) -> c_void { (storage::MultiModeDrawArraysIBM.f)(mode, first, count, primcount, modestride) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiModeDrawElementsIBM(mode: *GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, primcount: GLsizei, modestride: GLint) -> c_void { (storage::MultiModeDrawElementsIBM.f)(mode, count, type_, indices, primcount, modestride) }
#[fixed_stack_segment] #[inline] pub fn MultiTexBufferEXT(texunit: GLenum, target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::MultiTexBufferEXT.f)(texunit, target, internalformat, buffer) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1bOES(texture: GLenum, s: GLbyte) -> c_void { unsafe { (storage::MultiTexCoord1bOES.f)(texture, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1bvOES(texture: GLenum, coords: *GLbyte) -> c_void { (storage::MultiTexCoord1bvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1d(target: GLenum, s: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord1d.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1dARB(target: GLenum, s: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord1dARB.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1dv(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord1dv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1dvARB(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord1dvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1f(target: GLenum, s: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord1f.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1fARB(target: GLenum, s: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord1fARB.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1fv(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord1fv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1fvARB(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord1fvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1hNV(target: GLenum, s: GLhalfNV) -> c_void { unsafe { (storage::MultiTexCoord1hNV.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1hvNV(target: GLenum, v: *GLhalfNV) -> c_void { (storage::MultiTexCoord1hvNV.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1i(target: GLenum, s: GLint) -> c_void { unsafe { (storage::MultiTexCoord1i.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1iARB(target: GLenum, s: GLint) -> c_void { unsafe { (storage::MultiTexCoord1iARB.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1iv(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord1iv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1ivARB(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord1ivARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1s(target: GLenum, s: GLshort) -> c_void { unsafe { (storage::MultiTexCoord1s.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1sARB(target: GLenum, s: GLshort) -> c_void { unsafe { (storage::MultiTexCoord1sARB.f)(target, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1sv(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord1sv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1svARB(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord1svARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord1xOES(texture: GLenum, s: GLfixed) -> c_void { unsafe { (storage::MultiTexCoord1xOES.f)(texture, s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord1xvOES(texture: GLenum, coords: *GLfixed) -> c_void { (storage::MultiTexCoord1xvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2bOES(texture: GLenum, s: GLbyte, t: GLbyte) -> c_void { unsafe { (storage::MultiTexCoord2bOES.f)(texture, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2bvOES(texture: GLenum, coords: *GLbyte) -> c_void { (storage::MultiTexCoord2bvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2d(target: GLenum, s: GLdouble, t: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord2d.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2dARB(target: GLenum, s: GLdouble, t: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord2dARB.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2dv(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord2dv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2dvARB(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord2dvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2f(target: GLenum, s: GLfloat, t: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord2f.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2fARB(target: GLenum, s: GLfloat, t: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord2fARB.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2fv(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord2fv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2fvARB(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord2fvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2hNV(target: GLenum, s: GLhalfNV, t: GLhalfNV) -> c_void { unsafe { (storage::MultiTexCoord2hNV.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2hvNV(target: GLenum, v: *GLhalfNV) -> c_void { (storage::MultiTexCoord2hvNV.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2i(target: GLenum, s: GLint, t: GLint) -> c_void { unsafe { (storage::MultiTexCoord2i.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2iARB(target: GLenum, s: GLint, t: GLint) -> c_void { unsafe { (storage::MultiTexCoord2iARB.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2iv(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord2iv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2ivARB(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord2ivARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2s(target: GLenum, s: GLshort, t: GLshort) -> c_void { unsafe { (storage::MultiTexCoord2s.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2sARB(target: GLenum, s: GLshort, t: GLshort) -> c_void { unsafe { (storage::MultiTexCoord2sARB.f)(target, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2sv(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord2sv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2svARB(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord2svARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord2xOES(texture: GLenum, s: GLfixed, t: GLfixed) -> c_void { unsafe { (storage::MultiTexCoord2xOES.f)(texture, s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord2xvOES(texture: GLenum, coords: *GLfixed) -> c_void { (storage::MultiTexCoord2xvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3bOES(texture: GLenum, s: GLbyte, t: GLbyte, r: GLbyte) -> c_void { unsafe { (storage::MultiTexCoord3bOES.f)(texture, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3bvOES(texture: GLenum, coords: *GLbyte) -> c_void { (storage::MultiTexCoord3bvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3d(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord3d.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3dARB(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord3dARB.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3dv(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord3dv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3dvARB(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord3dvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3f(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord3f.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3fARB(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord3fARB.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3fv(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord3fv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3fvARB(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord3fvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3hNV(target: GLenum, s: GLhalfNV, t: GLhalfNV, r: GLhalfNV) -> c_void { unsafe { (storage::MultiTexCoord3hNV.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3hvNV(target: GLenum, v: *GLhalfNV) -> c_void { (storage::MultiTexCoord3hvNV.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3i(target: GLenum, s: GLint, t: GLint, r: GLint) -> c_void { unsafe { (storage::MultiTexCoord3i.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3iARB(target: GLenum, s: GLint, t: GLint, r: GLint) -> c_void { unsafe { (storage::MultiTexCoord3iARB.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3iv(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord3iv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3ivARB(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord3ivARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3s(target: GLenum, s: GLshort, t: GLshort, r: GLshort) -> c_void { unsafe { (storage::MultiTexCoord3s.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3sARB(target: GLenum, s: GLshort, t: GLshort, r: GLshort) -> c_void { unsafe { (storage::MultiTexCoord3sARB.f)(target, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3sv(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord3sv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3svARB(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord3svARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord3xOES(texture: GLenum, s: GLfixed, t: GLfixed, r: GLfixed) -> c_void { unsafe { (storage::MultiTexCoord3xOES.f)(texture, s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord3xvOES(texture: GLenum, coords: *GLfixed) -> c_void { (storage::MultiTexCoord3xvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4bOES(texture: GLenum, s: GLbyte, t: GLbyte, r: GLbyte, q: GLbyte) -> c_void { unsafe { (storage::MultiTexCoord4bOES.f)(texture, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4bvOES(texture: GLenum, coords: *GLbyte) -> c_void { (storage::MultiTexCoord4bvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4d(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord4d.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4dARB(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) -> c_void { unsafe { (storage::MultiTexCoord4dARB.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4dv(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord4dv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4dvARB(target: GLenum, v: *GLdouble) -> c_void { (storage::MultiTexCoord4dvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4f(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord4f.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4fARB(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) -> c_void { unsafe { (storage::MultiTexCoord4fARB.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4fv(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord4fv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4fvARB(target: GLenum, v: *GLfloat) -> c_void { (storage::MultiTexCoord4fvARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4hNV(target: GLenum, s: GLhalfNV, t: GLhalfNV, r: GLhalfNV, q: GLhalfNV) -> c_void { unsafe { (storage::MultiTexCoord4hNV.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4hvNV(target: GLenum, v: *GLhalfNV) -> c_void { (storage::MultiTexCoord4hvNV.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4i(target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) -> c_void { unsafe { (storage::MultiTexCoord4i.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4iARB(target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) -> c_void { unsafe { (storage::MultiTexCoord4iARB.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4iv(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord4iv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4ivARB(target: GLenum, v: *GLint) -> c_void { (storage::MultiTexCoord4ivARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4s(target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) -> c_void { unsafe { (storage::MultiTexCoord4s.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4sARB(target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) -> c_void { unsafe { (storage::MultiTexCoord4sARB.f)(target, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4sv(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord4sv.f)(target, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4svARB(target: GLenum, v: *GLshort) -> c_void { (storage::MultiTexCoord4svARB.f)(target, v) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4x(texture: GLenum, s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) -> c_void { unsafe { (storage::MultiTexCoord4x.f)(texture, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoord4xOES(texture: GLenum, s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) -> c_void { unsafe { (storage::MultiTexCoord4xOES.f)(texture, s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoord4xvOES(texture: GLenum, coords: *GLfixed) -> c_void { (storage::MultiTexCoord4xvOES.f)(texture, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoordP1ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::MultiTexCoordP1ui.f)(texture, type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoordP1uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void { (storage::MultiTexCoordP1uiv.f)(texture, type_, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoordP2ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::MultiTexCoordP2ui.f)(texture, type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoordP2uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void { (storage::MultiTexCoordP2uiv.f)(texture, type_, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoordP3ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::MultiTexCoordP3ui.f)(texture, type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoordP3uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void { (storage::MultiTexCoordP3uiv.f)(texture, type_, coords) }
#[fixed_stack_segment] #[inline] pub fn MultiTexCoordP4ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::MultiTexCoordP4ui.f)(texture, type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoordP4uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void { (storage::MultiTexCoordP4uiv.f)(texture, type_, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexCoordPointerEXT(texunit: GLenum, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::MultiTexCoordPointerEXT.f)(texunit, size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn MultiTexEnvfEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::MultiTexEnvfEXT.f)(texunit, target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexEnvfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::MultiTexEnvfvEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexEnviEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::MultiTexEnviEXT.f)(texunit, target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexEnvivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::MultiTexEnvivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexGendEXT(texunit: GLenum, coord: GLenum, pname: GLenum, param: GLdouble) -> c_void { unsafe { (storage::MultiTexGendEXT.f)(texunit, coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexGendvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void { (storage::MultiTexGendvEXT.f)(texunit, coord, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexGenfEXT(texunit: GLenum, coord: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::MultiTexGenfEXT.f)(texunit, coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexGenfvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::MultiTexGenfvEXT.f)(texunit, coord, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexGeniEXT(texunit: GLenum, coord: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::MultiTexGeniEXT.f)(texunit, coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexGenivEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::MultiTexGenivEXT.f)(texunit, coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::MultiTexImage1DEXT.f)(texunit, target, level, internalformat, width, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::MultiTexImage2DEXT.f)(texunit, target, level, internalformat, width, height, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::MultiTexImage3DEXT.f)(texunit, target, level, internalformat, width, height, depth, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexParameterIivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::MultiTexParameterIivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexParameterIuivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::MultiTexParameterIuivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexParameterfEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::MultiTexParameterfEXT.f)(texunit, target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexParameterfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::MultiTexParameterfvEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexParameteriEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::MultiTexParameteriEXT.f)(texunit, target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexParameterivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::MultiTexParameterivEXT.f)(texunit, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn MultiTexRenderbufferEXT(texunit: GLenum, target: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::MultiTexRenderbufferEXT.f)(texunit, target, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexSubImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::MultiTexSubImage1DEXT.f)(texunit, target, level, xoffset, width, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexSubImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::MultiTexSubImage2DEXT.f)(texunit, target, level, xoffset, yoffset, width, height, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn MultiTexSubImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::MultiTexSubImage3DEXT.f)(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedBufferDataEXT(buffer: GLuint, size: GLsizeiptr, data: *GLvoid, usage: GLenum) -> c_void { (storage::NamedBufferDataEXT.f)(buffer, size, data, usage) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedBufferStorageEXT(buffer: GLuint, size: GLsizeiptr, data: *c_void, flags: GLbitfield) -> c_void { (storage::NamedBufferStorageEXT.f)(buffer, size, data, flags) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedBufferSubDataEXT(buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void { (storage::NamedBufferSubDataEXT.f)(buffer, offset, size, data) }
#[fixed_stack_segment] #[inline] pub fn NamedCopyBufferSubDataEXT(readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::NamedCopyBufferSubDataEXT.f)(readBuffer, writeBuffer, readOffset, writeOffset, size) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferParameteriEXT(framebuffer: GLuint, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::NamedFramebufferParameteriEXT.f)(framebuffer, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferRenderbufferEXT(framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::NamedFramebufferRenderbufferEXT.f)(framebuffer, attachment, renderbuffertarget, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferTexture1DEXT(framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::NamedFramebufferTexture1DEXT.f)(framebuffer, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferTexture2DEXT(framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::NamedFramebufferTexture2DEXT.f)(framebuffer, attachment, textarget, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferTexture3DEXT(framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void { unsafe { (storage::NamedFramebufferTexture3DEXT.f)(framebuffer, attachment, textarget, texture, level, zoffset) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferTextureEXT(framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) -> c_void { unsafe { (storage::NamedFramebufferTextureEXT.f)(framebuffer, attachment, texture, level) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferTextureFaceEXT(framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) -> c_void { unsafe { (storage::NamedFramebufferTextureFaceEXT.f)(framebuffer, attachment, texture, level, face) } }
#[fixed_stack_segment] #[inline] pub fn NamedFramebufferTextureLayerEXT(framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void { unsafe { (storage::NamedFramebufferTextureLayerEXT.f)(framebuffer, attachment, texture, level, layer) } }
#[fixed_stack_segment] #[inline] pub fn NamedProgramLocalParameter4dEXT(program: GLuint, target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::NamedProgramLocalParameter4dEXT.f)(program, target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParameter4dvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::NamedProgramLocalParameter4dvEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub fn NamedProgramLocalParameter4fEXT(program: GLuint, target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::NamedProgramLocalParameter4fEXT.f)(program, target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParameter4fvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::NamedProgramLocalParameter4fvEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub fn NamedProgramLocalParameterI4iEXT(program: GLuint, target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::NamedProgramLocalParameterI4iEXT.f)(program, target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParameterI4ivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLint) -> c_void { (storage::NamedProgramLocalParameterI4ivEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub fn NamedProgramLocalParameterI4uiEXT(program: GLuint, target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void { unsafe { (storage::NamedProgramLocalParameterI4uiEXT.f)(program, target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParameterI4uivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLuint) -> c_void { (storage::NamedProgramLocalParameterI4uivEXT.f)(program, target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParameters4fvEXT(program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: *GLfloat) -> c_void { (storage::NamedProgramLocalParameters4fvEXT.f)(program, target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParametersI4ivEXT(program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: *GLint) -> c_void { (storage::NamedProgramLocalParametersI4ivEXT.f)(program, target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramLocalParametersI4uivEXT(program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: *GLuint) -> c_void { (storage::NamedProgramLocalParametersI4uivEXT.f)(program, target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedProgramStringEXT(program: GLuint, target: GLenum, format: GLenum, len: GLsizei, string: *GLvoid) -> c_void { (storage::NamedProgramStringEXT.f)(program, target, format, len, string) }
#[fixed_stack_segment] #[inline] pub fn NamedRenderbufferStorageEXT(renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::NamedRenderbufferStorageEXT.f)(renderbuffer, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn NamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer: GLuint, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::NamedRenderbufferStorageMultisampleCoverageEXT.f)(renderbuffer, coverageSamples, colorSamples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn NamedRenderbufferStorageMultisampleEXT(renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::NamedRenderbufferStorageMultisampleEXT.f)(renderbuffer, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NamedStringARB(type_: GLenum, namelen: GLint, name: *GLchar, stringlen: GLint, string: *GLchar) -> c_void { (storage::NamedStringARB.f)(type_, namelen, name, stringlen, string) }
#[fixed_stack_segment] #[inline] pub fn NewList(list: GLuint, mode: GLenum) -> c_void { unsafe { (storage::NewList.f)(list, mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NewObjectBufferATI(size: GLsizei, pointer: *GLvoid, usage: GLenum) -> GLuint { (storage::NewObjectBufferATI.f)(size, pointer, usage) }
#[fixed_stack_segment] #[inline] pub fn Normal3b(nx: GLbyte, ny: GLbyte, nz: GLbyte) -> c_void { unsafe { (storage::Normal3b.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3bv(v: *GLbyte) -> c_void { (storage::Normal3bv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Normal3d(nx: GLdouble, ny: GLdouble, nz: GLdouble) -> c_void { unsafe { (storage::Normal3d.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3dv(v: *GLdouble) -> c_void { (storage::Normal3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Normal3f(nx: GLfloat, ny: GLfloat, nz: GLfloat) -> c_void { unsafe { (storage::Normal3f.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub fn Normal3fVertex3fSUN(nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Normal3fVertex3fSUN.f)(nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3fVertex3fvSUN(n: *GLfloat, v: *GLfloat) -> c_void { (storage::Normal3fVertex3fvSUN.f)(n, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3fv(v: *GLfloat) -> c_void { (storage::Normal3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Normal3hNV(nx: GLhalfNV, ny: GLhalfNV, nz: GLhalfNV) -> c_void { unsafe { (storage::Normal3hNV.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3hvNV(v: *GLhalfNV) -> c_void { (storage::Normal3hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Normal3i(nx: GLint, ny: GLint, nz: GLint) -> c_void { unsafe { (storage::Normal3i.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3iv(v: *GLint) -> c_void { (storage::Normal3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Normal3s(nx: GLshort, ny: GLshort, nz: GLshort) -> c_void { unsafe { (storage::Normal3s.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3sv(v: *GLshort) -> c_void { (storage::Normal3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Normal3x(nx: GLfixed, ny: GLfixed, nz: GLfixed) -> c_void { unsafe { (storage::Normal3x.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub fn Normal3xOES(nx: GLfixed, ny: GLfixed, nz: GLfixed) -> c_void { unsafe { (storage::Normal3xOES.f)(nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Normal3xvOES(coords: *GLfixed) -> c_void { (storage::Normal3xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn NormalFormatNV(type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::NormalFormatNV.f)(type_, stride) } }
#[fixed_stack_segment] #[inline] pub fn NormalP3ui(type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::NormalP3ui.f)(type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalP3uiv(type_: GLenum, coords: *GLuint) -> c_void { (storage::NormalP3uiv.f)(type_, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalPointer(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::NormalPointer.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalPointerEXT(type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void { (storage::NormalPointerEXT.f)(type_, stride, count, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalPointerListIBM(type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::NormalPointerListIBM.f)(type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalPointervINTEL(type_: GLenum, pointer: **GLvoid) -> c_void { (storage::NormalPointervINTEL.f)(type_, pointer) }
#[fixed_stack_segment] #[inline] pub fn NormalStream3bATI(stream: GLenum, nx: GLbyte, ny: GLbyte, nz: GLbyte) -> c_void { unsafe { (storage::NormalStream3bATI.f)(stream, nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalStream3bvATI(stream: GLenum, coords: *GLbyte) -> c_void { (storage::NormalStream3bvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn NormalStream3dATI(stream: GLenum, nx: GLdouble, ny: GLdouble, nz: GLdouble) -> c_void { unsafe { (storage::NormalStream3dATI.f)(stream, nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalStream3dvATI(stream: GLenum, coords: *GLdouble) -> c_void { (storage::NormalStream3dvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn NormalStream3fATI(stream: GLenum, nx: GLfloat, ny: GLfloat, nz: GLfloat) -> c_void { unsafe { (storage::NormalStream3fATI.f)(stream, nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalStream3fvATI(stream: GLenum, coords: *GLfloat) -> c_void { (storage::NormalStream3fvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn NormalStream3iATI(stream: GLenum, nx: GLint, ny: GLint, nz: GLint) -> c_void { unsafe { (storage::NormalStream3iATI.f)(stream, nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalStream3ivATI(stream: GLenum, coords: *GLint) -> c_void { (storage::NormalStream3ivATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn NormalStream3sATI(stream: GLenum, nx: GLshort, ny: GLshort, nz: GLshort) -> c_void { unsafe { (storage::NormalStream3sATI.f)(stream, nx, ny, nz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn NormalStream3svATI(stream: GLenum, coords: *GLshort) -> c_void { (storage::NormalStream3svATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn ObjectLabel(identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) -> c_void { (storage::ObjectLabel.f)(identifier, name, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn ObjectLabelKHR(identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) -> c_void { (storage::ObjectLabelKHR.f)(identifier, name, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn ObjectPtrLabel(ptr: *c_void, length: GLsizei, label: *GLchar) -> c_void { (storage::ObjectPtrLabel.f)(ptr, length, label) }
#[fixed_stack_segment] #[inline] pub unsafe fn ObjectPtrLabelKHR(ptr: *c_void, length: GLsizei, label: *GLchar) -> c_void { (storage::ObjectPtrLabelKHR.f)(ptr, length, label) }
#[fixed_stack_segment] #[inline] pub fn ObjectPurgeableAPPLE(objectType: GLenum, name: GLuint, option: GLenum) -> GLenum { unsafe { (storage::ObjectPurgeableAPPLE.f)(objectType, name, option) } }
#[fixed_stack_segment] #[inline] pub fn ObjectUnpurgeableAPPLE(objectType: GLenum, name: GLuint, option: GLenum) -> GLenum { unsafe { (storage::ObjectUnpurgeableAPPLE.f)(objectType, name, option) } }
#[fixed_stack_segment] #[inline] pub fn Ortho(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void { unsafe { (storage::Ortho.f)(left, right, bottom, top, zNear, zFar) } }
#[fixed_stack_segment] #[inline] pub fn Orthof(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void { unsafe { (storage::Orthof.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn OrthofOES(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void { unsafe { (storage::OrthofOES.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn Orthox(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void { unsafe { (storage::Orthox.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn OrthoxOES(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void { unsafe { (storage::OrthoxOES.f)(l, r, b, t, n, f) } }
#[fixed_stack_segment] #[inline] pub fn PNTrianglesfATI(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PNTrianglesfATI.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PNTrianglesiATI(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PNTrianglesiATI.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PassTexCoordATI(dst: GLuint, coord: GLuint, swizzle: GLenum) -> c_void { unsafe { (storage::PassTexCoordATI.f)(dst, coord, swizzle) } }
#[fixed_stack_segment] #[inline] pub fn PassThrough(token: GLfloat) -> c_void { unsafe { (storage::PassThrough.f)(token) } }
#[fixed_stack_segment] #[inline] pub fn PassThroughxOES(token: GLfixed) -> c_void { unsafe { (storage::PassThroughxOES.f)(token) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PatchParameterfv(pname: GLenum, values: *GLfloat) -> c_void { (storage::PatchParameterfv.f)(pname, values) }
#[fixed_stack_segment] #[inline] pub fn PatchParameteri(pname: GLenum, value: GLint) -> c_void { unsafe { (storage::PatchParameteri.f)(pname, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PathColorGenNV(color: GLenum, genMode: GLenum, colorFormat: GLenum, coeffs: *GLfloat) -> c_void { (storage::PathColorGenNV.f)(color, genMode, colorFormat, coeffs) }
#[fixed_stack_segment] #[inline] pub unsafe fn PathCommandsNV(path: GLuint, numCommands: GLsizei, commands: *GLubyte, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void { (storage::PathCommandsNV.f)(path, numCommands, commands, numCoords, coordType, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn PathCoordsNV(path: GLuint, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void { (storage::PathCoordsNV.f)(path, numCoords, coordType, coords) }
#[fixed_stack_segment] #[inline] pub fn PathCoverDepthFuncNV(func: GLenum) -> c_void { unsafe { (storage::PathCoverDepthFuncNV.f)(func) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PathDashArrayNV(path: GLuint, dashCount: GLsizei, dashArray: *GLfloat) -> c_void { (storage::PathDashArrayNV.f)(path, dashCount, dashArray) }
#[fixed_stack_segment] #[inline] pub fn PathFogGenNV(genMode: GLenum) -> c_void { unsafe { (storage::PathFogGenNV.f)(genMode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PathGlyphRangeNV(firstPathName: GLuint, fontTarget: GLenum, fontName: *GLvoid, fontStyle: GLbitfield, firstGlyph: GLuint, numGlyphs: GLsizei, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat) -> c_void { (storage::PathGlyphRangeNV.f)(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale) }
#[fixed_stack_segment] #[inline] pub unsafe fn PathGlyphsNV(firstPathName: GLuint, fontTarget: GLenum, fontName: *GLvoid, fontStyle: GLbitfield, numGlyphs: GLsizei, type_: GLenum, charcodes: *GLvoid, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat) -> c_void { (storage::PathGlyphsNV.f)(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type_, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale) }
#[fixed_stack_segment] #[inline] pub fn PathParameterfNV(path: GLuint, pname: GLenum, value: GLfloat) -> c_void { unsafe { (storage::PathParameterfNV.f)(path, pname, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PathParameterfvNV(path: GLuint, pname: GLenum, value: *GLfloat) -> c_void { (storage::PathParameterfvNV.f)(path, pname, value) }
#[fixed_stack_segment] #[inline] pub fn PathParameteriNV(path: GLuint, pname: GLenum, value: GLint) -> c_void { unsafe { (storage::PathParameteriNV.f)(path, pname, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PathParameterivNV(path: GLuint, pname: GLenum, value: *GLint) -> c_void { (storage::PathParameterivNV.f)(path, pname, value) }
#[fixed_stack_segment] #[inline] pub fn PathStencilDepthOffsetNV(factor: GLfloat, units: GLfloat) -> c_void { unsafe { (storage::PathStencilDepthOffsetNV.f)(factor, units) } }
#[fixed_stack_segment] #[inline] pub fn PathStencilFuncNV(func: GLenum, ref_: GLint, mask: GLuint) -> c_void { unsafe { (storage::PathStencilFuncNV.f)(func, ref_, mask) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PathStringNV(path: GLuint, format: GLenum, length: GLsizei, pathString: *GLvoid) -> c_void { (storage::PathStringNV.f)(path, format, length, pathString) }
#[fixed_stack_segment] #[inline] pub unsafe fn PathSubCommandsNV(path: GLuint, commandStart: GLsizei, commandsToDelete: GLsizei, numCommands: GLsizei, commands: *GLubyte, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void { (storage::PathSubCommandsNV.f)(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn PathSubCoordsNV(path: GLuint, coordStart: GLsizei, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void { (storage::PathSubCoordsNV.f)(path, coordStart, numCoords, coordType, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn PathTexGenNV(texCoordSet: GLenum, genMode: GLenum, components: GLint, coeffs: *GLfloat) -> c_void { (storage::PathTexGenNV.f)(texCoordSet, genMode, components, coeffs) }
#[fixed_stack_segment] #[inline] pub fn PauseTransformFeedback() -> c_void { unsafe { (storage::PauseTransformFeedback.f)() } }
#[fixed_stack_segment] #[inline] pub fn PauseTransformFeedbackNV() -> c_void { unsafe { (storage::PauseTransformFeedbackNV.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelDataRangeNV(target: GLenum, length: GLsizei, pointer: *GLvoid) -> c_void { (storage::PixelDataRangeNV.f)(target, length, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelMapfv(map: GLenum, mapsize: GLsizei, values: *GLfloat) -> c_void { (storage::PixelMapfv.f)(map, mapsize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelMapuiv(map: GLenum, mapsize: GLsizei, values: *GLuint) -> c_void { (storage::PixelMapuiv.f)(map, mapsize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelMapusv(map: GLenum, mapsize: GLsizei, values: *GLushort) -> c_void { (storage::PixelMapusv.f)(map, mapsize, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelMapx(map: GLenum, size: GLint, values: *GLfixed) -> c_void { (storage::PixelMapx.f)(map, size, values) }
#[fixed_stack_segment] #[inline] pub fn PixelStoref(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PixelStoref.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PixelStorei(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PixelStorei.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PixelStorex(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::PixelStorex.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PixelTexGenParameterfSGIS(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PixelTexGenParameterfSGIS.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelTexGenParameterfvSGIS(pname: GLenum, params: *GLfloat) -> c_void { (storage::PixelTexGenParameterfvSGIS.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn PixelTexGenParameteriSGIS(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PixelTexGenParameteriSGIS.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelTexGenParameterivSGIS(pname: GLenum, params: *GLint) -> c_void { (storage::PixelTexGenParameterivSGIS.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn PixelTexGenSGIX(mode: GLenum) -> c_void { unsafe { (storage::PixelTexGenSGIX.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn PixelTransferf(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PixelTransferf.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PixelTransferi(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PixelTransferi.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PixelTransferxOES(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::PixelTransferxOES.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PixelTransformParameterfEXT(target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PixelTransformParameterfEXT.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelTransformParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::PixelTransformParameterfvEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn PixelTransformParameteriEXT(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PixelTransformParameteriEXT.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PixelTransformParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::PixelTransformParameterivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn PixelZoom(xfactor: GLfloat, yfactor: GLfloat) -> c_void { unsafe { (storage::PixelZoom.f)(xfactor, yfactor) } }
#[fixed_stack_segment] #[inline] pub fn PixelZoomxOES(xfactor: GLfixed, yfactor: GLfixed) -> c_void { unsafe { (storage::PixelZoomxOES.f)(xfactor, yfactor) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PointAlongPathNV(path: GLuint, startSegment: GLsizei, numSegments: GLsizei, distance: GLfloat, x: *GLfloat, y: *GLfloat, tangentX: *GLfloat, tangentY: *GLfloat) -> GLboolean { (storage::PointAlongPathNV.f)(path, startSegment, numSegments, distance, x, y, tangentX, tangentY) }
#[fixed_stack_segment] #[inline] pub fn PointParameterf(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PointParameterf.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PointParameterfARB(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PointParameterfARB.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PointParameterfEXT(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PointParameterfEXT.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PointParameterfSGIS(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::PointParameterfSGIS.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterfv(pname: GLenum, params: *GLfloat) -> c_void { (storage::PointParameterfv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterfvARB(pname: GLenum, params: *GLfloat) -> c_void { (storage::PointParameterfvARB.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterfvEXT(pname: GLenum, params: *GLfloat) -> c_void { (storage::PointParameterfvEXT.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterfvSGIS(pname: GLenum, params: *GLfloat) -> c_void { (storage::PointParameterfvSGIS.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn PointParameteri(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PointParameteri.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PointParameteriNV(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::PointParameteriNV.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameteriv(pname: GLenum, params: *GLint) -> c_void { (storage::PointParameteriv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterivNV(pname: GLenum, params: *GLint) -> c_void { (storage::PointParameterivNV.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn PointParameterx(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::PointParameterx.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn PointParameterxOES(pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::PointParameterxOES.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterxv(pname: GLenum, params: *GLfixed) -> c_void { (storage::PointParameterxv.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn PointParameterxvOES(pname: GLenum, params: *GLfixed) -> c_void { (storage::PointParameterxvOES.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn PointSize(size: GLfloat) -> c_void { unsafe { (storage::PointSize.f)(size) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PointSizePointerOES(type_: GLenum, stride: GLsizei, pointer: *c_void) -> c_void { (storage::PointSizePointerOES.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn PointSizex(size: GLfixed) -> c_void { unsafe { (storage::PointSizex.f)(size) } }
#[fixed_stack_segment] #[inline] pub fn PointSizexOES(size: GLfixed) -> c_void { unsafe { (storage::PointSizexOES.f)(size) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PollAsyncSGIX(markerp: *GLuint) -> GLint { (storage::PollAsyncSGIX.f)(markerp) }
#[fixed_stack_segment] #[inline] pub unsafe fn PollInstrumentsSGIX(marker_p: *GLint) -> GLint { (storage::PollInstrumentsSGIX.f)(marker_p) }
#[fixed_stack_segment] #[inline] pub fn PolygonMode(face: GLenum, mode: GLenum) -> c_void { unsafe { (storage::PolygonMode.f)(face, mode) } }
#[fixed_stack_segment] #[inline] pub fn PolygonOffset(factor: GLfloat, units: GLfloat) -> c_void { unsafe { (storage::PolygonOffset.f)(factor, units) } }
#[fixed_stack_segment] #[inline] pub fn PolygonOffsetEXT(factor: GLfloat, bias: GLfloat) -> c_void { unsafe { (storage::PolygonOffsetEXT.f)(factor, bias) } }
#[fixed_stack_segment] #[inline] pub fn PolygonOffsetx(factor: GLfixed, units: GLfixed) -> c_void { unsafe { (storage::PolygonOffsetx.f)(factor, units) } }
#[fixed_stack_segment] #[inline] pub fn PolygonOffsetxOES(factor: GLfixed, units: GLfixed) -> c_void { unsafe { (storage::PolygonOffsetxOES.f)(factor, units) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PolygonStipple(mask: *GLubyte) -> c_void { (storage::PolygonStipple.f)(mask) }
#[fixed_stack_segment] #[inline] pub fn PopAttrib() -> c_void { unsafe { (storage::PopAttrib.f)() } }
#[fixed_stack_segment] #[inline] pub fn PopClientAttrib() -> c_void { unsafe { (storage::PopClientAttrib.f)() } }
#[fixed_stack_segment] #[inline] pub fn PopDebugGroup() -> c_void { unsafe { (storage::PopDebugGroup.f)() } }
#[fixed_stack_segment] #[inline] pub fn PopDebugGroupKHR() -> c_void { unsafe { (storage::PopDebugGroupKHR.f)() } }
#[fixed_stack_segment] #[inline] pub fn PopGroupMarkerEXT() -> c_void { unsafe { (storage::PopGroupMarkerEXT.f)() } }
#[fixed_stack_segment] #[inline] pub fn PopMatrix() -> c_void { unsafe { (storage::PopMatrix.f)() } }
#[fixed_stack_segment] #[inline] pub fn PopName() -> c_void { unsafe { (storage::PopName.f)() } }
#[fixed_stack_segment] #[inline] pub fn PresentFrameDualFillNV(video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type_: GLenum, target0: GLenum, fill0: GLuint, target1: GLenum, fill1: GLuint, target2: GLenum, fill2: GLuint, target3: GLenum, fill3: GLuint) -> c_void { unsafe { (storage::PresentFrameDualFillNV.f)(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type_, target0, fill0, target1, fill1, target2, fill2, target3, fill3) } }
#[fixed_stack_segment] #[inline] pub fn PresentFrameKeyedNV(video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type_: GLenum, target0: GLenum, fill0: GLuint, key0: GLuint, target1: GLenum, fill1: GLuint, key1: GLuint) -> c_void { unsafe { (storage::PresentFrameKeyedNV.f)(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type_, target0, fill0, key0, target1, fill1, key1) } }
#[fixed_stack_segment] #[inline] pub fn PrimitiveRestartIndex(index: GLuint) -> c_void { unsafe { (storage::PrimitiveRestartIndex.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn PrimitiveRestartIndexNV(index: GLuint) -> c_void { unsafe { (storage::PrimitiveRestartIndexNV.f)(index) } }
#[fixed_stack_segment] #[inline] pub fn PrimitiveRestartNV() -> c_void { unsafe { (storage::PrimitiveRestartNV.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn PrioritizeTextures(n: GLsizei, textures: *GLuint, priorities: *GLfloat) -> c_void { (storage::PrioritizeTextures.f)(n, textures, priorities) }
#[fixed_stack_segment] #[inline] pub unsafe fn PrioritizeTexturesEXT(n: GLsizei, textures: *GLuint, priorities: *GLclampf) -> c_void { (storage::PrioritizeTexturesEXT.f)(n, textures, priorities) }
#[fixed_stack_segment] #[inline] pub unsafe fn PrioritizeTexturesxOES(n: GLsizei, textures: *GLuint, priorities: *GLfixed) -> c_void { (storage::PrioritizeTexturesxOES.f)(n, textures, priorities) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramBinary(program: GLuint, binaryFormat: GLenum, binary: *GLvoid, length: GLsizei) -> c_void { (storage::ProgramBinary.f)(program, binaryFormat, binary, length) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramBinaryOES(program: GLuint, binaryFormat: GLenum, binary: *GLvoid, length: GLint) -> c_void { (storage::ProgramBinaryOES.f)(program, binaryFormat, binary, length) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramBufferParametersIivNV(target: GLenum, bindingIndex: GLuint, wordIndex: GLuint, count: GLsizei, params: *GLint) -> c_void { (storage::ProgramBufferParametersIivNV.f)(target, bindingIndex, wordIndex, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramBufferParametersIuivNV(target: GLenum, bindingIndex: GLuint, wordIndex: GLuint, count: GLsizei, params: *GLuint) -> c_void { (storage::ProgramBufferParametersIuivNV.f)(target, bindingIndex, wordIndex, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramBufferParametersfvNV(target: GLenum, bindingIndex: GLuint, wordIndex: GLuint, count: GLsizei, params: *GLfloat) -> c_void { (storage::ProgramBufferParametersfvNV.f)(target, bindingIndex, wordIndex, count, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramEnvParameter4dARB(target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::ProgramEnvParameter4dARB.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParameter4dvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::ProgramEnvParameter4dvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramEnvParameter4fARB(target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::ProgramEnvParameter4fARB.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParameter4fvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::ProgramEnvParameter4fvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramEnvParameterI4iNV(target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::ProgramEnvParameterI4iNV.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParameterI4ivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void { (storage::ProgramEnvParameterI4ivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramEnvParameterI4uiNV(target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void { unsafe { (storage::ProgramEnvParameterI4uiNV.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParameterI4uivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void { (storage::ProgramEnvParameterI4uivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParameters4fvEXT(target: GLenum, index: GLuint, count: GLsizei, params: *GLfloat) -> c_void { (storage::ProgramEnvParameters4fvEXT.f)(target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParametersI4ivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLint) -> c_void { (storage::ProgramEnvParametersI4ivNV.f)(target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramEnvParametersI4uivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLuint) -> c_void { (storage::ProgramEnvParametersI4uivNV.f)(target, index, count, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramLocalParameter4dARB(target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::ProgramLocalParameter4dARB.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParameter4dvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void { (storage::ProgramLocalParameter4dvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramLocalParameter4fARB(target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::ProgramLocalParameter4fARB.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParameter4fvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void { (storage::ProgramLocalParameter4fvARB.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramLocalParameterI4iNV(target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::ProgramLocalParameterI4iNV.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParameterI4ivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void { (storage::ProgramLocalParameterI4ivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramLocalParameterI4uiNV(target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void { unsafe { (storage::ProgramLocalParameterI4uiNV.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParameterI4uivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void { (storage::ProgramLocalParameterI4uivNV.f)(target, index, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParameters4fvEXT(target: GLenum, index: GLuint, count: GLsizei, params: *GLfloat) -> c_void { (storage::ProgramLocalParameters4fvEXT.f)(target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParametersI4ivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLint) -> c_void { (storage::ProgramLocalParametersI4ivNV.f)(target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramLocalParametersI4uivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLuint) -> c_void { (storage::ProgramLocalParametersI4uivNV.f)(target, index, count, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramNamedParameter4dNV(id: GLuint, len: GLsizei, name: *GLubyte, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { (storage::ProgramNamedParameter4dNV.f)(id, len, name, x, y, z, w) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramNamedParameter4dvNV(id: GLuint, len: GLsizei, name: *GLubyte, v: *GLdouble) -> c_void { (storage::ProgramNamedParameter4dvNV.f)(id, len, name, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramNamedParameter4fNV(id: GLuint, len: GLsizei, name: *GLubyte, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { (storage::ProgramNamedParameter4fNV.f)(id, len, name, x, y, z, w) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramNamedParameter4fvNV(id: GLuint, len: GLsizei, name: *GLubyte, v: *GLfloat) -> c_void { (storage::ProgramNamedParameter4fvNV.f)(id, len, name, v) }
#[fixed_stack_segment] #[inline] pub fn ProgramParameter4dNV(target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::ProgramParameter4dNV.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramParameter4dvNV(target: GLenum, index: GLuint, v: *GLdouble) -> c_void { (storage::ProgramParameter4dvNV.f)(target, index, v) }
#[fixed_stack_segment] #[inline] pub fn ProgramParameter4fNV(target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::ProgramParameter4fNV.f)(target, index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramParameter4fvNV(target: GLenum, index: GLuint, v: *GLfloat) -> c_void { (storage::ProgramParameter4fvNV.f)(target, index, v) }
#[fixed_stack_segment] #[inline] pub fn ProgramParameteri(program: GLuint, pname: GLenum, value: GLint) -> c_void { unsafe { (storage::ProgramParameteri.f)(program, pname, value) } }
#[fixed_stack_segment] #[inline] pub fn ProgramParameteriARB(program: GLuint, pname: GLenum, value: GLint) -> c_void { unsafe { (storage::ProgramParameteriARB.f)(program, pname, value) } }
#[fixed_stack_segment] #[inline] pub fn ProgramParameteriEXT(program: GLuint, pname: GLenum, value: GLint) -> c_void { unsafe { (storage::ProgramParameteriEXT.f)(program, pname, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramParameters4dvNV(target: GLenum, index: GLuint, count: GLsizei, v: *GLdouble) -> c_void { (storage::ProgramParameters4dvNV.f)(target, index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramParameters4fvNV(target: GLenum, index: GLuint, count: GLsizei, v: *GLfloat) -> c_void { (storage::ProgramParameters4fvNV.f)(target, index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramStringARB(target: GLenum, format: GLenum, len: GLsizei, string: *GLvoid) -> c_void { (storage::ProgramStringARB.f)(target, format, len, string) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramSubroutineParametersuivNV(target: GLenum, count: GLsizei, params: *GLuint) -> c_void { (storage::ProgramSubroutineParametersuivNV.f)(target, count, params) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1d(program: GLuint, location: GLint, v0: GLdouble) -> c_void { unsafe { (storage::ProgramUniform1d.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1dEXT(program: GLuint, location: GLint, x: GLdouble) -> c_void { unsafe { (storage::ProgramUniform1dEXT.f)(program, location, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform1dv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform1dvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1f(program: GLuint, location: GLint, v0: GLfloat) -> c_void { unsafe { (storage::ProgramUniform1f.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1fEXT(program: GLuint, location: GLint, v0: GLfloat) -> c_void { unsafe { (storage::ProgramUniform1fEXT.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform1fv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform1fvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1i(program: GLuint, location: GLint, v0: GLint) -> c_void { unsafe { (storage::ProgramUniform1i.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1i64NV(program: GLuint, location: GLint, x: GLint64EXT) -> c_void { unsafe { (storage::ProgramUniform1i64NV.f)(program, location, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::ProgramUniform1i64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1iEXT(program: GLuint, location: GLint, v0: GLint) -> c_void { unsafe { (storage::ProgramUniform1iEXT.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform1iv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform1ivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1ui(program: GLuint, location: GLint, v0: GLuint) -> c_void { unsafe { (storage::ProgramUniform1ui.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1ui64NV(program: GLuint, location: GLint, x: GLuint64EXT) -> c_void { unsafe { (storage::ProgramUniform1ui64NV.f)(program, location, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::ProgramUniform1ui64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform1uiEXT(program: GLuint, location: GLint, v0: GLuint) -> c_void { unsafe { (storage::ProgramUniform1uiEXT.f)(program, location, v0) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform1uiv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform1uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform1uivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2d(program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble) -> c_void { unsafe { (storage::ProgramUniform2d.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2dEXT(program: GLuint, location: GLint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::ProgramUniform2dEXT.f)(program, location, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform2dv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform2dvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2f(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) -> c_void { unsafe { (storage::ProgramUniform2f.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2fEXT(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) -> c_void { unsafe { (storage::ProgramUniform2fEXT.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform2fv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform2fvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2i(program: GLuint, location: GLint, v0: GLint, v1: GLint) -> c_void { unsafe { (storage::ProgramUniform2i.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2i64NV(program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT) -> c_void { unsafe { (storage::ProgramUniform2i64NV.f)(program, location, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::ProgramUniform2i64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2iEXT(program: GLuint, location: GLint, v0: GLint, v1: GLint) -> c_void { unsafe { (storage::ProgramUniform2iEXT.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform2iv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform2ivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2ui(program: GLuint, location: GLint, v0: GLuint, v1: GLuint) -> c_void { unsafe { (storage::ProgramUniform2ui.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2ui64NV(program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT) -> c_void { unsafe { (storage::ProgramUniform2ui64NV.f)(program, location, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::ProgramUniform2ui64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform2uiEXT(program: GLuint, location: GLint, v0: GLuint, v1: GLuint) -> c_void { unsafe { (storage::ProgramUniform2uiEXT.f)(program, location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform2uiv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform2uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform2uivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3d(program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble) -> c_void { unsafe { (storage::ProgramUniform3d.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3dEXT(program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::ProgramUniform3dEXT.f)(program, location, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform3dv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform3dvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3f(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void { unsafe { (storage::ProgramUniform3f.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3fEXT(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void { unsafe { (storage::ProgramUniform3fEXT.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform3fv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform3fvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3i(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void { unsafe { (storage::ProgramUniform3i.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3i64NV(program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) -> c_void { unsafe { (storage::ProgramUniform3i64NV.f)(program, location, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::ProgramUniform3i64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3iEXT(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void { unsafe { (storage::ProgramUniform3iEXT.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform3iv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform3ivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3ui(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void { unsafe { (storage::ProgramUniform3ui.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3ui64NV(program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) -> c_void { unsafe { (storage::ProgramUniform3ui64NV.f)(program, location, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::ProgramUniform3ui64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform3uiEXT(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void { unsafe { (storage::ProgramUniform3uiEXT.f)(program, location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform3uiv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform3uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform3uivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4d(program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, v3: GLdouble) -> c_void { unsafe { (storage::ProgramUniform4d.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4dEXT(program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::ProgramUniform4dEXT.f)(program, location, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform4dv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::ProgramUniform4dvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4f(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void { unsafe { (storage::ProgramUniform4f.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4fEXT(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void { unsafe { (storage::ProgramUniform4fEXT.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform4fv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::ProgramUniform4fvEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4i(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void { unsafe { (storage::ProgramUniform4i.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4i64NV(program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) -> c_void { unsafe { (storage::ProgramUniform4i64NV.f)(program, location, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::ProgramUniform4i64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4iEXT(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void { unsafe { (storage::ProgramUniform4iEXT.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform4iv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::ProgramUniform4ivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4ui(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void { unsafe { (storage::ProgramUniform4ui.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4ui64NV(program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) -> c_void { unsafe { (storage::ProgramUniform4ui64NV.f)(program, location, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::ProgramUniform4ui64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniform4uiEXT(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void { unsafe { (storage::ProgramUniform4uiEXT.f)(program, location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform4uiv.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniform4uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::ProgramUniform4uivEXT.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniformHandleui64ARB(program: GLuint, location: GLint, value: GLuint64) -> c_void { unsafe { (storage::ProgramUniformHandleui64ARB.f)(program, location, value) } }
#[fixed_stack_segment] #[inline] pub fn ProgramUniformHandleui64NV(program: GLuint, location: GLint, value: GLuint64) -> c_void { unsafe { (storage::ProgramUniformHandleui64NV.f)(program, location, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformHandleui64vARB(program: GLuint, location: GLint, count: GLsizei, values: *GLuint64) -> c_void { (storage::ProgramUniformHandleui64vARB.f)(program, location, count, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformHandleui64vNV(program: GLuint, location: GLint, count: GLsizei, values: *GLuint64) -> c_void { (storage::ProgramUniformHandleui64vNV.f)(program, location, count, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix2dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix2dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix2fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix2fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x3dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix2x3dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x3dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix2x3dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x3fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix2x3fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x3fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix2x3fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x4dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix2x4dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x4dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix2x4dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x4fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix2x4fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix2x4fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix2x4fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix3dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix3dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix3fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix3fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x2dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix3x2dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x2dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix3x2dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x2fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix3x2fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x2fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix3x2fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x4dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix3x4dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x4dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix3x4dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x4fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix3x4fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix3x4fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix3x4fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix4dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix4dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix4fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix4fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x2dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix4x2dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x2dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix4x2dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x2fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix4x2fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x2fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix4x2fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x3dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix4x3dv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x3dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::ProgramUniformMatrix4x3dvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x3fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix4x3fv.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformMatrix4x3fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::ProgramUniformMatrix4x3fvEXT.f)(program, location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramUniformui64NV(program: GLuint, location: GLint, value: GLuint64EXT) -> c_void { unsafe { (storage::ProgramUniformui64NV.f)(program, location, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ProgramUniformui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::ProgramUniformui64vNV.f)(program, location, count, value) }
#[fixed_stack_segment] #[inline] pub fn ProgramVertexLimitNV(target: GLenum, limit: GLint) -> c_void { unsafe { (storage::ProgramVertexLimitNV.f)(target, limit) } }
#[fixed_stack_segment] #[inline] pub fn ProvokingVertex(mode: GLenum) -> c_void { unsafe { (storage::ProvokingVertex.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn ProvokingVertexEXT(mode: GLenum) -> c_void { unsafe { (storage::ProvokingVertexEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn PushAttrib(mask: GLbitfield) -> c_void { unsafe { (storage::PushAttrib.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn PushClientAttrib(mask: GLbitfield) -> c_void { unsafe { (storage::PushClientAttrib.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn PushClientAttribDefaultEXT(mask: GLbitfield) -> c_void { unsafe { (storage::PushClientAttribDefaultEXT.f)(mask) } }
#[fixed_stack_segment] #[inline] pub unsafe fn PushDebugGroup(source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) -> c_void { (storage::PushDebugGroup.f)(source, id, length, message) }
#[fixed_stack_segment] #[inline] pub unsafe fn PushDebugGroupKHR(source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) -> c_void { (storage::PushDebugGroupKHR.f)(source, id, length, message) }
#[fixed_stack_segment] #[inline] pub unsafe fn PushGroupMarkerEXT(length: GLsizei, marker: *GLchar) -> c_void { (storage::PushGroupMarkerEXT.f)(length, marker) }
#[fixed_stack_segment] #[inline] pub fn PushMatrix() -> c_void { unsafe { (storage::PushMatrix.f)() } }
#[fixed_stack_segment] #[inline] pub fn PushName(name: GLuint) -> c_void { unsafe { (storage::PushName.f)(name) } }
#[fixed_stack_segment] #[inline] pub fn QueryCounter(id: GLuint, target: GLenum) -> c_void { unsafe { (storage::QueryCounter.f)(id, target) } }
#[fixed_stack_segment] #[inline] pub fn QueryCounterEXT(id: GLuint, target: GLenum) -> c_void { unsafe { (storage::QueryCounterEXT.f)(id, target) } }
#[fixed_stack_segment] #[inline] pub unsafe fn QueryMatrixxOES(mantissa: *GLfixed, exponent: *GLint) -> GLbitfield { (storage::QueryMatrixxOES.f)(mantissa, exponent) }
#[fixed_stack_segment] #[inline] pub fn RasterPos2d(x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::RasterPos2d.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos2dv(v: *GLdouble) -> c_void { (storage::RasterPos2dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos2f(x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::RasterPos2f.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos2fv(v: *GLfloat) -> c_void { (storage::RasterPos2fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos2i(x: GLint, y: GLint) -> c_void { unsafe { (storage::RasterPos2i.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos2iv(v: *GLint) -> c_void { (storage::RasterPos2iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos2s(x: GLshort, y: GLshort) -> c_void { unsafe { (storage::RasterPos2s.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos2sv(v: *GLshort) -> c_void { (storage::RasterPos2sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos2xOES(x: GLfixed, y: GLfixed) -> c_void { unsafe { (storage::RasterPos2xOES.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos2xvOES(coords: *GLfixed) -> c_void { (storage::RasterPos2xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn RasterPos3d(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::RasterPos3d.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos3dv(v: *GLdouble) -> c_void { (storage::RasterPos3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos3f(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::RasterPos3f.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos3fv(v: *GLfloat) -> c_void { (storage::RasterPos3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos3i(x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::RasterPos3i.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos3iv(v: *GLint) -> c_void { (storage::RasterPos3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos3s(x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::RasterPos3s.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos3sv(v: *GLshort) -> c_void { (storage::RasterPos3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos3xOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::RasterPos3xOES.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos3xvOES(coords: *GLfixed) -> c_void { (storage::RasterPos3xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn RasterPos4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::RasterPos4d.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos4dv(v: *GLdouble) -> c_void { (storage::RasterPos4dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::RasterPos4f.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos4fv(v: *GLfloat) -> c_void { (storage::RasterPos4fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos4i(x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::RasterPos4i.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos4iv(v: *GLint) -> c_void { (storage::RasterPos4iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::RasterPos4s.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos4sv(v: *GLshort) -> c_void { (storage::RasterPos4sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn RasterPos4xOES(x: GLfixed, y: GLfixed, z: GLfixed, w: GLfixed) -> c_void { unsafe { (storage::RasterPos4xOES.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RasterPos4xvOES(coords: *GLfixed) -> c_void { (storage::RasterPos4xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn ReadBuffer(mode: GLenum) -> c_void { unsafe { (storage::ReadBuffer.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn ReadBufferIndexedEXT(src: GLenum, index: GLint) -> c_void { unsafe { (storage::ReadBufferIndexedEXT.f)(src, index) } }
#[fixed_stack_segment] #[inline] pub fn ReadBufferNV(mode: GLenum) -> c_void { unsafe { (storage::ReadBufferNV.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn ReadInstrumentsSGIX(marker: GLint) -> c_void { unsafe { (storage::ReadInstrumentsSGIX.f)(marker) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReadPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::ReadPixels.f)(x, y, width, height, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn ReadnPixelsARB(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, bufSize: GLsizei, data: *GLvoid) -> c_void { (storage::ReadnPixelsARB.f)(x, y, width, height, format, type_, bufSize, data) }
#[fixed_stack_segment] #[inline] pub unsafe fn ReadnPixelsEXT(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, bufSize: GLsizei, data: *GLvoid) -> c_void { (storage::ReadnPixelsEXT.f)(x, y, width, height, format, type_, bufSize, data) }
#[fixed_stack_segment] #[inline] pub fn Rectd(x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) -> c_void { unsafe { (storage::Rectd.f)(x1, y1, x2, y2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Rectdv(v1: *GLdouble, v2: *GLdouble) -> c_void { (storage::Rectdv.f)(v1, v2) }
#[fixed_stack_segment] #[inline] pub fn Rectf(x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) -> c_void { unsafe { (storage::Rectf.f)(x1, y1, x2, y2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Rectfv(v1: *GLfloat, v2: *GLfloat) -> c_void { (storage::Rectfv.f)(v1, v2) }
#[fixed_stack_segment] #[inline] pub fn Recti(x1: GLint, y1: GLint, x2: GLint, y2: GLint) -> c_void { unsafe { (storage::Recti.f)(x1, y1, x2, y2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Rectiv(v1: *GLint, v2: *GLint) -> c_void { (storage::Rectiv.f)(v1, v2) }
#[fixed_stack_segment] #[inline] pub fn Rects(x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) -> c_void { unsafe { (storage::Rects.f)(x1, y1, x2, y2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Rectsv(v1: *GLshort, v2: *GLshort) -> c_void { (storage::Rectsv.f)(v1, v2) }
#[fixed_stack_segment] #[inline] pub fn RectxOES(x1: GLfixed, y1: GLfixed, x2: GLfixed, y2: GLfixed) -> c_void { unsafe { (storage::RectxOES.f)(x1, y1, x2, y2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn RectxvOES(v1: *GLfixed, v2: *GLfixed) -> c_void { (storage::RectxvOES.f)(v1, v2) }
#[fixed_stack_segment] #[inline] pub unsafe fn ReferencePlaneSGIX(equation: *GLdouble) -> c_void { (storage::ReferencePlaneSGIX.f)(equation) }
#[fixed_stack_segment] #[inline] pub fn ReleaseShaderCompiler() -> c_void { unsafe { (storage::ReleaseShaderCompiler.f)() } }
#[fixed_stack_segment] #[inline] pub fn RenderMode(mode: GLenum) -> GLint { unsafe { (storage::RenderMode.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorage.f)(target, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageEXT(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageEXT.f)(target, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisample.f)(target, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisampleANGLE(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisampleANGLE.f)(target, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisampleAPPLE(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisampleAPPLE.f)(target, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisampleCoverageNV(target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisampleCoverageNV.f)(target, coverageSamples, colorSamples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisampleEXT(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisampleEXT.f)(target, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisampleIMG(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisampleIMG.f)(target, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageMultisampleNV(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageMultisampleNV.f)(target, samples, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn RenderbufferStorageOES(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::RenderbufferStorageOES.f)(target, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodePointerSUN(type_: GLenum, stride: GLsizei, pointer: **GLvoid) -> c_void { (storage::ReplacementCodePointerSUN.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeubSUN(code: GLubyte) -> c_void { unsafe { (storage::ReplacementCodeubSUN.f)(code) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeubvSUN(code: *GLubyte) -> c_void { (storage::ReplacementCodeubvSUN.f)(code) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiColor3fVertex3fSUN(rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiColor3fVertex3fSUN.f)(rc, r, g, b, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiColor3fVertex3fvSUN(rc: *GLuint, c: *GLfloat, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiColor3fVertex3fvSUN.f)(rc, c, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiColor4fNormal3fVertex3fSUN(rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiColor4fNormal3fVertex3fSUN.f)(rc, r, g, b, a, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc: *GLuint, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiColor4fNormal3fVertex3fvSUN.f)(rc, c, n, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiColor4ubVertex3fSUN(rc: GLuint, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiColor4ubVertex3fSUN.f)(rc, r, g, b, a, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiColor4ubVertex3fvSUN(rc: *GLuint, c: *GLubyte, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiColor4ubVertex3fvSUN.f)(rc, c, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiNormal3fVertex3fSUN(rc: GLuint, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiNormal3fVertex3fSUN.f)(rc, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiNormal3fVertex3fvSUN(rc: *GLuint, n: *GLfloat, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiNormal3fVertex3fvSUN.f)(rc, n, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiSUN(code: GLuint) -> c_void { unsafe { (storage::ReplacementCodeuiSUN.f)(code) } }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc: GLuint, s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN.f)(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc: *GLuint, tc: *GLfloat, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN.f)(rc, tc, c, n, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc: GLuint, s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN.f)(rc, s, t, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc: *GLuint, tc: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN.f)(rc, tc, n, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiTexCoord2fVertex3fSUN(rc: GLuint, s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiTexCoord2fVertex3fSUN.f)(rc, s, t, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiTexCoord2fVertex3fvSUN(rc: *GLuint, tc: *GLfloat, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiTexCoord2fVertex3fvSUN.f)(rc, tc, v) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeuiVertex3fSUN(rc: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::ReplacementCodeuiVertex3fSUN.f)(rc, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuiVertex3fvSUN(rc: *GLuint, v: *GLfloat) -> c_void { (storage::ReplacementCodeuiVertex3fvSUN.f)(rc, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeuivSUN(code: *GLuint) -> c_void { (storage::ReplacementCodeuivSUN.f)(code) }
#[fixed_stack_segment] #[inline] pub fn ReplacementCodeusSUN(code: GLushort) -> c_void { unsafe { (storage::ReplacementCodeusSUN.f)(code) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ReplacementCodeusvSUN(code: *GLushort) -> c_void { (storage::ReplacementCodeusvSUN.f)(code) }
#[fixed_stack_segment] #[inline] pub unsafe fn RequestResidentProgramsNV(n: GLsizei, programs: *GLuint) -> c_void { (storage::RequestResidentProgramsNV.f)(n, programs) }
#[fixed_stack_segment] #[inline] pub fn ResetHistogram(target: GLenum) -> c_void { unsafe { (storage::ResetHistogram.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn ResetHistogramEXT(target: GLenum) -> c_void { unsafe { (storage::ResetHistogramEXT.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn ResetMinmax(target: GLenum) -> c_void { unsafe { (storage::ResetMinmax.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn ResetMinmaxEXT(target: GLenum) -> c_void { unsafe { (storage::ResetMinmaxEXT.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn ResizeBuffersMESA() -> c_void { unsafe { (storage::ResizeBuffersMESA.f)() } }
#[fixed_stack_segment] #[inline] pub fn ResolveMultisampleFramebufferAPPLE() -> c_void { unsafe { (storage::ResolveMultisampleFramebufferAPPLE.f)() } }
#[fixed_stack_segment] #[inline] pub fn ResumeTransformFeedback() -> c_void { unsafe { (storage::ResumeTransformFeedback.f)() } }
#[fixed_stack_segment] #[inline] pub fn ResumeTransformFeedbackNV() -> c_void { unsafe { (storage::ResumeTransformFeedbackNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn Rotated(angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::Rotated.f)(angle, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Rotatef(angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Rotatef.f)(angle, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Rotatex(angle: GLfixed, x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::Rotatex.f)(angle, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn RotatexOES(angle: GLfixed, x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::RotatexOES.f)(angle, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn SampleCoverage(value: GLfloat, invert: GLboolean) -> c_void { unsafe { (storage::SampleCoverage.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleCoverageARB(value: GLfloat, invert: GLboolean) -> c_void { unsafe { (storage::SampleCoverageARB.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleCoverageOES(value: GLfixed, invert: GLboolean) -> c_void { unsafe { (storage::SampleCoverageOES.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleCoveragex(value: GLclampx, invert: GLboolean) -> c_void { unsafe { (storage::SampleCoveragex.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleCoveragexOES(value: GLclampx, invert: GLboolean) -> c_void { unsafe { (storage::SampleCoveragexOES.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleMapATI(dst: GLuint, interp: GLuint, swizzle: GLenum) -> c_void { unsafe { (storage::SampleMapATI.f)(dst, interp, swizzle) } }
#[fixed_stack_segment] #[inline] pub fn SampleMaskEXT(value: GLclampf, invert: GLboolean) -> c_void { unsafe { (storage::SampleMaskEXT.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleMaskIndexedNV(index: GLuint, mask: GLbitfield) -> c_void { unsafe { (storage::SampleMaskIndexedNV.f)(index, mask) } }
#[fixed_stack_segment] #[inline] pub fn SampleMaskSGIS(value: GLclampf, invert: GLboolean) -> c_void { unsafe { (storage::SampleMaskSGIS.f)(value, invert) } }
#[fixed_stack_segment] #[inline] pub fn SampleMaski(index: GLuint, mask: GLbitfield) -> c_void { unsafe { (storage::SampleMaski.f)(index, mask) } }
#[fixed_stack_segment] #[inline] pub fn SamplePatternEXT(pattern: GLenum) -> c_void { unsafe { (storage::SamplePatternEXT.f)(pattern) } }
#[fixed_stack_segment] #[inline] pub fn SamplePatternSGIS(pattern: GLenum) -> c_void { unsafe { (storage::SamplePatternSGIS.f)(pattern) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SamplerParameterIiv(sampler: GLuint, pname: GLenum, param: *GLint) -> c_void { (storage::SamplerParameterIiv.f)(sampler, pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn SamplerParameterIuiv(sampler: GLuint, pname: GLenum, param: *GLuint) -> c_void { (storage::SamplerParameterIuiv.f)(sampler, pname, param) }
#[fixed_stack_segment] #[inline] pub fn SamplerParameterf(sampler: GLuint, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::SamplerParameterf.f)(sampler, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SamplerParameterfv(sampler: GLuint, pname: GLenum, param: *GLfloat) -> c_void { (storage::SamplerParameterfv.f)(sampler, pname, param) }
#[fixed_stack_segment] #[inline] pub fn SamplerParameteri(sampler: GLuint, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::SamplerParameteri.f)(sampler, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SamplerParameteriv(sampler: GLuint, pname: GLenum, param: *GLint) -> c_void { (storage::SamplerParameteriv.f)(sampler, pname, param) }
#[fixed_stack_segment] #[inline] pub fn Scaled(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::Scaled.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Scalef(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Scalef.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Scalex(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::Scalex.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn ScalexOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::ScalexOES.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::Scissor.f)(x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ScissorArrayv(first: GLuint, count: GLsizei, v: *GLint) -> c_void { (storage::ScissorArrayv.f)(first, count, v) }
#[fixed_stack_segment] #[inline] pub fn ScissorIndexed(index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::ScissorIndexed.f)(index, left, bottom, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ScissorIndexedv(index: GLuint, v: *GLint) -> c_void { (storage::ScissorIndexedv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3b(red: GLbyte, green: GLbyte, blue: GLbyte) -> c_void { unsafe { (storage::SecondaryColor3b.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3bEXT(red: GLbyte, green: GLbyte, blue: GLbyte) -> c_void { unsafe { (storage::SecondaryColor3bEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3bv(v: *GLbyte) -> c_void { (storage::SecondaryColor3bv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3bvEXT(v: *GLbyte) -> c_void { (storage::SecondaryColor3bvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3d(red: GLdouble, green: GLdouble, blue: GLdouble) -> c_void { unsafe { (storage::SecondaryColor3d.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3dEXT(red: GLdouble, green: GLdouble, blue: GLdouble) -> c_void { unsafe { (storage::SecondaryColor3dEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3dv(v: *GLdouble) -> c_void { (storage::SecondaryColor3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3dvEXT(v: *GLdouble) -> c_void { (storage::SecondaryColor3dvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3f(red: GLfloat, green: GLfloat, blue: GLfloat) -> c_void { unsafe { (storage::SecondaryColor3f.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3fEXT(red: GLfloat, green: GLfloat, blue: GLfloat) -> c_void { unsafe { (storage::SecondaryColor3fEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3fv(v: *GLfloat) -> c_void { (storage::SecondaryColor3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3fvEXT(v: *GLfloat) -> c_void { (storage::SecondaryColor3fvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3hNV(red: GLhalfNV, green: GLhalfNV, blue: GLhalfNV) -> c_void { unsafe { (storage::SecondaryColor3hNV.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3hvNV(v: *GLhalfNV) -> c_void { (storage::SecondaryColor3hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3i(red: GLint, green: GLint, blue: GLint) -> c_void { unsafe { (storage::SecondaryColor3i.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3iEXT(red: GLint, green: GLint, blue: GLint) -> c_void { unsafe { (storage::SecondaryColor3iEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3iv(v: *GLint) -> c_void { (storage::SecondaryColor3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3ivEXT(v: *GLint) -> c_void { (storage::SecondaryColor3ivEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3s(red: GLshort, green: GLshort, blue: GLshort) -> c_void { unsafe { (storage::SecondaryColor3s.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3sEXT(red: GLshort, green: GLshort, blue: GLshort) -> c_void { unsafe { (storage::SecondaryColor3sEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3sv(v: *GLshort) -> c_void { (storage::SecondaryColor3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3svEXT(v: *GLshort) -> c_void { (storage::SecondaryColor3svEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3ub(red: GLubyte, green: GLubyte, blue: GLubyte) -> c_void { unsafe { (storage::SecondaryColor3ub.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3ubEXT(red: GLubyte, green: GLubyte, blue: GLubyte) -> c_void { unsafe { (storage::SecondaryColor3ubEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3ubv(v: *GLubyte) -> c_void { (storage::SecondaryColor3ubv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3ubvEXT(v: *GLubyte) -> c_void { (storage::SecondaryColor3ubvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3ui(red: GLuint, green: GLuint, blue: GLuint) -> c_void { unsafe { (storage::SecondaryColor3ui.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3uiEXT(red: GLuint, green: GLuint, blue: GLuint) -> c_void { unsafe { (storage::SecondaryColor3uiEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3uiv(v: *GLuint) -> c_void { (storage::SecondaryColor3uiv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3uivEXT(v: *GLuint) -> c_void { (storage::SecondaryColor3uivEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3us(red: GLushort, green: GLushort, blue: GLushort) -> c_void { unsafe { (storage::SecondaryColor3us.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColor3usEXT(red: GLushort, green: GLushort, blue: GLushort) -> c_void { unsafe { (storage::SecondaryColor3usEXT.f)(red, green, blue) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3usv(v: *GLushort) -> c_void { (storage::SecondaryColor3usv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColor3usvEXT(v: *GLushort) -> c_void { (storage::SecondaryColor3usvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn SecondaryColorFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::SecondaryColorFormatNV.f)(size, type_, stride) } }
#[fixed_stack_segment] #[inline] pub fn SecondaryColorP3ui(type_: GLenum, color: GLuint) -> c_void { unsafe { (storage::SecondaryColorP3ui.f)(type_, color) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColorP3uiv(type_: GLenum, color: *GLuint) -> c_void { (storage::SecondaryColorP3uiv.f)(type_, color) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColorPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::SecondaryColorPointer.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColorPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::SecondaryColorPointerEXT.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn SecondaryColorPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::SecondaryColorPointerListIBM.f)(size, type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub unsafe fn SelectBuffer(size: GLsizei, buffer: *GLuint) -> c_void { (storage::SelectBuffer.f)(size, buffer) }
#[fixed_stack_segment] #[inline] pub unsafe fn SelectPerfMonitorCountersAMD(monitor: GLuint, enable: GLboolean, group: GLuint, numCounters: GLint, counterList: *GLuint) -> c_void { (storage::SelectPerfMonitorCountersAMD.f)(monitor, enable, group, numCounters, counterList) }
#[fixed_stack_segment] #[inline] pub unsafe fn SeparableFilter2D(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid) -> c_void { (storage::SeparableFilter2D.f)(target, internalformat, width, height, format, type_, row, column) }
#[fixed_stack_segment] #[inline] pub unsafe fn SeparableFilter2DEXT(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid) -> c_void { (storage::SeparableFilter2DEXT.f)(target, internalformat, width, height, format, type_, row, column) }
#[fixed_stack_segment] #[inline] pub fn SetFenceAPPLE(fence: GLuint) -> c_void { unsafe { (storage::SetFenceAPPLE.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn SetFenceNV(fence: GLuint, condition: GLenum) -> c_void { unsafe { (storage::SetFenceNV.f)(fence, condition) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SetFragmentShaderConstantATI(dst: GLuint, value: *GLfloat) -> c_void { (storage::SetFragmentShaderConstantATI.f)(dst, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn SetInvariantEXT(id: GLuint, type_: GLenum, addr: *GLvoid) -> c_void { (storage::SetInvariantEXT.f)(id, type_, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn SetLocalConstantEXT(id: GLuint, type_: GLenum, addr: *GLvoid) -> c_void { (storage::SetLocalConstantEXT.f)(id, type_, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn SetMultisamplefvAMD(pname: GLenum, index: GLuint, val: *GLfloat) -> c_void { (storage::SetMultisamplefvAMD.f)(pname, index, val) }
#[fixed_stack_segment] #[inline] pub fn ShadeModel(mode: GLenum) -> c_void { unsafe { (storage::ShadeModel.f)(mode) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ShaderBinary(count: GLsizei, shaders: *GLuint, binaryformat: GLenum, binary: *GLvoid, length: GLsizei) -> c_void { (storage::ShaderBinary.f)(count, shaders, binaryformat, binary, length) }
#[fixed_stack_segment] #[inline] pub fn ShaderOp1EXT(op: GLenum, res: GLuint, arg1: GLuint) -> c_void { unsafe { (storage::ShaderOp1EXT.f)(op, res, arg1) } }
#[fixed_stack_segment] #[inline] pub fn ShaderOp2EXT(op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint) -> c_void { unsafe { (storage::ShaderOp2EXT.f)(op, res, arg1, arg2) } }
#[fixed_stack_segment] #[inline] pub fn ShaderOp3EXT(op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint, arg3: GLuint) -> c_void { unsafe { (storage::ShaderOp3EXT.f)(op, res, arg1, arg2, arg3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ShaderSource(shader: GLuint, count: GLsizei, string: **GLchar, length: *GLint) -> c_void { (storage::ShaderSource.f)(shader, count, string, length) }
#[fixed_stack_segment] #[inline] pub unsafe fn ShaderSourceARB(shaderObj: GLhandleARB, count: GLsizei, string: **GLcharARB, length: *GLint) -> c_void { (storage::ShaderSourceARB.f)(shaderObj, count, string, length) }
#[fixed_stack_segment] #[inline] pub fn ShaderStorageBlockBinding(program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint) -> c_void { unsafe { (storage::ShaderStorageBlockBinding.f)(program, storageBlockIndex, storageBlockBinding) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SharpenTexFuncSGIS(target: GLenum, n: GLsizei, points: *GLfloat) -> c_void { (storage::SharpenTexFuncSGIS.f)(target, n, points) }
#[fixed_stack_segment] #[inline] pub fn SpriteParameterfSGIX(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::SpriteParameterfSGIX.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SpriteParameterfvSGIX(pname: GLenum, params: *GLfloat) -> c_void { (storage::SpriteParameterfvSGIX.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn SpriteParameteriSGIX(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::SpriteParameteriSGIX.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn SpriteParameterivSGIX(pname: GLenum, params: *GLint) -> c_void { (storage::SpriteParameterivSGIX.f)(pname, params) }
#[fixed_stack_segment] #[inline] pub fn StartInstrumentsSGIX() -> c_void { unsafe { (storage::StartInstrumentsSGIX.f)() } }
#[fixed_stack_segment] #[inline] pub fn StartTilingQCOM(x: GLuint, y: GLuint, width: GLuint, height: GLuint, preserveMask: GLbitfield) -> c_void { unsafe { (storage::StartTilingQCOM.f)(x, y, width, height, preserveMask) } }
#[fixed_stack_segment] #[inline] pub fn StencilClearTagEXT(stencilTagBits: GLsizei, stencilClearTag: GLuint) -> c_void { unsafe { (storage::StencilClearTagEXT.f)(stencilTagBits, stencilClearTag) } }
#[fixed_stack_segment] #[inline] pub unsafe fn StencilFillPathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, fillMode: GLenum, mask: GLuint, transformType: GLenum, transformValues: *GLfloat) -> c_void { (storage::StencilFillPathInstancedNV.f)(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues) }
#[fixed_stack_segment] #[inline] pub fn StencilFillPathNV(path: GLuint, fillMode: GLenum, mask: GLuint) -> c_void { unsafe { (storage::StencilFillPathNV.f)(path, fillMode, mask) } }
#[fixed_stack_segment] #[inline] pub fn StencilFunc(func: GLenum, ref_: GLint, mask: GLuint) -> c_void { unsafe { (storage::StencilFunc.f)(func, ref_, mask) } }
#[fixed_stack_segment] #[inline] pub fn StencilFuncSeparate(face: GLenum, func: GLenum, ref_: GLint, mask: GLuint) -> c_void { unsafe { (storage::StencilFuncSeparate.f)(face, func, ref_, mask) } }
#[fixed_stack_segment] #[inline] pub fn StencilFuncSeparateATI(frontfunc: GLenum, backfunc: GLenum, ref_: GLint, mask: GLuint) -> c_void { unsafe { (storage::StencilFuncSeparateATI.f)(frontfunc, backfunc, ref_, mask) } }
#[fixed_stack_segment] #[inline] pub fn StencilMask(mask: GLuint) -> c_void { unsafe { (storage::StencilMask.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn StencilMaskSeparate(face: GLenum, mask: GLuint) -> c_void { unsafe { (storage::StencilMaskSeparate.f)(face, mask) } }
#[fixed_stack_segment] #[inline] pub fn StencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum) -> c_void { unsafe { (storage::StencilOp.f)(fail, zfail, zpass) } }
#[fixed_stack_segment] #[inline] pub fn StencilOpSeparate(face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) -> c_void { unsafe { (storage::StencilOpSeparate.f)(face, sfail, dpfail, dppass) } }
#[fixed_stack_segment] #[inline] pub fn StencilOpSeparateATI(face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) -> c_void { unsafe { (storage::StencilOpSeparateATI.f)(face, sfail, dpfail, dppass) } }
#[fixed_stack_segment] #[inline] pub fn StencilOpValueAMD(face: GLenum, value: GLuint) -> c_void { unsafe { (storage::StencilOpValueAMD.f)(face, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn StencilStrokePathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, reference: GLint, mask: GLuint, transformType: GLenum, transformValues: *GLfloat) -> c_void { (storage::StencilStrokePathInstancedNV.f)(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues) }
#[fixed_stack_segment] #[inline] pub fn StencilStrokePathNV(path: GLuint, reference: GLint, mask: GLuint) -> c_void { unsafe { (storage::StencilStrokePathNV.f)(path, reference, mask) } }
#[fixed_stack_segment] #[inline] pub fn StopInstrumentsSGIX(marker: GLint) -> c_void { unsafe { (storage::StopInstrumentsSGIX.f)(marker) } }
#[fixed_stack_segment] #[inline] pub unsafe fn StringMarkerGREMEDY(len: GLsizei, string: *GLvoid) -> c_void { (storage::StringMarkerGREMEDY.f)(len, string) }
#[fixed_stack_segment] #[inline] pub fn SwizzleEXT(res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum) -> c_void { unsafe { (storage::SwizzleEXT.f)(res, in_, outX, outY, outZ, outW) } }
#[fixed_stack_segment] #[inline] pub fn SyncTextureINTEL(texture: GLuint) -> c_void { unsafe { (storage::SyncTextureINTEL.f)(texture) } }
#[fixed_stack_segment] #[inline] pub fn TagSampleBufferSGIX() -> c_void { unsafe { (storage::TagSampleBufferSGIX.f)() } }
#[fixed_stack_segment] #[inline] pub fn Tangent3bEXT(tx: GLbyte, ty: GLbyte, tz: GLbyte) -> c_void { unsafe { (storage::Tangent3bEXT.f)(tx, ty, tz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Tangent3bvEXT(v: *GLbyte) -> c_void { (storage::Tangent3bvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Tangent3dEXT(tx: GLdouble, ty: GLdouble, tz: GLdouble) -> c_void { unsafe { (storage::Tangent3dEXT.f)(tx, ty, tz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Tangent3dvEXT(v: *GLdouble) -> c_void { (storage::Tangent3dvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Tangent3fEXT(tx: GLfloat, ty: GLfloat, tz: GLfloat) -> c_void { unsafe { (storage::Tangent3fEXT.f)(tx, ty, tz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Tangent3fvEXT(v: *GLfloat) -> c_void { (storage::Tangent3fvEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Tangent3iEXT(tx: GLint, ty: GLint, tz: GLint) -> c_void { unsafe { (storage::Tangent3iEXT.f)(tx, ty, tz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Tangent3ivEXT(v: *GLint) -> c_void { (storage::Tangent3ivEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Tangent3sEXT(tx: GLshort, ty: GLshort, tz: GLshort) -> c_void { unsafe { (storage::Tangent3sEXT.f)(tx, ty, tz) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Tangent3svEXT(v: *GLshort) -> c_void { (storage::Tangent3svEXT.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn TangentPointerEXT(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::TangentPointerEXT.f)(type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn TbufferMask3DFX(mask: GLuint) -> c_void { unsafe { (storage::TbufferMask3DFX.f)(mask) } }
#[fixed_stack_segment] #[inline] pub fn TessellationFactorAMD(factor: GLfloat) -> c_void { unsafe { (storage::TessellationFactorAMD.f)(factor) } }
#[fixed_stack_segment] #[inline] pub fn TessellationModeAMD(mode: GLenum) -> c_void { unsafe { (storage::TessellationModeAMD.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn TestFenceAPPLE(fence: GLuint) -> GLboolean { unsafe { (storage::TestFenceAPPLE.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn TestFenceNV(fence: GLuint) -> GLboolean { unsafe { (storage::TestFenceNV.f)(fence) } }
#[fixed_stack_segment] #[inline] pub fn TestObjectAPPLE(object: GLenum, name: GLuint) -> GLboolean { unsafe { (storage::TestObjectAPPLE.f)(object, name) } }
#[fixed_stack_segment] #[inline] pub fn TexBuffer(target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::TexBuffer.f)(target, internalformat, buffer) } }
#[fixed_stack_segment] #[inline] pub fn TexBufferARB(target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::TexBufferARB.f)(target, internalformat, buffer) } }
#[fixed_stack_segment] #[inline] pub fn TexBufferEXT(target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::TexBufferEXT.f)(target, internalformat, buffer) } }
#[fixed_stack_segment] #[inline] pub fn TexBufferRange(target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::TexBufferRange.f)(target, internalformat, buffer, offset, size) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexBumpParameterfvATI(pname: GLenum, param: *GLfloat) -> c_void { (storage::TexBumpParameterfvATI.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexBumpParameterivATI(pname: GLenum, param: *GLint) -> c_void { (storage::TexBumpParameterivATI.f)(pname, param) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1bOES(s: GLbyte) -> c_void { unsafe { (storage::TexCoord1bOES.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1bvOES(coords: *GLbyte) -> c_void { (storage::TexCoord1bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1d(s: GLdouble) -> c_void { unsafe { (storage::TexCoord1d.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1dv(v: *GLdouble) -> c_void { (storage::TexCoord1dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1f(s: GLfloat) -> c_void { unsafe { (storage::TexCoord1f.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1fv(v: *GLfloat) -> c_void { (storage::TexCoord1fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1hNV(s: GLhalfNV) -> c_void { unsafe { (storage::TexCoord1hNV.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1hvNV(v: *GLhalfNV) -> c_void { (storage::TexCoord1hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1i(s: GLint) -> c_void { unsafe { (storage::TexCoord1i.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1iv(v: *GLint) -> c_void { (storage::TexCoord1iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1s(s: GLshort) -> c_void { unsafe { (storage::TexCoord1s.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1sv(v: *GLshort) -> c_void { (storage::TexCoord1sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord1xOES(s: GLfixed) -> c_void { unsafe { (storage::TexCoord1xOES.f)(s) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord1xvOES(coords: *GLfixed) -> c_void { (storage::TexCoord1xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2bOES(s: GLbyte, t: GLbyte) -> c_void { unsafe { (storage::TexCoord2bOES.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2bvOES(coords: *GLbyte) -> c_void { (storage::TexCoord2bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2d(s: GLdouble, t: GLdouble) -> c_void { unsafe { (storage::TexCoord2d.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2dv(v: *GLdouble) -> c_void { (storage::TexCoord2dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2f(s: GLfloat, t: GLfloat) -> c_void { unsafe { (storage::TexCoord2f.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub fn TexCoord2fColor3fVertex3fSUN(s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::TexCoord2fColor3fVertex3fSUN.f)(s, t, r, g, b, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2fColor3fVertex3fvSUN(tc: *GLfloat, c: *GLfloat, v: *GLfloat) -> c_void { (storage::TexCoord2fColor3fVertex3fvSUN.f)(tc, c, v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2fColor4fNormal3fVertex3fSUN(s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::TexCoord2fColor4fNormal3fVertex3fSUN.f)(s, t, r, g, b, a, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2fColor4fNormal3fVertex3fvSUN(tc: *GLfloat, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::TexCoord2fColor4fNormal3fVertex3fvSUN.f)(tc, c, n, v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2fColor4ubVertex3fSUN(s: GLfloat, t: GLfloat, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::TexCoord2fColor4ubVertex3fSUN.f)(s, t, r, g, b, a, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2fColor4ubVertex3fvSUN(tc: *GLfloat, c: *GLubyte, v: *GLfloat) -> c_void { (storage::TexCoord2fColor4ubVertex3fvSUN.f)(tc, c, v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2fNormal3fVertex3fSUN(s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::TexCoord2fNormal3fVertex3fSUN.f)(s, t, nx, ny, nz, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2fNormal3fVertex3fvSUN(tc: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::TexCoord2fNormal3fVertex3fvSUN.f)(tc, n, v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2fVertex3fSUN(s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::TexCoord2fVertex3fSUN.f)(s, t, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2fVertex3fvSUN(tc: *GLfloat, v: *GLfloat) -> c_void { (storage::TexCoord2fVertex3fvSUN.f)(tc, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2fv(v: *GLfloat) -> c_void { (storage::TexCoord2fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2hNV(s: GLhalfNV, t: GLhalfNV) -> c_void { unsafe { (storage::TexCoord2hNV.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2hvNV(v: *GLhalfNV) -> c_void { (storage::TexCoord2hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2i(s: GLint, t: GLint) -> c_void { unsafe { (storage::TexCoord2i.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2iv(v: *GLint) -> c_void { (storage::TexCoord2iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2s(s: GLshort, t: GLshort) -> c_void { unsafe { (storage::TexCoord2s.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2sv(v: *GLshort) -> c_void { (storage::TexCoord2sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord2xOES(s: GLfixed, t: GLfixed) -> c_void { unsafe { (storage::TexCoord2xOES.f)(s, t) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord2xvOES(coords: *GLfixed) -> c_void { (storage::TexCoord2xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3bOES(s: GLbyte, t: GLbyte, r: GLbyte) -> c_void { unsafe { (storage::TexCoord3bOES.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3bvOES(coords: *GLbyte) -> c_void { (storage::TexCoord3bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3d(s: GLdouble, t: GLdouble, r: GLdouble) -> c_void { unsafe { (storage::TexCoord3d.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3dv(v: *GLdouble) -> c_void { (storage::TexCoord3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3f(s: GLfloat, t: GLfloat, r: GLfloat) -> c_void { unsafe { (storage::TexCoord3f.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3fv(v: *GLfloat) -> c_void { (storage::TexCoord3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3hNV(s: GLhalfNV, t: GLhalfNV, r: GLhalfNV) -> c_void { unsafe { (storage::TexCoord3hNV.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3hvNV(v: *GLhalfNV) -> c_void { (storage::TexCoord3hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3i(s: GLint, t: GLint, r: GLint) -> c_void { unsafe { (storage::TexCoord3i.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3iv(v: *GLint) -> c_void { (storage::TexCoord3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3s(s: GLshort, t: GLshort, r: GLshort) -> c_void { unsafe { (storage::TexCoord3s.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3sv(v: *GLshort) -> c_void { (storage::TexCoord3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord3xOES(s: GLfixed, t: GLfixed, r: GLfixed) -> c_void { unsafe { (storage::TexCoord3xOES.f)(s, t, r) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord3xvOES(coords: *GLfixed) -> c_void { (storage::TexCoord3xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4bOES(s: GLbyte, t: GLbyte, r: GLbyte, q: GLbyte) -> c_void { unsafe { (storage::TexCoord4bOES.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4bvOES(coords: *GLbyte) -> c_void { (storage::TexCoord4bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4d(s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) -> c_void { unsafe { (storage::TexCoord4d.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4dv(v: *GLdouble) -> c_void { (storage::TexCoord4dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4f(s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) -> c_void { unsafe { (storage::TexCoord4f.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub fn TexCoord4fColor4fNormal3fVertex4fSUN(s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::TexCoord4fColor4fNormal3fVertex4fSUN.f)(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4fColor4fNormal3fVertex4fvSUN(tc: *GLfloat, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void { (storage::TexCoord4fColor4fNormal3fVertex4fvSUN.f)(tc, c, n, v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4fVertex4fSUN(s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::TexCoord4fVertex4fSUN.f)(s, t, p, q, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4fVertex4fvSUN(tc: *GLfloat, v: *GLfloat) -> c_void { (storage::TexCoord4fVertex4fvSUN.f)(tc, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4fv(v: *GLfloat) -> c_void { (storage::TexCoord4fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4hNV(s: GLhalfNV, t: GLhalfNV, r: GLhalfNV, q: GLhalfNV) -> c_void { unsafe { (storage::TexCoord4hNV.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4hvNV(v: *GLhalfNV) -> c_void { (storage::TexCoord4hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4i(s: GLint, t: GLint, r: GLint, q: GLint) -> c_void { unsafe { (storage::TexCoord4i.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4iv(v: *GLint) -> c_void { (storage::TexCoord4iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4s(s: GLshort, t: GLshort, r: GLshort, q: GLshort) -> c_void { unsafe { (storage::TexCoord4s.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4sv(v: *GLshort) -> c_void { (storage::TexCoord4sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn TexCoord4xOES(s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) -> c_void { unsafe { (storage::TexCoord4xOES.f)(s, t, r, q) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoord4xvOES(coords: *GLfixed) -> c_void { (storage::TexCoord4xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoordFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::TexCoordFormatNV.f)(size, type_, stride) } }
#[fixed_stack_segment] #[inline] pub fn TexCoordP1ui(type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::TexCoordP1ui.f)(type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordP1uiv(type_: GLenum, coords: *GLuint) -> c_void { (storage::TexCoordP1uiv.f)(type_, coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoordP2ui(type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::TexCoordP2ui.f)(type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordP2uiv(type_: GLenum, coords: *GLuint) -> c_void { (storage::TexCoordP2uiv.f)(type_, coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoordP3ui(type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::TexCoordP3ui.f)(type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordP3uiv(type_: GLenum, coords: *GLuint) -> c_void { (storage::TexCoordP3uiv.f)(type_, coords) }
#[fixed_stack_segment] #[inline] pub fn TexCoordP4ui(type_: GLenum, coords: GLuint) -> c_void { unsafe { (storage::TexCoordP4ui.f)(type_, coords) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordP4uiv(type_: GLenum, coords: *GLuint) -> c_void { (storage::TexCoordP4uiv.f)(type_, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::TexCoordPointer.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void { (storage::TexCoordPointerEXT.f)(size, type_, stride, count, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::TexCoordPointerListIBM.f)(size, type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexCoordPointervINTEL(size: GLint, type_: GLenum, pointer: **GLvoid) -> c_void { (storage::TexCoordPointervINTEL.f)(size, type_, pointer) }
#[fixed_stack_segment] #[inline] pub fn TexEnvf(target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::TexEnvf.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexEnvfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::TexEnvfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexEnvi(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::TexEnvi.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexEnviv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TexEnviv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexEnvx(target: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::TexEnvx.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn TexEnvxOES(target: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::TexEnvxOES.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexEnvxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::TexEnvxv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexEnvxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::TexEnvxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexFilterFuncSGIS(target: GLenum, filter: GLenum, n: GLsizei, weights: *GLfloat) -> c_void { (storage::TexFilterFuncSGIS.f)(target, filter, n, weights) }
#[fixed_stack_segment] #[inline] pub fn TexGend(coord: GLenum, pname: GLenum, param: GLdouble) -> c_void { unsafe { (storage::TexGend.f)(coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexGendv(coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void { (storage::TexGendv.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexGenf(coord: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::TexGenf.f)(coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn TexGenfOES(coord: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::TexGenfOES.f)(coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexGenfv(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::TexGenfv.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexGenfvOES(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::TexGenfvOES.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexGeni(coord: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::TexGeni.f)(coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn TexGeniOES(coord: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::TexGeniOES.f)(coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexGeniv(coord: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TexGeniv.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexGenivOES(coord: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TexGenivOES.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexGenxOES(coord: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::TexGenxOES.f)(coord, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexGenxvOES(coord: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::TexGenxvOES.f)(coord, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexImage1D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexImage1D.f)(target, level, internalformat, width, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexImage2D.f)(target, level, internalformat, width, height, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TexImage2DMultisample(target: GLenum, samples: GLsizei, internalformat: GLint, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) -> c_void { unsafe { (storage::TexImage2DMultisample.f)(target, samples, internalformat, width, height, fixedsamplelocations) } }
#[fixed_stack_segment] #[inline] pub fn TexImage2DMultisampleCoverageNV(target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) -> c_void { unsafe { (storage::TexImage2DMultisampleCoverageNV.f)(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexImage3D.f)(target, level, internalformat, width, height, depth, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexImage3DEXT(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexImage3DEXT.f)(target, level, internalformat, width, height, depth, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TexImage3DMultisample(target: GLenum, samples: GLsizei, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) -> c_void { unsafe { (storage::TexImage3DMultisample.f)(target, samples, internalformat, width, height, depth, fixedsamplelocations) } }
#[fixed_stack_segment] #[inline] pub fn TexImage3DMultisampleCoverageNV(target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) -> c_void { unsafe { (storage::TexImage3DMultisampleCoverageNV.f)(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexImage3DOES(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexImage3DOES.f)(target, level, internalformat, width, height, depth, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexImage4DSGIS(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, size4d: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexImage4DSGIS.f)(target, level, internalformat, width, height, depth, size4d, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TexPageCommitmentARB(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, resident: GLboolean) -> c_void { unsafe { (storage::TexPageCommitmentARB.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, resident) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterIiv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TexParameterIiv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterIivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TexParameterIivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterIuiv(target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::TexParameterIuiv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterIuivEXT(target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::TexParameterIuivEXT.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexParameterf(target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::TexParameterf.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::TexParameterfv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexParameteri(target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::TexParameteri.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TexParameteriv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexParameterx(target: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::TexParameterx.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub fn TexParameterxOES(target: GLenum, pname: GLenum, param: GLfixed) -> c_void { unsafe { (storage::TexParameterxOES.f)(target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::TexParameterxv.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void { (storage::TexParameterxvOES.f)(target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TexRenderbufferNV(target: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::TexRenderbufferNV.f)(target, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage1D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) -> c_void { unsafe { (storage::TexStorage1D.f)(target, levels, internalformat, width) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage1DEXT(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) -> c_void { unsafe { (storage::TexStorage1DEXT.f)(target, levels, internalformat, width) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::TexStorage2D.f)(target, levels, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage2DEXT(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::TexStorage2DEXT.f)(target, levels, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage2DMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) -> c_void { unsafe { (storage::TexStorage2DMultisample.f)(target, samples, internalformat, width, height, fixedsamplelocations) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void { unsafe { (storage::TexStorage3D.f)(target, levels, internalformat, width, height, depth) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage3DEXT(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void { unsafe { (storage::TexStorage3DEXT.f)(target, levels, internalformat, width, height, depth) } }
#[fixed_stack_segment] #[inline] pub fn TexStorage3DMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) -> c_void { unsafe { (storage::TexStorage3DMultisample.f)(target, samples, internalformat, width, height, depth, fixedsamplelocations) } }
#[fixed_stack_segment] #[inline] pub fn TexStorageSparseAMD(target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield) -> c_void { unsafe { (storage::TexStorageSparseAMD.f)(target, internalFormat, width, height, depth, layers, flags) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage1D.f)(target, level, xoffset, width, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage1DEXT(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage1DEXT.f)(target, level, xoffset, width, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage2D.f)(target, level, xoffset, yoffset, width, height, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage2DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage2DEXT.f)(target, level, xoffset, yoffset, width, height, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage3D.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage3DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage3DEXT.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage3DOES(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage3DOES.f)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TexSubImage4DSGIS(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, woffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, size4d: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TexSubImage4DSGIS.f)(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TextureBarrierNV() -> c_void { unsafe { (storage::TextureBarrierNV.f)() } }
#[fixed_stack_segment] #[inline] pub fn TextureBufferEXT(texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void { unsafe { (storage::TextureBufferEXT.f)(texture, target, internalformat, buffer) } }
#[fixed_stack_segment] #[inline] pub fn TextureBufferRangeEXT(texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void { unsafe { (storage::TextureBufferRangeEXT.f)(texture, target, internalformat, buffer, offset, size) } }
#[fixed_stack_segment] #[inline] pub fn TextureColorMaskSGIS(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) -> c_void { unsafe { (storage::TextureColorMaskSGIS.f)(red, green, blue, alpha) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureImage1DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TextureImage1DEXT.f)(texture, target, level, internalformat, width, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureImage2DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TextureImage2DEXT.f)(texture, target, level, internalformat, width, height, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TextureImage2DMultisampleCoverageNV(texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) -> c_void { unsafe { (storage::TextureImage2DMultisampleCoverageNV.f)(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations) } }
#[fixed_stack_segment] #[inline] pub fn TextureImage2DMultisampleNV(texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) -> c_void { unsafe { (storage::TextureImage2DMultisampleNV.f)(texture, target, samples, internalFormat, width, height, fixedSampleLocations) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureImage3DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TextureImage3DEXT.f)(texture, target, level, internalformat, width, height, depth, border, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TextureImage3DMultisampleCoverageNV(texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) -> c_void { unsafe { (storage::TextureImage3DMultisampleCoverageNV.f)(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations) } }
#[fixed_stack_segment] #[inline] pub fn TextureImage3DMultisampleNV(texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) -> c_void { unsafe { (storage::TextureImage3DMultisampleNV.f)(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations) } }
#[fixed_stack_segment] #[inline] pub fn TextureLightEXT(pname: GLenum) -> c_void { unsafe { (storage::TextureLightEXT.f)(pname) } }
#[fixed_stack_segment] #[inline] pub fn TextureMaterialEXT(face: GLenum, mode: GLenum) -> c_void { unsafe { (storage::TextureMaterialEXT.f)(face, mode) } }
#[fixed_stack_segment] #[inline] pub fn TextureNormalEXT(mode: GLenum) -> c_void { unsafe { (storage::TextureNormalEXT.f)(mode) } }
#[fixed_stack_segment] #[inline] pub fn TexturePageCommitmentEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, resident: GLboolean) -> c_void { unsafe { (storage::TexturePageCommitmentEXT.f)(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, resident) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureParameterIivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TextureParameterIivEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureParameterIuivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLuint) -> c_void { (storage::TextureParameterIuivEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TextureParameterfEXT(texture: GLuint, target: GLenum, pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::TextureParameterfEXT.f)(texture, target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureParameterfvEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void { (storage::TextureParameterfvEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub fn TextureParameteriEXT(texture: GLuint, target: GLenum, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::TextureParameteriEXT.f)(texture, target, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureParameterivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void { (storage::TextureParameterivEXT.f)(texture, target, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureRangeAPPLE(target: GLenum, length: GLsizei, pointer: *GLvoid) -> c_void { (storage::TextureRangeAPPLE.f)(target, length, pointer) }
#[fixed_stack_segment] #[inline] pub fn TextureRenderbufferEXT(texture: GLuint, target: GLenum, renderbuffer: GLuint) -> c_void { unsafe { (storage::TextureRenderbufferEXT.f)(texture, target, renderbuffer) } }
#[fixed_stack_segment] #[inline] pub fn TextureStorage1DEXT(texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) -> c_void { unsafe { (storage::TextureStorage1DEXT.f)(texture, target, levels, internalformat, width) } }
#[fixed_stack_segment] #[inline] pub fn TextureStorage2DEXT(texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::TextureStorage2DEXT.f)(texture, target, levels, internalformat, width, height) } }
#[fixed_stack_segment] #[inline] pub fn TextureStorage2DMultisampleEXT(texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) -> c_void { unsafe { (storage::TextureStorage2DMultisampleEXT.f)(texture, target, samples, internalformat, width, height, fixedsamplelocations) } }
#[fixed_stack_segment] #[inline] pub fn TextureStorage3DEXT(texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void { unsafe { (storage::TextureStorage3DEXT.f)(texture, target, levels, internalformat, width, height, depth) } }
#[fixed_stack_segment] #[inline] pub fn TextureStorage3DMultisampleEXT(texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) -> c_void { unsafe { (storage::TextureStorage3DMultisampleEXT.f)(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations) } }
#[fixed_stack_segment] #[inline] pub fn TextureStorageSparseAMD(texture: GLuint, target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield) -> c_void { unsafe { (storage::TextureStorageSparseAMD.f)(texture, target, internalFormat, width, height, depth, layers, flags) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureSubImage1DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TextureSubImage1DEXT.f)(texture, target, level, xoffset, width, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureSubImage2DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TextureSubImage2DEXT.f)(texture, target, level, xoffset, yoffset, width, height, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub unsafe fn TextureSubImage3DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void { (storage::TextureSubImage3DEXT.f)(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type_, pixels) }
#[fixed_stack_segment] #[inline] pub fn TextureView(texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint) -> c_void { unsafe { (storage::TextureView.f)(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers) } }
#[fixed_stack_segment] #[inline] pub fn TrackMatrixNV(target: GLenum, address: GLuint, matrix: GLenum, transform: GLenum) -> c_void { unsafe { (storage::TrackMatrixNV.f)(target, address, matrix, transform) } }
#[fixed_stack_segment] #[inline] pub unsafe fn TransformFeedbackAttribsNV(count: GLuint, attribs: *GLint, bufferMode: GLenum) -> c_void { (storage::TransformFeedbackAttribsNV.f)(count, attribs, bufferMode) }
#[fixed_stack_segment] #[inline] pub unsafe fn TransformFeedbackStreamAttribsNV(count: GLsizei, attribs: *GLint, nbuffers: GLsizei, bufstreams: *GLint, bufferMode: GLenum) -> c_void { (storage::TransformFeedbackStreamAttribsNV.f)(count, attribs, nbuffers, bufstreams, bufferMode) }
#[fixed_stack_segment] #[inline] pub unsafe fn TransformFeedbackVaryings(program: GLuint, count: GLsizei, varyings: **GLchar, bufferMode: GLenum) -> c_void { (storage::TransformFeedbackVaryings.f)(program, count, varyings, bufferMode) }
#[fixed_stack_segment] #[inline] pub unsafe fn TransformFeedbackVaryingsEXT(program: GLuint, count: GLsizei, varyings: **GLchar, bufferMode: GLenum) -> c_void { (storage::TransformFeedbackVaryingsEXT.f)(program, count, varyings, bufferMode) }
#[fixed_stack_segment] #[inline] pub unsafe fn TransformFeedbackVaryingsNV(program: GLuint, count: GLsizei, locations: *GLint, bufferMode: GLenum) -> c_void { (storage::TransformFeedbackVaryingsNV.f)(program, count, locations, bufferMode) }
#[fixed_stack_segment] #[inline] pub unsafe fn TransformPathNV(resultPath: GLuint, srcPath: GLuint, transformType: GLenum, transformValues: *GLfloat) -> c_void { (storage::TransformPathNV.f)(resultPath, srcPath, transformType, transformValues) }
#[fixed_stack_segment] #[inline] pub fn Translated(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::Translated.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Translatef(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Translatef.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Translatex(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::Translatex.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn TranslatexOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::TranslatexOES.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn Uniform1d(location: GLint, x: GLdouble) -> c_void { unsafe { (storage::Uniform1d.f)(location, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::Uniform1dv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform1f(location: GLint, v0: GLfloat) -> c_void { unsafe { (storage::Uniform1f.f)(location, v0) } }
#[fixed_stack_segment] #[inline] pub fn Uniform1fARB(location: GLint, v0: GLfloat) -> c_void { unsafe { (storage::Uniform1fARB.f)(location, v0) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform1fv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform1fvARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform1i(location: GLint, v0: GLint) -> c_void { unsafe { (storage::Uniform1i.f)(location, v0) } }
#[fixed_stack_segment] #[inline] pub fn Uniform1i64NV(location: GLint, x: GLint64EXT) -> c_void { unsafe { (storage::Uniform1i64NV.f)(location, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::Uniform1i64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform1iARB(location: GLint, v0: GLint) -> c_void { unsafe { (storage::Uniform1iARB.f)(location, v0) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1iv(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform1iv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform1ivARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform1ui(location: GLint, v0: GLuint) -> c_void { unsafe { (storage::Uniform1ui.f)(location, v0) } }
#[fixed_stack_segment] #[inline] pub fn Uniform1ui64NV(location: GLint, x: GLuint64EXT) -> c_void { unsafe { (storage::Uniform1ui64NV.f)(location, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::Uniform1ui64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform1uiEXT(location: GLint, v0: GLuint) -> c_void { unsafe { (storage::Uniform1uiEXT.f)(location, v0) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform1uiv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform1uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform1uivEXT.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform2d(location: GLint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::Uniform2d.f)(location, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::Uniform2dv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform2f(location: GLint, v0: GLfloat, v1: GLfloat) -> c_void { unsafe { (storage::Uniform2f.f)(location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn Uniform2fARB(location: GLint, v0: GLfloat, v1: GLfloat) -> c_void { unsafe { (storage::Uniform2fARB.f)(location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform2fv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform2fvARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform2i(location: GLint, v0: GLint, v1: GLint) -> c_void { unsafe { (storage::Uniform2i.f)(location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn Uniform2i64NV(location: GLint, x: GLint64EXT, y: GLint64EXT) -> c_void { unsafe { (storage::Uniform2i64NV.f)(location, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::Uniform2i64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform2iARB(location: GLint, v0: GLint, v1: GLint) -> c_void { unsafe { (storage::Uniform2iARB.f)(location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2iv(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform2iv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform2ivARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform2ui(location: GLint, v0: GLuint, v1: GLuint) -> c_void { unsafe { (storage::Uniform2ui.f)(location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub fn Uniform2ui64NV(location: GLint, x: GLuint64EXT, y: GLuint64EXT) -> c_void { unsafe { (storage::Uniform2ui64NV.f)(location, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::Uniform2ui64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform2uiEXT(location: GLint, v0: GLuint, v1: GLuint) -> c_void { unsafe { (storage::Uniform2uiEXT.f)(location, v0, v1) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform2uiv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform2uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform2uivEXT.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform3d(location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::Uniform3d.f)(location, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::Uniform3dv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform3f(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void { unsafe { (storage::Uniform3f.f)(location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn Uniform3fARB(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void { unsafe { (storage::Uniform3fARB.f)(location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform3fv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform3fvARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform3i(location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void { unsafe { (storage::Uniform3i.f)(location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn Uniform3i64NV(location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) -> c_void { unsafe { (storage::Uniform3i64NV.f)(location, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::Uniform3i64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform3iARB(location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void { unsafe { (storage::Uniform3iARB.f)(location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3iv(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform3iv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform3ivARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform3ui(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void { unsafe { (storage::Uniform3ui.f)(location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub fn Uniform3ui64NV(location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) -> c_void { unsafe { (storage::Uniform3ui64NV.f)(location, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::Uniform3ui64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform3uiEXT(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void { unsafe { (storage::Uniform3uiEXT.f)(location, v0, v1, v2) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform3uiv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform3uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform3uivEXT.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform4d(location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::Uniform4d.f)(location, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void { (storage::Uniform4dv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform4f(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void { unsafe { (storage::Uniform4f.f)(location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn Uniform4fARB(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void { unsafe { (storage::Uniform4fARB.f)(location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform4fv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void { (storage::Uniform4fvARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform4i(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void { unsafe { (storage::Uniform4i.f)(location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn Uniform4i64NV(location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) -> c_void { unsafe { (storage::Uniform4i64NV.f)(location, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void { (storage::Uniform4i64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform4iARB(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void { unsafe { (storage::Uniform4iARB.f)(location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4iv(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform4iv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void { (storage::Uniform4ivARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform4ui(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void { unsafe { (storage::Uniform4ui.f)(location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub fn Uniform4ui64NV(location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) -> c_void { unsafe { (storage::Uniform4ui64NV.f)(location, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::Uniform4ui64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn Uniform4uiEXT(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void { unsafe { (storage::Uniform4uiEXT.f)(location, v0, v1, v2, v3) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform4uiv.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniform4uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void { (storage::Uniform4uivEXT.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn UniformBlockBinding(program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint) -> c_void { unsafe { (storage::UniformBlockBinding.f)(program, uniformBlockIndex, uniformBlockBinding) } }
#[fixed_stack_segment] #[inline] pub fn UniformBufferEXT(program: GLuint, location: GLint, buffer: GLuint) -> c_void { unsafe { (storage::UniformBufferEXT.f)(program, location, buffer) } }
#[fixed_stack_segment] #[inline] pub fn UniformHandleui64ARB(location: GLint, value: GLuint64) -> c_void { unsafe { (storage::UniformHandleui64ARB.f)(location, value) } }
#[fixed_stack_segment] #[inline] pub fn UniformHandleui64NV(location: GLint, value: GLuint64) -> c_void { unsafe { (storage::UniformHandleui64NV.f)(location, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformHandleui64vARB(location: GLint, count: GLsizei, value: *GLuint64) -> c_void { (storage::UniformHandleui64vARB.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformHandleui64vNV(location: GLint, count: GLsizei, value: *GLuint64) -> c_void { (storage::UniformHandleui64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix2dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix2fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2fvARB(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix2fvARB.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2x3dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix2x3dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2x3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix2x3fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2x4dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix2x4dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix2x4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix2x4fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix3dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix3fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3fvARB(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix3fvARB.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3x2dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix3x2dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3x2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix3x2fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3x4dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix3x4dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix3x4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix3x4fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix4dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix4fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4fvARB(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix4fvARB.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4x2dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix4x2dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4x2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix4x2fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4x3dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void { (storage::UniformMatrix4x3dv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformMatrix4x3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void { (storage::UniformMatrix4x3fv.f)(location, count, transpose, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn UniformSubroutinesuiv(shadertype: GLenum, count: GLsizei, indices: *GLuint) -> c_void { (storage::UniformSubroutinesuiv.f)(shadertype, count, indices) }
#[fixed_stack_segment] #[inline] pub fn Uniformui64NV(location: GLint, value: GLuint64EXT) -> c_void { unsafe { (storage::Uniformui64NV.f)(location, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Uniformui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void { (storage::Uniformui64vNV.f)(location, count, value) }
#[fixed_stack_segment] #[inline] pub fn UnlockArraysEXT() -> c_void { unsafe { (storage::UnlockArraysEXT.f)() } }
#[fixed_stack_segment] #[inline] pub fn UnmapBuffer(target: GLenum) -> GLboolean { unsafe { (storage::UnmapBuffer.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn UnmapBufferARB(target: GLenum) -> GLboolean { unsafe { (storage::UnmapBufferARB.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn UnmapBufferOES(target: GLenum) -> GLboolean { unsafe { (storage::UnmapBufferOES.f)(target) } }
#[fixed_stack_segment] #[inline] pub fn UnmapNamedBufferEXT(buffer: GLuint) -> GLboolean { unsafe { (storage::UnmapNamedBufferEXT.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn UnmapObjectBufferATI(buffer: GLuint) -> c_void { unsafe { (storage::UnmapObjectBufferATI.f)(buffer) } }
#[fixed_stack_segment] #[inline] pub fn UnmapTexture2DINTEL(texture: GLuint, level: GLint) -> c_void { unsafe { (storage::UnmapTexture2DINTEL.f)(texture, level) } }
#[fixed_stack_segment] #[inline] pub unsafe fn UpdateObjectBufferATI(buffer: GLuint, offset: GLuint, size: GLsizei, pointer: *GLvoid, preserve: GLenum) -> c_void { (storage::UpdateObjectBufferATI.f)(buffer, offset, size, pointer, preserve) }
#[fixed_stack_segment] #[inline] pub fn UseProgram(program: GLuint) -> c_void { unsafe { (storage::UseProgram.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn UseProgramObjectARB(programObj: GLhandleARB) -> c_void { unsafe { (storage::UseProgramObjectARB.f)(programObj) } }
#[fixed_stack_segment] #[inline] pub fn UseProgramStages(pipeline: GLuint, stages: GLbitfield, program: GLuint) -> c_void { unsafe { (storage::UseProgramStages.f)(pipeline, stages, program) } }
#[fixed_stack_segment] #[inline] pub fn UseProgramStagesEXT(pipeline: GLuint, stages: GLbitfield, program: GLuint) -> c_void { unsafe { (storage::UseProgramStagesEXT.f)(pipeline, stages, program) } }
#[fixed_stack_segment] #[inline] pub fn UseShaderProgramEXT(type_: GLenum, program: GLuint) -> c_void { unsafe { (storage::UseShaderProgramEXT.f)(type_, program) } }
#[fixed_stack_segment] #[inline] pub fn VDPAUFiniNV() -> c_void { unsafe { (storage::VDPAUFiniNV.f)() } }
#[fixed_stack_segment] #[inline] pub unsafe fn VDPAUGetSurfaceivNV(surface: GLvdpauSurfaceNV, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) -> c_void { (storage::VDPAUGetSurfaceivNV.f)(surface, pname, bufSize, length, values) }
#[fixed_stack_segment] #[inline] pub unsafe fn VDPAUInitNV(vdpDevice: *GLvoid, getProcAddress: *GLvoid) -> c_void { (storage::VDPAUInitNV.f)(vdpDevice, getProcAddress) }
#[fixed_stack_segment] #[inline] pub fn VDPAUIsSurfaceNV(surface: GLvdpauSurfaceNV) -> c_void { unsafe { (storage::VDPAUIsSurfaceNV.f)(surface) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VDPAUMapSurfacesNV(numSurfaces: GLsizei, surfaces: *GLvdpauSurfaceNV) -> c_void { (storage::VDPAUMapSurfacesNV.f)(numSurfaces, surfaces) }
#[fixed_stack_segment] #[inline] pub unsafe fn VDPAURegisterOutputSurfaceNV(vdpSurface: *GLvoid, target: GLenum, numTextureNames: GLsizei, textureNames: *GLuint) -> GLvdpauSurfaceNV { (storage::VDPAURegisterOutputSurfaceNV.f)(vdpSurface, target, numTextureNames, textureNames) }
#[fixed_stack_segment] #[inline] pub unsafe fn VDPAURegisterVideoSurfaceNV(vdpSurface: *GLvoid, target: GLenum, numTextureNames: GLsizei, textureNames: *GLuint) -> GLvdpauSurfaceNV { (storage::VDPAURegisterVideoSurfaceNV.f)(vdpSurface, target, numTextureNames, textureNames) }
#[fixed_stack_segment] #[inline] pub fn VDPAUSurfaceAccessNV(surface: GLvdpauSurfaceNV, access: GLenum) -> c_void { unsafe { (storage::VDPAUSurfaceAccessNV.f)(surface, access) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VDPAUUnmapSurfacesNV(numSurface: GLsizei, surfaces: *GLvdpauSurfaceNV) -> c_void { (storage::VDPAUUnmapSurfacesNV.f)(numSurface, surfaces) }
#[fixed_stack_segment] #[inline] pub fn VDPAUUnregisterSurfaceNV(surface: GLvdpauSurfaceNV) -> c_void { unsafe { (storage::VDPAUUnregisterSurfaceNV.f)(surface) } }
#[fixed_stack_segment] #[inline] pub fn ValidateProgram(program: GLuint) -> c_void { unsafe { (storage::ValidateProgram.f)(program) } }
#[fixed_stack_segment] #[inline] pub fn ValidateProgramARB(programObj: GLhandleARB) -> c_void { unsafe { (storage::ValidateProgramARB.f)(programObj) } }
#[fixed_stack_segment] #[inline] pub fn ValidateProgramPipeline(pipeline: GLuint) -> c_void { unsafe { (storage::ValidateProgramPipeline.f)(pipeline) } }
#[fixed_stack_segment] #[inline] pub fn ValidateProgramPipelineEXT(pipeline: GLuint) -> c_void { unsafe { (storage::ValidateProgramPipelineEXT.f)(pipeline) } }
#[fixed_stack_segment] #[inline] pub fn VariantArrayObjectATI(id: GLuint, type_: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint) -> c_void { unsafe { (storage::VariantArrayObjectATI.f)(id, type_, stride, buffer, offset) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantPointerEXT(id: GLuint, type_: GLenum, stride: GLuint, addr: *GLvoid) -> c_void { (storage::VariantPointerEXT.f)(id, type_, stride, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantbvEXT(id: GLuint, addr: *GLbyte) -> c_void { (storage::VariantbvEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantdvEXT(id: GLuint, addr: *GLdouble) -> c_void { (storage::VariantdvEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantfvEXT(id: GLuint, addr: *GLfloat) -> c_void { (storage::VariantfvEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantivEXT(id: GLuint, addr: *GLint) -> c_void { (storage::VariantivEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantsvEXT(id: GLuint, addr: *GLshort) -> c_void { (storage::VariantsvEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantubvEXT(id: GLuint, addr: *GLubyte) -> c_void { (storage::VariantubvEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantuivEXT(id: GLuint, addr: *GLuint) -> c_void { (storage::VariantuivEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub unsafe fn VariantusvEXT(id: GLuint, addr: *GLushort) -> c_void { (storage::VariantusvEXT.f)(id, addr) }
#[fixed_stack_segment] #[inline] pub fn Vertex2bOES(x: GLbyte) -> c_void { unsafe { (storage::Vertex2bOES.f)(x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2bvOES(coords: *GLbyte) -> c_void { (storage::Vertex2bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn Vertex2d(x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::Vertex2d.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2dv(v: *GLdouble) -> c_void { (storage::Vertex2dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex2f(x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::Vertex2f.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2fv(v: *GLfloat) -> c_void { (storage::Vertex2fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex2hNV(x: GLhalfNV, y: GLhalfNV) -> c_void { unsafe { (storage::Vertex2hNV.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2hvNV(v: *GLhalfNV) -> c_void { (storage::Vertex2hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex2i(x: GLint, y: GLint) -> c_void { unsafe { (storage::Vertex2i.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2iv(v: *GLint) -> c_void { (storage::Vertex2iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex2s(x: GLshort, y: GLshort) -> c_void { unsafe { (storage::Vertex2s.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2sv(v: *GLshort) -> c_void { (storage::Vertex2sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex2xOES(x: GLfixed) -> c_void { unsafe { (storage::Vertex2xOES.f)(x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex2xvOES(coords: *GLfixed) -> c_void { (storage::Vertex2xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn Vertex3bOES(x: GLbyte, y: GLbyte) -> c_void { unsafe { (storage::Vertex3bOES.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3bvOES(coords: *GLbyte) -> c_void { (storage::Vertex3bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn Vertex3d(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::Vertex3d.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3dv(v: *GLdouble) -> c_void { (storage::Vertex3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex3f(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::Vertex3f.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3fv(v: *GLfloat) -> c_void { (storage::Vertex3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex3hNV(x: GLhalfNV, y: GLhalfNV, z: GLhalfNV) -> c_void { unsafe { (storage::Vertex3hNV.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3hvNV(v: *GLhalfNV) -> c_void { (storage::Vertex3hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex3i(x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::Vertex3i.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3iv(v: *GLint) -> c_void { (storage::Vertex3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex3s(x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::Vertex3s.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3sv(v: *GLshort) -> c_void { (storage::Vertex3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex3xOES(x: GLfixed, y: GLfixed) -> c_void { unsafe { (storage::Vertex3xOES.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex3xvOES(coords: *GLfixed) -> c_void { (storage::Vertex3xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn Vertex4bOES(x: GLbyte, y: GLbyte, z: GLbyte) -> c_void { unsafe { (storage::Vertex4bOES.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4bvOES(coords: *GLbyte) -> c_void { (storage::Vertex4bvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn Vertex4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::Vertex4d.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4dv(v: *GLdouble) -> c_void { (storage::Vertex4dv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::Vertex4f.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4fv(v: *GLfloat) -> c_void { (storage::Vertex4fv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex4hNV(x: GLhalfNV, y: GLhalfNV, z: GLhalfNV, w: GLhalfNV) -> c_void { unsafe { (storage::Vertex4hNV.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4hvNV(v: *GLhalfNV) -> c_void { (storage::Vertex4hvNV.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex4i(x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::Vertex4i.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4iv(v: *GLint) -> c_void { (storage::Vertex4iv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::Vertex4s.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4sv(v: *GLshort) -> c_void { (storage::Vertex4sv.f)(v) }
#[fixed_stack_segment] #[inline] pub fn Vertex4xOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void { unsafe { (storage::Vertex4xOES.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn Vertex4xvOES(coords: *GLfixed) -> c_void { (storage::Vertex4xvOES.f)(coords) }
#[fixed_stack_segment] #[inline] pub fn VertexArrayBindVertexBufferEXT(vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) -> c_void { unsafe { (storage::VertexArrayBindVertexBufferEXT.f)(vaobj, bindingindex, buffer, offset, stride) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayColorOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayColorOffsetEXT.f)(vaobj, buffer, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayEdgeFlagOffsetEXT(vaobj: GLuint, buffer: GLuint, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayEdgeFlagOffsetEXT.f)(vaobj, buffer, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayFogCoordOffsetEXT(vaobj: GLuint, buffer: GLuint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayFogCoordOffsetEXT.f)(vaobj, buffer, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayIndexOffsetEXT(vaobj: GLuint, buffer: GLuint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayIndexOffsetEXT.f)(vaobj, buffer, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayMultiTexCoordOffsetEXT(vaobj: GLuint, buffer: GLuint, texunit: GLenum, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayMultiTexCoordOffsetEXT.f)(vaobj, buffer, texunit, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayNormalOffsetEXT(vaobj: GLuint, buffer: GLuint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayNormalOffsetEXT.f)(vaobj, buffer, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayParameteriAPPLE(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::VertexArrayParameteriAPPLE.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexArrayRangeAPPLE(length: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexArrayRangeAPPLE.f)(length, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexArrayRangeNV(length: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexArrayRangeNV.f)(length, pointer) }
#[fixed_stack_segment] #[inline] pub fn VertexArraySecondaryColorOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArraySecondaryColorOffsetEXT.f)(vaobj, buffer, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayTexCoordOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayTexCoordOffsetEXT.f)(vaobj, buffer, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribBindingEXT(vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) -> c_void { unsafe { (storage::VertexArrayVertexAttribBindingEXT.f)(vaobj, attribindex, bindingindex) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribFormatEXT(vaobj: GLuint, attribindex: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, relativeoffset: GLuint) -> c_void { unsafe { (storage::VertexArrayVertexAttribFormatEXT.f)(vaobj, attribindex, size, type_, normalized, relativeoffset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribIFormatEXT(vaobj: GLuint, attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void { unsafe { (storage::VertexArrayVertexAttribIFormatEXT.f)(vaobj, attribindex, size, type_, relativeoffset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribIOffsetEXT(vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayVertexAttribIOffsetEXT.f)(vaobj, buffer, index, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribLFormatEXT(vaobj: GLuint, attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void { unsafe { (storage::VertexArrayVertexAttribLFormatEXT.f)(vaobj, attribindex, size, type_, relativeoffset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribLOffsetEXT(vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayVertexAttribLOffsetEXT.f)(vaobj, buffer, index, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexAttribOffsetEXT(vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayVertexAttribOffsetEXT.f)(vaobj, buffer, index, size, type_, normalized, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexBindingDivisorEXT(vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) -> c_void { unsafe { (storage::VertexArrayVertexBindingDivisorEXT.f)(vaobj, bindingindex, divisor) } }
#[fixed_stack_segment] #[inline] pub fn VertexArrayVertexOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void { unsafe { (storage::VertexArrayVertexOffsetEXT.f)(vaobj, buffer, size, type_, stride, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1d(index: GLuint, x: GLdouble) -> c_void { unsafe { (storage::VertexAttrib1d.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1dARB(index: GLuint, x: GLdouble) -> c_void { unsafe { (storage::VertexAttrib1dARB.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1dNV(index: GLuint, x: GLdouble) -> c_void { unsafe { (storage::VertexAttrib1dNV.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib1dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1dvARB(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib1dvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1dvNV(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib1dvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1f(index: GLuint, x: GLfloat) -> c_void { unsafe { (storage::VertexAttrib1f.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1fARB(index: GLuint, x: GLfloat) -> c_void { unsafe { (storage::VertexAttrib1fARB.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1fNV(index: GLuint, x: GLfloat) -> c_void { unsafe { (storage::VertexAttrib1fNV.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1fv(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib1fv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1fvARB(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib1fvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1fvNV(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib1fvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1hNV(index: GLuint, x: GLhalfNV) -> c_void { unsafe { (storage::VertexAttrib1hNV.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1hvNV(index: GLuint, v: *GLhalfNV) -> c_void { (storage::VertexAttrib1hvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1s(index: GLuint, x: GLshort) -> c_void { unsafe { (storage::VertexAttrib1s.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1sARB(index: GLuint, x: GLshort) -> c_void { unsafe { (storage::VertexAttrib1sARB.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib1sNV(index: GLuint, x: GLshort) -> c_void { unsafe { (storage::VertexAttrib1sNV.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1sv(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib1sv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1svARB(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib1svARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib1svNV(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib1svNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2d(index: GLuint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::VertexAttrib2d.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2dARB(index: GLuint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::VertexAttrib2dARB.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2dNV(index: GLuint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::VertexAttrib2dNV.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib2dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2dvARB(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib2dvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2dvNV(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib2dvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::VertexAttrib2f.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2fARB(index: GLuint, x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::VertexAttrib2fARB.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2fNV(index: GLuint, x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::VertexAttrib2fNV.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2fv(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib2fv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2fvARB(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib2fvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2fvNV(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib2fvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2hNV(index: GLuint, x: GLhalfNV, y: GLhalfNV) -> c_void { unsafe { (storage::VertexAttrib2hNV.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2hvNV(index: GLuint, v: *GLhalfNV) -> c_void { (storage::VertexAttrib2hvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2s(index: GLuint, x: GLshort, y: GLshort) -> c_void { unsafe { (storage::VertexAttrib2s.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2sARB(index: GLuint, x: GLshort, y: GLshort) -> c_void { unsafe { (storage::VertexAttrib2sARB.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib2sNV(index: GLuint, x: GLshort, y: GLshort) -> c_void { unsafe { (storage::VertexAttrib2sNV.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2sv(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib2sv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2svARB(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib2svARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib2svNV(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib2svNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::VertexAttrib3d.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3dARB(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::VertexAttrib3dARB.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3dNV(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::VertexAttrib3dNV.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib3dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3dvARB(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib3dvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3dvNV(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib3dvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::VertexAttrib3f.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3fARB(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::VertexAttrib3fARB.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3fNV(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::VertexAttrib3fNV.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3fv(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib3fv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3fvARB(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib3fvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3fvNV(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib3fvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3hNV(index: GLuint, x: GLhalfNV, y: GLhalfNV, z: GLhalfNV) -> c_void { unsafe { (storage::VertexAttrib3hNV.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3hvNV(index: GLuint, v: *GLhalfNV) -> c_void { (storage::VertexAttrib3hvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3s(index: GLuint, x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::VertexAttrib3s.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3sARB(index: GLuint, x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::VertexAttrib3sARB.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib3sNV(index: GLuint, x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::VertexAttrib3sNV.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3sv(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib3sv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3svARB(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib3svARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib3svNV(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib3svNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4Nbv(index: GLuint, v: *GLbyte) -> c_void { (storage::VertexAttrib4Nbv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4NbvARB(index: GLuint, v: *GLbyte) -> c_void { (storage::VertexAttrib4NbvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4Niv(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttrib4Niv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4NivARB(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttrib4NivARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4Nsv(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib4Nsv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4NsvARB(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib4NsvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4Nub(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) -> c_void { unsafe { (storage::VertexAttrib4Nub.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4NubARB(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) -> c_void { unsafe { (storage::VertexAttrib4NubARB.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4Nubv(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttrib4Nubv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4NubvARB(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttrib4NubvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4Nuiv(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttrib4Nuiv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4NuivARB(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttrib4NuivARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4Nusv(index: GLuint, v: *GLushort) -> c_void { (storage::VertexAttrib4Nusv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4NusvARB(index: GLuint, v: *GLushort) -> c_void { (storage::VertexAttrib4NusvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4bv(index: GLuint, v: *GLbyte) -> c_void { (storage::VertexAttrib4bv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4bvARB(index: GLuint, v: *GLbyte) -> c_void { (storage::VertexAttrib4bvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::VertexAttrib4d.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4dARB(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::VertexAttrib4dARB.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4dNV(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::VertexAttrib4dNV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib4dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4dvARB(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib4dvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4dvNV(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttrib4dvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::VertexAttrib4f.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4fARB(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::VertexAttrib4fARB.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4fNV(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::VertexAttrib4fNV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4fv(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib4fv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4fvARB(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib4fvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4fvNV(index: GLuint, v: *GLfloat) -> c_void { (storage::VertexAttrib4fvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4hNV(index: GLuint, x: GLhalfNV, y: GLhalfNV, z: GLhalfNV, w: GLhalfNV) -> c_void { unsafe { (storage::VertexAttrib4hNV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4hvNV(index: GLuint, v: *GLhalfNV) -> c_void { (storage::VertexAttrib4hvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4iv(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttrib4iv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4ivARB(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttrib4ivARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4s(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::VertexAttrib4s.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4sARB(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::VertexAttrib4sARB.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4sNV(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::VertexAttrib4sNV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4sv(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib4sv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4svARB(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib4svARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4svNV(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttrib4svNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttrib4ubNV(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) -> c_void { unsafe { (storage::VertexAttrib4ubNV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4ubv(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttrib4ubv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4ubvARB(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttrib4ubvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4ubvNV(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttrib4ubvNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4uiv(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttrib4uiv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4uivARB(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttrib4uivARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4usv(index: GLuint, v: *GLushort) -> c_void { (storage::VertexAttrib4usv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttrib4usvARB(index: GLuint, v: *GLushort) -> c_void { (storage::VertexAttrib4usvARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribArrayObjectATI(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, buffer: GLuint, offset: GLuint) -> c_void { unsafe { (storage::VertexAttribArrayObjectATI.f)(index, size, type_, normalized, stride, buffer, offset) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribBinding(attribindex: GLuint, bindingindex: GLuint) -> c_void { unsafe { (storage::VertexAttribBinding.f)(attribindex, bindingindex) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribDivisor(index: GLuint, divisor: GLuint) -> c_void { unsafe { (storage::VertexAttribDivisor.f)(index, divisor) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribDivisorANGLE(index: GLuint, divisor: GLuint) -> c_void { unsafe { (storage::VertexAttribDivisorANGLE.f)(index, divisor) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribDivisorARB(index: GLuint, divisor: GLuint) -> c_void { unsafe { (storage::VertexAttribDivisorARB.f)(index, divisor) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribDivisorNV(index: GLuint, divisor: GLuint) -> c_void { unsafe { (storage::VertexAttribDivisorNV.f)(index, divisor) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribFormat(attribindex: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, relativeoffset: GLuint) -> c_void { unsafe { (storage::VertexAttribFormat.f)(attribindex, size, type_, normalized, relativeoffset) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribFormatNV(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei) -> c_void { unsafe { (storage::VertexAttribFormatNV.f)(index, size, type_, normalized, stride) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI1i(index: GLuint, x: GLint) -> c_void { unsafe { (storage::VertexAttribI1i.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI1iEXT(index: GLuint, x: GLint) -> c_void { unsafe { (storage::VertexAttribI1iEXT.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI1iv(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI1iv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI1ivEXT(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI1ivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI1ui(index: GLuint, x: GLuint) -> c_void { unsafe { (storage::VertexAttribI1ui.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI1uiEXT(index: GLuint, x: GLuint) -> c_void { unsafe { (storage::VertexAttribI1uiEXT.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI1uiv(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI1uiv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI1uivEXT(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI1uivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI2i(index: GLuint, x: GLint, y: GLint) -> c_void { unsafe { (storage::VertexAttribI2i.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI2iEXT(index: GLuint, x: GLint, y: GLint) -> c_void { unsafe { (storage::VertexAttribI2iEXT.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI2iv(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI2iv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI2ivEXT(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI2ivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI2ui(index: GLuint, x: GLuint, y: GLuint) -> c_void { unsafe { (storage::VertexAttribI2ui.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI2uiEXT(index: GLuint, x: GLuint, y: GLuint) -> c_void { unsafe { (storage::VertexAttribI2uiEXT.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI2uiv(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI2uiv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI2uivEXT(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI2uivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI3i(index: GLuint, x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::VertexAttribI3i.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI3iEXT(index: GLuint, x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::VertexAttribI3iEXT.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI3iv(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI3iv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI3ivEXT(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI3ivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI3ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint) -> c_void { unsafe { (storage::VertexAttribI3ui.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI3uiEXT(index: GLuint, x: GLuint, y: GLuint, z: GLuint) -> c_void { unsafe { (storage::VertexAttribI3uiEXT.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI3uiv(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI3uiv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI3uivEXT(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI3uivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4bv(index: GLuint, v: *GLbyte) -> c_void { (storage::VertexAttribI4bv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4bvEXT(index: GLuint, v: *GLbyte) -> c_void { (storage::VertexAttribI4bvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::VertexAttribI4i.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI4iEXT(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::VertexAttribI4iEXT.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4iv(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI4iv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4ivEXT(index: GLuint, v: *GLint) -> c_void { (storage::VertexAttribI4ivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4sv(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttribI4sv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4svEXT(index: GLuint, v: *GLshort) -> c_void { (storage::VertexAttribI4svEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4ubv(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttribI4ubv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4ubvEXT(index: GLuint, v: *GLubyte) -> c_void { (storage::VertexAttribI4ubvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void { unsafe { (storage::VertexAttribI4ui.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribI4uiEXT(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void { unsafe { (storage::VertexAttribI4uiEXT.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4uiv(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI4uiv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4uivEXT(index: GLuint, v: *GLuint) -> c_void { (storage::VertexAttribI4uivEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4usv(index: GLuint, v: *GLushort) -> c_void { (storage::VertexAttribI4usv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribI4usvEXT(index: GLuint, v: *GLushort) -> c_void { (storage::VertexAttribI4usvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribIFormat(attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void { unsafe { (storage::VertexAttribIFormat.f)(attribindex, size, type_, relativeoffset) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribIFormatNV(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::VertexAttribIFormatNV.f)(index, size, type_, stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribIPointer(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribIPointer.f)(index, size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribIPointerEXT(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribIPointerEXT.f)(index, size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL1d(index: GLuint, x: GLdouble) -> c_void { unsafe { (storage::VertexAttribL1d.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL1dEXT(index: GLuint, x: GLdouble) -> c_void { unsafe { (storage::VertexAttribL1dEXT.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL1dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL1dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL1dvEXT(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL1dvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL1i64NV(index: GLuint, x: GLint64EXT) -> c_void { unsafe { (storage::VertexAttribL1i64NV.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL1i64vNV(index: GLuint, v: *GLint64EXT) -> c_void { (storage::VertexAttribL1i64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL1ui64ARB(index: GLuint, x: GLuint64EXT) -> c_void { unsafe { (storage::VertexAttribL1ui64ARB.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL1ui64NV(index: GLuint, x: GLuint64EXT) -> c_void { unsafe { (storage::VertexAttribL1ui64NV.f)(index, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL1ui64vARB(index: GLuint, v: *GLuint64EXT) -> c_void { (storage::VertexAttribL1ui64vARB.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL1ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void { (storage::VertexAttribL1ui64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL2d(index: GLuint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::VertexAttribL2d.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL2dEXT(index: GLuint, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::VertexAttribL2dEXT.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL2dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL2dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL2dvEXT(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL2dvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL2i64NV(index: GLuint, x: GLint64EXT, y: GLint64EXT) -> c_void { unsafe { (storage::VertexAttribL2i64NV.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL2i64vNV(index: GLuint, v: *GLint64EXT) -> c_void { (storage::VertexAttribL2i64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL2ui64NV(index: GLuint, x: GLuint64EXT, y: GLuint64EXT) -> c_void { unsafe { (storage::VertexAttribL2ui64NV.f)(index, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL2ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void { (storage::VertexAttribL2ui64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL3d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::VertexAttribL3d.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL3dEXT(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::VertexAttribL3dEXT.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL3dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL3dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL3dvEXT(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL3dvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL3i64NV(index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) -> c_void { unsafe { (storage::VertexAttribL3i64NV.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL3i64vNV(index: GLuint, v: *GLint64EXT) -> c_void { (storage::VertexAttribL3i64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL3ui64NV(index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) -> c_void { unsafe { (storage::VertexAttribL3ui64NV.f)(index, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL3ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void { (storage::VertexAttribL3ui64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL4d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::VertexAttribL4d.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL4dEXT(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::VertexAttribL4dEXT.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL4dv(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL4dv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL4dvEXT(index: GLuint, v: *GLdouble) -> c_void { (storage::VertexAttribL4dvEXT.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL4i64NV(index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) -> c_void { unsafe { (storage::VertexAttribL4i64NV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL4i64vNV(index: GLuint, v: *GLint64EXT) -> c_void { (storage::VertexAttribL4i64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribL4ui64NV(index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) -> c_void { unsafe { (storage::VertexAttribL4ui64NV.f)(index, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribL4ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void { (storage::VertexAttribL4ui64vNV.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribLFormat(attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void { unsafe { (storage::VertexAttribLFormat.f)(attribindex, size, type_, relativeoffset) } }
#[fixed_stack_segment] #[inline] pub fn VertexAttribLFormatNV(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::VertexAttribLFormatNV.f)(index, size, type_, stride) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribLPointer(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribLPointer.f)(index, size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribLPointerEXT(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribLPointerEXT.f)(index, size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribP1ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void { unsafe { (storage::VertexAttribP1ui.f)(index, type_, normalized, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribP1uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void { (storage::VertexAttribP1uiv.f)(index, type_, normalized, value) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribP2ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void { unsafe { (storage::VertexAttribP2ui.f)(index, type_, normalized, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribP2uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void { (storage::VertexAttribP2uiv.f)(index, type_, normalized, value) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribP3ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void { unsafe { (storage::VertexAttribP3ui.f)(index, type_, normalized, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribP3uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void { (storage::VertexAttribP3uiv.f)(index, type_, normalized, value) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribP4ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void { unsafe { (storage::VertexAttribP4ui.f)(index, type_, normalized, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribP4uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void { (storage::VertexAttribP4uiv.f)(index, type_, normalized, value) }
#[fixed_stack_segment] #[inline] pub fn VertexAttribParameteriAMD(index: GLuint, pname: GLenum, param: GLint) -> c_void { unsafe { (storage::VertexAttribParameteriAMD.f)(index, pname, param) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribPointer(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribPointer.f)(index, size, type_, normalized, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribPointerARB(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribPointerARB.f)(index, size, type_, normalized, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribPointerNV(index: GLuint, fsize: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexAttribPointerNV.f)(index, fsize, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs1dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void { (storage::VertexAttribs1dvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs1fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void { (storage::VertexAttribs1fvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs1hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void { (storage::VertexAttribs1hvNV.f)(index, n, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs1svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void { (storage::VertexAttribs1svNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs2dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void { (storage::VertexAttribs2dvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs2fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void { (storage::VertexAttribs2fvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs2hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void { (storage::VertexAttribs2hvNV.f)(index, n, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs2svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void { (storage::VertexAttribs2svNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs3dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void { (storage::VertexAttribs3dvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs3fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void { (storage::VertexAttribs3fvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs3hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void { (storage::VertexAttribs3hvNV.f)(index, n, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs3svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void { (storage::VertexAttribs3svNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs4dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void { (storage::VertexAttribs4dvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs4fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void { (storage::VertexAttribs4fvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs4hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void { (storage::VertexAttribs4hvNV.f)(index, n, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs4svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void { (storage::VertexAttribs4svNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexAttribs4ubvNV(index: GLuint, count: GLsizei, v: *GLubyte) -> c_void { (storage::VertexAttribs4ubvNV.f)(index, count, v) }
#[fixed_stack_segment] #[inline] pub fn VertexBindingDivisor(bindingindex: GLuint, divisor: GLuint) -> c_void { unsafe { (storage::VertexBindingDivisor.f)(bindingindex, divisor) } }
#[fixed_stack_segment] #[inline] pub fn VertexBlendARB(count: GLint) -> c_void { unsafe { (storage::VertexBlendARB.f)(count) } }
#[fixed_stack_segment] #[inline] pub fn VertexBlendEnvfATI(pname: GLenum, param: GLfloat) -> c_void { unsafe { (storage::VertexBlendEnvfATI.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn VertexBlendEnviATI(pname: GLenum, param: GLint) -> c_void { unsafe { (storage::VertexBlendEnviATI.f)(pname, param) } }
#[fixed_stack_segment] #[inline] pub fn VertexFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void { unsafe { (storage::VertexFormatNV.f)(size, type_, stride) } }
#[fixed_stack_segment] #[inline] pub fn VertexP2ui(type_: GLenum, value: GLuint) -> c_void { unsafe { (storage::VertexP2ui.f)(type_, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexP2uiv(type_: GLenum, value: *GLuint) -> c_void { (storage::VertexP2uiv.f)(type_, value) }
#[fixed_stack_segment] #[inline] pub fn VertexP3ui(type_: GLenum, value: GLuint) -> c_void { unsafe { (storage::VertexP3ui.f)(type_, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexP3uiv(type_: GLenum, value: *GLuint) -> c_void { (storage::VertexP3uiv.f)(type_, value) }
#[fixed_stack_segment] #[inline] pub fn VertexP4ui(type_: GLenum, value: GLuint) -> c_void { unsafe { (storage::VertexP4ui.f)(type_, value) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexP4uiv(type_: GLenum, value: *GLuint) -> c_void { (storage::VertexP4uiv.f)(type_, value) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexPointer.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexPointerEXT.f)(size, type_, stride, count, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void { (storage::VertexPointerListIBM.f)(size, type_, stride, pointer, ptrstride) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexPointervINTEL(size: GLint, type_: GLenum, pointer: **GLvoid) -> c_void { (storage::VertexPointervINTEL.f)(size, type_, pointer) }
#[fixed_stack_segment] #[inline] pub fn VertexStream1dATI(stream: GLenum, x: GLdouble) -> c_void { unsafe { (storage::VertexStream1dATI.f)(stream, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream1dvATI(stream: GLenum, coords: *GLdouble) -> c_void { (storage::VertexStream1dvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream1fATI(stream: GLenum, x: GLfloat) -> c_void { unsafe { (storage::VertexStream1fATI.f)(stream, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream1fvATI(stream: GLenum, coords: *GLfloat) -> c_void { (storage::VertexStream1fvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream1iATI(stream: GLenum, x: GLint) -> c_void { unsafe { (storage::VertexStream1iATI.f)(stream, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream1ivATI(stream: GLenum, coords: *GLint) -> c_void { (storage::VertexStream1ivATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream1sATI(stream: GLenum, x: GLshort) -> c_void { unsafe { (storage::VertexStream1sATI.f)(stream, x) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream1svATI(stream: GLenum, coords: *GLshort) -> c_void { (storage::VertexStream1svATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream2dATI(stream: GLenum, x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::VertexStream2dATI.f)(stream, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream2dvATI(stream: GLenum, coords: *GLdouble) -> c_void { (storage::VertexStream2dvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream2fATI(stream: GLenum, x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::VertexStream2fATI.f)(stream, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream2fvATI(stream: GLenum, coords: *GLfloat) -> c_void { (storage::VertexStream2fvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream2iATI(stream: GLenum, x: GLint, y: GLint) -> c_void { unsafe { (storage::VertexStream2iATI.f)(stream, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream2ivATI(stream: GLenum, coords: *GLint) -> c_void { (storage::VertexStream2ivATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream2sATI(stream: GLenum, x: GLshort, y: GLshort) -> c_void { unsafe { (storage::VertexStream2sATI.f)(stream, x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream2svATI(stream: GLenum, coords: *GLshort) -> c_void { (storage::VertexStream2svATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream3dATI(stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::VertexStream3dATI.f)(stream, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream3dvATI(stream: GLenum, coords: *GLdouble) -> c_void { (storage::VertexStream3dvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream3fATI(stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::VertexStream3fATI.f)(stream, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream3fvATI(stream: GLenum, coords: *GLfloat) -> c_void { (storage::VertexStream3fvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream3iATI(stream: GLenum, x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::VertexStream3iATI.f)(stream, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream3ivATI(stream: GLenum, coords: *GLint) -> c_void { (storage::VertexStream3ivATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream3sATI(stream: GLenum, x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::VertexStream3sATI.f)(stream, x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream3svATI(stream: GLenum, coords: *GLshort) -> c_void { (storage::VertexStream3svATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream4dATI(stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::VertexStream4dATI.f)(stream, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream4dvATI(stream: GLenum, coords: *GLdouble) -> c_void { (storage::VertexStream4dvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream4fATI(stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::VertexStream4fATI.f)(stream, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream4fvATI(stream: GLenum, coords: *GLfloat) -> c_void { (storage::VertexStream4fvATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream4iATI(stream: GLenum, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::VertexStream4iATI.f)(stream, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream4ivATI(stream: GLenum, coords: *GLint) -> c_void { (storage::VertexStream4ivATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub fn VertexStream4sATI(stream: GLenum, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::VertexStream4sATI.f)(stream, x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexStream4svATI(stream: GLenum, coords: *GLshort) -> c_void { (storage::VertexStream4svATI.f)(stream, coords) }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexWeightPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::VertexWeightPointerEXT.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub fn VertexWeightfEXT(weight: GLfloat) -> c_void { unsafe { (storage::VertexWeightfEXT.f)(weight) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexWeightfvEXT(weight: *GLfloat) -> c_void { (storage::VertexWeightfvEXT.f)(weight) }
#[fixed_stack_segment] #[inline] pub fn VertexWeighthNV(weight: GLhalfNV) -> c_void { unsafe { (storage::VertexWeighthNV.f)(weight) } }
#[fixed_stack_segment] #[inline] pub unsafe fn VertexWeighthvNV(weight: *GLhalfNV) -> c_void { (storage::VertexWeighthvNV.f)(weight) }
#[fixed_stack_segment] #[inline] pub unsafe fn VideoCaptureNV(video_capture_slot: GLuint, sequence_num: *GLuint, capture_time: *GLuint64EXT) -> GLenum { (storage::VideoCaptureNV.f)(video_capture_slot, sequence_num, capture_time) }
#[fixed_stack_segment] #[inline] pub unsafe fn VideoCaptureStreamParameterdvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLdouble) -> c_void { (storage::VideoCaptureStreamParameterdvNV.f)(video_capture_slot, stream, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn VideoCaptureStreamParameterfvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLfloat) -> c_void { (storage::VideoCaptureStreamParameterfvNV.f)(video_capture_slot, stream, pname, params) }
#[fixed_stack_segment] #[inline] pub unsafe fn VideoCaptureStreamParameterivNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLint) -> c_void { (storage::VideoCaptureStreamParameterivNV.f)(video_capture_slot, stream, pname, params) }
#[fixed_stack_segment] #[inline] pub fn Viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void { unsafe { (storage::Viewport.f)(x, y, width, height) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ViewportArrayv(first: GLuint, count: GLsizei, v: *GLfloat) -> c_void { (storage::ViewportArrayv.f)(first, count, v) }
#[fixed_stack_segment] #[inline] pub fn ViewportIndexedf(index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat) -> c_void { unsafe { (storage::ViewportIndexedf.f)(index, x, y, w, h) } }
#[fixed_stack_segment] #[inline] pub unsafe fn ViewportIndexedfv(index: GLuint, v: *GLfloat) -> c_void { (storage::ViewportIndexedfv.f)(index, v) }
#[fixed_stack_segment] #[inline] pub fn WaitSync(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> c_void { unsafe { (storage::WaitSync.f)(sync, flags, timeout) } }
#[fixed_stack_segment] #[inline] pub fn WaitSyncAPPLE(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> c_void { unsafe { (storage::WaitSyncAPPLE.f)(sync, flags, timeout) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightPathsNV(resultPath: GLuint, numPaths: GLsizei, paths: *GLuint, weights: *GLfloat) -> c_void { (storage::WeightPathsNV.f)(resultPath, numPaths, paths, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightPointerARB(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::WeightPointerARB.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightPointerOES(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void { (storage::WeightPointerOES.f)(size, type_, stride, pointer) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightbvARB(size: GLint, weights: *GLbyte) -> c_void { (storage::WeightbvARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightdvARB(size: GLint, weights: *GLdouble) -> c_void { (storage::WeightdvARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightfvARB(size: GLint, weights: *GLfloat) -> c_void { (storage::WeightfvARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightivARB(size: GLint, weights: *GLint) -> c_void { (storage::WeightivARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightsvARB(size: GLint, weights: *GLshort) -> c_void { (storage::WeightsvARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightubvARB(size: GLint, weights: *GLubyte) -> c_void { (storage::WeightubvARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightuivARB(size: GLint, weights: *GLuint) -> c_void { (storage::WeightuivARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub unsafe fn WeightusvARB(size: GLint, weights: *GLushort) -> c_void { (storage::WeightusvARB.f)(size, weights) }
#[fixed_stack_segment] #[inline] pub fn WindowPos2d(x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::WindowPos2d.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2dARB(x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::WindowPos2dARB.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2dMESA(x: GLdouble, y: GLdouble) -> c_void { unsafe { (storage::WindowPos2dMESA.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2dv(v: *GLdouble) -> c_void { (storage::WindowPos2dv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2dvARB(v: *GLdouble) -> c_void { (storage::WindowPos2dvARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2dvMESA(v: *GLdouble) -> c_void { (storage::WindowPos2dvMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos2f(x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::WindowPos2f.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2fARB(x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::WindowPos2fARB.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2fMESA(x: GLfloat, y: GLfloat) -> c_void { unsafe { (storage::WindowPos2fMESA.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2fv(v: *GLfloat) -> c_void { (storage::WindowPos2fv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2fvARB(v: *GLfloat) -> c_void { (storage::WindowPos2fvARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2fvMESA(v: *GLfloat) -> c_void { (storage::WindowPos2fvMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos2i(x: GLint, y: GLint) -> c_void { unsafe { (storage::WindowPos2i.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2iARB(x: GLint, y: GLint) -> c_void { unsafe { (storage::WindowPos2iARB.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2iMESA(x: GLint, y: GLint) -> c_void { unsafe { (storage::WindowPos2iMESA.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2iv(v: *GLint) -> c_void { (storage::WindowPos2iv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2ivARB(v: *GLint) -> c_void { (storage::WindowPos2ivARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2ivMESA(v: *GLint) -> c_void { (storage::WindowPos2ivMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos2s(x: GLshort, y: GLshort) -> c_void { unsafe { (storage::WindowPos2s.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2sARB(x: GLshort, y: GLshort) -> c_void { unsafe { (storage::WindowPos2sARB.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos2sMESA(x: GLshort, y: GLshort) -> c_void { unsafe { (storage::WindowPos2sMESA.f)(x, y) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2sv(v: *GLshort) -> c_void { (storage::WindowPos2sv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2svARB(v: *GLshort) -> c_void { (storage::WindowPos2svARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos2svMESA(v: *GLshort) -> c_void { (storage::WindowPos2svMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos3d(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::WindowPos3d.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3dARB(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::WindowPos3dARB.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3dMESA(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void { unsafe { (storage::WindowPos3dMESA.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3dv(v: *GLdouble) -> c_void { (storage::WindowPos3dv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3dvARB(v: *GLdouble) -> c_void { (storage::WindowPos3dvARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3dvMESA(v: *GLdouble) -> c_void { (storage::WindowPos3dvMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos3f(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::WindowPos3f.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3fARB(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::WindowPos3fARB.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3fMESA(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void { unsafe { (storage::WindowPos3fMESA.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3fv(v: *GLfloat) -> c_void { (storage::WindowPos3fv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3fvARB(v: *GLfloat) -> c_void { (storage::WindowPos3fvARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3fvMESA(v: *GLfloat) -> c_void { (storage::WindowPos3fvMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos3i(x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::WindowPos3i.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3iARB(x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::WindowPos3iARB.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3iMESA(x: GLint, y: GLint, z: GLint) -> c_void { unsafe { (storage::WindowPos3iMESA.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3iv(v: *GLint) -> c_void { (storage::WindowPos3iv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3ivARB(v: *GLint) -> c_void { (storage::WindowPos3ivARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3ivMESA(v: *GLint) -> c_void { (storage::WindowPos3ivMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos3s(x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::WindowPos3s.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3sARB(x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::WindowPos3sARB.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub fn WindowPos3sMESA(x: GLshort, y: GLshort, z: GLshort) -> c_void { unsafe { (storage::WindowPos3sMESA.f)(x, y, z) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3sv(v: *GLshort) -> c_void { (storage::WindowPos3sv.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3svARB(v: *GLshort) -> c_void { (storage::WindowPos3svARB.f)(v) }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos3svMESA(v: *GLshort) -> c_void { (storage::WindowPos3svMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos4dMESA(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void { unsafe { (storage::WindowPos4dMESA.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos4dvMESA(v: *GLdouble) -> c_void { (storage::WindowPos4dvMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos4fMESA(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void { unsafe { (storage::WindowPos4fMESA.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos4fvMESA(v: *GLfloat) -> c_void { (storage::WindowPos4fvMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos4iMESA(x: GLint, y: GLint, z: GLint, w: GLint) -> c_void { unsafe { (storage::WindowPos4iMESA.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos4ivMESA(v: *GLint) -> c_void { (storage::WindowPos4ivMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WindowPos4sMESA(x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void { unsafe { (storage::WindowPos4sMESA.f)(x, y, z, w) } }
#[fixed_stack_segment] #[inline] pub unsafe fn WindowPos4svMESA(v: *GLshort) -> c_void { (storage::WindowPos4svMESA.f)(v) }
#[fixed_stack_segment] #[inline] pub fn WriteMaskEXT(res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum) -> c_void { unsafe { (storage::WriteMaskEXT.f)(res, in_, outX, outY, outZ, outW) } }

pub struct FnPtr<F> { f: F, is_loaded: bool }

impl<F> FnPtr<F> {
    pub fn new(ptr: Option<extern "C" fn()>, failing_fn: F) -> FnPtr<F> {
        use std::cast::transmute;
        match ptr {
            Some(p) => FnPtr { f: unsafe { transmute(p) }, is_loaded: true },
            None => FnPtr { f: failing_fn, is_loaded: false },
        }
    }
}

mod storage {
    use std::libc::*;
    use super::types::*;
    
    macro_rules! fn_ptr(
        (fn $name:ident()) => (
            pub static mut $name: ::FnPtr<extern "C" fn() = ::FnPtr { f: ::failing::$name, is_loaded: false };
        );
        (fn $name:ident() -> $ret_ty:ty) => (
            pub static mut $name: ::FnPtr<extern "C" fn() -> $ret_ty> = ::FnPtr { f: ::failing::$name, is_loaded: false };
        );
        (fn $name:ident($($arg:ident : $arg_ty:ty),*)) => (
            pub static mut $name: ::FnPtr<extern "C" fn($($arg: $arg_ty),*)> = ::FnPtr { f: ::failing::$name, is_loaded: false };
        );
        (fn $name:ident($($arg:ident : $arg_ty:ty),*) -> $ret_ty:ty) => (
            pub static mut $name: ::FnPtr<extern "C" fn($($arg: $arg_ty),*) -> $ret_ty> = ::FnPtr { f: ::failing::$name, is_loaded: false };
        );
    )
    
    fn_ptr!(fn Accum(op: GLenum, value: GLfloat) -> c_void)
    fn_ptr!(fn AccumxOES(op: GLenum, value: GLfixed) -> c_void)
    fn_ptr!(fn ActiveProgramEXT(program: GLuint) -> c_void)
    fn_ptr!(fn ActiveShaderProgram(pipeline: GLuint, program: GLuint) -> c_void)
    fn_ptr!(fn ActiveShaderProgramEXT(pipeline: GLuint, program: GLuint) -> c_void)
    fn_ptr!(fn ActiveStencilFaceEXT(face: GLenum) -> c_void)
    fn_ptr!(fn ActiveTexture(texture: GLenum) -> c_void)
    fn_ptr!(fn ActiveTextureARB(texture: GLenum) -> c_void)
    fn_ptr!(fn ActiveVaryingNV(program: GLuint, name: *GLchar) -> c_void)
    fn_ptr!(fn AlphaFragmentOp1ATI(op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint) -> c_void)
    fn_ptr!(fn AlphaFragmentOp2ATI(op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint) -> c_void)
    fn_ptr!(fn AlphaFragmentOp3ATI(op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint) -> c_void)
    fn_ptr!(fn AlphaFunc(func: GLenum, ref_: GLfloat) -> c_void)
    fn_ptr!(fn AlphaFuncQCOM(func: GLenum, ref_: GLclampf) -> c_void)
    fn_ptr!(fn AlphaFuncx(func: GLenum, ref_: GLfixed) -> c_void)
    fn_ptr!(fn AlphaFuncxOES(func: GLenum, ref_: GLfixed) -> c_void)
    fn_ptr!(fn ApplyTextureEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn AreProgramsResidentNV(n: GLsizei, programs: *GLuint, residences: *GLboolean) -> GLboolean)
    fn_ptr!(fn AreTexturesResident(n: GLsizei, textures: *GLuint, residences: *GLboolean) -> GLboolean)
    fn_ptr!(fn AreTexturesResidentEXT(n: GLsizei, textures: *GLuint, residences: *GLboolean) -> GLboolean)
    fn_ptr!(fn ArrayElement(i: GLint) -> c_void)
    fn_ptr!(fn ArrayElementEXT(i: GLint) -> c_void)
    fn_ptr!(fn ArrayObjectATI(array: GLenum, size: GLint, type_: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint) -> c_void)
    fn_ptr!(fn AsyncMarkerSGIX(marker: GLuint) -> c_void)
    fn_ptr!(fn AttachObjectARB(containerObj: GLhandleARB, obj: GLhandleARB) -> c_void)
    fn_ptr!(fn AttachShader(program: GLuint, shader: GLuint) -> c_void)
    fn_ptr!(fn Begin(mode: GLenum) -> c_void)
    fn_ptr!(fn BeginConditionalRender(id: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn BeginConditionalRenderNV(id: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn BeginConditionalRenderNVX(id: GLuint) -> c_void)
    fn_ptr!(fn BeginFragmentShaderATI() -> c_void)
    fn_ptr!(fn BeginOcclusionQueryNV(id: GLuint) -> c_void)
    fn_ptr!(fn BeginPerfMonitorAMD(monitor: GLuint) -> c_void)
    fn_ptr!(fn BeginQuery(target: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn BeginQueryARB(target: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn BeginQueryEXT(target: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn BeginQueryIndexed(target: GLenum, index: GLuint, id: GLuint) -> c_void)
    fn_ptr!(fn BeginTransformFeedback(primitiveMode: GLenum) -> c_void)
    fn_ptr!(fn BeginTransformFeedbackEXT(primitiveMode: GLenum) -> c_void)
    fn_ptr!(fn BeginTransformFeedbackNV(primitiveMode: GLenum) -> c_void)
    fn_ptr!(fn BeginVertexShaderEXT() -> c_void)
    fn_ptr!(fn BeginVideoCaptureNV(video_capture_slot: GLuint) -> c_void)
    fn_ptr!(fn BindAttribLocation(program: GLuint, index: GLuint, name: *GLchar) -> c_void)
    fn_ptr!(fn BindAttribLocationARB(programObj: GLhandleARB, index: GLuint, name: *GLcharARB) -> c_void)
    fn_ptr!(fn BindBuffer(target: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn BindBufferARB(target: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn BindBufferBase(target: GLenum, index: GLuint, buffer: GLuint) -> c_void)
    fn_ptr!(fn BindBufferBaseEXT(target: GLenum, index: GLuint, buffer: GLuint) -> c_void)
    fn_ptr!(fn BindBufferBaseNV(target: GLenum, index: GLuint, buffer: GLuint) -> c_void)
    fn_ptr!(fn BindBufferOffsetEXT(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr) -> c_void)
    fn_ptr!(fn BindBufferOffsetNV(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr) -> c_void)
    fn_ptr!(fn BindBufferRange(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn BindBufferRangeEXT(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn BindBufferRangeNV(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn BindBuffersBase(target: GLenum, first: GLuint, count: GLsizei, buffers: *GLuint) -> c_void)
    fn_ptr!(fn BindBuffersRange(target: GLenum, first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, sizes: *GLsizeiptr) -> c_void)
    fn_ptr!(fn BindFragDataLocation(program: GLuint, color: GLuint, name: *GLchar) -> c_void)
    fn_ptr!(fn BindFragDataLocationEXT(program: GLuint, color: GLuint, name: *GLchar) -> c_void)
    fn_ptr!(fn BindFragDataLocationIndexed(program: GLuint, colorNumber: GLuint, index: GLuint, name: *GLchar) -> c_void)
    fn_ptr!(fn BindFragmentShaderATI(id: GLuint) -> c_void)
    fn_ptr!(fn BindFramebuffer(target: GLenum, framebuffer: GLuint) -> c_void)
    fn_ptr!(fn BindFramebufferEXT(target: GLenum, framebuffer: GLuint) -> c_void)
    fn_ptr!(fn BindFramebufferOES(target: GLenum, framebuffer: GLuint) -> c_void)
    fn_ptr!(fn BindImageTexture(unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum) -> c_void)
    fn_ptr!(fn BindImageTextureEXT(index: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLint) -> c_void)
    fn_ptr!(fn BindImageTextures(first: GLuint, count: GLsizei, textures: *GLuint) -> c_void)
    fn_ptr!(fn BindLightParameterEXT(light: GLenum, value: GLenum) -> GLuint)
    fn_ptr!(fn BindMaterialParameterEXT(face: GLenum, value: GLenum) -> GLuint)
    fn_ptr!(fn BindMultiTextureEXT(texunit: GLenum, target: GLenum, texture: GLuint) -> c_void)
    fn_ptr!(fn BindParameterEXT(value: GLenum) -> GLuint)
    fn_ptr!(fn BindProgramARB(target: GLenum, program: GLuint) -> c_void)
    fn_ptr!(fn BindProgramNV(target: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn BindProgramPipeline(pipeline: GLuint) -> c_void)
    fn_ptr!(fn BindProgramPipelineEXT(pipeline: GLuint) -> c_void)
    fn_ptr!(fn BindRenderbuffer(target: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn BindRenderbufferEXT(target: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn BindRenderbufferOES(target: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn BindSampler(unit: GLuint, sampler: GLuint) -> c_void)
    fn_ptr!(fn BindSamplers(first: GLuint, count: GLsizei, samplers: *GLuint) -> c_void)
    fn_ptr!(fn BindTexGenParameterEXT(unit: GLenum, coord: GLenum, value: GLenum) -> GLuint)
    fn_ptr!(fn BindTexture(target: GLenum, texture: GLuint) -> c_void)
    fn_ptr!(fn BindTextureEXT(target: GLenum, texture: GLuint) -> c_void)
    fn_ptr!(fn BindTextureUnitParameterEXT(unit: GLenum, value: GLenum) -> GLuint)
    fn_ptr!(fn BindTextures(first: GLuint, count: GLsizei, textures: *GLuint) -> c_void)
    fn_ptr!(fn BindTransformFeedback(target: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn BindTransformFeedbackNV(target: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn BindVertexArray(array: GLuint) -> c_void)
    fn_ptr!(fn BindVertexArrayAPPLE(array: GLuint) -> c_void)
    fn_ptr!(fn BindVertexArrayOES(array: GLuint) -> c_void)
    fn_ptr!(fn BindVertexBuffer(bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) -> c_void)
    fn_ptr!(fn BindVertexBuffers(first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, strides: *GLsizei) -> c_void)
    fn_ptr!(fn BindVertexShaderEXT(id: GLuint) -> c_void)
    fn_ptr!(fn BindVideoCaptureStreamBufferNV(video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, offset: GLintptrARB) -> c_void)
    fn_ptr!(fn BindVideoCaptureStreamTextureNV(video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, target: GLenum, texture: GLuint) -> c_void)
    fn_ptr!(fn Binormal3bEXT(bx: GLbyte, by: GLbyte, bz: GLbyte) -> c_void)
    fn_ptr!(fn Binormal3bvEXT(v: *GLbyte) -> c_void)
    fn_ptr!(fn Binormal3dEXT(bx: GLdouble, by: GLdouble, bz: GLdouble) -> c_void)
    fn_ptr!(fn Binormal3dvEXT(v: *GLdouble) -> c_void)
    fn_ptr!(fn Binormal3fEXT(bx: GLfloat, by: GLfloat, bz: GLfloat) -> c_void)
    fn_ptr!(fn Binormal3fvEXT(v: *GLfloat) -> c_void)
    fn_ptr!(fn Binormal3iEXT(bx: GLint, by: GLint, bz: GLint) -> c_void)
    fn_ptr!(fn Binormal3ivEXT(v: *GLint) -> c_void)
    fn_ptr!(fn Binormal3sEXT(bx: GLshort, by: GLshort, bz: GLshort) -> c_void)
    fn_ptr!(fn Binormal3svEXT(v: *GLshort) -> c_void)
    fn_ptr!(fn BinormalPointerEXT(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn Bitmap(width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: *GLubyte) -> c_void)
    fn_ptr!(fn BitmapxOES(width: GLsizei, height: GLsizei, xorig: GLfixed, yorig: GLfixed, xmove: GLfixed, ymove: GLfixed, bitmap: *GLubyte) -> c_void)
    fn_ptr!(fn BlendColor(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void)
    fn_ptr!(fn BlendColorEXT(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void)
    fn_ptr!(fn BlendColorxOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void)
    fn_ptr!(fn BlendEquation(mode: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationIndexedAMD(buf: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationOES(mode: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationSeparateEXT(modeRGB: GLenum, modeAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationSeparateIndexedAMD(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationSeparateOES(modeRGB: GLenum, modeAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationSeparatei(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationSeparateiARB(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationi(buf: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn BlendEquationiARB(buf: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn BlendFunc(sfactor: GLenum, dfactor: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncIndexedAMD(buf: GLuint, src: GLenum, dst: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparate(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparateEXT(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparateINGR(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparateIndexedAMD(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparateOES(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparatei(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFuncSeparateiARB(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) -> c_void)
    fn_ptr!(fn BlendFunci(buf: GLuint, src: GLenum, dst: GLenum) -> c_void)
    fn_ptr!(fn BlendFunciARB(buf: GLuint, src: GLenum, dst: GLenum) -> c_void)
    fn_ptr!(fn BlendParameteriNV(pname: GLenum, value: GLint) -> c_void)
    fn_ptr!(fn BlendBarrierNV() -> c_void)
    fn_ptr!(fn BlitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void)
    fn_ptr!(fn BlitFramebufferANGLE(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void)
    fn_ptr!(fn BlitFramebufferEXT(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void)
    fn_ptr!(fn BlitFramebufferNV(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) -> c_void)
    fn_ptr!(fn BufferAddressRangeNV(pname: GLenum, index: GLuint, address: GLuint64EXT, length: GLsizeiptr) -> c_void)
    fn_ptr!(fn BufferData(target: GLenum, size: GLsizeiptr, data: *GLvoid, usage: GLenum) -> c_void)
    fn_ptr!(fn BufferDataARB(target: GLenum, size: GLsizeiptrARB, data: *GLvoid, usage: GLenum) -> c_void)
    fn_ptr!(fn BufferParameteriAPPLE(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn BufferStorage(target: GLenum, size: GLsizeiptr, data: *c_void, flags: GLbitfield) -> c_void)
    fn_ptr!(fn BufferSubData(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void)
    fn_ptr!(fn BufferSubDataARB(target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: *GLvoid) -> c_void)
    fn_ptr!(fn CallList(list: GLuint) -> c_void)
    fn_ptr!(fn CallLists(n: GLsizei, type_: GLenum, lists: *GLvoid) -> c_void)
    fn_ptr!(fn CheckFramebufferStatus(target: GLenum) -> GLenum)
    fn_ptr!(fn CheckFramebufferStatusEXT(target: GLenum) -> GLenum)
    fn_ptr!(fn CheckFramebufferStatusOES(target: GLenum) -> GLenum)
    fn_ptr!(fn CheckNamedFramebufferStatusEXT(framebuffer: GLuint, target: GLenum) -> GLenum)
    fn_ptr!(fn ClampColor(target: GLenum, clamp: GLenum) -> c_void)
    fn_ptr!(fn ClampColorARB(target: GLenum, clamp: GLenum) -> c_void)
    fn_ptr!(fn Clear(mask: GLbitfield) -> c_void)
    fn_ptr!(fn ClearAccum(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void)
    fn_ptr!(fn ClearAccumxOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void)
    fn_ptr!(fn ClearBufferData(target: GLenum, internalformat: GLenum, format: GLenum, type_: GLenum, data: *c_void) -> c_void)
    fn_ptr!(fn ClearBufferSubData(target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type_: GLenum, data: *c_void) -> c_void)
    fn_ptr!(fn ClearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) -> c_void)
    fn_ptr!(fn ClearBufferfv(buffer: GLenum, drawbuffer: GLint, value: *GLfloat) -> c_void)
    fn_ptr!(fn ClearBufferiv(buffer: GLenum, drawbuffer: GLint, value: *GLint) -> c_void)
    fn_ptr!(fn ClearBufferuiv(buffer: GLenum, drawbuffer: GLint, value: *GLuint) -> c_void)
    fn_ptr!(fn ClearColor(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void)
    fn_ptr!(fn ClearColorIiEXT(red: GLint, green: GLint, blue: GLint, alpha: GLint) -> c_void)
    fn_ptr!(fn ClearColorIuiEXT(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) -> c_void)
    fn_ptr!(fn ClearColorx(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void)
    fn_ptr!(fn ClearColorxOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void)
    fn_ptr!(fn ClearDepth(depth: GLdouble) -> c_void)
    fn_ptr!(fn ClearDepthdNV(depth: GLdouble) -> c_void)
    fn_ptr!(fn ClearDepthf(d: GLfloat) -> c_void)
    fn_ptr!(fn ClearDepthfOES(depth: GLclampf) -> c_void)
    fn_ptr!(fn ClearDepthx(depth: GLfixed) -> c_void)
    fn_ptr!(fn ClearDepthxOES(depth: GLfixed) -> c_void)
    fn_ptr!(fn ClearIndex(c: GLfloat) -> c_void)
    fn_ptr!(fn ClearNamedBufferDataEXT(buffer: GLuint, internalformat: GLenum, format: GLenum, type_: GLenum, data: *c_void) -> c_void)
    fn_ptr!(fn ClearNamedBufferSubDataEXT(buffer: GLuint, internalformat: GLenum, format: GLenum, type_: GLenum, offset: GLsizeiptr, size: GLsizeiptr, data: *c_void) -> c_void)
    fn_ptr!(fn ClearStencil(s: GLint) -> c_void)
    fn_ptr!(fn ClearTexImage(texture: GLuint, level: GLint, format: GLenum, type_: GLenum, data: *c_void) -> c_void)
    fn_ptr!(fn ClearTexSubImage(texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, data: *c_void) -> c_void)
    fn_ptr!(fn ClientActiveTexture(texture: GLenum) -> c_void)
    fn_ptr!(fn ClientActiveTextureARB(texture: GLenum) -> c_void)
    fn_ptr!(fn ClientActiveVertexStreamATI(stream: GLenum) -> c_void)
    fn_ptr!(fn ClientAttribDefaultEXT(mask: GLbitfield) -> c_void)
    fn_ptr!(fn ClientWaitSync(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum)
    fn_ptr!(fn ClientWaitSyncAPPLE(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum)
    fn_ptr!(fn ClipControlARB(origin: GLenum, depth: GLenum) -> c_void)
    fn_ptr!(fn ClipPlane(plane: GLenum, equation: *GLdouble) -> c_void)
    fn_ptr!(fn ClipPlanef(p: GLenum, eqn: *GLfloat) -> c_void)
    fn_ptr!(fn ClipPlanefIMG(p: GLenum, eqn: *GLfloat) -> c_void)
    fn_ptr!(fn ClipPlanefOES(plane: GLenum, equation: *GLfloat) -> c_void)
    fn_ptr!(fn ClipPlanex(plane: GLenum, equation: *GLfixed) -> c_void)
    fn_ptr!(fn ClipPlanexIMG(p: GLenum, eqn: *GLfixed) -> c_void)
    fn_ptr!(fn ClipPlanexOES(plane: GLenum, equation: *GLfixed) -> c_void)
    fn_ptr!(fn Color3b(red: GLbyte, green: GLbyte, blue: GLbyte) -> c_void)
    fn_ptr!(fn Color3bv(v: *GLbyte) -> c_void)
    fn_ptr!(fn Color3d(red: GLdouble, green: GLdouble, blue: GLdouble) -> c_void)
    fn_ptr!(fn Color3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn Color3f(red: GLfloat, green: GLfloat, blue: GLfloat) -> c_void)
    fn_ptr!(fn Color3fVertex3fSUN(r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Color3fVertex3fvSUN(c: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn Color3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn Color3hNV(red: GLhalfNV, green: GLhalfNV, blue: GLhalfNV) -> c_void)
    fn_ptr!(fn Color3hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn Color3i(red: GLint, green: GLint, blue: GLint) -> c_void)
    fn_ptr!(fn Color3iv(v: *GLint) -> c_void)
    fn_ptr!(fn Color3s(red: GLshort, green: GLshort, blue: GLshort) -> c_void)
    fn_ptr!(fn Color3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn Color3ub(red: GLubyte, green: GLubyte, blue: GLubyte) -> c_void)
    fn_ptr!(fn Color3ubv(v: *GLubyte) -> c_void)
    fn_ptr!(fn Color3ui(red: GLuint, green: GLuint, blue: GLuint) -> c_void)
    fn_ptr!(fn Color3uiv(v: *GLuint) -> c_void)
    fn_ptr!(fn Color3us(red: GLushort, green: GLushort, blue: GLushort) -> c_void)
    fn_ptr!(fn Color3usv(v: *GLushort) -> c_void)
    fn_ptr!(fn Color3xOES(red: GLfixed, green: GLfixed, blue: GLfixed) -> c_void)
    fn_ptr!(fn Color3xvOES(components: *GLfixed) -> c_void)
    fn_ptr!(fn Color4b(red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) -> c_void)
    fn_ptr!(fn Color4bv(v: *GLbyte) -> c_void)
    fn_ptr!(fn Color4d(red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) -> c_void)
    fn_ptr!(fn Color4dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn Color4f(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) -> c_void)
    fn_ptr!(fn Color4fNormal3fVertex3fSUN(r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Color4fNormal3fVertex3fvSUN(c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn Color4fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn Color4hNV(red: GLhalfNV, green: GLhalfNV, blue: GLhalfNV, alpha: GLhalfNV) -> c_void)
    fn_ptr!(fn Color4hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn Color4i(red: GLint, green: GLint, blue: GLint, alpha: GLint) -> c_void)
    fn_ptr!(fn Color4iv(v: *GLint) -> c_void)
    fn_ptr!(fn Color4s(red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) -> c_void)
    fn_ptr!(fn Color4sv(v: *GLshort) -> c_void)
    fn_ptr!(fn Color4ub(red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) -> c_void)
    fn_ptr!(fn Color4ubVertex2fSUN(r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn Color4ubVertex2fvSUN(c: *GLubyte, v: *GLfloat) -> c_void)
    fn_ptr!(fn Color4ubVertex3fSUN(r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Color4ubVertex3fvSUN(c: *GLubyte, v: *GLfloat) -> c_void)
    fn_ptr!(fn Color4ubv(v: *GLubyte) -> c_void)
    fn_ptr!(fn Color4ui(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) -> c_void)
    fn_ptr!(fn Color4uiv(v: *GLuint) -> c_void)
    fn_ptr!(fn Color4us(red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) -> c_void)
    fn_ptr!(fn Color4usv(v: *GLushort) -> c_void)
    fn_ptr!(fn Color4x(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void)
    fn_ptr!(fn Color4xOES(red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) -> c_void)
    fn_ptr!(fn Color4xvOES(components: *GLfixed) -> c_void)
    fn_ptr!(fn ColorFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn ColorFragmentOp1ATI(op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint) -> c_void)
    fn_ptr!(fn ColorFragmentOp2ATI(op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint) -> c_void)
    fn_ptr!(fn ColorFragmentOp3ATI(op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint) -> c_void)
    fn_ptr!(fn ColorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) -> c_void)
    fn_ptr!(fn ColorMaskIndexedEXT(index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) -> c_void)
    fn_ptr!(fn ColorMaski(index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) -> c_void)
    fn_ptr!(fn ColorMaterial(face: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn ColorP3ui(type_: GLenum, color: GLuint) -> c_void)
    fn_ptr!(fn ColorP3uiv(type_: GLenum, color: *GLuint) -> c_void)
    fn_ptr!(fn ColorP4ui(type_: GLenum, color: GLuint) -> c_void)
    fn_ptr!(fn ColorP4uiv(type_: GLenum, color: *GLuint) -> c_void)
    fn_ptr!(fn ColorPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn ColorPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn ColorPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn ColorPointervINTEL(size: GLint, type_: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn ColorSubTable(target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type_: GLenum, data: *GLvoid) -> c_void)
    fn_ptr!(fn ColorSubTableEXT(target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type_: GLenum, data: *GLvoid) -> c_void)
    fn_ptr!(fn ColorTable(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void)
    fn_ptr!(fn ColorTableEXT(target: GLenum, internalFormat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void)
    fn_ptr!(fn ColorTableParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn ColorTableParameterfvSGI(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn ColorTableParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn ColorTableParameterivSGI(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn ColorTableSGI(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void)
    fn_ptr!(fn CombinerInputNV(stage: GLenum, portion: GLenum, variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum) -> c_void)
    fn_ptr!(fn CombinerOutputNV(stage: GLenum, portion: GLenum, abOutput: GLenum, cdOutput: GLenum, sumOutput: GLenum, scale: GLenum, bias: GLenum, abDotProduct: GLboolean, cdDotProduct: GLboolean, muxSum: GLboolean) -> c_void)
    fn_ptr!(fn CombinerParameterfNV(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn CombinerParameterfvNV(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn CombinerParameteriNV(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn CombinerParameterivNV(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn CombinerStageParameterfvNV(stage: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn CompileShader(shader: GLuint) -> c_void)
    fn_ptr!(fn CompileShaderARB(shaderObj: GLhandleARB) -> c_void)
    fn_ptr!(fn CompileShaderIncludeARB(shader: GLuint, count: GLsizei, path: **GLchar, length: *GLint) -> c_void)
    fn_ptr!(fn CompressedMultiTexImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedMultiTexImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedMultiTexImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedMultiTexSubImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedMultiTexSubImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedMultiTexSubImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage1D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage1DARB(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage2DARB(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage3DARB(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexImage3DOES(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage1DARB(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage2DARB(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage3DARB(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTexSubImage3DOES(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTextureImage1DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTextureImage2DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTextureImage3DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTextureSubImage1DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTextureSubImage2DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn CompressedTextureSubImage3DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, bits: *GLvoid) -> c_void)
    fn_ptr!(fn ConvolutionFilter1D(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void)
    fn_ptr!(fn ConvolutionFilter1DEXT(target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void)
    fn_ptr!(fn ConvolutionFilter2D(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void)
    fn_ptr!(fn ConvolutionFilter2DEXT(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void)
    fn_ptr!(fn ConvolutionParameterf(target: GLenum, pname: GLenum, params: GLfloat) -> c_void)
    fn_ptr!(fn ConvolutionParameterfEXT(target: GLenum, pname: GLenum, params: GLfloat) -> c_void)
    fn_ptr!(fn ConvolutionParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn ConvolutionParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn ConvolutionParameteri(target: GLenum, pname: GLenum, params: GLint) -> c_void)
    fn_ptr!(fn ConvolutionParameteriEXT(target: GLenum, pname: GLenum, params: GLint) -> c_void)
    fn_ptr!(fn ConvolutionParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn ConvolutionParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn ConvolutionParameterxOES(target: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn ConvolutionParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn CopyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn CopyColorSubTable(target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyColorSubTableEXT(target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyColorTable(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyColorTableSGI(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyConvolutionFilter1D(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyConvolutionFilter1DEXT(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyConvolutionFilter2D(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyConvolutionFilter2DEXT(target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyImageSubData(srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) -> c_void)
    fn_ptr!(fn CopyImageSubDataNV(srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void)
    fn_ptr!(fn CopyMultiTexImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyMultiTexImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyMultiTexSubImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyMultiTexSubImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyMultiTexSubImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyPathNV(resultPath: GLuint, srcPath: GLuint) -> c_void)
    fn_ptr!(fn CopyPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, type_: GLenum) -> c_void)
    fn_ptr!(fn CopyTexImage1D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyTexImage1DEXT(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyTexImage2DEXT(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyTexSubImage1DEXT(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyTexSubImage2DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyTexSubImage3DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyTexSubImage3DOES(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyTextureImage1DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyTextureImage2DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) -> c_void)
    fn_ptr!(fn CopyTextureLevelsAPPLE(destinationTexture: GLuint, sourceTexture: GLuint, sourceBaseLevel: GLint, sourceLevelCount: GLsizei) -> c_void)
    fn_ptr!(fn CopyTextureSubImage1DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) -> c_void)
    fn_ptr!(fn CopyTextureSubImage2DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CopyTextureSubImage3DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn CoverFillPathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: *GLfloat) -> c_void)
    fn_ptr!(fn CoverFillPathNV(path: GLuint, coverMode: GLenum) -> c_void)
    fn_ptr!(fn CoverStrokePathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: *GLfloat) -> c_void)
    fn_ptr!(fn CoverStrokePathNV(path: GLuint, coverMode: GLenum) -> c_void)
    fn_ptr!(fn CoverageMaskNV(mask: GLboolean) -> c_void)
    fn_ptr!(fn CoverageOperationNV(operation: GLenum) -> c_void)
    fn_ptr!(fn CreateProgram() -> GLuint)
    fn_ptr!(fn CreateProgramObjectARB() -> GLhandleARB)
    fn_ptr!(fn CreateShader(type_: GLenum) -> GLuint)
    fn_ptr!(fn CreateShaderObjectARB(shaderType: GLenum) -> GLhandleARB)
    fn_ptr!(fn CreateShaderProgramEXT(type_: GLenum, string: *GLchar) -> GLuint)
    fn_ptr!(fn CreateShaderProgramv(type_: GLenum, count: GLsizei, strings: **GLchar) -> GLuint)
    fn_ptr!(fn CreateShaderProgramvEXT(type_: GLenum, count: GLsizei, strings: **GLchar) -> GLuint)
    fn_ptr!(fn CreateSyncFromCLeventARB(context: *_cl_context, event: *_cl_event, flags: GLbitfield) -> GLsync)
    fn_ptr!(fn CullFace(mode: GLenum) -> c_void)
    fn_ptr!(fn CullParameterdvEXT(pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn CullParameterfvEXT(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn CurrentPaletteMatrixARB(index: GLint) -> c_void)
    fn_ptr!(fn CurrentPaletteMatrixOES(matrixpaletteindex: GLuint) -> c_void)
    fn_ptr!(fn DebugMessageCallback(callback: GLDEBUGPROC, userParam: *c_void) -> c_void)
    fn_ptr!(fn DebugMessageCallbackAMD(callback: GLDEBUGPROCAMD, userParam: *c_void) -> c_void)
    fn_ptr!(fn DebugMessageCallbackARB(callback: GLDEBUGPROCARB, userParam: *c_void) -> c_void)
    fn_ptr!(fn DebugMessageCallbackKHR(callback: GLDEBUGPROCKHR, userParam: *c_void) -> c_void)
    fn_ptr!(fn DebugMessageControl(source: GLenum, type_: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void)
    fn_ptr!(fn DebugMessageControlARB(source: GLenum, type_: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void)
    fn_ptr!(fn DebugMessageControlKHR(source: GLenum, type_: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void)
    fn_ptr!(fn DebugMessageEnableAMD(category: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) -> c_void)
    fn_ptr!(fn DebugMessageInsert(source: GLenum, type_: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) -> c_void)
    fn_ptr!(fn DebugMessageInsertAMD(category: GLenum, severity: GLenum, id: GLuint, length: GLsizei, buf: *GLchar) -> c_void)
    fn_ptr!(fn DebugMessageInsertARB(source: GLenum, type_: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) -> c_void)
    fn_ptr!(fn DebugMessageInsertKHR(source: GLenum, type_: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) -> c_void)
    fn_ptr!(fn DeformSGIX(mask: GLbitfield) -> c_void)
    fn_ptr!(fn DeformationMap3dSGIX(target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, w1: GLdouble, w2: GLdouble, wstride: GLint, worder: GLint, points: *GLdouble) -> c_void)
    fn_ptr!(fn DeformationMap3fSGIX(target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, w1: GLfloat, w2: GLfloat, wstride: GLint, worder: GLint, points: *GLfloat) -> c_void)
    fn_ptr!(fn DeleteAsyncMarkersSGIX(marker: GLuint, range: GLsizei) -> c_void)
    fn_ptr!(fn DeleteBuffers(n: GLsizei, buffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteBuffersARB(n: GLsizei, buffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteFencesAPPLE(n: GLsizei, fences: *GLuint) -> c_void)
    fn_ptr!(fn DeleteFencesNV(n: GLsizei, fences: *GLuint) -> c_void)
    fn_ptr!(fn DeleteFragmentShaderATI(id: GLuint) -> c_void)
    fn_ptr!(fn DeleteFramebuffers(n: GLsizei, framebuffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteFramebuffersEXT(n: GLsizei, framebuffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteFramebuffersOES(n: GLsizei, framebuffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteLists(list: GLuint, range: GLsizei) -> c_void)
    fn_ptr!(fn DeleteNamedStringARB(namelen: GLint, name: *GLchar) -> c_void)
    fn_ptr!(fn DeleteNamesAMD(identifier: GLenum, num: GLuint, names: *GLuint) -> c_void)
    fn_ptr!(fn DeleteObjectARB(obj: GLhandleARB) -> c_void)
    fn_ptr!(fn DeleteOcclusionQueriesNV(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn DeletePathsNV(path: GLuint, range: GLsizei) -> c_void)
    fn_ptr!(fn DeletePerfMonitorsAMD(n: GLsizei, monitors: *GLuint) -> c_void)
    fn_ptr!(fn DeleteProgram(program: GLuint) -> c_void)
    fn_ptr!(fn DeleteProgramPipelines(n: GLsizei, pipelines: *GLuint) -> c_void)
    fn_ptr!(fn DeleteProgramPipelinesEXT(n: GLsizei, pipelines: *GLuint) -> c_void)
    fn_ptr!(fn DeleteProgramsARB(n: GLsizei, programs: *GLuint) -> c_void)
    fn_ptr!(fn DeleteProgramsNV(n: GLsizei, programs: *GLuint) -> c_void)
    fn_ptr!(fn DeleteQueries(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn DeleteQueriesARB(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn DeleteQueriesEXT(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn DeleteRenderbuffers(n: GLsizei, renderbuffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteRenderbuffersEXT(n: GLsizei, renderbuffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteRenderbuffersOES(n: GLsizei, renderbuffers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteSamplers(count: GLsizei, samplers: *GLuint) -> c_void)
    fn_ptr!(fn DeleteShader(shader: GLuint) -> c_void)
    fn_ptr!(fn DeleteSync(sync: GLsync) -> c_void)
    fn_ptr!(fn DeleteSyncAPPLE(sync: GLsync) -> c_void)
    fn_ptr!(fn DeleteTextures(n: GLsizei, textures: *GLuint) -> c_void)
    fn_ptr!(fn DeleteTexturesEXT(n: GLsizei, textures: *GLuint) -> c_void)
    fn_ptr!(fn DeleteTransformFeedbacks(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn DeleteTransformFeedbacksNV(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn DeleteVertexArrays(n: GLsizei, arrays: *GLuint) -> c_void)
    fn_ptr!(fn DeleteVertexArraysAPPLE(n: GLsizei, arrays: *GLuint) -> c_void)
    fn_ptr!(fn DeleteVertexArraysOES(n: GLsizei, arrays: *GLuint) -> c_void)
    fn_ptr!(fn DeleteVertexShaderEXT(id: GLuint) -> c_void)
    fn_ptr!(fn DepthBoundsEXT(zmin: GLclampd, zmax: GLclampd) -> c_void)
    fn_ptr!(fn DepthBoundsdNV(zmin: GLdouble, zmax: GLdouble) -> c_void)
    fn_ptr!(fn DepthFunc(func: GLenum) -> c_void)
    fn_ptr!(fn DepthMask(flag: GLboolean) -> c_void)
    fn_ptr!(fn DepthRange(near: GLdouble, far: GLdouble) -> c_void)
    fn_ptr!(fn DepthRangeArrayv(first: GLuint, count: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn DepthRangeIndexed(index: GLuint, n: GLdouble, f: GLdouble) -> c_void)
    fn_ptr!(fn DepthRangedNV(zNear: GLdouble, zFar: GLdouble) -> c_void)
    fn_ptr!(fn DepthRangef(n: GLfloat, f: GLfloat) -> c_void)
    fn_ptr!(fn DepthRangefOES(n: GLclampf, f: GLclampf) -> c_void)
    fn_ptr!(fn DepthRangex(n: GLfixed, f: GLfixed) -> c_void)
    fn_ptr!(fn DepthRangexOES(n: GLfixed, f: GLfixed) -> c_void)
    fn_ptr!(fn DetachObjectARB(containerObj: GLhandleARB, attachedObj: GLhandleARB) -> c_void)
    fn_ptr!(fn DetachShader(program: GLuint, shader: GLuint) -> c_void)
    fn_ptr!(fn DetailTexFuncSGIS(target: GLenum, n: GLsizei, points: *GLfloat) -> c_void)
    fn_ptr!(fn Disable(cap: GLenum) -> c_void)
    fn_ptr!(fn DisableClientState(array: GLenum) -> c_void)
    fn_ptr!(fn DisableClientStateIndexedEXT(array: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn DisableClientStateiEXT(array: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn DisableDriverControlQCOM(driverControl: GLuint) -> c_void)
    fn_ptr!(fn DisableIndexedEXT(target: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn DisableVariantClientStateEXT(id: GLuint) -> c_void)
    fn_ptr!(fn DisableVertexArrayAttribEXT(vaobj: GLuint, index: GLuint) -> c_void)
    fn_ptr!(fn DisableVertexArrayEXT(vaobj: GLuint, array: GLenum) -> c_void)
    fn_ptr!(fn DisableVertexAttribAPPLE(index: GLuint, pname: GLenum) -> c_void)
    fn_ptr!(fn DisableVertexAttribArray(index: GLuint) -> c_void)
    fn_ptr!(fn DisableVertexAttribArrayARB(index: GLuint) -> c_void)
    fn_ptr!(fn Disablei(target: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn DiscardFramebufferEXT(target: GLenum, numAttachments: GLsizei, attachments: *GLenum) -> c_void)
    fn_ptr!(fn DispatchCompute(num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint) -> c_void)
    fn_ptr!(fn DispatchComputeGroupSizeARB(num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint, group_size_x: GLuint, group_size_y: GLuint, group_size_z: GLuint) -> c_void)
    fn_ptr!(fn DispatchComputeIndirect(indirect: GLintptr) -> c_void)
    fn_ptr!(fn DrawArrays(mode: GLenum, first: GLint, count: GLsizei) -> c_void)
    fn_ptr!(fn DrawArraysEXT(mode: GLenum, first: GLint, count: GLsizei) -> c_void)
    fn_ptr!(fn DrawArraysIndirect(mode: GLenum, indirect: *GLvoid) -> c_void)
    fn_ptr!(fn DrawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei) -> c_void)
    fn_ptr!(fn DrawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawArraysInstancedARB(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawArraysInstancedBaseInstance(mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint) -> c_void)
    fn_ptr!(fn DrawArraysInstancedEXT(mode: GLenum, start: GLint, count: GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawArraysInstancedNV(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawBuffer(mode: GLenum) -> c_void)
    fn_ptr!(fn DrawBuffers(n: GLsizei, bufs: *GLenum) -> c_void)
    fn_ptr!(fn DrawBuffersARB(n: GLsizei, bufs: *GLenum) -> c_void)
    fn_ptr!(fn DrawBuffersATI(n: GLsizei, bufs: *GLenum) -> c_void)
    fn_ptr!(fn DrawBuffersEXT(n: GLsizei, bufs: *GLenum) -> c_void)
    fn_ptr!(fn DrawBuffersIndexedEXT(n: GLint, location: *GLenum, indices: *GLint) -> c_void)
    fn_ptr!(fn DrawBuffersNV(n: GLsizei, bufs: *GLenum) -> c_void)
    fn_ptr!(fn DrawElementArrayAPPLE(mode: GLenum, first: GLint, count: GLsizei) -> c_void)
    fn_ptr!(fn DrawElementArrayATI(mode: GLenum, count: GLsizei) -> c_void)
    fn_ptr!(fn DrawElements(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid) -> c_void)
    fn_ptr!(fn DrawElementsBaseVertex(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, basevertex: GLint) -> c_void)
    fn_ptr!(fn DrawElementsIndirect(mode: GLenum, type_: GLenum, indirect: *GLvoid) -> c_void)
    fn_ptr!(fn DrawElementsInstanced(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, instancecount: GLsizei) -> c_void)
    fn_ptr!(fn DrawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type_: GLenum, indices: *c_void, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawElementsInstancedARB(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawElementsInstancedBaseInstance(mode: GLenum, count: GLsizei, type_: GLenum, indices: *c_void, instancecount: GLsizei, baseinstance: GLuint) -> c_void)
    fn_ptr!(fn DrawElementsInstancedBaseVertex(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, instancecount: GLsizei, basevertex: GLint) -> c_void)
    fn_ptr!(fn DrawElementsInstancedBaseVertexBaseInstance(mode: GLenum, count: GLsizei, type_: GLenum, indices: *c_void, instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint) -> c_void)
    fn_ptr!(fn DrawElementsInstancedEXT(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawElementsInstancedNV(mode: GLenum, count: GLsizei, type_: GLenum, indices: *GLvoid, primcount: GLsizei) -> c_void)
    fn_ptr!(fn DrawMeshArraysSUN(mode: GLenum, first: GLint, count: GLsizei, width: GLsizei) -> c_void)
    fn_ptr!(fn DrawPixels(width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn DrawRangeElementArrayAPPLE(mode: GLenum, start: GLuint, end: GLuint, first: GLint, count: GLsizei) -> c_void)
    fn_ptr!(fn DrawRangeElementArrayATI(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei) -> c_void)
    fn_ptr!(fn DrawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type_: GLenum, indices: *GLvoid) -> c_void)
    fn_ptr!(fn DrawRangeElementsBaseVertex(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type_: GLenum, indices: *GLvoid, basevertex: GLint) -> c_void)
    fn_ptr!(fn DrawRangeElementsEXT(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type_: GLenum, indices: *GLvoid) -> c_void)
    fn_ptr!(fn DrawTexfOES(x: GLfloat, y: GLfloat, z: GLfloat, width: GLfloat, height: GLfloat) -> c_void)
    fn_ptr!(fn DrawTexfvOES(coords: *GLfloat) -> c_void)
    fn_ptr!(fn DrawTexiOES(x: GLint, y: GLint, z: GLint, width: GLint, height: GLint) -> c_void)
    fn_ptr!(fn DrawTexivOES(coords: *GLint) -> c_void)
    fn_ptr!(fn DrawTexsOES(x: GLshort, y: GLshort, z: GLshort, width: GLshort, height: GLshort) -> c_void)
    fn_ptr!(fn DrawTexsvOES(coords: *GLshort) -> c_void)
    fn_ptr!(fn DrawTextureNV(texture: GLuint, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat) -> c_void)
    fn_ptr!(fn DrawTexxOES(x: GLfixed, y: GLfixed, z: GLfixed, width: GLfixed, height: GLfixed) -> c_void)
    fn_ptr!(fn DrawTexxvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn DrawTransformFeedback(mode: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn DrawTransformFeedbackInstanced(mode: GLenum, id: GLuint, instancecount: GLsizei) -> c_void)
    fn_ptr!(fn DrawTransformFeedbackNV(mode: GLenum, id: GLuint) -> c_void)
    fn_ptr!(fn DrawTransformFeedbackStream(mode: GLenum, id: GLuint, stream: GLuint) -> c_void)
    fn_ptr!(fn DrawTransformFeedbackStreamInstanced(mode: GLenum, id: GLuint, stream: GLuint, instancecount: GLsizei) -> c_void)
    fn_ptr!(fn EGLImageTargetRenderbufferStorageOES(target: GLenum, image: GLeglImageOES) -> c_void)
    fn_ptr!(fn EGLImageTargetTexture2DOES(target: GLenum, image: GLeglImageOES) -> c_void)
    fn_ptr!(fn EdgeFlag(flag: GLboolean) -> c_void)
    fn_ptr!(fn EdgeFlagFormatNV(stride: GLsizei) -> c_void)
    fn_ptr!(fn EdgeFlagPointer(stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn EdgeFlagPointerEXT(stride: GLsizei, count: GLsizei, pointer: *GLboolean) -> c_void)
    fn_ptr!(fn EdgeFlagPointerListIBM(stride: GLint, pointer: **GLboolean, ptrstride: GLint) -> c_void)
    fn_ptr!(fn EdgeFlagv(flag: *GLboolean) -> c_void)
    fn_ptr!(fn ElementPointerAPPLE(type_: GLenum, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn ElementPointerATI(type_: GLenum, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn Enable(cap: GLenum) -> c_void)
    fn_ptr!(fn EnableClientState(array: GLenum) -> c_void)
    fn_ptr!(fn EnableClientStateIndexedEXT(array: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn EnableClientStateiEXT(array: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn EnableDriverControlQCOM(driverControl: GLuint) -> c_void)
    fn_ptr!(fn EnableIndexedEXT(target: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn EnableVariantClientStateEXT(id: GLuint) -> c_void)
    fn_ptr!(fn EnableVertexArrayAttribEXT(vaobj: GLuint, index: GLuint) -> c_void)
    fn_ptr!(fn EnableVertexArrayEXT(vaobj: GLuint, array: GLenum) -> c_void)
    fn_ptr!(fn EnableVertexAttribAPPLE(index: GLuint, pname: GLenum) -> c_void)
    fn_ptr!(fn EnableVertexAttribArray(index: GLuint) -> c_void)
    fn_ptr!(fn EnableVertexAttribArrayARB(index: GLuint) -> c_void)
    fn_ptr!(fn Enablei(target: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn End() -> c_void)
    fn_ptr!(fn EndConditionalRender() -> c_void)
    fn_ptr!(fn EndConditionalRenderNV() -> c_void)
    fn_ptr!(fn EndConditionalRenderNVX() -> c_void)
    fn_ptr!(fn EndFragmentShaderATI() -> c_void)
    fn_ptr!(fn EndList() -> c_void)
    fn_ptr!(fn EndOcclusionQueryNV() -> c_void)
    fn_ptr!(fn EndPerfMonitorAMD(monitor: GLuint) -> c_void)
    fn_ptr!(fn EndQuery(target: GLenum) -> c_void)
    fn_ptr!(fn EndQueryARB(target: GLenum) -> c_void)
    fn_ptr!(fn EndQueryEXT(target: GLenum) -> c_void)
    fn_ptr!(fn EndQueryIndexed(target: GLenum, index: GLuint) -> c_void)
    fn_ptr!(fn EndTilingQCOM(preserveMask: GLbitfield) -> c_void)
    fn_ptr!(fn EndTransformFeedback() -> c_void)
    fn_ptr!(fn EndTransformFeedbackEXT() -> c_void)
    fn_ptr!(fn EndTransformFeedbackNV() -> c_void)
    fn_ptr!(fn EndVertexShaderEXT() -> c_void)
    fn_ptr!(fn EndVideoCaptureNV(video_capture_slot: GLuint) -> c_void)
    fn_ptr!(fn EvalCoord1d(u: GLdouble) -> c_void)
    fn_ptr!(fn EvalCoord1dv(u: *GLdouble) -> c_void)
    fn_ptr!(fn EvalCoord1f(u: GLfloat) -> c_void)
    fn_ptr!(fn EvalCoord1fv(u: *GLfloat) -> c_void)
    fn_ptr!(fn EvalCoord1xOES(u: GLfixed) -> c_void)
    fn_ptr!(fn EvalCoord1xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn EvalCoord2d(u: GLdouble, v: GLdouble) -> c_void)
    fn_ptr!(fn EvalCoord2dv(u: *GLdouble) -> c_void)
    fn_ptr!(fn EvalCoord2f(u: GLfloat, v: GLfloat) -> c_void)
    fn_ptr!(fn EvalCoord2fv(u: *GLfloat) -> c_void)
    fn_ptr!(fn EvalCoord2xOES(u: GLfixed, v: GLfixed) -> c_void)
    fn_ptr!(fn EvalCoord2xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn EvalMapsNV(target: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn EvalMesh1(mode: GLenum, i1: GLint, i2: GLint) -> c_void)
    fn_ptr!(fn EvalMesh2(mode: GLenum, i1: GLint, i2: GLint, j1: GLint, j2: GLint) -> c_void)
    fn_ptr!(fn EvalPoint1(i: GLint) -> c_void)
    fn_ptr!(fn EvalPoint2(i: GLint, j: GLint) -> c_void)
    fn_ptr!(fn ExecuteProgramNV(target: GLenum, id: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn ExtGetBufferPointervQCOM(target: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn ExtGetBuffersQCOM(buffers: *GLuint, maxBuffers: GLint, numBuffers: *GLint) -> c_void)
    fn_ptr!(fn ExtGetFramebuffersQCOM(framebuffers: *GLuint, maxFramebuffers: GLint, numFramebuffers: *GLint) -> c_void)
    fn_ptr!(fn ExtGetProgramBinarySourceQCOM(program: GLuint, shadertype: GLenum, source: *GLchar, length: *GLint) -> c_void)
    fn_ptr!(fn ExtGetProgramsQCOM(programs: *GLuint, maxPrograms: GLint, numPrograms: *GLint) -> c_void)
    fn_ptr!(fn ExtGetRenderbuffersQCOM(renderbuffers: *GLuint, maxRenderbuffers: GLint, numRenderbuffers: *GLint) -> c_void)
    fn_ptr!(fn ExtGetShadersQCOM(shaders: *GLuint, maxShaders: GLint, numShaders: *GLint) -> c_void)
    fn_ptr!(fn ExtGetTexLevelParameterivQCOM(texture: GLuint, face: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn ExtGetTexSubImageQCOM(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, texels: *GLvoid) -> c_void)
    fn_ptr!(fn ExtGetTexturesQCOM(textures: *GLuint, maxTextures: GLint, numTextures: *GLint) -> c_void)
    fn_ptr!(fn ExtIsProgramBinaryQCOM(program: GLuint) -> GLboolean)
    fn_ptr!(fn ExtTexObjectStateOverrideiQCOM(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn ExtractComponentEXT(res: GLuint, src: GLuint, num: GLuint) -> c_void)
    fn_ptr!(fn FeedbackBuffer(size: GLsizei, type_: GLenum, buffer: *GLfloat) -> c_void)
    fn_ptr!(fn FeedbackBufferxOES(n: GLsizei, type_: GLenum, buffer: *GLfixed) -> c_void)
    fn_ptr!(fn FenceSync(condition: GLenum, flags: GLbitfield) -> GLsync)
    fn_ptr!(fn FenceSyncAPPLE(condition: GLenum, flags: GLbitfield) -> GLsync)
    fn_ptr!(fn FinalCombinerInputNV(variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum) -> c_void)
    fn_ptr!(fn Finish() -> c_void)
    fn_ptr!(fn FinishAsyncSGIX(markerp: *GLuint) -> GLint)
    fn_ptr!(fn FinishFenceAPPLE(fence: GLuint) -> c_void)
    fn_ptr!(fn FinishFenceNV(fence: GLuint) -> c_void)
    fn_ptr!(fn FinishObjectAPPLE(object: GLenum, name: GLint) -> c_void)
    fn_ptr!(fn FinishTextureSUNX() -> c_void)
    fn_ptr!(fn Flush() -> c_void)
    fn_ptr!(fn FlushMappedBufferRange(target: GLenum, offset: GLintptr, length: GLsizeiptr) -> c_void)
    fn_ptr!(fn FlushMappedBufferRangeAPPLE(target: GLenum, offset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn FlushMappedBufferRangeEXT(target: GLenum, offset: GLintptr, length: GLsizeiptr) -> c_void)
    fn_ptr!(fn FlushMappedNamedBufferRangeEXT(buffer: GLuint, offset: GLintptr, length: GLsizeiptr) -> c_void)
    fn_ptr!(fn FlushPixelDataRangeNV(target: GLenum) -> c_void)
    fn_ptr!(fn FlushRasterSGIX() -> c_void)
    fn_ptr!(fn FlushStaticDataIBM(target: GLenum) -> c_void)
    fn_ptr!(fn FlushVertexArrayRangeAPPLE(length: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn FlushVertexArrayRangeNV() -> c_void)
    fn_ptr!(fn FogCoordFormatNV(type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn FogCoordPointer(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn FogCoordPointerEXT(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn FogCoordPointerListIBM(type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn FogCoordd(coord: GLdouble) -> c_void)
    fn_ptr!(fn FogCoorddEXT(coord: GLdouble) -> c_void)
    fn_ptr!(fn FogCoorddv(coord: *GLdouble) -> c_void)
    fn_ptr!(fn FogCoorddvEXT(coord: *GLdouble) -> c_void)
    fn_ptr!(fn FogCoordf(coord: GLfloat) -> c_void)
    fn_ptr!(fn FogCoordfEXT(coord: GLfloat) -> c_void)
    fn_ptr!(fn FogCoordfv(coord: *GLfloat) -> c_void)
    fn_ptr!(fn FogCoordfvEXT(coord: *GLfloat) -> c_void)
    fn_ptr!(fn FogCoordhNV(fog: GLhalfNV) -> c_void)
    fn_ptr!(fn FogCoordhvNV(fog: *GLhalfNV) -> c_void)
    fn_ptr!(fn FogFuncSGIS(n: GLsizei, points: *GLfloat) -> c_void)
    fn_ptr!(fn Fogf(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn Fogfv(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn Fogi(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn Fogiv(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn Fogx(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn FogxOES(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn Fogxv(pname: GLenum, param: *GLfixed) -> c_void)
    fn_ptr!(fn FogxvOES(pname: GLenum, param: *GLfixed) -> c_void)
    fn_ptr!(fn FragmentColorMaterialSGIX(face: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn FragmentLightModelfSGIX(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn FragmentLightModelfvSGIX(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn FragmentLightModeliSGIX(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn FragmentLightModelivSGIX(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn FragmentLightfSGIX(light: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn FragmentLightfvSGIX(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn FragmentLightiSGIX(light: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn FragmentLightivSGIX(light: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn FragmentMaterialfSGIX(face: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn FragmentMaterialfvSGIX(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn FragmentMaterialiSGIX(face: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn FragmentMaterialivSGIX(face: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn FrameTerminatorGREMEDY() -> c_void)
    fn_ptr!(fn FrameZoomSGIX(factor: GLint) -> c_void)
    fn_ptr!(fn FramebufferDrawBufferEXT(framebuffer: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn FramebufferDrawBuffersEXT(framebuffer: GLuint, n: GLsizei, bufs: *GLenum) -> c_void)
    fn_ptr!(fn FramebufferParameteri(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn FramebufferReadBufferEXT(framebuffer: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn FramebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn FramebufferRenderbufferEXT(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn FramebufferRenderbufferOES(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn FramebufferTexture(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture1D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture1DEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture2DEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture2DMultisampleEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei) -> c_void)
    fn_ptr!(fn FramebufferTexture2DMultisampleIMG(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei) -> c_void)
    fn_ptr!(fn FramebufferTexture2DOES(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture3D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture3DEXT(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void)
    fn_ptr!(fn FramebufferTexture3DOES(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void)
    fn_ptr!(fn FramebufferTextureARB(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTextureEXT(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn FramebufferTextureFaceARB(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) -> c_void)
    fn_ptr!(fn FramebufferTextureFaceEXT(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) -> c_void)
    fn_ptr!(fn FramebufferTextureLayer(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void)
    fn_ptr!(fn FramebufferTextureLayerARB(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void)
    fn_ptr!(fn FramebufferTextureLayerEXT(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void)
    fn_ptr!(fn FreeObjectBufferATI(buffer: GLuint) -> c_void)
    fn_ptr!(fn FrontFace(mode: GLenum) -> c_void)
    fn_ptr!(fn Frustum(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void)
    fn_ptr!(fn Frustumf(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void)
    fn_ptr!(fn FrustumfOES(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void)
    fn_ptr!(fn Frustumx(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void)
    fn_ptr!(fn FrustumxOES(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void)
    fn_ptr!(fn GenAsyncMarkersSGIX(range: GLsizei) -> GLuint)
    fn_ptr!(fn GenBuffers(n: GLsizei, buffers: *GLuint) -> c_void)
    fn_ptr!(fn GenBuffersARB(n: GLsizei, buffers: *GLuint) -> c_void)
    fn_ptr!(fn GenFencesAPPLE(n: GLsizei, fences: *GLuint) -> c_void)
    fn_ptr!(fn GenFencesNV(n: GLsizei, fences: *GLuint) -> c_void)
    fn_ptr!(fn GenFragmentShadersATI(range: GLuint) -> GLuint)
    fn_ptr!(fn GenFramebuffers(n: GLsizei, framebuffers: *GLuint) -> c_void)
    fn_ptr!(fn GenFramebuffersEXT(n: GLsizei, framebuffers: *GLuint) -> c_void)
    fn_ptr!(fn GenFramebuffersOES(n: GLsizei, framebuffers: *GLuint) -> c_void)
    fn_ptr!(fn GenLists(range: GLsizei) -> GLuint)
    fn_ptr!(fn GenNamesAMD(identifier: GLenum, num: GLuint, names: *GLuint) -> c_void)
    fn_ptr!(fn GenOcclusionQueriesNV(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn GenPathsNV(range: GLsizei) -> GLuint)
    fn_ptr!(fn GenPerfMonitorsAMD(n: GLsizei, monitors: *GLuint) -> c_void)
    fn_ptr!(fn GenProgramPipelines(n: GLsizei, pipelines: *GLuint) -> c_void)
    fn_ptr!(fn GenProgramPipelinesEXT(n: GLsizei, pipelines: *GLuint) -> c_void)
    fn_ptr!(fn GenProgramsARB(n: GLsizei, programs: *GLuint) -> c_void)
    fn_ptr!(fn GenProgramsNV(n: GLsizei, programs: *GLuint) -> c_void)
    fn_ptr!(fn GenQueries(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn GenQueriesARB(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn GenQueriesEXT(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn GenRenderbuffers(n: GLsizei, renderbuffers: *GLuint) -> c_void)
    fn_ptr!(fn GenRenderbuffersEXT(n: GLsizei, renderbuffers: *GLuint) -> c_void)
    fn_ptr!(fn GenRenderbuffersOES(n: GLsizei, renderbuffers: *GLuint) -> c_void)
    fn_ptr!(fn GenSamplers(count: GLsizei, samplers: *GLuint) -> c_void)
    fn_ptr!(fn GenSymbolsEXT(datatype: GLenum, storagetype: GLenum, range: GLenum, components: GLuint) -> GLuint)
    fn_ptr!(fn GenTextures(n: GLsizei, textures: *GLuint) -> c_void)
    fn_ptr!(fn GenTexturesEXT(n: GLsizei, textures: *GLuint) -> c_void)
    fn_ptr!(fn GenTransformFeedbacks(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn GenTransformFeedbacksNV(n: GLsizei, ids: *GLuint) -> c_void)
    fn_ptr!(fn GenVertexArrays(n: GLsizei, arrays: *GLuint) -> c_void)
    fn_ptr!(fn GenVertexArraysAPPLE(n: GLsizei, arrays: *GLuint) -> c_void)
    fn_ptr!(fn GenVertexArraysOES(n: GLsizei, arrays: *GLuint) -> c_void)
    fn_ptr!(fn GenVertexShadersEXT(range: GLuint) -> GLuint)
    fn_ptr!(fn GenerateMipmap(target: GLenum) -> c_void)
    fn_ptr!(fn GenerateMipmapEXT(target: GLenum) -> c_void)
    fn_ptr!(fn GenerateMipmapOES(target: GLenum) -> c_void)
    fn_ptr!(fn GenerateMultiTexMipmapEXT(texunit: GLenum, target: GLenum) -> c_void)
    fn_ptr!(fn GenerateTextureMipmapEXT(texture: GLuint, target: GLenum) -> c_void)
    fn_ptr!(fn GetActiveAtomicCounterBufferiv(program: GLuint, bufferIndex: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetActiveAttrib(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLchar) -> c_void)
    fn_ptr!(fn GetActiveAttribARB(programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLcharARB) -> c_void)
    fn_ptr!(fn GetActiveSubroutineName(program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: *GLsizei, name: *GLchar) -> c_void)
    fn_ptr!(fn GetActiveSubroutineUniformName(program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: *GLsizei, name: *GLchar) -> c_void)
    fn_ptr!(fn GetActiveSubroutineUniformiv(program: GLuint, shadertype: GLenum, index: GLuint, pname: GLenum, values: *GLint) -> c_void)
    fn_ptr!(fn GetActiveUniform(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLchar) -> c_void)
    fn_ptr!(fn GetActiveUniformARB(programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: *GLsizei, size: *GLint, type_: *GLenum, name: *GLcharARB) -> c_void)
    fn_ptr!(fn GetActiveUniformBlockName(program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformBlockName: *GLchar) -> c_void)
    fn_ptr!(fn GetActiveUniformBlockiv(program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetActiveUniformName(program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformName: *GLchar) -> c_void)
    fn_ptr!(fn GetActiveUniformsiv(program: GLuint, uniformCount: GLsizei, uniformIndices: *GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetActiveVaryingNV(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type_: *GLenum, name: *GLchar) -> c_void)
    fn_ptr!(fn GetArrayObjectfvATI(array: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetArrayObjectivATI(array: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetAttachedObjectsARB(containerObj: GLhandleARB, maxCount: GLsizei, count: *GLsizei, obj: *GLhandleARB) -> c_void)
    fn_ptr!(fn GetAttachedShaders(program: GLuint, maxCount: GLsizei, count: *GLsizei, shaders: *GLuint) -> c_void)
    fn_ptr!(fn GetAttribLocation(program: GLuint, name: *GLchar) -> GLint)
    fn_ptr!(fn GetAttribLocationARB(programObj: GLhandleARB, name: *GLcharARB) -> GLint)
    fn_ptr!(fn GetBooleanIndexedvEXT(target: GLenum, index: GLuint, data: *GLboolean) -> c_void)
    fn_ptr!(fn GetBooleani_v(target: GLenum, index: GLuint, data: *GLboolean) -> c_void)
    fn_ptr!(fn GetBooleanv(pname: GLenum, params: *GLboolean) -> c_void)
    fn_ptr!(fn GetBufferParameteri64v(target: GLenum, pname: GLenum, params: *GLint64) -> c_void)
    fn_ptr!(fn GetBufferParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetBufferParameterivARB(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetBufferParameterui64vNV(target: GLenum, pname: GLenum, params: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetBufferPointerv(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetBufferPointervARB(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetBufferPointervOES(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetBufferSubData(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void)
    fn_ptr!(fn GetBufferSubDataARB(target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: *GLvoid) -> c_void)
    fn_ptr!(fn GetClipPlane(plane: GLenum, equation: *GLdouble) -> c_void)
    fn_ptr!(fn GetClipPlanef(plane: GLenum, equation: *GLfloat) -> c_void)
    fn_ptr!(fn GetClipPlanefOES(plane: GLenum, equation: *GLfloat) -> c_void)
    fn_ptr!(fn GetClipPlanex(plane: GLenum, equation: *GLfixed) -> c_void)
    fn_ptr!(fn GetClipPlanexOES(plane: GLenum, equation: *GLfixed) -> c_void)
    fn_ptr!(fn GetColorTable(target: GLenum, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void)
    fn_ptr!(fn GetColorTableEXT(target: GLenum, format: GLenum, type_: GLenum, data: *GLvoid) -> c_void)
    fn_ptr!(fn GetColorTableParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetColorTableParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetColorTableParameterfvSGI(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetColorTableParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetColorTableParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetColorTableParameterivSGI(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetColorTableSGI(target: GLenum, format: GLenum, type_: GLenum, table: *GLvoid) -> c_void)
    fn_ptr!(fn GetCombinerInputParameterfvNV(stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetCombinerInputParameterivNV(stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetCombinerOutputParameterfvNV(stage: GLenum, portion: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetCombinerOutputParameterivNV(stage: GLenum, portion: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetCombinerStageParameterfvNV(stage: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetCompressedMultiTexImageEXT(texunit: GLenum, target: GLenum, lod: GLint, img: *GLvoid) -> c_void)
    fn_ptr!(fn GetCompressedTexImage(target: GLenum, level: GLint, img: *GLvoid) -> c_void)
    fn_ptr!(fn GetCompressedTexImageARB(target: GLenum, level: GLint, img: *GLvoid) -> c_void)
    fn_ptr!(fn GetCompressedTextureImageEXT(texture: GLuint, target: GLenum, lod: GLint, img: *GLvoid) -> c_void)
    fn_ptr!(fn GetConvolutionFilter(target: GLenum, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void)
    fn_ptr!(fn GetConvolutionFilterEXT(target: GLenum, format: GLenum, type_: GLenum, image: *GLvoid) -> c_void)
    fn_ptr!(fn GetConvolutionParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetConvolutionParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetConvolutionParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetConvolutionParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetConvolutionParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetDebugMessageLog(count: GLuint, bufsize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint)
    fn_ptr!(fn GetDebugMessageLogAMD(count: GLuint, bufsize: GLsizei, categories: *GLenum, severities: *GLuint, ids: *GLuint, lengths: *GLsizei, message: *GLchar) -> GLuint)
    fn_ptr!(fn GetDebugMessageLogARB(count: GLuint, bufsize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint)
    fn_ptr!(fn GetDebugMessageLogKHR(count: GLuint, bufsize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint)
    fn_ptr!(fn GetDetailTexFuncSGIS(target: GLenum, points: *GLfloat) -> c_void)
    fn_ptr!(fn GetDoubleIndexedvEXT(target: GLenum, index: GLuint, data: *GLdouble) -> c_void)
    fn_ptr!(fn GetDoublei_v(target: GLenum, index: GLuint, data: *GLdouble) -> c_void)
    fn_ptr!(fn GetDoublei_vEXT(pname: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetDoublev(pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetDriverControlStringQCOM(driverControl: GLuint, bufSize: GLsizei, length: *GLsizei, driverControlString: *GLchar) -> c_void)
    fn_ptr!(fn GetDriverControlsQCOM(num: *GLint, size: GLsizei, driverControls: *GLuint) -> c_void)
    fn_ptr!(fn GetError() -> GLenum)
    fn_ptr!(fn GetFenceivNV(fence: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFinalCombinerInputParameterfvNV(variable: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetFinalCombinerInputParameterivNV(variable: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFixedv(pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetFixedvOES(pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetFloatIndexedvEXT(target: GLenum, index: GLuint, data: *GLfloat) -> c_void)
    fn_ptr!(fn GetFloati_v(target: GLenum, index: GLuint, data: *GLfloat) -> c_void)
    fn_ptr!(fn GetFloati_vEXT(pname: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetFloatv(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetFogFuncSGIS(points: *GLfloat) -> c_void)
    fn_ptr!(fn GetFragDataIndex(program: GLuint, name: *GLchar) -> GLint)
    fn_ptr!(fn GetFragDataLocation(program: GLuint, name: *GLchar) -> GLint)
    fn_ptr!(fn GetFragDataLocationEXT(program: GLuint, name: *GLchar) -> GLint)
    fn_ptr!(fn GetFragmentLightfvSGIX(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetFragmentLightivSGIX(light: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFragmentMaterialfvSGIX(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetFragmentMaterialivSGIX(face: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFramebufferAttachmentParameteriv(target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFramebufferAttachmentParameterivEXT(target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFramebufferAttachmentParameterivOES(target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFramebufferParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetFramebufferParameterivEXT(framebuffer: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetGraphicsResetStatusARB() -> GLenum)
    fn_ptr!(fn GetGraphicsResetStatusEXT() -> GLenum)
    fn_ptr!(fn GetHandleARB(pname: GLenum) -> GLhandleARB)
    fn_ptr!(fn GetHistogram(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void)
    fn_ptr!(fn GetHistogramEXT(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void)
    fn_ptr!(fn GetHistogramParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetHistogramParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetHistogramParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetHistogramParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetHistogramParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetImageHandleARB(texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64)
    fn_ptr!(fn GetImageHandleNV(texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64)
    fn_ptr!(fn GetImageTransformParameterfvHP(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetImageTransformParameterivHP(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetInfoLogARB(obj: GLhandleARB, maxLength: GLsizei, length: *GLsizei, infoLog: *GLcharARB) -> c_void)
    fn_ptr!(fn GetInstrumentsSGIX() -> GLint)
    fn_ptr!(fn GetInteger64i_v(target: GLenum, index: GLuint, data: *GLint64) -> c_void)
    fn_ptr!(fn GetInteger64v(pname: GLenum, params: *GLint64) -> c_void)
    fn_ptr!(fn GetInteger64vAPPLE(pname: GLenum, params: *GLint64) -> c_void)
    fn_ptr!(fn GetIntegerIndexedvEXT(target: GLenum, index: GLuint, data: *GLint) -> c_void)
    fn_ptr!(fn GetIntegeri_v(target: GLenum, index: GLuint, data: *GLint) -> c_void)
    fn_ptr!(fn GetIntegeri_vEXT(target: GLenum, index: GLuint, data: *GLint) -> c_void)
    fn_ptr!(fn GetIntegerui64i_vNV(value: GLenum, index: GLuint, result: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetIntegerui64vNV(value: GLenum, result: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetIntegerv(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetInternalformati64v(target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: *GLint64) -> c_void)
    fn_ptr!(fn GetInternalformativ(target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn GetInvariantBooleanvEXT(id: GLuint, value: GLenum, data: *GLboolean) -> c_void)
    fn_ptr!(fn GetInvariantFloatvEXT(id: GLuint, value: GLenum, data: *GLfloat) -> c_void)
    fn_ptr!(fn GetInvariantIntegervEXT(id: GLuint, value: GLenum, data: *GLint) -> c_void)
    fn_ptr!(fn GetLightfv(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetLightiv(light: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetLightx(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetLightxOES(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetLightxv(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetLightxvOES(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetListParameterfvSGIX(list: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetListParameterivSGIX(list: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetLocalConstantBooleanvEXT(id: GLuint, value: GLenum, data: *GLboolean) -> c_void)
    fn_ptr!(fn GetLocalConstantFloatvEXT(id: GLuint, value: GLenum, data: *GLfloat) -> c_void)
    fn_ptr!(fn GetLocalConstantIntegervEXT(id: GLuint, value: GLenum, data: *GLint) -> c_void)
    fn_ptr!(fn GetMapAttribParameterfvNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMapAttribParameterivNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMapControlPointsNV(target: GLenum, index: GLuint, type_: GLenum, ustride: GLsizei, vstride: GLsizei, packed: GLboolean, points: *GLvoid) -> c_void)
    fn_ptr!(fn GetMapParameterfvNV(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMapParameterivNV(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMapdv(target: GLenum, query: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn GetMapfv(target: GLenum, query: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn GetMapiv(target: GLenum, query: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn GetMapxvOES(target: GLenum, query: GLenum, v: *GLfixed) -> c_void)
    fn_ptr!(fn GetMaterialfv(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMaterialiv(face: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMaterialx(face: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn GetMaterialxOES(face: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn GetMaterialxv(face: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetMaterialxvOES(face: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetMinmax(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void)
    fn_ptr!(fn GetMinmaxEXT(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, values: *GLvoid) -> c_void)
    fn_ptr!(fn GetMinmaxParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMinmaxParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMinmaxParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMinmaxParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMultiTexEnvfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMultiTexEnvivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMultiTexGendvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetMultiTexGenfvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMultiTexGenivEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMultiTexImageEXT(texunit: GLenum, target: GLenum, level: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn GetMultiTexLevelParameterfvEXT(texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMultiTexLevelParameterivEXT(texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMultiTexParameterIivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMultiTexParameterIuivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetMultiTexParameterfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetMultiTexParameterivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetMultisamplefv(pname: GLenum, index: GLuint, val: *GLfloat) -> c_void)
    fn_ptr!(fn GetMultisamplefvNV(pname: GLenum, index: GLuint, val: *GLfloat) -> c_void)
    fn_ptr!(fn GetNamedBufferParameterivEXT(buffer: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetNamedBufferParameterui64vNV(buffer: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetNamedBufferPointervEXT(buffer: GLuint, pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetNamedBufferSubDataEXT(buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void)
    fn_ptr!(fn GetNamedFramebufferAttachmentParameterivEXT(framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetNamedFramebufferParameterivEXT(framebuffer: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetNamedProgramLocalParameterIivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLint) -> c_void)
    fn_ptr!(fn GetNamedProgramLocalParameterIuivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLuint) -> c_void)
    fn_ptr!(fn GetNamedProgramLocalParameterdvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetNamedProgramLocalParameterfvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetNamedProgramStringEXT(program: GLuint, target: GLenum, pname: GLenum, string: *GLvoid) -> c_void)
    fn_ptr!(fn GetNamedProgramivEXT(program: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetNamedRenderbufferParameterivEXT(renderbuffer: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetNamedStringARB(namelen: GLint, name: *GLchar, bufSize: GLsizei, stringlen: *GLint, string: *GLchar) -> c_void)
    fn_ptr!(fn GetNamedStringivARB(namelen: GLint, name: *GLchar, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetObjectBufferfvATI(buffer: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetObjectBufferivATI(buffer: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetObjectLabel(identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn GetObjectLabelEXT(type_: GLenum, object: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn GetObjectLabelKHR(identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn GetObjectParameterfvARB(obj: GLhandleARB, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetObjectParameterivAPPLE(objectType: GLenum, name: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetObjectParameterivARB(obj: GLhandleARB, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetObjectPtrLabel(ptr: *c_void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn GetObjectPtrLabelKHR(ptr: *c_void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn GetOcclusionQueryivNV(id: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetOcclusionQueryuivNV(id: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetPathColorGenfvNV(color: GLenum, pname: GLenum, value: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathColorGenivNV(color: GLenum, pname: GLenum, value: *GLint) -> c_void)
    fn_ptr!(fn GetPathCommandsNV(path: GLuint, commands: *GLubyte) -> c_void)
    fn_ptr!(fn GetPathCoordsNV(path: GLuint, coords: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathDashArrayNV(path: GLuint, dashArray: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathLengthNV(path: GLuint, startSegment: GLsizei, numSegments: GLsizei) -> GLfloat)
    fn_ptr!(fn GetPathMetricRangeNV(metricQueryMask: GLbitfield, firstPathName: GLuint, numPaths: GLsizei, stride: GLsizei, metrics: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathMetricsNV(metricQueryMask: GLbitfield, numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, stride: GLsizei, metrics: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathParameterfvNV(path: GLuint, pname: GLenum, value: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathParameterivNV(path: GLuint, pname: GLenum, value: *GLint) -> c_void)
    fn_ptr!(fn GetPathSpacingNV(pathListMode: GLenum, numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, advanceScale: GLfloat, kerningScale: GLfloat, transformType: GLenum, returnedSpacing: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathTexGenfvNV(texCoordSet: GLenum, pname: GLenum, value: *GLfloat) -> c_void)
    fn_ptr!(fn GetPathTexGenivNV(texCoordSet: GLenum, pname: GLenum, value: *GLint) -> c_void)
    fn_ptr!(fn GetPerfMonitorCounterDataAMD(monitor: GLuint, pname: GLenum, dataSize: GLsizei, data: *GLuint, bytesWritten: *GLint) -> c_void)
    fn_ptr!(fn GetPerfMonitorCounterInfoAMD(group: GLuint, counter: GLuint, pname: GLenum, data: *GLvoid) -> c_void)
    fn_ptr!(fn GetPerfMonitorCounterStringAMD(group: GLuint, counter: GLuint, bufSize: GLsizei, length: *GLsizei, counterString: *GLchar) -> c_void)
    fn_ptr!(fn GetPerfMonitorCountersAMD(group: GLuint, numCounters: *GLint, maxActiveCounters: *GLint, counterSize: GLsizei, counters: *GLuint) -> c_void)
    fn_ptr!(fn GetPerfMonitorGroupStringAMD(group: GLuint, bufSize: GLsizei, length: *GLsizei, groupString: *GLchar) -> c_void)
    fn_ptr!(fn GetPerfMonitorGroupsAMD(numGroups: *GLint, groupsSize: GLsizei, groups: *GLuint) -> c_void)
    fn_ptr!(fn GetPixelMapfv(map: GLenum, values: *GLfloat) -> c_void)
    fn_ptr!(fn GetPixelMapuiv(map: GLenum, values: *GLuint) -> c_void)
    fn_ptr!(fn GetPixelMapusv(map: GLenum, values: *GLushort) -> c_void)
    fn_ptr!(fn GetPixelMapxv(map: GLenum, size: GLint, values: *GLfixed) -> c_void)
    fn_ptr!(fn GetPixelTexGenParameterfvSGIS(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetPixelTexGenParameterivSGIS(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetPixelTransformParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetPixelTransformParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetPointerIndexedvEXT(target: GLenum, index: GLuint, data: **GLvoid) -> c_void)
    fn_ptr!(fn GetPointeri_vEXT(pname: GLenum, index: GLuint, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetPointerv(pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetPointervEXT(pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetPointervKHR(pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetPolygonStipple(mask: *GLubyte) -> c_void)
    fn_ptr!(fn GetProgramBinary(program: GLuint, bufSize: GLsizei, length: *GLsizei, binaryFormat: *GLenum, binary: *GLvoid) -> c_void)
    fn_ptr!(fn GetProgramBinaryOES(program: GLuint, bufSize: GLsizei, length: *GLsizei, binaryFormat: *GLenum, binary: *GLvoid) -> c_void)
    fn_ptr!(fn GetProgramEnvParameterIivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramEnvParameterIuivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void)
    fn_ptr!(fn GetProgramEnvParameterdvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetProgramEnvParameterfvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetProgramInfoLog(program: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void)
    fn_ptr!(fn GetProgramInterfaceiv(program: GLuint, programInterface: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramLocalParameterIivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramLocalParameterIuivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void)
    fn_ptr!(fn GetProgramLocalParameterdvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetProgramLocalParameterfvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetProgramNamedParameterdvNV(id: GLuint, len: GLsizei, name: *GLubyte, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetProgramNamedParameterfvNV(id: GLuint, len: GLsizei, name: *GLubyte, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetProgramParameterdvNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetProgramParameterfvNV(target: GLenum, index: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetProgramPipelineInfoLog(pipeline: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void)
    fn_ptr!(fn GetProgramPipelineInfoLogEXT(pipeline: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void)
    fn_ptr!(fn GetProgramPipelineiv(pipeline: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramPipelineivEXT(pipeline: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramResourceIndex(program: GLuint, programInterface: GLenum, name: *GLchar) -> GLuint)
    fn_ptr!(fn GetProgramResourceLocation(program: GLuint, programInterface: GLenum, name: *GLchar) -> GLint)
    fn_ptr!(fn GetProgramResourceLocationIndex(program: GLuint, programInterface: GLenum, name: *GLchar) -> GLint)
    fn_ptr!(fn GetProgramResourceName(program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: *GLsizei, name: *GLchar) -> c_void)
    fn_ptr!(fn GetProgramResourceiv(program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: *GLenum, bufSize: GLsizei, length: *GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramStageiv(program: GLuint, shadertype: GLenum, pname: GLenum, values: *GLint) -> c_void)
    fn_ptr!(fn GetProgramStringARB(target: GLenum, pname: GLenum, string: *GLvoid) -> c_void)
    fn_ptr!(fn GetProgramStringNV(id: GLuint, pname: GLenum, program: *GLubyte) -> c_void)
    fn_ptr!(fn GetProgramSubroutineParameteruivNV(target: GLenum, index: GLuint, param: *GLuint) -> c_void)
    fn_ptr!(fn GetProgramiv(program: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramivARB(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetProgramivNV(id: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryIndexediv(target: GLenum, index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryObjecti64v(id: GLuint, pname: GLenum, params: *GLint64) -> c_void)
    fn_ptr!(fn GetQueryObjecti64vEXT(id: GLuint, pname: GLenum, params: *GLint64) -> c_void)
    fn_ptr!(fn GetQueryObjectiv(id: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryObjectivARB(id: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryObjectivEXT(id: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryObjectui64v(id: GLuint, pname: GLenum, params: *GLuint64) -> c_void)
    fn_ptr!(fn GetQueryObjectui64vEXT(id: GLuint, pname: GLenum, params: *GLuint64) -> c_void)
    fn_ptr!(fn GetQueryObjectuiv(id: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetQueryObjectuivARB(id: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetQueryObjectuivEXT(id: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetQueryiv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryivARB(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetQueryivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetRenderbufferParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetRenderbufferParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetRenderbufferParameterivOES(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetSamplerParameterIiv(sampler: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetSamplerParameterIuiv(sampler: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetSamplerParameterfv(sampler: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetSamplerParameteriv(sampler: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetSeparableFilter(target: GLenum, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid, span: *GLvoid) -> c_void)
    fn_ptr!(fn GetSeparableFilterEXT(target: GLenum, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid, span: *GLvoid) -> c_void)
    fn_ptr!(fn GetShaderInfoLog(shader: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) -> c_void)
    fn_ptr!(fn GetShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum, range: *GLint, precision: *GLint) -> c_void)
    fn_ptr!(fn GetShaderSource(shader: GLuint, bufSize: GLsizei, length: *GLsizei, source: *GLchar) -> c_void)
    fn_ptr!(fn GetShaderSourceARB(obj: GLhandleARB, maxLength: GLsizei, length: *GLsizei, source: *GLcharARB) -> c_void)
    fn_ptr!(fn GetShaderiv(shader: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetSharpenTexFuncSGIS(target: GLenum, points: *GLfloat) -> c_void)
    fn_ptr!(fn GetString(name: GLenum) -> *GLubyte)
    fn_ptr!(fn GetStringi(name: GLenum, index: GLuint) -> *GLubyte)
    fn_ptr!(fn GetSubroutineIndex(program: GLuint, shadertype: GLenum, name: *GLchar) -> GLuint)
    fn_ptr!(fn GetSubroutineUniformLocation(program: GLuint, shadertype: GLenum, name: *GLchar) -> GLint)
    fn_ptr!(fn GetSynciv(sync: GLsync, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) -> c_void)
    fn_ptr!(fn GetSyncivAPPLE(sync: GLsync, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) -> c_void)
    fn_ptr!(fn GetTexBumpParameterfvATI(pname: GLenum, param: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexBumpParameterivATI(pname: GLenum, param: *GLint) -> c_void)
    fn_ptr!(fn GetTexEnvfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexEnviv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexEnvxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetTexEnvxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetTexFilterFuncSGIS(target: GLenum, filter: GLenum, weights: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexGendv(coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetTexGenfv(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexGenfvOES(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexGeniv(coord: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexGenivOES(coord: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexGenxvOES(coord: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetTexImage(target: GLenum, level: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn GetTexLevelParameterfv(target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexLevelParameteriv(target: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexLevelParameterxvOES(target: GLenum, level: GLint, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetTexParameterIiv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexParameterIivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexParameterIuiv(target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetTexParameterIuivEXT(target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetTexParameterPointervAPPLE(target: GLenum, pname: GLenum, params: **GLvoid) -> c_void)
    fn_ptr!(fn GetTexParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTexParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTexParameterxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetTexParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn GetTextureHandleARB(texture: GLuint) -> GLuint64)
    fn_ptr!(fn GetTextureHandleNV(texture: GLuint) -> GLuint64)
    fn_ptr!(fn GetTextureImageEXT(texture: GLuint, target: GLenum, level: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn GetTextureLevelParameterfvEXT(texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTextureLevelParameterivEXT(texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTextureParameterIivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTextureParameterIuivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetTextureParameterfvEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetTextureParameterivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTextureSamplerHandleARB(texture: GLuint, sampler: GLuint) -> GLuint64)
    fn_ptr!(fn GetTextureSamplerHandleNV(texture: GLuint, sampler: GLuint) -> GLuint64)
    fn_ptr!(fn GetTrackMatrixivNV(target: GLenum, address: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetTransformFeedbackVarying(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type_: *GLenum, name: *GLchar) -> c_void)
    fn_ptr!(fn GetTransformFeedbackVaryingEXT(program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type_: *GLenum, name: *GLchar) -> c_void)
    fn_ptr!(fn GetTransformFeedbackVaryingNV(program: GLuint, index: GLuint, location: *GLint) -> c_void)
    fn_ptr!(fn GetTranslatedShaderSourceANGLE(shader: GLuint, bufsize: GLsizei, length: *GLsizei, source: *GLchar) -> c_void)
    fn_ptr!(fn GetUniformBlockIndex(program: GLuint, uniformBlockName: *GLchar) -> GLuint)
    fn_ptr!(fn GetUniformBufferSizeEXT(program: GLuint, location: GLint) -> GLint)
    fn_ptr!(fn GetUniformIndices(program: GLuint, uniformCount: GLsizei, uniformNames: **GLchar, uniformIndices: *GLuint) -> c_void)
    fn_ptr!(fn GetUniformLocation(program: GLuint, name: *GLchar) -> GLint)
    fn_ptr!(fn GetUniformLocationARB(programObj: GLhandleARB, name: *GLcharARB) -> GLint)
    fn_ptr!(fn GetUniformOffsetEXT(program: GLuint, location: GLint) -> GLintptr)
    fn_ptr!(fn GetUniformSubroutineuiv(shadertype: GLenum, location: GLint, params: *GLuint) -> c_void)
    fn_ptr!(fn GetUniformdv(program: GLuint, location: GLint, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetUniformfv(program: GLuint, location: GLint, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetUniformfvARB(programObj: GLhandleARB, location: GLint, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetUniformi64vNV(program: GLuint, location: GLint, params: *GLint64EXT) -> c_void)
    fn_ptr!(fn GetUniformiv(program: GLuint, location: GLint, params: *GLint) -> c_void)
    fn_ptr!(fn GetUniformivARB(programObj: GLhandleARB, location: GLint, params: *GLint) -> c_void)
    fn_ptr!(fn GetUniformui64vNV(program: GLuint, location: GLint, params: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetUniformuiv(program: GLuint, location: GLint, params: *GLuint) -> c_void)
    fn_ptr!(fn GetUniformuivEXT(program: GLuint, location: GLint, params: *GLuint) -> c_void)
    fn_ptr!(fn GetVariantArrayObjectfvATI(id: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetVariantArrayObjectivATI(id: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVariantBooleanvEXT(id: GLuint, value: GLenum, data: *GLboolean) -> c_void)
    fn_ptr!(fn GetVariantFloatvEXT(id: GLuint, value: GLenum, data: *GLfloat) -> c_void)
    fn_ptr!(fn GetVariantIntegervEXT(id: GLuint, value: GLenum, data: *GLint) -> c_void)
    fn_ptr!(fn GetVariantPointervEXT(id: GLuint, value: GLenum, data: **GLvoid) -> c_void)
    fn_ptr!(fn GetVaryingLocationNV(program: GLuint, name: *GLchar) -> GLint)
    fn_ptr!(fn GetVertexArrayIntegeri_vEXT(vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint) -> c_void)
    fn_ptr!(fn GetVertexArrayIntegervEXT(vaobj: GLuint, pname: GLenum, param: *GLint) -> c_void)
    fn_ptr!(fn GetVertexArrayPointeri_vEXT(vaobj: GLuint, index: GLuint, pname: GLenum, param: **GLvoid) -> c_void)
    fn_ptr!(fn GetVertexArrayPointervEXT(vaobj: GLuint, pname: GLenum, param: **GLvoid) -> c_void)
    fn_ptr!(fn GetVertexAttribArrayObjectfvATI(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetVertexAttribArrayObjectivATI(index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVertexAttribIiv(index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVertexAttribIivEXT(index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVertexAttribIuiv(index: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetVertexAttribIuivEXT(index: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetVertexAttribLdv(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetVertexAttribLdvEXT(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetVertexAttribLi64vNV(index: GLuint, pname: GLenum, params: *GLint64EXT) -> c_void)
    fn_ptr!(fn GetVertexAttribLui64vARB(index: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetVertexAttribLui64vNV(index: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetVertexAttribPointerv(index: GLuint, pname: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn GetVertexAttribPointervARB(index: GLuint, pname: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn GetVertexAttribPointervNV(index: GLuint, pname: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn GetVertexAttribdv(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetVertexAttribdvARB(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetVertexAttribdvNV(index: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetVertexAttribfv(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetVertexAttribfvARB(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetVertexAttribfvNV(index: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetVertexAttribiv(index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVertexAttribivARB(index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVertexAttribivNV(index: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVideoCaptureStreamdvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetVideoCaptureStreamfvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetVideoCaptureStreamivNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVideoCaptureivNV(video_capture_slot: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVideoi64vNV(video_slot: GLuint, pname: GLenum, params: *GLint64EXT) -> c_void)
    fn_ptr!(fn GetVideoivNV(video_slot: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn GetVideoui64vNV(video_slot: GLuint, pname: GLenum, params: *GLuint64EXT) -> c_void)
    fn_ptr!(fn GetVideouivNV(video_slot: GLuint, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn GetnColorTableARB(target: GLenum, format: GLenum, type_: GLenum, bufSize: GLsizei, table: *GLvoid) -> c_void)
    fn_ptr!(fn GetnCompressedTexImageARB(target: GLenum, lod: GLint, bufSize: GLsizei, img: *GLvoid) -> c_void)
    fn_ptr!(fn GetnConvolutionFilterARB(target: GLenum, format: GLenum, type_: GLenum, bufSize: GLsizei, image: *GLvoid) -> c_void)
    fn_ptr!(fn GetnHistogramARB(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, bufSize: GLsizei, values: *GLvoid) -> c_void)
    fn_ptr!(fn GetnMapdvARB(target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn GetnMapfvARB(target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn GetnMapivARB(target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLint) -> c_void)
    fn_ptr!(fn GetnMinmaxARB(target: GLenum, reset: GLboolean, format: GLenum, type_: GLenum, bufSize: GLsizei, values: *GLvoid) -> c_void)
    fn_ptr!(fn GetnPixelMapfvARB(map: GLenum, bufSize: GLsizei, values: *GLfloat) -> c_void)
    fn_ptr!(fn GetnPixelMapuivARB(map: GLenum, bufSize: GLsizei, values: *GLuint) -> c_void)
    fn_ptr!(fn GetnPixelMapusvARB(map: GLenum, bufSize: GLsizei, values: *GLushort) -> c_void)
    fn_ptr!(fn GetnPolygonStippleARB(bufSize: GLsizei, pattern: *GLubyte) -> c_void)
    fn_ptr!(fn GetnSeparableFilterARB(target: GLenum, format: GLenum, type_: GLenum, rowBufSize: GLsizei, row: *GLvoid, columnBufSize: GLsizei, column: *GLvoid, span: *GLvoid) -> c_void)
    fn_ptr!(fn GetnTexImageARB(target: GLenum, level: GLint, format: GLenum, type_: GLenum, bufSize: GLsizei, img: *GLvoid) -> c_void)
    fn_ptr!(fn GetnUniformdvARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLdouble) -> c_void)
    fn_ptr!(fn GetnUniformfvARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetnUniformfvEXT(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLfloat) -> c_void)
    fn_ptr!(fn GetnUniformivARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn GetnUniformivEXT(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn GetnUniformuivARB(program: GLuint, location: GLint, bufSize: GLsizei, params: *GLuint) -> c_void)
    fn_ptr!(fn GlobalAlphaFactorbSUN(factor: GLbyte) -> c_void)
    fn_ptr!(fn GlobalAlphaFactordSUN(factor: GLdouble) -> c_void)
    fn_ptr!(fn GlobalAlphaFactorfSUN(factor: GLfloat) -> c_void)
    fn_ptr!(fn GlobalAlphaFactoriSUN(factor: GLint) -> c_void)
    fn_ptr!(fn GlobalAlphaFactorsSUN(factor: GLshort) -> c_void)
    fn_ptr!(fn GlobalAlphaFactorubSUN(factor: GLubyte) -> c_void)
    fn_ptr!(fn GlobalAlphaFactoruiSUN(factor: GLuint) -> c_void)
    fn_ptr!(fn GlobalAlphaFactorusSUN(factor: GLushort) -> c_void)
    fn_ptr!(fn Hint(target: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn HintPGI(target: GLenum, mode: GLint) -> c_void)
    fn_ptr!(fn Histogram(target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) -> c_void)
    fn_ptr!(fn HistogramEXT(target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) -> c_void)
    fn_ptr!(fn IglooInterfaceSGIX(pname: GLenum, params: *GLvoid) -> c_void)
    fn_ptr!(fn ImageTransformParameterfHP(target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn ImageTransformParameterfvHP(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn ImageTransformParameteriHP(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn ImageTransformParameterivHP(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn ImportSyncEXT(external_sync_type: GLenum, external_sync: GLintptr, flags: GLbitfield) -> GLsync)
    fn_ptr!(fn IndexFormatNV(type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn IndexFuncEXT(func: GLenum, ref_: GLclampf) -> c_void)
    fn_ptr!(fn IndexMask(mask: GLuint) -> c_void)
    fn_ptr!(fn IndexMaterialEXT(face: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn IndexPointer(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn IndexPointerEXT(type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn IndexPointerListIBM(type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn Indexd(c: GLdouble) -> c_void)
    fn_ptr!(fn Indexdv(c: *GLdouble) -> c_void)
    fn_ptr!(fn Indexf(c: GLfloat) -> c_void)
    fn_ptr!(fn Indexfv(c: *GLfloat) -> c_void)
    fn_ptr!(fn Indexi(c: GLint) -> c_void)
    fn_ptr!(fn Indexiv(c: *GLint) -> c_void)
    fn_ptr!(fn Indexs(c: GLshort) -> c_void)
    fn_ptr!(fn Indexsv(c: *GLshort) -> c_void)
    fn_ptr!(fn Indexub(c: GLubyte) -> c_void)
    fn_ptr!(fn Indexubv(c: *GLubyte) -> c_void)
    fn_ptr!(fn IndexxOES(component: GLfixed) -> c_void)
    fn_ptr!(fn IndexxvOES(component: *GLfixed) -> c_void)
    fn_ptr!(fn InitNames() -> c_void)
    fn_ptr!(fn InsertComponentEXT(res: GLuint, src: GLuint, num: GLuint) -> c_void)
    fn_ptr!(fn InsertEventMarkerEXT(length: GLsizei, marker: *GLchar) -> c_void)
    fn_ptr!(fn InstrumentsBufferSGIX(size: GLsizei, buffer: *GLint) -> c_void)
    fn_ptr!(fn InterleavedArrays(format: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn InterpolatePathsNV(resultPath: GLuint, pathA: GLuint, pathB: GLuint, weight: GLfloat) -> c_void)
    fn_ptr!(fn InvalidateBufferData(buffer: GLuint) -> c_void)
    fn_ptr!(fn InvalidateBufferSubData(buffer: GLuint, offset: GLintptr, length: GLsizeiptr) -> c_void)
    fn_ptr!(fn InvalidateFramebuffer(target: GLenum, numAttachments: GLsizei, attachments: *GLenum) -> c_void)
    fn_ptr!(fn InvalidateSubFramebuffer(target: GLenum, numAttachments: GLsizei, attachments: *GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn InvalidateTexImage(texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn InvalidateTexSubImage(texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void)
    fn_ptr!(fn IsAsyncMarkerSGIX(marker: GLuint) -> GLboolean)
    fn_ptr!(fn IsBuffer(buffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsBufferARB(buffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsBufferResidentNV(target: GLenum) -> GLboolean)
    fn_ptr!(fn IsEnabled(cap: GLenum) -> GLboolean)
    fn_ptr!(fn IsEnabledIndexedEXT(target: GLenum, index: GLuint) -> GLboolean)
    fn_ptr!(fn IsEnabledi(target: GLenum, index: GLuint) -> GLboolean)
    fn_ptr!(fn IsFenceAPPLE(fence: GLuint) -> GLboolean)
    fn_ptr!(fn IsFenceNV(fence: GLuint) -> GLboolean)
    fn_ptr!(fn IsFramebuffer(framebuffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsFramebufferEXT(framebuffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsFramebufferOES(framebuffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsImageHandleResidentARB(handle: GLuint64) -> GLboolean)
    fn_ptr!(fn IsImageHandleResidentNV(handle: GLuint64) -> GLboolean)
    fn_ptr!(fn IsList(list: GLuint) -> GLboolean)
    fn_ptr!(fn IsNameAMD(identifier: GLenum, name: GLuint) -> GLboolean)
    fn_ptr!(fn IsNamedBufferResidentNV(buffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsNamedStringARB(namelen: GLint, name: *GLchar) -> GLboolean)
    fn_ptr!(fn IsObjectBufferATI(buffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsOcclusionQueryNV(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsPathNV(path: GLuint) -> GLboolean)
    fn_ptr!(fn IsPointInFillPathNV(path: GLuint, mask: GLuint, x: GLfloat, y: GLfloat) -> GLboolean)
    fn_ptr!(fn IsPointInStrokePathNV(path: GLuint, x: GLfloat, y: GLfloat) -> GLboolean)
    fn_ptr!(fn IsProgram(program: GLuint) -> GLboolean)
    fn_ptr!(fn IsProgramARB(program: GLuint) -> GLboolean)
    fn_ptr!(fn IsProgramNV(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsProgramPipeline(pipeline: GLuint) -> GLboolean)
    fn_ptr!(fn IsProgramPipelineEXT(pipeline: GLuint) -> GLboolean)
    fn_ptr!(fn IsQuery(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsQueryARB(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsQueryEXT(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsRenderbuffer(renderbuffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsRenderbufferEXT(renderbuffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsRenderbufferOES(renderbuffer: GLuint) -> GLboolean)
    fn_ptr!(fn IsSampler(sampler: GLuint) -> GLboolean)
    fn_ptr!(fn IsShader(shader: GLuint) -> GLboolean)
    fn_ptr!(fn IsSync(sync: GLsync) -> GLboolean)
    fn_ptr!(fn IsSyncAPPLE(sync: GLsync) -> GLboolean)
    fn_ptr!(fn IsTexture(texture: GLuint) -> GLboolean)
    fn_ptr!(fn IsTextureEXT(texture: GLuint) -> GLboolean)
    fn_ptr!(fn IsTextureHandleResidentARB(handle: GLuint64) -> GLboolean)
    fn_ptr!(fn IsTextureHandleResidentNV(handle: GLuint64) -> GLboolean)
    fn_ptr!(fn IsTransformFeedback(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsTransformFeedbackNV(id: GLuint) -> GLboolean)
    fn_ptr!(fn IsVariantEnabledEXT(id: GLuint, cap: GLenum) -> GLboolean)
    fn_ptr!(fn IsVertexArray(array: GLuint) -> GLboolean)
    fn_ptr!(fn IsVertexArrayAPPLE(array: GLuint) -> GLboolean)
    fn_ptr!(fn IsVertexArrayOES(array: GLuint) -> GLboolean)
    fn_ptr!(fn IsVertexAttribEnabledAPPLE(index: GLuint, pname: GLenum) -> GLboolean)
    fn_ptr!(fn LabelObjectEXT(type_: GLenum, object: GLuint, length: GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn LightEnviSGIX(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn LightModelf(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn LightModelfv(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn LightModeli(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn LightModeliv(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn LightModelx(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn LightModelxOES(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn LightModelxv(pname: GLenum, param: *GLfixed) -> c_void)
    fn_ptr!(fn LightModelxvOES(pname: GLenum, param: *GLfixed) -> c_void)
    fn_ptr!(fn Lightf(light: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn Lightfv(light: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn Lighti(light: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn Lightiv(light: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn Lightx(light: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn LightxOES(light: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn Lightxv(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn LightxvOES(light: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn LineStipple(factor: GLint, pattern: GLushort) -> c_void)
    fn_ptr!(fn LineWidth(width: GLfloat) -> c_void)
    fn_ptr!(fn LineWidthx(width: GLfixed) -> c_void)
    fn_ptr!(fn LineWidthxOES(width: GLfixed) -> c_void)
    fn_ptr!(fn LinkProgram(program: GLuint) -> c_void)
    fn_ptr!(fn LinkProgramARB(programObj: GLhandleARB) -> c_void)
    fn_ptr!(fn ListBase(base: GLuint) -> c_void)
    fn_ptr!(fn ListParameterfSGIX(list: GLuint, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn ListParameterfvSGIX(list: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn ListParameteriSGIX(list: GLuint, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn ListParameterivSGIX(list: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn LoadIdentity() -> c_void)
    fn_ptr!(fn LoadIdentityDeformationMapSGIX(mask: GLbitfield) -> c_void)
    fn_ptr!(fn LoadMatrixd(m: *GLdouble) -> c_void)
    fn_ptr!(fn LoadMatrixf(m: *GLfloat) -> c_void)
    fn_ptr!(fn LoadMatrixx(m: *GLfixed) -> c_void)
    fn_ptr!(fn LoadMatrixxOES(m: *GLfixed) -> c_void)
    fn_ptr!(fn LoadName(name: GLuint) -> c_void)
    fn_ptr!(fn LoadPaletteFromModelViewMatrixOES() -> c_void)
    fn_ptr!(fn LoadProgramNV(target: GLenum, id: GLuint, len: GLsizei, program: *GLubyte) -> c_void)
    fn_ptr!(fn LoadTransposeMatrixd(m: *GLdouble) -> c_void)
    fn_ptr!(fn LoadTransposeMatrixdARB(m: *GLdouble) -> c_void)
    fn_ptr!(fn LoadTransposeMatrixf(m: *GLfloat) -> c_void)
    fn_ptr!(fn LoadTransposeMatrixfARB(m: *GLfloat) -> c_void)
    fn_ptr!(fn LoadTransposeMatrixxOES(m: *GLfixed) -> c_void)
    fn_ptr!(fn LockArraysEXT(first: GLint, count: GLsizei) -> c_void)
    fn_ptr!(fn LogicOp(opcode: GLenum) -> c_void)
    fn_ptr!(fn MakeBufferNonResidentNV(target: GLenum) -> c_void)
    fn_ptr!(fn MakeBufferResidentNV(target: GLenum, access: GLenum) -> c_void)
    fn_ptr!(fn MakeImageHandleNonResidentARB(handle: GLuint64) -> c_void)
    fn_ptr!(fn MakeImageHandleNonResidentNV(handle: GLuint64) -> c_void)
    fn_ptr!(fn MakeImageHandleResidentARB(handle: GLuint64, access: GLenum) -> c_void)
    fn_ptr!(fn MakeImageHandleResidentNV(handle: GLuint64, access: GLenum) -> c_void)
    fn_ptr!(fn MakeNamedBufferNonResidentNV(buffer: GLuint) -> c_void)
    fn_ptr!(fn MakeNamedBufferResidentNV(buffer: GLuint, access: GLenum) -> c_void)
    fn_ptr!(fn MakeTextureHandleNonResidentARB(handle: GLuint64) -> c_void)
    fn_ptr!(fn MakeTextureHandleNonResidentNV(handle: GLuint64) -> c_void)
    fn_ptr!(fn MakeTextureHandleResidentARB(handle: GLuint64) -> c_void)
    fn_ptr!(fn MakeTextureHandleResidentNV(handle: GLuint64) -> c_void)
    fn_ptr!(fn Map1d(target: GLenum, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: *GLdouble) -> c_void)
    fn_ptr!(fn Map1f(target: GLenum, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: *GLfloat) -> c_void)
    fn_ptr!(fn Map1xOES(target: GLenum, u1: GLfixed, u2: GLfixed, stride: GLint, order: GLint, points: GLfixed) -> c_void)
    fn_ptr!(fn Map2d(target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: *GLdouble) -> c_void)
    fn_ptr!(fn Map2f(target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: *GLfloat) -> c_void)
    fn_ptr!(fn Map2xOES(target: GLenum, u1: GLfixed, u2: GLfixed, ustride: GLint, uorder: GLint, v1: GLfixed, v2: GLfixed, vstride: GLint, vorder: GLint, points: GLfixed) -> c_void)
    fn_ptr!(fn MapBuffer(target: GLenum, access: GLenum) -> *c_void)
    fn_ptr!(fn MapBufferARB(target: GLenum, access: GLenum) -> *c_void)
    fn_ptr!(fn MapBufferOES(target: GLenum, access: GLenum) -> *c_void)
    fn_ptr!(fn MapBufferRange(target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *c_void)
    fn_ptr!(fn MapBufferRangeEXT(target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *c_void)
    fn_ptr!(fn MapControlPointsNV(target: GLenum, index: GLuint, type_: GLenum, ustride: GLsizei, vstride: GLsizei, uorder: GLint, vorder: GLint, packed: GLboolean, points: *GLvoid) -> c_void)
    fn_ptr!(fn MapGrid1d(un: GLint, u1: GLdouble, u2: GLdouble) -> c_void)
    fn_ptr!(fn MapGrid1f(un: GLint, u1: GLfloat, u2: GLfloat) -> c_void)
    fn_ptr!(fn MapGrid1xOES(n: GLint, u1: GLfixed, u2: GLfixed) -> c_void)
    fn_ptr!(fn MapGrid2d(un: GLint, u1: GLdouble, u2: GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble) -> c_void)
    fn_ptr!(fn MapGrid2f(un: GLint, u1: GLfloat, u2: GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat) -> c_void)
    fn_ptr!(fn MapGrid2xOES(n: GLint, u1: GLfixed, u2: GLfixed, v1: GLfixed, v2: GLfixed) -> c_void)
    fn_ptr!(fn MapNamedBufferEXT(buffer: GLuint, access: GLenum) -> *c_void)
    fn_ptr!(fn MapNamedBufferRangeEXT(buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *c_void)
    fn_ptr!(fn MapObjectBufferATI(buffer: GLuint) -> *c_void)
    fn_ptr!(fn MapParameterfvNV(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn MapParameterivNV(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn MapTexture2DINTEL(texture: GLuint, level: GLint, access: GLbitfield, stride: *GLint, layout: *GLenum) -> *c_void)
    fn_ptr!(fn MapVertexAttrib1dAPPLE(index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: *GLdouble) -> c_void)
    fn_ptr!(fn MapVertexAttrib1fAPPLE(index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: *GLfloat) -> c_void)
    fn_ptr!(fn MapVertexAttrib2dAPPLE(index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: *GLdouble) -> c_void)
    fn_ptr!(fn MapVertexAttrib2fAPPLE(index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: *GLfloat) -> c_void)
    fn_ptr!(fn Materialf(face: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn Materialfv(face: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn Materiali(face: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn Materialiv(face: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn Materialx(face: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn MaterialxOES(face: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn Materialxv(face: GLenum, pname: GLenum, param: *GLfixed) -> c_void)
    fn_ptr!(fn MaterialxvOES(face: GLenum, pname: GLenum, param: *GLfixed) -> c_void)
    fn_ptr!(fn MatrixFrustumEXT(mode: GLenum, left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void)
    fn_ptr!(fn MatrixIndexPointerARB(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn MatrixIndexPointerOES(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn MatrixIndexubvARB(size: GLint, indices: *GLubyte) -> c_void)
    fn_ptr!(fn MatrixIndexuivARB(size: GLint, indices: *GLuint) -> c_void)
    fn_ptr!(fn MatrixIndexusvARB(size: GLint, indices: *GLushort) -> c_void)
    fn_ptr!(fn MatrixLoadIdentityEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn MatrixLoadTransposedEXT(mode: GLenum, m: *GLdouble) -> c_void)
    fn_ptr!(fn MatrixLoadTransposefEXT(mode: GLenum, m: *GLfloat) -> c_void)
    fn_ptr!(fn MatrixLoaddEXT(mode: GLenum, m: *GLdouble) -> c_void)
    fn_ptr!(fn MatrixLoadfEXT(mode: GLenum, m: *GLfloat) -> c_void)
    fn_ptr!(fn MatrixMode(mode: GLenum) -> c_void)
    fn_ptr!(fn MatrixMultTransposedEXT(mode: GLenum, m: *GLdouble) -> c_void)
    fn_ptr!(fn MatrixMultTransposefEXT(mode: GLenum, m: *GLfloat) -> c_void)
    fn_ptr!(fn MatrixMultdEXT(mode: GLenum, m: *GLdouble) -> c_void)
    fn_ptr!(fn MatrixMultfEXT(mode: GLenum, m: *GLfloat) -> c_void)
    fn_ptr!(fn MatrixOrthoEXT(mode: GLenum, left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void)
    fn_ptr!(fn MatrixPopEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn MatrixPushEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn MatrixRotatedEXT(mode: GLenum, angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn MatrixRotatefEXT(mode: GLenum, angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn MatrixScaledEXT(mode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn MatrixScalefEXT(mode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn MatrixTranslatedEXT(mode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn MatrixTranslatefEXT(mode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn MemoryBarrier(barriers: GLbitfield) -> c_void)
    fn_ptr!(fn MemoryBarrierEXT(barriers: GLbitfield) -> c_void)
    fn_ptr!(fn MinSampleShading(value: GLfloat) -> c_void)
    fn_ptr!(fn MinSampleShadingARB(value: GLfloat) -> c_void)
    fn_ptr!(fn Minmax(target: GLenum, internalformat: GLenum, sink: GLboolean) -> c_void)
    fn_ptr!(fn MinmaxEXT(target: GLenum, internalformat: GLenum, sink: GLboolean) -> c_void)
    fn_ptr!(fn MultMatrixd(m: *GLdouble) -> c_void)
    fn_ptr!(fn MultMatrixf(m: *GLfloat) -> c_void)
    fn_ptr!(fn MultMatrixx(m: *GLfixed) -> c_void)
    fn_ptr!(fn MultMatrixxOES(m: *GLfixed) -> c_void)
    fn_ptr!(fn MultTransposeMatrixd(m: *GLdouble) -> c_void)
    fn_ptr!(fn MultTransposeMatrixdARB(m: *GLdouble) -> c_void)
    fn_ptr!(fn MultTransposeMatrixf(m: *GLfloat) -> c_void)
    fn_ptr!(fn MultTransposeMatrixfARB(m: *GLfloat) -> c_void)
    fn_ptr!(fn MultTransposeMatrixxOES(m: *GLfixed) -> c_void)
    fn_ptr!(fn MultiDrawArrays(mode: GLenum, first: *GLint, count: *GLsizei, drawcount: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawArraysEXT(mode: GLenum, first: *GLint, count: *GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawArraysIndirect(mode: GLenum, indirect: *c_void, drawcount: GLsizei, stride: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawArraysIndirectAMD(mode: GLenum, indirect: *GLvoid, primcount: GLsizei, stride: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawArraysIndirectBindlessNV(mode: GLenum, indirect: *GLvoid, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) -> c_void)
    fn_ptr!(fn MultiDrawElementsIndirectBindlessNV(mode: GLenum, type_: GLenum, indirect: *GLvoid, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) -> c_void)
    fn_ptr!(fn MultiDrawArraysIndirectCountARB(mode: GLenum, indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawElementArrayAPPLE(mode: GLenum, first: *GLint, count: *GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawElements(mode: GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, drawcount: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawElementsBaseVertex(mode: GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, drawcount: GLsizei, basevertex: *GLint) -> c_void)
    fn_ptr!(fn MultiDrawElementsEXT(mode: GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, primcount: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawElementsIndirect(mode: GLenum, type_: GLenum, indirect: *c_void, drawcount: GLsizei, stride: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawElementsIndirectAMD(mode: GLenum, type_: GLenum, indirect: *GLvoid, primcount: GLsizei, stride: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawElementsIndirectCountARB(mode: GLenum, type_: GLenum, indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) -> c_void)
    fn_ptr!(fn MultiDrawRangeElementArrayAPPLE(mode: GLenum, start: GLuint, end: GLuint, first: *GLint, count: *GLsizei, primcount: GLsizei) -> c_void)
    fn_ptr!(fn MultiModeDrawArraysIBM(mode: *GLenum, first: *GLint, count: *GLsizei, primcount: GLsizei, modestride: GLint) -> c_void)
    fn_ptr!(fn MultiModeDrawElementsIBM(mode: *GLenum, count: *GLsizei, type_: GLenum, indices: **GLvoid, primcount: GLsizei, modestride: GLint) -> c_void)
    fn_ptr!(fn MultiTexBufferEXT(texunit: GLenum, target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoord1bOES(texture: GLenum, s: GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord1bvOES(texture: GLenum, coords: *GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord1d(target: GLenum, s: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord1dARB(target: GLenum, s: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord1dv(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord1dvARB(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord1f(target: GLenum, s: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord1fARB(target: GLenum, s: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord1fv(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord1fvARB(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord1hNV(target: GLenum, s: GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord1hvNV(target: GLenum, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord1i(target: GLenum, s: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord1iARB(target: GLenum, s: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord1iv(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord1ivARB(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord1s(target: GLenum, s: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord1sARB(target: GLenum, s: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord1sv(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord1svARB(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord1xOES(texture: GLenum, s: GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord1xvOES(texture: GLenum, coords: *GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord2bOES(texture: GLenum, s: GLbyte, t: GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord2bvOES(texture: GLenum, coords: *GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord2d(target: GLenum, s: GLdouble, t: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord2dARB(target: GLenum, s: GLdouble, t: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord2dv(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord2dvARB(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord2f(target: GLenum, s: GLfloat, t: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord2fARB(target: GLenum, s: GLfloat, t: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord2fv(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord2fvARB(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord2hNV(target: GLenum, s: GLhalfNV, t: GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord2hvNV(target: GLenum, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord2i(target: GLenum, s: GLint, t: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord2iARB(target: GLenum, s: GLint, t: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord2iv(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord2ivARB(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord2s(target: GLenum, s: GLshort, t: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord2sARB(target: GLenum, s: GLshort, t: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord2sv(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord2svARB(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord2xOES(texture: GLenum, s: GLfixed, t: GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord2xvOES(texture: GLenum, coords: *GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord3bOES(texture: GLenum, s: GLbyte, t: GLbyte, r: GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord3bvOES(texture: GLenum, coords: *GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord3d(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord3dARB(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord3dv(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord3dvARB(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord3f(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord3fARB(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord3fv(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord3fvARB(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord3hNV(target: GLenum, s: GLhalfNV, t: GLhalfNV, r: GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord3hvNV(target: GLenum, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord3i(target: GLenum, s: GLint, t: GLint, r: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord3iARB(target: GLenum, s: GLint, t: GLint, r: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord3iv(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord3ivARB(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord3s(target: GLenum, s: GLshort, t: GLshort, r: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord3sARB(target: GLenum, s: GLshort, t: GLshort, r: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord3sv(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord3svARB(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord3xOES(texture: GLenum, s: GLfixed, t: GLfixed, r: GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord3xvOES(texture: GLenum, coords: *GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord4bOES(texture: GLenum, s: GLbyte, t: GLbyte, r: GLbyte, q: GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord4bvOES(texture: GLenum, coords: *GLbyte) -> c_void)
    fn_ptr!(fn MultiTexCoord4d(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord4dARB(target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord4dv(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord4dvARB(target: GLenum, v: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexCoord4f(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord4fARB(target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord4fv(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord4fvARB(target: GLenum, v: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexCoord4hNV(target: GLenum, s: GLhalfNV, t: GLhalfNV, r: GLhalfNV, q: GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord4hvNV(target: GLenum, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn MultiTexCoord4i(target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord4iARB(target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord4iv(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord4ivARB(target: GLenum, v: *GLint) -> c_void)
    fn_ptr!(fn MultiTexCoord4s(target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord4sARB(target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord4sv(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord4svARB(target: GLenum, v: *GLshort) -> c_void)
    fn_ptr!(fn MultiTexCoord4x(texture: GLenum, s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord4xOES(texture: GLenum, s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoord4xvOES(texture: GLenum, coords: *GLfixed) -> c_void)
    fn_ptr!(fn MultiTexCoordP1ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP1uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP2ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP2uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP3ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP3uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP4ui(texture: GLenum, type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordP4uiv(texture: GLenum, type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn MultiTexCoordPointerEXT(texunit: GLenum, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn MultiTexEnvfEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexEnvfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexEnviEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn MultiTexEnvivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn MultiTexGendEXT(texunit: GLenum, coord: GLenum, pname: GLenum, param: GLdouble) -> c_void)
    fn_ptr!(fn MultiTexGendvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn MultiTexGenfEXT(texunit: GLenum, coord: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexGenfvEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexGeniEXT(texunit: GLenum, coord: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn MultiTexGenivEXT(texunit: GLenum, coord: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn MultiTexImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn MultiTexImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn MultiTexImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn MultiTexParameterIivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn MultiTexParameterIuivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn MultiTexParameterfEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn MultiTexParameterfvEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn MultiTexParameteriEXT(texunit: GLenum, target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn MultiTexParameterivEXT(texunit: GLenum, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn MultiTexRenderbufferEXT(texunit: GLenum, target: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn MultiTexSubImage1DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn MultiTexSubImage2DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn MultiTexSubImage3DEXT(texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn NamedBufferDataEXT(buffer: GLuint, size: GLsizeiptr, data: *GLvoid, usage: GLenum) -> c_void)
    fn_ptr!(fn NamedBufferStorageEXT(buffer: GLuint, size: GLsizeiptr, data: *c_void, flags: GLbitfield) -> c_void)
    fn_ptr!(fn NamedBufferSubDataEXT(buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *GLvoid) -> c_void)
    fn_ptr!(fn NamedCopyBufferSubDataEXT(readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn NamedFramebufferParameteriEXT(framebuffer: GLuint, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn NamedFramebufferRenderbufferEXT(framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn NamedFramebufferTexture1DEXT(framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn NamedFramebufferTexture2DEXT(framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn NamedFramebufferTexture3DEXT(framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) -> c_void)
    fn_ptr!(fn NamedFramebufferTextureEXT(framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn NamedFramebufferTextureFaceEXT(framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) -> c_void)
    fn_ptr!(fn NamedFramebufferTextureLayerEXT(framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameter4dEXT(program: GLuint, target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameter4dvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameter4fEXT(program: GLuint, target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameter4fvEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameterI4iEXT(program: GLuint, target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameterI4ivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLint) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameterI4uiEXT(program: GLuint, target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameterI4uivEXT(program: GLuint, target: GLenum, index: GLuint, params: *GLuint) -> c_void)
    fn_ptr!(fn NamedProgramLocalParameters4fvEXT(program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: *GLfloat) -> c_void)
    fn_ptr!(fn NamedProgramLocalParametersI4ivEXT(program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn NamedProgramLocalParametersI4uivEXT(program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: *GLuint) -> c_void)
    fn_ptr!(fn NamedProgramStringEXT(program: GLuint, target: GLenum, format: GLenum, len: GLsizei, string: *GLvoid) -> c_void)
    fn_ptr!(fn NamedRenderbufferStorageEXT(renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn NamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer: GLuint, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn NamedRenderbufferStorageMultisampleEXT(renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn NamedStringARB(type_: GLenum, namelen: GLint, name: *GLchar, stringlen: GLint, string: *GLchar) -> c_void)
    fn_ptr!(fn NewList(list: GLuint, mode: GLenum) -> c_void)
    fn_ptr!(fn NewObjectBufferATI(size: GLsizei, pointer: *GLvoid, usage: GLenum) -> GLuint)
    fn_ptr!(fn Normal3b(nx: GLbyte, ny: GLbyte, nz: GLbyte) -> c_void)
    fn_ptr!(fn Normal3bv(v: *GLbyte) -> c_void)
    fn_ptr!(fn Normal3d(nx: GLdouble, ny: GLdouble, nz: GLdouble) -> c_void)
    fn_ptr!(fn Normal3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn Normal3f(nx: GLfloat, ny: GLfloat, nz: GLfloat) -> c_void)
    fn_ptr!(fn Normal3fVertex3fSUN(nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Normal3fVertex3fvSUN(n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn Normal3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn Normal3hNV(nx: GLhalfNV, ny: GLhalfNV, nz: GLhalfNV) -> c_void)
    fn_ptr!(fn Normal3hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn Normal3i(nx: GLint, ny: GLint, nz: GLint) -> c_void)
    fn_ptr!(fn Normal3iv(v: *GLint) -> c_void)
    fn_ptr!(fn Normal3s(nx: GLshort, ny: GLshort, nz: GLshort) -> c_void)
    fn_ptr!(fn Normal3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn Normal3x(nx: GLfixed, ny: GLfixed, nz: GLfixed) -> c_void)
    fn_ptr!(fn Normal3xOES(nx: GLfixed, ny: GLfixed, nz: GLfixed) -> c_void)
    fn_ptr!(fn Normal3xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn NormalFormatNV(type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn NormalP3ui(type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn NormalP3uiv(type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn NormalPointer(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn NormalPointerEXT(type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn NormalPointerListIBM(type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn NormalPointervINTEL(type_: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn NormalStream3bATI(stream: GLenum, nx: GLbyte, ny: GLbyte, nz: GLbyte) -> c_void)
    fn_ptr!(fn NormalStream3bvATI(stream: GLenum, coords: *GLbyte) -> c_void)
    fn_ptr!(fn NormalStream3dATI(stream: GLenum, nx: GLdouble, ny: GLdouble, nz: GLdouble) -> c_void)
    fn_ptr!(fn NormalStream3dvATI(stream: GLenum, coords: *GLdouble) -> c_void)
    fn_ptr!(fn NormalStream3fATI(stream: GLenum, nx: GLfloat, ny: GLfloat, nz: GLfloat) -> c_void)
    fn_ptr!(fn NormalStream3fvATI(stream: GLenum, coords: *GLfloat) -> c_void)
    fn_ptr!(fn NormalStream3iATI(stream: GLenum, nx: GLint, ny: GLint, nz: GLint) -> c_void)
    fn_ptr!(fn NormalStream3ivATI(stream: GLenum, coords: *GLint) -> c_void)
    fn_ptr!(fn NormalStream3sATI(stream: GLenum, nx: GLshort, ny: GLshort, nz: GLshort) -> c_void)
    fn_ptr!(fn NormalStream3svATI(stream: GLenum, coords: *GLshort) -> c_void)
    fn_ptr!(fn ObjectLabel(identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn ObjectLabelKHR(identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn ObjectPtrLabel(ptr: *c_void, length: GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn ObjectPtrLabelKHR(ptr: *c_void, length: GLsizei, label: *GLchar) -> c_void)
    fn_ptr!(fn ObjectPurgeableAPPLE(objectType: GLenum, name: GLuint, option: GLenum) -> GLenum)
    fn_ptr!(fn ObjectUnpurgeableAPPLE(objectType: GLenum, name: GLuint, option: GLenum) -> GLenum)
    fn_ptr!(fn Ortho(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) -> c_void)
    fn_ptr!(fn Orthof(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void)
    fn_ptr!(fn OrthofOES(l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) -> c_void)
    fn_ptr!(fn Orthox(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void)
    fn_ptr!(fn OrthoxOES(l: GLfixed, r: GLfixed, b: GLfixed, t: GLfixed, n: GLfixed, f: GLfixed) -> c_void)
    fn_ptr!(fn PNTrianglesfATI(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PNTrianglesiATI(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PassTexCoordATI(dst: GLuint, coord: GLuint, swizzle: GLenum) -> c_void)
    fn_ptr!(fn PassThrough(token: GLfloat) -> c_void)
    fn_ptr!(fn PassThroughxOES(token: GLfixed) -> c_void)
    fn_ptr!(fn PatchParameterfv(pname: GLenum, values: *GLfloat) -> c_void)
    fn_ptr!(fn PatchParameteri(pname: GLenum, value: GLint) -> c_void)
    fn_ptr!(fn PathColorGenNV(color: GLenum, genMode: GLenum, colorFormat: GLenum, coeffs: *GLfloat) -> c_void)
    fn_ptr!(fn PathCommandsNV(path: GLuint, numCommands: GLsizei, commands: *GLubyte, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void)
    fn_ptr!(fn PathCoordsNV(path: GLuint, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void)
    fn_ptr!(fn PathCoverDepthFuncNV(func: GLenum) -> c_void)
    fn_ptr!(fn PathDashArrayNV(path: GLuint, dashCount: GLsizei, dashArray: *GLfloat) -> c_void)
    fn_ptr!(fn PathFogGenNV(genMode: GLenum) -> c_void)
    fn_ptr!(fn PathGlyphRangeNV(firstPathName: GLuint, fontTarget: GLenum, fontName: *GLvoid, fontStyle: GLbitfield, firstGlyph: GLuint, numGlyphs: GLsizei, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat) -> c_void)
    fn_ptr!(fn PathGlyphsNV(firstPathName: GLuint, fontTarget: GLenum, fontName: *GLvoid, fontStyle: GLbitfield, numGlyphs: GLsizei, type_: GLenum, charcodes: *GLvoid, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat) -> c_void)
    fn_ptr!(fn PathParameterfNV(path: GLuint, pname: GLenum, value: GLfloat) -> c_void)
    fn_ptr!(fn PathParameterfvNV(path: GLuint, pname: GLenum, value: *GLfloat) -> c_void)
    fn_ptr!(fn PathParameteriNV(path: GLuint, pname: GLenum, value: GLint) -> c_void)
    fn_ptr!(fn PathParameterivNV(path: GLuint, pname: GLenum, value: *GLint) -> c_void)
    fn_ptr!(fn PathStencilDepthOffsetNV(factor: GLfloat, units: GLfloat) -> c_void)
    fn_ptr!(fn PathStencilFuncNV(func: GLenum, ref_: GLint, mask: GLuint) -> c_void)
    fn_ptr!(fn PathStringNV(path: GLuint, format: GLenum, length: GLsizei, pathString: *GLvoid) -> c_void)
    fn_ptr!(fn PathSubCommandsNV(path: GLuint, commandStart: GLsizei, commandsToDelete: GLsizei, numCommands: GLsizei, commands: *GLubyte, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void)
    fn_ptr!(fn PathSubCoordsNV(path: GLuint, coordStart: GLsizei, numCoords: GLsizei, coordType: GLenum, coords: *GLvoid) -> c_void)
    fn_ptr!(fn PathTexGenNV(texCoordSet: GLenum, genMode: GLenum, components: GLint, coeffs: *GLfloat) -> c_void)
    fn_ptr!(fn PauseTransformFeedback() -> c_void)
    fn_ptr!(fn PauseTransformFeedbackNV() -> c_void)
    fn_ptr!(fn PixelDataRangeNV(target: GLenum, length: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn PixelMapfv(map: GLenum, mapsize: GLsizei, values: *GLfloat) -> c_void)
    fn_ptr!(fn PixelMapuiv(map: GLenum, mapsize: GLsizei, values: *GLuint) -> c_void)
    fn_ptr!(fn PixelMapusv(map: GLenum, mapsize: GLsizei, values: *GLushort) -> c_void)
    fn_ptr!(fn PixelMapx(map: GLenum, size: GLint, values: *GLfixed) -> c_void)
    fn_ptr!(fn PixelStoref(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PixelStorei(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PixelStorex(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn PixelTexGenParameterfSGIS(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PixelTexGenParameterfvSGIS(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn PixelTexGenParameteriSGIS(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PixelTexGenParameterivSGIS(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn PixelTexGenSGIX(mode: GLenum) -> c_void)
    fn_ptr!(fn PixelTransferf(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PixelTransferi(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PixelTransferxOES(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn PixelTransformParameterfEXT(target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PixelTransformParameterfvEXT(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn PixelTransformParameteriEXT(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PixelTransformParameterivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn PixelZoom(xfactor: GLfloat, yfactor: GLfloat) -> c_void)
    fn_ptr!(fn PixelZoomxOES(xfactor: GLfixed, yfactor: GLfixed) -> c_void)
    fn_ptr!(fn PointAlongPathNV(path: GLuint, startSegment: GLsizei, numSegments: GLsizei, distance: GLfloat, x: *GLfloat, y: *GLfloat, tangentX: *GLfloat, tangentY: *GLfloat) -> GLboolean)
    fn_ptr!(fn PointParameterf(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfARB(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfEXT(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfSGIS(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfv(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfvARB(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfvEXT(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn PointParameterfvSGIS(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn PointParameteri(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PointParameteriNV(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn PointParameteriv(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn PointParameterivNV(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn PointParameterx(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn PointParameterxOES(pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn PointParameterxv(pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn PointParameterxvOES(pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn PointSize(size: GLfloat) -> c_void)
    fn_ptr!(fn PointSizePointerOES(type_: GLenum, stride: GLsizei, pointer: *c_void) -> c_void)
    fn_ptr!(fn PointSizex(size: GLfixed) -> c_void)
    fn_ptr!(fn PointSizexOES(size: GLfixed) -> c_void)
    fn_ptr!(fn PollAsyncSGIX(markerp: *GLuint) -> GLint)
    fn_ptr!(fn PollInstrumentsSGIX(marker_p: *GLint) -> GLint)
    fn_ptr!(fn PolygonMode(face: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn PolygonOffset(factor: GLfloat, units: GLfloat) -> c_void)
    fn_ptr!(fn PolygonOffsetEXT(factor: GLfloat, bias: GLfloat) -> c_void)
    fn_ptr!(fn PolygonOffsetx(factor: GLfixed, units: GLfixed) -> c_void)
    fn_ptr!(fn PolygonOffsetxOES(factor: GLfixed, units: GLfixed) -> c_void)
    fn_ptr!(fn PolygonStipple(mask: *GLubyte) -> c_void)
    fn_ptr!(fn PopAttrib() -> c_void)
    fn_ptr!(fn PopClientAttrib() -> c_void)
    fn_ptr!(fn PopDebugGroup() -> c_void)
    fn_ptr!(fn PopDebugGroupKHR() -> c_void)
    fn_ptr!(fn PopGroupMarkerEXT() -> c_void)
    fn_ptr!(fn PopMatrix() -> c_void)
    fn_ptr!(fn PopName() -> c_void)
    fn_ptr!(fn PresentFrameDualFillNV(video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type_: GLenum, target0: GLenum, fill0: GLuint, target1: GLenum, fill1: GLuint, target2: GLenum, fill2: GLuint, target3: GLenum, fill3: GLuint) -> c_void)
    fn_ptr!(fn PresentFrameKeyedNV(video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type_: GLenum, target0: GLenum, fill0: GLuint, key0: GLuint, target1: GLenum, fill1: GLuint, key1: GLuint) -> c_void)
    fn_ptr!(fn PrimitiveRestartIndex(index: GLuint) -> c_void)
    fn_ptr!(fn PrimitiveRestartIndexNV(index: GLuint) -> c_void)
    fn_ptr!(fn PrimitiveRestartNV() -> c_void)
    fn_ptr!(fn PrioritizeTextures(n: GLsizei, textures: *GLuint, priorities: *GLfloat) -> c_void)
    fn_ptr!(fn PrioritizeTexturesEXT(n: GLsizei, textures: *GLuint, priorities: *GLclampf) -> c_void)
    fn_ptr!(fn PrioritizeTexturesxOES(n: GLsizei, textures: *GLuint, priorities: *GLfixed) -> c_void)
    fn_ptr!(fn ProgramBinary(program: GLuint, binaryFormat: GLenum, binary: *GLvoid, length: GLsizei) -> c_void)
    fn_ptr!(fn ProgramBinaryOES(program: GLuint, binaryFormat: GLenum, binary: *GLvoid, length: GLint) -> c_void)
    fn_ptr!(fn ProgramBufferParametersIivNV(target: GLenum, bindingIndex: GLuint, wordIndex: GLuint, count: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn ProgramBufferParametersIuivNV(target: GLenum, bindingIndex: GLuint, wordIndex: GLuint, count: GLsizei, params: *GLuint) -> c_void)
    fn_ptr!(fn ProgramBufferParametersfvNV(target: GLenum, bindingIndex: GLuint, wordIndex: GLuint, count: GLsizei, params: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramEnvParameter4dARB(target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn ProgramEnvParameter4dvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramEnvParameter4fARB(target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn ProgramEnvParameter4fvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramEnvParameterI4iNV(target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn ProgramEnvParameterI4ivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void)
    fn_ptr!(fn ProgramEnvParameterI4uiNV(target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void)
    fn_ptr!(fn ProgramEnvParameterI4uivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void)
    fn_ptr!(fn ProgramEnvParameters4fvEXT(target: GLenum, index: GLuint, count: GLsizei, params: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramEnvParametersI4ivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn ProgramEnvParametersI4uivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLuint) -> c_void)
    fn_ptr!(fn ProgramLocalParameter4dARB(target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn ProgramLocalParameter4dvARB(target: GLenum, index: GLuint, params: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramLocalParameter4fARB(target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn ProgramLocalParameter4fvARB(target: GLenum, index: GLuint, params: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramLocalParameterI4iNV(target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn ProgramLocalParameterI4ivNV(target: GLenum, index: GLuint, params: *GLint) -> c_void)
    fn_ptr!(fn ProgramLocalParameterI4uiNV(target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void)
    fn_ptr!(fn ProgramLocalParameterI4uivNV(target: GLenum, index: GLuint, params: *GLuint) -> c_void)
    fn_ptr!(fn ProgramLocalParameters4fvEXT(target: GLenum, index: GLuint, count: GLsizei, params: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramLocalParametersI4ivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLint) -> c_void)
    fn_ptr!(fn ProgramLocalParametersI4uivNV(target: GLenum, index: GLuint, count: GLsizei, params: *GLuint) -> c_void)
    fn_ptr!(fn ProgramNamedParameter4dNV(id: GLuint, len: GLsizei, name: *GLubyte, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn ProgramNamedParameter4dvNV(id: GLuint, len: GLsizei, name: *GLubyte, v: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramNamedParameter4fNV(id: GLuint, len: GLsizei, name: *GLubyte, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn ProgramNamedParameter4fvNV(id: GLuint, len: GLsizei, name: *GLubyte, v: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramParameter4dNV(target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn ProgramParameter4dvNV(target: GLenum, index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramParameter4fNV(target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn ProgramParameter4fvNV(target: GLenum, index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramParameteri(program: GLuint, pname: GLenum, value: GLint) -> c_void)
    fn_ptr!(fn ProgramParameteriARB(program: GLuint, pname: GLenum, value: GLint) -> c_void)
    fn_ptr!(fn ProgramParameteriEXT(program: GLuint, pname: GLenum, value: GLint) -> c_void)
    fn_ptr!(fn ProgramParameters4dvNV(target: GLenum, index: GLuint, count: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramParameters4fvNV(target: GLenum, index: GLuint, count: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramStringARB(target: GLenum, format: GLenum, len: GLsizei, string: *GLvoid) -> c_void)
    fn_ptr!(fn ProgramSubroutineParametersuivNV(target: GLenum, count: GLsizei, params: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform1d(program: GLuint, location: GLint, v0: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform1dEXT(program: GLuint, location: GLint, x: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform1dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform1dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform1f(program: GLuint, location: GLint, v0: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform1fEXT(program: GLuint, location: GLint, v0: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform1fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform1fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform1i(program: GLuint, location: GLint, v0: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform1i64NV(program: GLuint, location: GLint, x: GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform1i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform1iEXT(program: GLuint, location: GLint, v0: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform1iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform1ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform1ui(program: GLuint, location: GLint, v0: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform1ui64NV(program: GLuint, location: GLint, x: GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform1ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform1uiEXT(program: GLuint, location: GLint, v0: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform1uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform1uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform2d(program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform2dEXT(program: GLuint, location: GLint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform2dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform2dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform2f(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform2fEXT(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform2fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform2fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform2i(program: GLuint, location: GLint, v0: GLint, v1: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform2i64NV(program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform2i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform2iEXT(program: GLuint, location: GLint, v0: GLint, v1: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform2iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform2ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform2ui(program: GLuint, location: GLint, v0: GLuint, v1: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform2ui64NV(program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform2ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform2uiEXT(program: GLuint, location: GLint, v0: GLuint, v1: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform2uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform2uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform3d(program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform3dEXT(program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform3dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform3dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform3f(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform3fEXT(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform3fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform3fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform3i(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform3i64NV(program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform3i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform3iEXT(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform3iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform3ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform3ui(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform3ui64NV(program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform3ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform3uiEXT(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform3uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform3uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform4d(program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, v3: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform4dEXT(program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform4dv(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform4dvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniform4f(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform4fEXT(program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform4fv(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform4fvEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniform4i(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform4i64NV(program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform4i64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform4iEXT(program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void)
    fn_ptr!(fn ProgramUniform4iv(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform4ivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn ProgramUniform4ui(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform4ui64NV(program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform4ui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniform4uiEXT(program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform4uiv(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniform4uivEXT(program: GLuint, location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn ProgramUniformHandleui64ARB(program: GLuint, location: GLint, value: GLuint64) -> c_void)
    fn_ptr!(fn ProgramUniformHandleui64NV(program: GLuint, location: GLint, value: GLuint64) -> c_void)
    fn_ptr!(fn ProgramUniformHandleui64vARB(program: GLuint, location: GLint, count: GLsizei, values: *GLuint64) -> c_void)
    fn_ptr!(fn ProgramUniformHandleui64vNV(program: GLuint, location: GLint, count: GLsizei, values: *GLuint64) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x3dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x3dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x3fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x3fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x4dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x4dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x4fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix2x4fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x2dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x2dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x2fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x2fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x4dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x4dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x4fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix3x4fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x2dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x2dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x2fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x2fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x3dv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x3dvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x3fv(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformMatrix4x3fvEXT(program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn ProgramUniformui64NV(program: GLuint, location: GLint, value: GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramUniformui64vNV(program: GLuint, location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn ProgramVertexLimitNV(target: GLenum, limit: GLint) -> c_void)
    fn_ptr!(fn ProvokingVertex(mode: GLenum) -> c_void)
    fn_ptr!(fn ProvokingVertexEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn PushAttrib(mask: GLbitfield) -> c_void)
    fn_ptr!(fn PushClientAttrib(mask: GLbitfield) -> c_void)
    fn_ptr!(fn PushClientAttribDefaultEXT(mask: GLbitfield) -> c_void)
    fn_ptr!(fn PushDebugGroup(source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) -> c_void)
    fn_ptr!(fn PushDebugGroupKHR(source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) -> c_void)
    fn_ptr!(fn PushGroupMarkerEXT(length: GLsizei, marker: *GLchar) -> c_void)
    fn_ptr!(fn PushMatrix() -> c_void)
    fn_ptr!(fn PushName(name: GLuint) -> c_void)
    fn_ptr!(fn QueryCounter(id: GLuint, target: GLenum) -> c_void)
    fn_ptr!(fn QueryCounterEXT(id: GLuint, target: GLenum) -> c_void)
    fn_ptr!(fn QueryMatrixxOES(mantissa: *GLfixed, exponent: *GLint) -> GLbitfield)
    fn_ptr!(fn RasterPos2d(x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn RasterPos2dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn RasterPos2f(x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn RasterPos2fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn RasterPos2i(x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn RasterPos2iv(v: *GLint) -> c_void)
    fn_ptr!(fn RasterPos2s(x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn RasterPos2sv(v: *GLshort) -> c_void)
    fn_ptr!(fn RasterPos2xOES(x: GLfixed, y: GLfixed) -> c_void)
    fn_ptr!(fn RasterPos2xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn RasterPos3d(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn RasterPos3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn RasterPos3f(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn RasterPos3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn RasterPos3i(x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn RasterPos3iv(v: *GLint) -> c_void)
    fn_ptr!(fn RasterPos3s(x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn RasterPos3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn RasterPos3xOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn RasterPos3xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn RasterPos4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn RasterPos4dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn RasterPos4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn RasterPos4fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn RasterPos4i(x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn RasterPos4iv(v: *GLint) -> c_void)
    fn_ptr!(fn RasterPos4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn RasterPos4sv(v: *GLshort) -> c_void)
    fn_ptr!(fn RasterPos4xOES(x: GLfixed, y: GLfixed, z: GLfixed, w: GLfixed) -> c_void)
    fn_ptr!(fn RasterPos4xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn ReadBuffer(mode: GLenum) -> c_void)
    fn_ptr!(fn ReadBufferIndexedEXT(src: GLenum, index: GLint) -> c_void)
    fn_ptr!(fn ReadBufferNV(mode: GLenum) -> c_void)
    fn_ptr!(fn ReadInstrumentsSGIX(marker: GLint) -> c_void)
    fn_ptr!(fn ReadPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn ReadnPixelsARB(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, bufSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn ReadnPixelsEXT(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, bufSize: GLsizei, data: *GLvoid) -> c_void)
    fn_ptr!(fn Rectd(x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) -> c_void)
    fn_ptr!(fn Rectdv(v1: *GLdouble, v2: *GLdouble) -> c_void)
    fn_ptr!(fn Rectf(x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) -> c_void)
    fn_ptr!(fn Rectfv(v1: *GLfloat, v2: *GLfloat) -> c_void)
    fn_ptr!(fn Recti(x1: GLint, y1: GLint, x2: GLint, y2: GLint) -> c_void)
    fn_ptr!(fn Rectiv(v1: *GLint, v2: *GLint) -> c_void)
    fn_ptr!(fn Rects(x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) -> c_void)
    fn_ptr!(fn Rectsv(v1: *GLshort, v2: *GLshort) -> c_void)
    fn_ptr!(fn RectxOES(x1: GLfixed, y1: GLfixed, x2: GLfixed, y2: GLfixed) -> c_void)
    fn_ptr!(fn RectxvOES(v1: *GLfixed, v2: *GLfixed) -> c_void)
    fn_ptr!(fn ReferencePlaneSGIX(equation: *GLdouble) -> c_void)
    fn_ptr!(fn ReleaseShaderCompiler() -> c_void)
    fn_ptr!(fn RenderMode(mode: GLenum) -> GLint)
    fn_ptr!(fn RenderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageEXT(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisampleANGLE(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisampleAPPLE(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisampleCoverageNV(target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisampleEXT(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisampleIMG(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageMultisampleNV(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn RenderbufferStorageOES(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn ReplacementCodePointerSUN(type_: GLenum, stride: GLsizei, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn ReplacementCodeubSUN(code: GLubyte) -> c_void)
    fn_ptr!(fn ReplacementCodeubvSUN(code: *GLubyte) -> c_void)
    fn_ptr!(fn ReplacementCodeuiColor3fVertex3fSUN(rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiColor3fVertex3fvSUN(rc: *GLuint, c: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiColor4fNormal3fVertex3fSUN(rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc: *GLuint, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiColor4ubVertex3fSUN(rc: GLuint, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiColor4ubVertex3fvSUN(rc: *GLuint, c: *GLubyte, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiNormal3fVertex3fSUN(rc: GLuint, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiNormal3fVertex3fvSUN(rc: *GLuint, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiSUN(code: GLuint) -> c_void)
    fn_ptr!(fn ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc: GLuint, s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc: *GLuint, tc: *GLfloat, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc: GLuint, s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc: *GLuint, tc: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiTexCoord2fVertex3fSUN(rc: GLuint, s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiTexCoord2fVertex3fvSUN(rc: *GLuint, tc: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiVertex3fSUN(rc: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuiVertex3fvSUN(rc: *GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn ReplacementCodeuivSUN(code: *GLuint) -> c_void)
    fn_ptr!(fn ReplacementCodeusSUN(code: GLushort) -> c_void)
    fn_ptr!(fn ReplacementCodeusvSUN(code: *GLushort) -> c_void)
    fn_ptr!(fn RequestResidentProgramsNV(n: GLsizei, programs: *GLuint) -> c_void)
    fn_ptr!(fn ResetHistogram(target: GLenum) -> c_void)
    fn_ptr!(fn ResetHistogramEXT(target: GLenum) -> c_void)
    fn_ptr!(fn ResetMinmax(target: GLenum) -> c_void)
    fn_ptr!(fn ResetMinmaxEXT(target: GLenum) -> c_void)
    fn_ptr!(fn ResizeBuffersMESA() -> c_void)
    fn_ptr!(fn ResolveMultisampleFramebufferAPPLE() -> c_void)
    fn_ptr!(fn ResumeTransformFeedback() -> c_void)
    fn_ptr!(fn ResumeTransformFeedbackNV() -> c_void)
    fn_ptr!(fn Rotated(angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn Rotatef(angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Rotatex(angle: GLfixed, x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn RotatexOES(angle: GLfixed, x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn SampleCoverage(value: GLfloat, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleCoverageARB(value: GLfloat, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleCoverageOES(value: GLfixed, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleCoveragex(value: GLclampx, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleCoveragexOES(value: GLclampx, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleMapATI(dst: GLuint, interp: GLuint, swizzle: GLenum) -> c_void)
    fn_ptr!(fn SampleMaskEXT(value: GLclampf, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleMaskIndexedNV(index: GLuint, mask: GLbitfield) -> c_void)
    fn_ptr!(fn SampleMaskSGIS(value: GLclampf, invert: GLboolean) -> c_void)
    fn_ptr!(fn SampleMaski(index: GLuint, mask: GLbitfield) -> c_void)
    fn_ptr!(fn SamplePatternEXT(pattern: GLenum) -> c_void)
    fn_ptr!(fn SamplePatternSGIS(pattern: GLenum) -> c_void)
    fn_ptr!(fn SamplerParameterIiv(sampler: GLuint, pname: GLenum, param: *GLint) -> c_void)
    fn_ptr!(fn SamplerParameterIuiv(sampler: GLuint, pname: GLenum, param: *GLuint) -> c_void)
    fn_ptr!(fn SamplerParameterf(sampler: GLuint, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn SamplerParameterfv(sampler: GLuint, pname: GLenum, param: *GLfloat) -> c_void)
    fn_ptr!(fn SamplerParameteri(sampler: GLuint, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn SamplerParameteriv(sampler: GLuint, pname: GLenum, param: *GLint) -> c_void)
    fn_ptr!(fn Scaled(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn Scalef(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Scalex(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn ScalexOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn Scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn ScissorArrayv(first: GLuint, count: GLsizei, v: *GLint) -> c_void)
    fn_ptr!(fn ScissorIndexed(index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn ScissorIndexedv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn SecondaryColor3b(red: GLbyte, green: GLbyte, blue: GLbyte) -> c_void)
    fn_ptr!(fn SecondaryColor3bEXT(red: GLbyte, green: GLbyte, blue: GLbyte) -> c_void)
    fn_ptr!(fn SecondaryColor3bv(v: *GLbyte) -> c_void)
    fn_ptr!(fn SecondaryColor3bvEXT(v: *GLbyte) -> c_void)
    fn_ptr!(fn SecondaryColor3d(red: GLdouble, green: GLdouble, blue: GLdouble) -> c_void)
    fn_ptr!(fn SecondaryColor3dEXT(red: GLdouble, green: GLdouble, blue: GLdouble) -> c_void)
    fn_ptr!(fn SecondaryColor3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn SecondaryColor3dvEXT(v: *GLdouble) -> c_void)
    fn_ptr!(fn SecondaryColor3f(red: GLfloat, green: GLfloat, blue: GLfloat) -> c_void)
    fn_ptr!(fn SecondaryColor3fEXT(red: GLfloat, green: GLfloat, blue: GLfloat) -> c_void)
    fn_ptr!(fn SecondaryColor3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn SecondaryColor3fvEXT(v: *GLfloat) -> c_void)
    fn_ptr!(fn SecondaryColor3hNV(red: GLhalfNV, green: GLhalfNV, blue: GLhalfNV) -> c_void)
    fn_ptr!(fn SecondaryColor3hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn SecondaryColor3i(red: GLint, green: GLint, blue: GLint) -> c_void)
    fn_ptr!(fn SecondaryColor3iEXT(red: GLint, green: GLint, blue: GLint) -> c_void)
    fn_ptr!(fn SecondaryColor3iv(v: *GLint) -> c_void)
    fn_ptr!(fn SecondaryColor3ivEXT(v: *GLint) -> c_void)
    fn_ptr!(fn SecondaryColor3s(red: GLshort, green: GLshort, blue: GLshort) -> c_void)
    fn_ptr!(fn SecondaryColor3sEXT(red: GLshort, green: GLshort, blue: GLshort) -> c_void)
    fn_ptr!(fn SecondaryColor3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn SecondaryColor3svEXT(v: *GLshort) -> c_void)
    fn_ptr!(fn SecondaryColor3ub(red: GLubyte, green: GLubyte, blue: GLubyte) -> c_void)
    fn_ptr!(fn SecondaryColor3ubEXT(red: GLubyte, green: GLubyte, blue: GLubyte) -> c_void)
    fn_ptr!(fn SecondaryColor3ubv(v: *GLubyte) -> c_void)
    fn_ptr!(fn SecondaryColor3ubvEXT(v: *GLubyte) -> c_void)
    fn_ptr!(fn SecondaryColor3ui(red: GLuint, green: GLuint, blue: GLuint) -> c_void)
    fn_ptr!(fn SecondaryColor3uiEXT(red: GLuint, green: GLuint, blue: GLuint) -> c_void)
    fn_ptr!(fn SecondaryColor3uiv(v: *GLuint) -> c_void)
    fn_ptr!(fn SecondaryColor3uivEXT(v: *GLuint) -> c_void)
    fn_ptr!(fn SecondaryColor3us(red: GLushort, green: GLushort, blue: GLushort) -> c_void)
    fn_ptr!(fn SecondaryColor3usEXT(red: GLushort, green: GLushort, blue: GLushort) -> c_void)
    fn_ptr!(fn SecondaryColor3usv(v: *GLushort) -> c_void)
    fn_ptr!(fn SecondaryColor3usvEXT(v: *GLushort) -> c_void)
    fn_ptr!(fn SecondaryColorFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn SecondaryColorP3ui(type_: GLenum, color: GLuint) -> c_void)
    fn_ptr!(fn SecondaryColorP3uiv(type_: GLenum, color: *GLuint) -> c_void)
    fn_ptr!(fn SecondaryColorPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn SecondaryColorPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn SecondaryColorPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn SelectBuffer(size: GLsizei, buffer: *GLuint) -> c_void)
    fn_ptr!(fn SelectPerfMonitorCountersAMD(monitor: GLuint, enable: GLboolean, group: GLuint, numCounters: GLint, counterList: *GLuint) -> c_void)
    fn_ptr!(fn SeparableFilter2D(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid) -> c_void)
    fn_ptr!(fn SeparableFilter2DEXT(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, row: *GLvoid, column: *GLvoid) -> c_void)
    fn_ptr!(fn SetFenceAPPLE(fence: GLuint) -> c_void)
    fn_ptr!(fn SetFenceNV(fence: GLuint, condition: GLenum) -> c_void)
    fn_ptr!(fn SetFragmentShaderConstantATI(dst: GLuint, value: *GLfloat) -> c_void)
    fn_ptr!(fn SetInvariantEXT(id: GLuint, type_: GLenum, addr: *GLvoid) -> c_void)
    fn_ptr!(fn SetLocalConstantEXT(id: GLuint, type_: GLenum, addr: *GLvoid) -> c_void)
    fn_ptr!(fn SetMultisamplefvAMD(pname: GLenum, index: GLuint, val: *GLfloat) -> c_void)
    fn_ptr!(fn ShadeModel(mode: GLenum) -> c_void)
    fn_ptr!(fn ShaderBinary(count: GLsizei, shaders: *GLuint, binaryformat: GLenum, binary: *GLvoid, length: GLsizei) -> c_void)
    fn_ptr!(fn ShaderOp1EXT(op: GLenum, res: GLuint, arg1: GLuint) -> c_void)
    fn_ptr!(fn ShaderOp2EXT(op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint) -> c_void)
    fn_ptr!(fn ShaderOp3EXT(op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint, arg3: GLuint) -> c_void)
    fn_ptr!(fn ShaderSource(shader: GLuint, count: GLsizei, string: **GLchar, length: *GLint) -> c_void)
    fn_ptr!(fn ShaderSourceARB(shaderObj: GLhandleARB, count: GLsizei, string: **GLcharARB, length: *GLint) -> c_void)
    fn_ptr!(fn ShaderStorageBlockBinding(program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint) -> c_void)
    fn_ptr!(fn SharpenTexFuncSGIS(target: GLenum, n: GLsizei, points: *GLfloat) -> c_void)
    fn_ptr!(fn SpriteParameterfSGIX(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn SpriteParameterfvSGIX(pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn SpriteParameteriSGIX(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn SpriteParameterivSGIX(pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn StartInstrumentsSGIX() -> c_void)
    fn_ptr!(fn StartTilingQCOM(x: GLuint, y: GLuint, width: GLuint, height: GLuint, preserveMask: GLbitfield) -> c_void)
    fn_ptr!(fn StencilClearTagEXT(stencilTagBits: GLsizei, stencilClearTag: GLuint) -> c_void)
    fn_ptr!(fn StencilFillPathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, fillMode: GLenum, mask: GLuint, transformType: GLenum, transformValues: *GLfloat) -> c_void)
    fn_ptr!(fn StencilFillPathNV(path: GLuint, fillMode: GLenum, mask: GLuint) -> c_void)
    fn_ptr!(fn StencilFunc(func: GLenum, ref_: GLint, mask: GLuint) -> c_void)
    fn_ptr!(fn StencilFuncSeparate(face: GLenum, func: GLenum, ref_: GLint, mask: GLuint) -> c_void)
    fn_ptr!(fn StencilFuncSeparateATI(frontfunc: GLenum, backfunc: GLenum, ref_: GLint, mask: GLuint) -> c_void)
    fn_ptr!(fn StencilMask(mask: GLuint) -> c_void)
    fn_ptr!(fn StencilMaskSeparate(face: GLenum, mask: GLuint) -> c_void)
    fn_ptr!(fn StencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum) -> c_void)
    fn_ptr!(fn StencilOpSeparate(face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) -> c_void)
    fn_ptr!(fn StencilOpSeparateATI(face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) -> c_void)
    fn_ptr!(fn StencilOpValueAMD(face: GLenum, value: GLuint) -> c_void)
    fn_ptr!(fn StencilStrokePathInstancedNV(numPaths: GLsizei, pathNameType: GLenum, paths: *GLvoid, pathBase: GLuint, reference: GLint, mask: GLuint, transformType: GLenum, transformValues: *GLfloat) -> c_void)
    fn_ptr!(fn StencilStrokePathNV(path: GLuint, reference: GLint, mask: GLuint) -> c_void)
    fn_ptr!(fn StopInstrumentsSGIX(marker: GLint) -> c_void)
    fn_ptr!(fn StringMarkerGREMEDY(len: GLsizei, string: *GLvoid) -> c_void)
    fn_ptr!(fn SwizzleEXT(res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum) -> c_void)
    fn_ptr!(fn SyncTextureINTEL(texture: GLuint) -> c_void)
    fn_ptr!(fn TagSampleBufferSGIX() -> c_void)
    fn_ptr!(fn Tangent3bEXT(tx: GLbyte, ty: GLbyte, tz: GLbyte) -> c_void)
    fn_ptr!(fn Tangent3bvEXT(v: *GLbyte) -> c_void)
    fn_ptr!(fn Tangent3dEXT(tx: GLdouble, ty: GLdouble, tz: GLdouble) -> c_void)
    fn_ptr!(fn Tangent3dvEXT(v: *GLdouble) -> c_void)
    fn_ptr!(fn Tangent3fEXT(tx: GLfloat, ty: GLfloat, tz: GLfloat) -> c_void)
    fn_ptr!(fn Tangent3fvEXT(v: *GLfloat) -> c_void)
    fn_ptr!(fn Tangent3iEXT(tx: GLint, ty: GLint, tz: GLint) -> c_void)
    fn_ptr!(fn Tangent3ivEXT(v: *GLint) -> c_void)
    fn_ptr!(fn Tangent3sEXT(tx: GLshort, ty: GLshort, tz: GLshort) -> c_void)
    fn_ptr!(fn Tangent3svEXT(v: *GLshort) -> c_void)
    fn_ptr!(fn TangentPointerEXT(type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn TbufferMask3DFX(mask: GLuint) -> c_void)
    fn_ptr!(fn TessellationFactorAMD(factor: GLfloat) -> c_void)
    fn_ptr!(fn TessellationModeAMD(mode: GLenum) -> c_void)
    fn_ptr!(fn TestFenceAPPLE(fence: GLuint) -> GLboolean)
    fn_ptr!(fn TestFenceNV(fence: GLuint) -> GLboolean)
    fn_ptr!(fn TestObjectAPPLE(object: GLenum, name: GLuint) -> GLboolean)
    fn_ptr!(fn TexBuffer(target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn TexBufferARB(target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn TexBufferEXT(target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn TexBufferRange(target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn TexBumpParameterfvATI(pname: GLenum, param: *GLfloat) -> c_void)
    fn_ptr!(fn TexBumpParameterivATI(pname: GLenum, param: *GLint) -> c_void)
    fn_ptr!(fn TexCoord1bOES(s: GLbyte) -> c_void)
    fn_ptr!(fn TexCoord1bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn TexCoord1d(s: GLdouble) -> c_void)
    fn_ptr!(fn TexCoord1dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn TexCoord1f(s: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord1fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord1hNV(s: GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord1hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord1i(s: GLint) -> c_void)
    fn_ptr!(fn TexCoord1iv(v: *GLint) -> c_void)
    fn_ptr!(fn TexCoord1s(s: GLshort) -> c_void)
    fn_ptr!(fn TexCoord1sv(v: *GLshort) -> c_void)
    fn_ptr!(fn TexCoord1xOES(s: GLfixed) -> c_void)
    fn_ptr!(fn TexCoord1xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn TexCoord2bOES(s: GLbyte, t: GLbyte) -> c_void)
    fn_ptr!(fn TexCoord2bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn TexCoord2d(s: GLdouble, t: GLdouble) -> c_void)
    fn_ptr!(fn TexCoord2dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn TexCoord2f(s: GLfloat, t: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fColor3fVertex3fSUN(s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fColor3fVertex3fvSUN(tc: *GLfloat, c: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fColor4fNormal3fVertex3fSUN(s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fColor4fNormal3fVertex3fvSUN(tc: *GLfloat, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fColor4ubVertex3fSUN(s: GLfloat, t: GLfloat, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fColor4ubVertex3fvSUN(tc: *GLfloat, c: *GLubyte, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fNormal3fVertex3fSUN(s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fNormal3fVertex3fvSUN(tc: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fVertex3fSUN(s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fVertex3fvSUN(tc: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord2hNV(s: GLhalfNV, t: GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord2hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord2i(s: GLint, t: GLint) -> c_void)
    fn_ptr!(fn TexCoord2iv(v: *GLint) -> c_void)
    fn_ptr!(fn TexCoord2s(s: GLshort, t: GLshort) -> c_void)
    fn_ptr!(fn TexCoord2sv(v: *GLshort) -> c_void)
    fn_ptr!(fn TexCoord2xOES(s: GLfixed, t: GLfixed) -> c_void)
    fn_ptr!(fn TexCoord2xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn TexCoord3bOES(s: GLbyte, t: GLbyte, r: GLbyte) -> c_void)
    fn_ptr!(fn TexCoord3bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn TexCoord3d(s: GLdouble, t: GLdouble, r: GLdouble) -> c_void)
    fn_ptr!(fn TexCoord3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn TexCoord3f(s: GLfloat, t: GLfloat, r: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord3hNV(s: GLhalfNV, t: GLhalfNV, r: GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord3hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord3i(s: GLint, t: GLint, r: GLint) -> c_void)
    fn_ptr!(fn TexCoord3iv(v: *GLint) -> c_void)
    fn_ptr!(fn TexCoord3s(s: GLshort, t: GLshort, r: GLshort) -> c_void)
    fn_ptr!(fn TexCoord3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn TexCoord3xOES(s: GLfixed, t: GLfixed, r: GLfixed) -> c_void)
    fn_ptr!(fn TexCoord3xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn TexCoord4bOES(s: GLbyte, t: GLbyte, r: GLbyte, q: GLbyte) -> c_void)
    fn_ptr!(fn TexCoord4bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn TexCoord4d(s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) -> c_void)
    fn_ptr!(fn TexCoord4dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn TexCoord4f(s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord4fColor4fNormal3fVertex4fSUN(s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord4fColor4fNormal3fVertex4fvSUN(tc: *GLfloat, c: *GLfloat, n: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord4fVertex4fSUN(s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn TexCoord4fVertex4fvSUN(tc: *GLfloat, v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord4fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn TexCoord4hNV(s: GLhalfNV, t: GLhalfNV, r: GLhalfNV, q: GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord4hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn TexCoord4i(s: GLint, t: GLint, r: GLint, q: GLint) -> c_void)
    fn_ptr!(fn TexCoord4iv(v: *GLint) -> c_void)
    fn_ptr!(fn TexCoord4s(s: GLshort, t: GLshort, r: GLshort, q: GLshort) -> c_void)
    fn_ptr!(fn TexCoord4sv(v: *GLshort) -> c_void)
    fn_ptr!(fn TexCoord4xOES(s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) -> c_void)
    fn_ptr!(fn TexCoord4xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn TexCoordFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn TexCoordP1ui(type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn TexCoordP1uiv(type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn TexCoordP2ui(type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn TexCoordP2uiv(type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn TexCoordP3ui(type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn TexCoordP3uiv(type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn TexCoordP4ui(type_: GLenum, coords: GLuint) -> c_void)
    fn_ptr!(fn TexCoordP4uiv(type_: GLenum, coords: *GLuint) -> c_void)
    fn_ptr!(fn TexCoordPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn TexCoordPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn TexCoordPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn TexCoordPointervINTEL(size: GLint, type_: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn TexEnvf(target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn TexEnvfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn TexEnvi(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn TexEnviv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TexEnvx(target: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn TexEnvxOES(target: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn TexEnvxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn TexEnvxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn TexFilterFuncSGIS(target: GLenum, filter: GLenum, n: GLsizei, weights: *GLfloat) -> c_void)
    fn_ptr!(fn TexGend(coord: GLenum, pname: GLenum, param: GLdouble) -> c_void)
    fn_ptr!(fn TexGendv(coord: GLenum, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn TexGenf(coord: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn TexGenfOES(coord: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn TexGenfv(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn TexGenfvOES(coord: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn TexGeni(coord: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn TexGeniOES(coord: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn TexGeniv(coord: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TexGenivOES(coord: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TexGenxOES(coord: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn TexGenxvOES(coord: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn TexImage1D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexImage2DMultisample(target: GLenum, samples: GLsizei, internalformat: GLint, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) -> c_void)
    fn_ptr!(fn TexImage2DMultisampleCoverageNV(target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) -> c_void)
    fn_ptr!(fn TexImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexImage3DEXT(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexImage3DMultisample(target: GLenum, samples: GLsizei, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) -> c_void)
    fn_ptr!(fn TexImage3DMultisampleCoverageNV(target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) -> c_void)
    fn_ptr!(fn TexImage3DOES(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexImage4DSGIS(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, size4d: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexPageCommitmentARB(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, resident: GLboolean) -> c_void)
    fn_ptr!(fn TexParameterIiv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TexParameterIivEXT(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TexParameterIuiv(target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn TexParameterIuivEXT(target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn TexParameterf(target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn TexParameterfv(target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn TexParameteri(target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn TexParameteriv(target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TexParameterx(target: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn TexParameterxOES(target: GLenum, pname: GLenum, param: GLfixed) -> c_void)
    fn_ptr!(fn TexParameterxv(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn TexParameterxvOES(target: GLenum, pname: GLenum, params: *GLfixed) -> c_void)
    fn_ptr!(fn TexRenderbufferNV(target: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn TexStorage1D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) -> c_void)
    fn_ptr!(fn TexStorage1DEXT(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) -> c_void)
    fn_ptr!(fn TexStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn TexStorage2DEXT(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn TexStorage2DMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) -> c_void)
    fn_ptr!(fn TexStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void)
    fn_ptr!(fn TexStorage3DEXT(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void)
    fn_ptr!(fn TexStorage3DMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) -> c_void)
    fn_ptr!(fn TexStorageSparseAMD(target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield) -> c_void)
    fn_ptr!(fn TexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage1DEXT(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage2DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage3DEXT(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage3DOES(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TexSubImage4DSGIS(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, woffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, size4d: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureBarrierNV() -> c_void)
    fn_ptr!(fn TextureBufferEXT(texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint) -> c_void)
    fn_ptr!(fn TextureBufferRangeEXT(texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) -> c_void)
    fn_ptr!(fn TextureColorMaskSGIS(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) -> c_void)
    fn_ptr!(fn TextureImage1DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureImage2DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureImage2DMultisampleCoverageNV(texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) -> c_void)
    fn_ptr!(fn TextureImage2DMultisampleNV(texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) -> c_void)
    fn_ptr!(fn TextureImage3DEXT(texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureImage3DMultisampleCoverageNV(texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) -> c_void)
    fn_ptr!(fn TextureImage3DMultisampleNV(texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) -> c_void)
    fn_ptr!(fn TextureLightEXT(pname: GLenum) -> c_void)
    fn_ptr!(fn TextureMaterialEXT(face: GLenum, mode: GLenum) -> c_void)
    fn_ptr!(fn TextureNormalEXT(mode: GLenum) -> c_void)
    fn_ptr!(fn TexturePageCommitmentEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, resident: GLboolean) -> c_void)
    fn_ptr!(fn TextureParameterIivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TextureParameterIuivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLuint) -> c_void)
    fn_ptr!(fn TextureParameterfEXT(texture: GLuint, target: GLenum, pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn TextureParameterfvEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn TextureParameteriEXT(texture: GLuint, target: GLenum, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn TextureParameterivEXT(texture: GLuint, target: GLenum, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn TextureRangeAPPLE(target: GLenum, length: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn TextureRenderbufferEXT(texture: GLuint, target: GLenum, renderbuffer: GLuint) -> c_void)
    fn_ptr!(fn TextureStorage1DEXT(texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) -> c_void)
    fn_ptr!(fn TextureStorage2DEXT(texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn TextureStorage2DMultisampleEXT(texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) -> c_void)
    fn_ptr!(fn TextureStorage3DEXT(texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) -> c_void)
    fn_ptr!(fn TextureStorage3DMultisampleEXT(texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) -> c_void)
    fn_ptr!(fn TextureStorageSparseAMD(texture: GLuint, target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield) -> c_void)
    fn_ptr!(fn TextureSubImage1DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureSubImage2DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureSubImage3DEXT(texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type_: GLenum, pixels: *GLvoid) -> c_void)
    fn_ptr!(fn TextureView(texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint) -> c_void)
    fn_ptr!(fn TrackMatrixNV(target: GLenum, address: GLuint, matrix: GLenum, transform: GLenum) -> c_void)
    fn_ptr!(fn TransformFeedbackAttribsNV(count: GLuint, attribs: *GLint, bufferMode: GLenum) -> c_void)
    fn_ptr!(fn TransformFeedbackStreamAttribsNV(count: GLsizei, attribs: *GLint, nbuffers: GLsizei, bufstreams: *GLint, bufferMode: GLenum) -> c_void)
    fn_ptr!(fn TransformFeedbackVaryings(program: GLuint, count: GLsizei, varyings: **GLchar, bufferMode: GLenum) -> c_void)
    fn_ptr!(fn TransformFeedbackVaryingsEXT(program: GLuint, count: GLsizei, varyings: **GLchar, bufferMode: GLenum) -> c_void)
    fn_ptr!(fn TransformFeedbackVaryingsNV(program: GLuint, count: GLsizei, locations: *GLint, bufferMode: GLenum) -> c_void)
    fn_ptr!(fn TransformPathNV(resultPath: GLuint, srcPath: GLuint, transformType: GLenum, transformValues: *GLfloat) -> c_void)
    fn_ptr!(fn Translated(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn Translatef(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Translatex(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn TranslatexOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn Uniform1d(location: GLint, x: GLdouble) -> c_void)
    fn_ptr!(fn Uniform1dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn Uniform1f(location: GLint, v0: GLfloat) -> c_void)
    fn_ptr!(fn Uniform1fARB(location: GLint, v0: GLfloat) -> c_void)
    fn_ptr!(fn Uniform1fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform1fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform1i(location: GLint, v0: GLint) -> c_void)
    fn_ptr!(fn Uniform1i64NV(location: GLint, x: GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform1i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform1iARB(location: GLint, v0: GLint) -> c_void)
    fn_ptr!(fn Uniform1iv(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform1ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform1ui(location: GLint, v0: GLuint) -> c_void)
    fn_ptr!(fn Uniform1ui64NV(location: GLint, x: GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform1ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform1uiEXT(location: GLint, v0: GLuint) -> c_void)
    fn_ptr!(fn Uniform1uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform1uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform2d(location: GLint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn Uniform2dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn Uniform2f(location: GLint, v0: GLfloat, v1: GLfloat) -> c_void)
    fn_ptr!(fn Uniform2fARB(location: GLint, v0: GLfloat, v1: GLfloat) -> c_void)
    fn_ptr!(fn Uniform2fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform2fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform2i(location: GLint, v0: GLint, v1: GLint) -> c_void)
    fn_ptr!(fn Uniform2i64NV(location: GLint, x: GLint64EXT, y: GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform2i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform2iARB(location: GLint, v0: GLint, v1: GLint) -> c_void)
    fn_ptr!(fn Uniform2iv(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform2ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform2ui(location: GLint, v0: GLuint, v1: GLuint) -> c_void)
    fn_ptr!(fn Uniform2ui64NV(location: GLint, x: GLuint64EXT, y: GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform2ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform2uiEXT(location: GLint, v0: GLuint, v1: GLuint) -> c_void)
    fn_ptr!(fn Uniform2uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform2uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform3d(location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn Uniform3dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn Uniform3f(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void)
    fn_ptr!(fn Uniform3fARB(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) -> c_void)
    fn_ptr!(fn Uniform3fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform3fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform3i(location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void)
    fn_ptr!(fn Uniform3i64NV(location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform3i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform3iARB(location: GLint, v0: GLint, v1: GLint, v2: GLint) -> c_void)
    fn_ptr!(fn Uniform3iv(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform3ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform3ui(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void)
    fn_ptr!(fn Uniform3ui64NV(location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform3ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform3uiEXT(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) -> c_void)
    fn_ptr!(fn Uniform3uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform3uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform4d(location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn Uniform4dv(location: GLint, count: GLsizei, value: *GLdouble) -> c_void)
    fn_ptr!(fn Uniform4f(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void)
    fn_ptr!(fn Uniform4fARB(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) -> c_void)
    fn_ptr!(fn Uniform4fv(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform4fvARB(location: GLint, count: GLsizei, value: *GLfloat) -> c_void)
    fn_ptr!(fn Uniform4i(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void)
    fn_ptr!(fn Uniform4i64NV(location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform4i64vNV(location: GLint, count: GLsizei, value: *GLint64EXT) -> c_void)
    fn_ptr!(fn Uniform4iARB(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) -> c_void)
    fn_ptr!(fn Uniform4iv(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform4ivARB(location: GLint, count: GLsizei, value: *GLint) -> c_void)
    fn_ptr!(fn Uniform4ui(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void)
    fn_ptr!(fn Uniform4ui64NV(location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform4ui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniform4uiEXT(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) -> c_void)
    fn_ptr!(fn Uniform4uiv(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn Uniform4uivEXT(location: GLint, count: GLsizei, value: *GLuint) -> c_void)
    fn_ptr!(fn UniformBlockBinding(program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint) -> c_void)
    fn_ptr!(fn UniformBufferEXT(program: GLuint, location: GLint, buffer: GLuint) -> c_void)
    fn_ptr!(fn UniformHandleui64ARB(location: GLint, value: GLuint64) -> c_void)
    fn_ptr!(fn UniformHandleui64NV(location: GLint, value: GLuint64) -> c_void)
    fn_ptr!(fn UniformHandleui64vARB(location: GLint, count: GLsizei, value: *GLuint64) -> c_void)
    fn_ptr!(fn UniformHandleui64vNV(location: GLint, count: GLsizei, value: *GLuint64) -> c_void)
    fn_ptr!(fn UniformMatrix2dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix2fvARB(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix2x3dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix2x3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix2x4dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix2x4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix3dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix3fvARB(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix3x2dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix3x2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix3x4dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix3x4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix4dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix4fvARB(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix4x2dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix4x2fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformMatrix4x3dv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) -> c_void)
    fn_ptr!(fn UniformMatrix4x3fv(location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) -> c_void)
    fn_ptr!(fn UniformSubroutinesuiv(shadertype: GLenum, count: GLsizei, indices: *GLuint) -> c_void)
    fn_ptr!(fn Uniformui64NV(location: GLint, value: GLuint64EXT) -> c_void)
    fn_ptr!(fn Uniformui64vNV(location: GLint, count: GLsizei, value: *GLuint64EXT) -> c_void)
    fn_ptr!(fn UnlockArraysEXT() -> c_void)
    fn_ptr!(fn UnmapBuffer(target: GLenum) -> GLboolean)
    fn_ptr!(fn UnmapBufferARB(target: GLenum) -> GLboolean)
    fn_ptr!(fn UnmapBufferOES(target: GLenum) -> GLboolean)
    fn_ptr!(fn UnmapNamedBufferEXT(buffer: GLuint) -> GLboolean)
    fn_ptr!(fn UnmapObjectBufferATI(buffer: GLuint) -> c_void)
    fn_ptr!(fn UnmapTexture2DINTEL(texture: GLuint, level: GLint) -> c_void)
    fn_ptr!(fn UpdateObjectBufferATI(buffer: GLuint, offset: GLuint, size: GLsizei, pointer: *GLvoid, preserve: GLenum) -> c_void)
    fn_ptr!(fn UseProgram(program: GLuint) -> c_void)
    fn_ptr!(fn UseProgramObjectARB(programObj: GLhandleARB) -> c_void)
    fn_ptr!(fn UseProgramStages(pipeline: GLuint, stages: GLbitfield, program: GLuint) -> c_void)
    fn_ptr!(fn UseProgramStagesEXT(pipeline: GLuint, stages: GLbitfield, program: GLuint) -> c_void)
    fn_ptr!(fn UseShaderProgramEXT(type_: GLenum, program: GLuint) -> c_void)
    fn_ptr!(fn VDPAUFiniNV() -> c_void)
    fn_ptr!(fn VDPAUGetSurfaceivNV(surface: GLvdpauSurfaceNV, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) -> c_void)
    fn_ptr!(fn VDPAUInitNV(vdpDevice: *GLvoid, getProcAddress: *GLvoid) -> c_void)
    fn_ptr!(fn VDPAUIsSurfaceNV(surface: GLvdpauSurfaceNV) -> c_void)
    fn_ptr!(fn VDPAUMapSurfacesNV(numSurfaces: GLsizei, surfaces: *GLvdpauSurfaceNV) -> c_void)
    fn_ptr!(fn VDPAURegisterOutputSurfaceNV(vdpSurface: *GLvoid, target: GLenum, numTextureNames: GLsizei, textureNames: *GLuint) -> GLvdpauSurfaceNV)
    fn_ptr!(fn VDPAURegisterVideoSurfaceNV(vdpSurface: *GLvoid, target: GLenum, numTextureNames: GLsizei, textureNames: *GLuint) -> GLvdpauSurfaceNV)
    fn_ptr!(fn VDPAUSurfaceAccessNV(surface: GLvdpauSurfaceNV, access: GLenum) -> c_void)
    fn_ptr!(fn VDPAUUnmapSurfacesNV(numSurface: GLsizei, surfaces: *GLvdpauSurfaceNV) -> c_void)
    fn_ptr!(fn VDPAUUnregisterSurfaceNV(surface: GLvdpauSurfaceNV) -> c_void)
    fn_ptr!(fn ValidateProgram(program: GLuint) -> c_void)
    fn_ptr!(fn ValidateProgramARB(programObj: GLhandleARB) -> c_void)
    fn_ptr!(fn ValidateProgramPipeline(pipeline: GLuint) -> c_void)
    fn_ptr!(fn ValidateProgramPipelineEXT(pipeline: GLuint) -> c_void)
    fn_ptr!(fn VariantArrayObjectATI(id: GLuint, type_: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint) -> c_void)
    fn_ptr!(fn VariantPointerEXT(id: GLuint, type_: GLenum, stride: GLuint, addr: *GLvoid) -> c_void)
    fn_ptr!(fn VariantbvEXT(id: GLuint, addr: *GLbyte) -> c_void)
    fn_ptr!(fn VariantdvEXT(id: GLuint, addr: *GLdouble) -> c_void)
    fn_ptr!(fn VariantfvEXT(id: GLuint, addr: *GLfloat) -> c_void)
    fn_ptr!(fn VariantivEXT(id: GLuint, addr: *GLint) -> c_void)
    fn_ptr!(fn VariantsvEXT(id: GLuint, addr: *GLshort) -> c_void)
    fn_ptr!(fn VariantubvEXT(id: GLuint, addr: *GLubyte) -> c_void)
    fn_ptr!(fn VariantuivEXT(id: GLuint, addr: *GLuint) -> c_void)
    fn_ptr!(fn VariantusvEXT(id: GLuint, addr: *GLushort) -> c_void)
    fn_ptr!(fn Vertex2bOES(x: GLbyte) -> c_void)
    fn_ptr!(fn Vertex2bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn Vertex2d(x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn Vertex2dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn Vertex2f(x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn Vertex2fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn Vertex2hNV(x: GLhalfNV, y: GLhalfNV) -> c_void)
    fn_ptr!(fn Vertex2hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn Vertex2i(x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn Vertex2iv(v: *GLint) -> c_void)
    fn_ptr!(fn Vertex2s(x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn Vertex2sv(v: *GLshort) -> c_void)
    fn_ptr!(fn Vertex2xOES(x: GLfixed) -> c_void)
    fn_ptr!(fn Vertex2xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn Vertex3bOES(x: GLbyte, y: GLbyte) -> c_void)
    fn_ptr!(fn Vertex3bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn Vertex3d(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn Vertex3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn Vertex3f(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn Vertex3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn Vertex3hNV(x: GLhalfNV, y: GLhalfNV, z: GLhalfNV) -> c_void)
    fn_ptr!(fn Vertex3hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn Vertex3i(x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn Vertex3iv(v: *GLint) -> c_void)
    fn_ptr!(fn Vertex3s(x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn Vertex3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn Vertex3xOES(x: GLfixed, y: GLfixed) -> c_void)
    fn_ptr!(fn Vertex3xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn Vertex4bOES(x: GLbyte, y: GLbyte, z: GLbyte) -> c_void)
    fn_ptr!(fn Vertex4bvOES(coords: *GLbyte) -> c_void)
    fn_ptr!(fn Vertex4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn Vertex4dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn Vertex4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn Vertex4fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn Vertex4hNV(x: GLhalfNV, y: GLhalfNV, z: GLhalfNV, w: GLhalfNV) -> c_void)
    fn_ptr!(fn Vertex4hvNV(v: *GLhalfNV) -> c_void)
    fn_ptr!(fn Vertex4i(x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn Vertex4iv(v: *GLint) -> c_void)
    fn_ptr!(fn Vertex4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn Vertex4sv(v: *GLshort) -> c_void)
    fn_ptr!(fn Vertex4xOES(x: GLfixed, y: GLfixed, z: GLfixed) -> c_void)
    fn_ptr!(fn Vertex4xvOES(coords: *GLfixed) -> c_void)
    fn_ptr!(fn VertexArrayBindVertexBufferEXT(vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) -> c_void)
    fn_ptr!(fn VertexArrayColorOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayEdgeFlagOffsetEXT(vaobj: GLuint, buffer: GLuint, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayFogCoordOffsetEXT(vaobj: GLuint, buffer: GLuint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayIndexOffsetEXT(vaobj: GLuint, buffer: GLuint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayMultiTexCoordOffsetEXT(vaobj: GLuint, buffer: GLuint, texunit: GLenum, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayNormalOffsetEXT(vaobj: GLuint, buffer: GLuint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayParameteriAPPLE(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn VertexArrayRangeAPPLE(length: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexArrayRangeNV(length: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexArraySecondaryColorOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayTexCoordOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribBindingEXT(vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribFormatEXT(vaobj: GLuint, attribindex: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, relativeoffset: GLuint) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribIFormatEXT(vaobj: GLuint, attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribIOffsetEXT(vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribLFormatEXT(vaobj: GLuint, attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribLOffsetEXT(vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayVertexAttribOffsetEXT(vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexArrayVertexBindingDivisorEXT(vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) -> c_void)
    fn_ptr!(fn VertexArrayVertexOffsetEXT(vaobj: GLuint, buffer: GLuint, size: GLint, type_: GLenum, stride: GLsizei, offset: GLintptr) -> c_void)
    fn_ptr!(fn VertexAttrib1d(index: GLuint, x: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib1dARB(index: GLuint, x: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib1dNV(index: GLuint, x: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib1dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib1dvARB(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib1dvNV(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib1f(index: GLuint, x: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib1fARB(index: GLuint, x: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib1fNV(index: GLuint, x: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib1fv(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib1fvARB(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib1fvNV(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib1hNV(index: GLuint, x: GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib1hvNV(index: GLuint, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib1s(index: GLuint, x: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib1sARB(index: GLuint, x: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib1sNV(index: GLuint, x: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib1sv(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib1svARB(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib1svNV(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib2d(index: GLuint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib2dARB(index: GLuint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib2dNV(index: GLuint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib2dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib2dvARB(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib2dvNV(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib2fARB(index: GLuint, x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib2fNV(index: GLuint, x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib2fv(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib2fvARB(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib2fvNV(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib2hNV(index: GLuint, x: GLhalfNV, y: GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib2hvNV(index: GLuint, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib2s(index: GLuint, x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib2sARB(index: GLuint, x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib2sNV(index: GLuint, x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib2sv(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib2svARB(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib2svNV(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib3d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib3dARB(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib3dNV(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib3dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib3dvARB(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib3dvNV(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib3fARB(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib3fNV(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib3fv(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib3fvARB(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib3fvNV(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib3hNV(index: GLuint, x: GLhalfNV, y: GLhalfNV, z: GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib3hvNV(index: GLuint, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib3s(index: GLuint, x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib3sARB(index: GLuint, x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib3sNV(index: GLuint, x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib3sv(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib3svARB(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib3svNV(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4Nbv(index: GLuint, v: *GLbyte) -> c_void)
    fn_ptr!(fn VertexAttrib4NbvARB(index: GLuint, v: *GLbyte) -> c_void)
    fn_ptr!(fn VertexAttrib4Niv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttrib4NivARB(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttrib4Nsv(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4NsvARB(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4Nub(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4NubARB(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4Nubv(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4NubvARB(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4Nuiv(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttrib4NuivARB(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttrib4Nusv(index: GLuint, v: *GLushort) -> c_void)
    fn_ptr!(fn VertexAttrib4NusvARB(index: GLuint, v: *GLushort) -> c_void)
    fn_ptr!(fn VertexAttrib4bv(index: GLuint, v: *GLbyte) -> c_void)
    fn_ptr!(fn VertexAttrib4bvARB(index: GLuint, v: *GLbyte) -> c_void)
    fn_ptr!(fn VertexAttrib4d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib4dARB(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib4dNV(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib4dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib4dvARB(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib4dvNV(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib4fARB(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib4fNV(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib4fv(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib4fvARB(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib4fvNV(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttrib4hNV(index: GLuint, x: GLhalfNV, y: GLhalfNV, z: GLhalfNV, w: GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib4hvNV(index: GLuint, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttrib4iv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttrib4ivARB(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttrib4s(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4sARB(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4sNV(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4sv(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4svARB(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4svNV(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttrib4ubNV(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4ubv(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4ubvARB(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4ubvNV(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttrib4uiv(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttrib4uivARB(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttrib4usv(index: GLuint, v: *GLushort) -> c_void)
    fn_ptr!(fn VertexAttrib4usvARB(index: GLuint, v: *GLushort) -> c_void)
    fn_ptr!(fn VertexAttribArrayObjectATI(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, buffer: GLuint, offset: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribBinding(attribindex: GLuint, bindingindex: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribDivisor(index: GLuint, divisor: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribDivisorANGLE(index: GLuint, divisor: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribDivisorARB(index: GLuint, divisor: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribDivisorNV(index: GLuint, divisor: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribFormat(attribindex: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, relativeoffset: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribFormatNV(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei) -> c_void)
    fn_ptr!(fn VertexAttribI1i(index: GLuint, x: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI1iEXT(index: GLuint, x: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI1iv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI1ivEXT(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI1ui(index: GLuint, x: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI1uiEXT(index: GLuint, x: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI1uiv(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI1uivEXT(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI2i(index: GLuint, x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI2iEXT(index: GLuint, x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI2iv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI2ivEXT(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI2ui(index: GLuint, x: GLuint, y: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI2uiEXT(index: GLuint, x: GLuint, y: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI2uiv(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI2uivEXT(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI3i(index: GLuint, x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI3iEXT(index: GLuint, x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI3iv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI3ivEXT(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI3ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI3uiEXT(index: GLuint, x: GLuint, y: GLuint, z: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI3uiv(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI3uivEXT(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI4bv(index: GLuint, v: *GLbyte) -> c_void)
    fn_ptr!(fn VertexAttribI4bvEXT(index: GLuint, v: *GLbyte) -> c_void)
    fn_ptr!(fn VertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI4iEXT(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn VertexAttribI4iv(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI4ivEXT(index: GLuint, v: *GLint) -> c_void)
    fn_ptr!(fn VertexAttribI4sv(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttribI4svEXT(index: GLuint, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttribI4ubv(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttribI4ubvEXT(index: GLuint, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI4uiEXT(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI4uiv(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI4uivEXT(index: GLuint, v: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribI4usv(index: GLuint, v: *GLushort) -> c_void)
    fn_ptr!(fn VertexAttribI4usvEXT(index: GLuint, v: *GLushort) -> c_void)
    fn_ptr!(fn VertexAttribIFormat(attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribIFormatNV(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn VertexAttribIPointer(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribIPointerEXT(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribL1d(index: GLuint, x: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL1dEXT(index: GLuint, x: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL1dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL1dvEXT(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL1i64NV(index: GLuint, x: GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL1i64vNV(index: GLuint, v: *GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL1ui64ARB(index: GLuint, x: GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL1ui64NV(index: GLuint, x: GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL1ui64vARB(index: GLuint, v: *GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL1ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL2d(index: GLuint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL2dEXT(index: GLuint, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL2dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL2dvEXT(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL2i64NV(index: GLuint, x: GLint64EXT, y: GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL2i64vNV(index: GLuint, v: *GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL2ui64NV(index: GLuint, x: GLuint64EXT, y: GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL2ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL3d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL3dEXT(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL3dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL3dvEXT(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL3i64NV(index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL3i64vNV(index: GLuint, v: *GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL3ui64NV(index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL3ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL4d(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL4dEXT(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL4dv(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL4dvEXT(index: GLuint, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribL4i64NV(index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL4i64vNV(index: GLuint, v: *GLint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL4ui64NV(index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribL4ui64vNV(index: GLuint, v: *GLuint64EXT) -> c_void)
    fn_ptr!(fn VertexAttribLFormat(attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribLFormatNV(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn VertexAttribLPointer(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribLPointerEXT(index: GLuint, size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribP1ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP1uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP2ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP2uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP3ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP3uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP4ui(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint) -> c_void)
    fn_ptr!(fn VertexAttribP4uiv(index: GLuint, type_: GLenum, normalized: GLboolean, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexAttribParameteriAMD(index: GLuint, pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn VertexAttribPointer(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribPointerARB(index: GLuint, size: GLint, type_: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribPointerNV(index: GLuint, fsize: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexAttribs1dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribs1fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttribs1hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttribs1svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttribs2dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribs2fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttribs2hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttribs2svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttribs3dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribs3fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttribs3hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttribs3svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttribs4dvNV(index: GLuint, count: GLsizei, v: *GLdouble) -> c_void)
    fn_ptr!(fn VertexAttribs4fvNV(index: GLuint, count: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn VertexAttribs4hvNV(index: GLuint, n: GLsizei, v: *GLhalfNV) -> c_void)
    fn_ptr!(fn VertexAttribs4svNV(index: GLuint, count: GLsizei, v: *GLshort) -> c_void)
    fn_ptr!(fn VertexAttribs4ubvNV(index: GLuint, count: GLsizei, v: *GLubyte) -> c_void)
    fn_ptr!(fn VertexBindingDivisor(bindingindex: GLuint, divisor: GLuint) -> c_void)
    fn_ptr!(fn VertexBlendARB(count: GLint) -> c_void)
    fn_ptr!(fn VertexBlendEnvfATI(pname: GLenum, param: GLfloat) -> c_void)
    fn_ptr!(fn VertexBlendEnviATI(pname: GLenum, param: GLint) -> c_void)
    fn_ptr!(fn VertexFormatNV(size: GLint, type_: GLenum, stride: GLsizei) -> c_void)
    fn_ptr!(fn VertexP2ui(type_: GLenum, value: GLuint) -> c_void)
    fn_ptr!(fn VertexP2uiv(type_: GLenum, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexP3ui(type_: GLenum, value: GLuint) -> c_void)
    fn_ptr!(fn VertexP3uiv(type_: GLenum, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexP4ui(type_: GLenum, value: GLuint) -> c_void)
    fn_ptr!(fn VertexP4uiv(type_: GLenum, value: *GLuint) -> c_void)
    fn_ptr!(fn VertexPointer(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, count: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexPointerListIBM(size: GLint, type_: GLenum, stride: GLint, pointer: **GLvoid, ptrstride: GLint) -> c_void)
    fn_ptr!(fn VertexPointervINTEL(size: GLint, type_: GLenum, pointer: **GLvoid) -> c_void)
    fn_ptr!(fn VertexStream1dATI(stream: GLenum, x: GLdouble) -> c_void)
    fn_ptr!(fn VertexStream1dvATI(stream: GLenum, coords: *GLdouble) -> c_void)
    fn_ptr!(fn VertexStream1fATI(stream: GLenum, x: GLfloat) -> c_void)
    fn_ptr!(fn VertexStream1fvATI(stream: GLenum, coords: *GLfloat) -> c_void)
    fn_ptr!(fn VertexStream1iATI(stream: GLenum, x: GLint) -> c_void)
    fn_ptr!(fn VertexStream1ivATI(stream: GLenum, coords: *GLint) -> c_void)
    fn_ptr!(fn VertexStream1sATI(stream: GLenum, x: GLshort) -> c_void)
    fn_ptr!(fn VertexStream1svATI(stream: GLenum, coords: *GLshort) -> c_void)
    fn_ptr!(fn VertexStream2dATI(stream: GLenum, x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn VertexStream2dvATI(stream: GLenum, coords: *GLdouble) -> c_void)
    fn_ptr!(fn VertexStream2fATI(stream: GLenum, x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn VertexStream2fvATI(stream: GLenum, coords: *GLfloat) -> c_void)
    fn_ptr!(fn VertexStream2iATI(stream: GLenum, x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn VertexStream2ivATI(stream: GLenum, coords: *GLint) -> c_void)
    fn_ptr!(fn VertexStream2sATI(stream: GLenum, x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn VertexStream2svATI(stream: GLenum, coords: *GLshort) -> c_void)
    fn_ptr!(fn VertexStream3dATI(stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn VertexStream3dvATI(stream: GLenum, coords: *GLdouble) -> c_void)
    fn_ptr!(fn VertexStream3fATI(stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn VertexStream3fvATI(stream: GLenum, coords: *GLfloat) -> c_void)
    fn_ptr!(fn VertexStream3iATI(stream: GLenum, x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn VertexStream3ivATI(stream: GLenum, coords: *GLint) -> c_void)
    fn_ptr!(fn VertexStream3sATI(stream: GLenum, x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn VertexStream3svATI(stream: GLenum, coords: *GLshort) -> c_void)
    fn_ptr!(fn VertexStream4dATI(stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn VertexStream4dvATI(stream: GLenum, coords: *GLdouble) -> c_void)
    fn_ptr!(fn VertexStream4fATI(stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn VertexStream4fvATI(stream: GLenum, coords: *GLfloat) -> c_void)
    fn_ptr!(fn VertexStream4iATI(stream: GLenum, x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn VertexStream4ivATI(stream: GLenum, coords: *GLint) -> c_void)
    fn_ptr!(fn VertexStream4sATI(stream: GLenum, x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn VertexStream4svATI(stream: GLenum, coords: *GLshort) -> c_void)
    fn_ptr!(fn VertexWeightPointerEXT(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn VertexWeightfEXT(weight: GLfloat) -> c_void)
    fn_ptr!(fn VertexWeightfvEXT(weight: *GLfloat) -> c_void)
    fn_ptr!(fn VertexWeighthNV(weight: GLhalfNV) -> c_void)
    fn_ptr!(fn VertexWeighthvNV(weight: *GLhalfNV) -> c_void)
    fn_ptr!(fn VideoCaptureNV(video_capture_slot: GLuint, sequence_num: *GLuint, capture_time: *GLuint64EXT) -> GLenum)
    fn_ptr!(fn VideoCaptureStreamParameterdvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLdouble) -> c_void)
    fn_ptr!(fn VideoCaptureStreamParameterfvNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLfloat) -> c_void)
    fn_ptr!(fn VideoCaptureStreamParameterivNV(video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: *GLint) -> c_void)
    fn_ptr!(fn Viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei) -> c_void)
    fn_ptr!(fn ViewportArrayv(first: GLuint, count: GLsizei, v: *GLfloat) -> c_void)
    fn_ptr!(fn ViewportIndexedf(index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat) -> c_void)
    fn_ptr!(fn ViewportIndexedfv(index: GLuint, v: *GLfloat) -> c_void)
    fn_ptr!(fn WaitSync(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> c_void)
    fn_ptr!(fn WaitSyncAPPLE(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> c_void)
    fn_ptr!(fn WeightPathsNV(resultPath: GLuint, numPaths: GLsizei, paths: *GLuint, weights: *GLfloat) -> c_void)
    fn_ptr!(fn WeightPointerARB(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn WeightPointerOES(size: GLint, type_: GLenum, stride: GLsizei, pointer: *GLvoid) -> c_void)
    fn_ptr!(fn WeightbvARB(size: GLint, weights: *GLbyte) -> c_void)
    fn_ptr!(fn WeightdvARB(size: GLint, weights: *GLdouble) -> c_void)
    fn_ptr!(fn WeightfvARB(size: GLint, weights: *GLfloat) -> c_void)
    fn_ptr!(fn WeightivARB(size: GLint, weights: *GLint) -> c_void)
    fn_ptr!(fn WeightsvARB(size: GLint, weights: *GLshort) -> c_void)
    fn_ptr!(fn WeightubvARB(size: GLint, weights: *GLubyte) -> c_void)
    fn_ptr!(fn WeightuivARB(size: GLint, weights: *GLuint) -> c_void)
    fn_ptr!(fn WeightusvARB(size: GLint, weights: *GLushort) -> c_void)
    fn_ptr!(fn WindowPos2d(x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos2dARB(x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos2dMESA(x: GLdouble, y: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos2dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos2dvARB(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos2dvMESA(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos2f(x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos2fARB(x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos2fMESA(x: GLfloat, y: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos2fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos2fvARB(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos2fvMESA(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos2i(x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn WindowPos2iARB(x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn WindowPos2iMESA(x: GLint, y: GLint) -> c_void)
    fn_ptr!(fn WindowPos2iv(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos2ivARB(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos2ivMESA(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos2s(x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn WindowPos2sARB(x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn WindowPos2sMESA(x: GLshort, y: GLshort) -> c_void)
    fn_ptr!(fn WindowPos2sv(v: *GLshort) -> c_void)
    fn_ptr!(fn WindowPos2svARB(v: *GLshort) -> c_void)
    fn_ptr!(fn WindowPos2svMESA(v: *GLshort) -> c_void)
    fn_ptr!(fn WindowPos3d(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos3dARB(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos3dMESA(x: GLdouble, y: GLdouble, z: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos3dv(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos3dvARB(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos3dvMESA(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos3f(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos3fARB(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos3fMESA(x: GLfloat, y: GLfloat, z: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos3fv(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos3fvARB(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos3fvMESA(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos3i(x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn WindowPos3iARB(x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn WindowPos3iMESA(x: GLint, y: GLint, z: GLint) -> c_void)
    fn_ptr!(fn WindowPos3iv(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos3ivARB(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos3ivMESA(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos3s(x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn WindowPos3sARB(x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn WindowPos3sMESA(x: GLshort, y: GLshort, z: GLshort) -> c_void)
    fn_ptr!(fn WindowPos3sv(v: *GLshort) -> c_void)
    fn_ptr!(fn WindowPos3svARB(v: *GLshort) -> c_void)
    fn_ptr!(fn WindowPos3svMESA(v: *GLshort) -> c_void)
    fn_ptr!(fn WindowPos4dMESA(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) -> c_void)
    fn_ptr!(fn WindowPos4dvMESA(v: *GLdouble) -> c_void)
    fn_ptr!(fn WindowPos4fMESA(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) -> c_void)
    fn_ptr!(fn WindowPos4fvMESA(v: *GLfloat) -> c_void)
    fn_ptr!(fn WindowPos4iMESA(x: GLint, y: GLint, z: GLint, w: GLint) -> c_void)
    fn_ptr!(fn WindowPos4ivMESA(v: *GLint) -> c_void)
    fn_ptr!(fn WindowPos4sMESA(x: GLshort, y: GLshort, z: GLshort, w: GLshort) -> c_void)
    fn_ptr!(fn WindowPos4svMESA(v: *GLshort) -> c_void)
    fn_ptr!(fn WriteMaskEXT(res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum) -> c_void)
}

macro_rules! fn_mod(
    ($name:ident, $sym:expr) => (
        pub mod $name {
            #[inline]
            pub fn is_loaded() -> bool { unsafe { ::storage::$name.is_loaded } }
            
            #[inline]
            pub fn load_with(loadfn: &fn(symbol: &str) -> Option<extern "C" fn()>) {
                unsafe { ::storage::$name = ::FnPtr::new(loadfn($sym), ::failing::$name) }
            }
        }
    )
)

fn_mod!(Accum, "glAccum")
fn_mod!(AccumxOES, "glAccumxOES")
fn_mod!(ActiveProgramEXT, "glActiveProgramEXT")
fn_mod!(ActiveShaderProgram, "glActiveShaderProgram")
fn_mod!(ActiveShaderProgramEXT, "glActiveShaderProgramEXT")
fn_mod!(ActiveStencilFaceEXT, "glActiveStencilFaceEXT")
fn_mod!(ActiveTexture, "glActiveTexture")
fn_mod!(ActiveTextureARB, "glActiveTextureARB")
fn_mod!(ActiveVaryingNV, "glActiveVaryingNV")
fn_mod!(AlphaFragmentOp1ATI, "glAlphaFragmentOp1ATI")
fn_mod!(AlphaFragmentOp2ATI, "glAlphaFragmentOp2ATI")
fn_mod!(AlphaFragmentOp3ATI, "glAlphaFragmentOp3ATI")
fn_mod!(AlphaFunc, "glAlphaFunc")
fn_mod!(AlphaFuncQCOM, "glAlphaFuncQCOM")
fn_mod!(AlphaFuncx, "glAlphaFuncx")
fn_mod!(AlphaFuncxOES, "glAlphaFuncxOES")
fn_mod!(ApplyTextureEXT, "glApplyTextureEXT")
fn_mod!(AreProgramsResidentNV, "glAreProgramsResidentNV")
fn_mod!(AreTexturesResident, "glAreTexturesResident")
fn_mod!(AreTexturesResidentEXT, "glAreTexturesResidentEXT")
fn_mod!(ArrayElement, "glArrayElement")
fn_mod!(ArrayElementEXT, "glArrayElementEXT")
fn_mod!(ArrayObjectATI, "glArrayObjectATI")
fn_mod!(AsyncMarkerSGIX, "glAsyncMarkerSGIX")
fn_mod!(AttachObjectARB, "glAttachObjectARB")
fn_mod!(AttachShader, "glAttachShader")
fn_mod!(Begin, "glBegin")
fn_mod!(BeginConditionalRender, "glBeginConditionalRender")
fn_mod!(BeginConditionalRenderNV, "glBeginConditionalRenderNV")
fn_mod!(BeginConditionalRenderNVX, "glBeginConditionalRenderNVX")
fn_mod!(BeginFragmentShaderATI, "glBeginFragmentShaderATI")
fn_mod!(BeginOcclusionQueryNV, "glBeginOcclusionQueryNV")
fn_mod!(BeginPerfMonitorAMD, "glBeginPerfMonitorAMD")
fn_mod!(BeginQuery, "glBeginQuery")
fn_mod!(BeginQueryARB, "glBeginQueryARB")
fn_mod!(BeginQueryEXT, "glBeginQueryEXT")
fn_mod!(BeginQueryIndexed, "glBeginQueryIndexed")
fn_mod!(BeginTransformFeedback, "glBeginTransformFeedback")
fn_mod!(BeginTransformFeedbackEXT, "glBeginTransformFeedbackEXT")
fn_mod!(BeginTransformFeedbackNV, "glBeginTransformFeedbackNV")
fn_mod!(BeginVertexShaderEXT, "glBeginVertexShaderEXT")
fn_mod!(BeginVideoCaptureNV, "glBeginVideoCaptureNV")
fn_mod!(BindAttribLocation, "glBindAttribLocation")
fn_mod!(BindAttribLocationARB, "glBindAttribLocationARB")
fn_mod!(BindBuffer, "glBindBuffer")
fn_mod!(BindBufferARB, "glBindBufferARB")
fn_mod!(BindBufferBase, "glBindBufferBase")
fn_mod!(BindBufferBaseEXT, "glBindBufferBaseEXT")
fn_mod!(BindBufferBaseNV, "glBindBufferBaseNV")
fn_mod!(BindBufferOffsetEXT, "glBindBufferOffsetEXT")
fn_mod!(BindBufferOffsetNV, "glBindBufferOffsetNV")
fn_mod!(BindBufferRange, "glBindBufferRange")
fn_mod!(BindBufferRangeEXT, "glBindBufferRangeEXT")
fn_mod!(BindBufferRangeNV, "glBindBufferRangeNV")
fn_mod!(BindBuffersBase, "glBindBuffersBase")
fn_mod!(BindBuffersRange, "glBindBuffersRange")
fn_mod!(BindFragDataLocation, "glBindFragDataLocation")
fn_mod!(BindFragDataLocationEXT, "glBindFragDataLocationEXT")
fn_mod!(BindFragDataLocationIndexed, "glBindFragDataLocationIndexed")
fn_mod!(BindFragmentShaderATI, "glBindFragmentShaderATI")
fn_mod!(BindFramebuffer, "glBindFramebuffer")
fn_mod!(BindFramebufferEXT, "glBindFramebufferEXT")
fn_mod!(BindFramebufferOES, "glBindFramebufferOES")
fn_mod!(BindImageTexture, "glBindImageTexture")
fn_mod!(BindImageTextureEXT, "glBindImageTextureEXT")
fn_mod!(BindImageTextures, "glBindImageTextures")
fn_mod!(BindLightParameterEXT, "glBindLightParameterEXT")
fn_mod!(BindMaterialParameterEXT, "glBindMaterialParameterEXT")
fn_mod!(BindMultiTextureEXT, "glBindMultiTextureEXT")
fn_mod!(BindParameterEXT, "glBindParameterEXT")
fn_mod!(BindProgramARB, "glBindProgramARB")
fn_mod!(BindProgramNV, "glBindProgramNV")
fn_mod!(BindProgramPipeline, "glBindProgramPipeline")
fn_mod!(BindProgramPipelineEXT, "glBindProgramPipelineEXT")
fn_mod!(BindRenderbuffer, "glBindRenderbuffer")
fn_mod!(BindRenderbufferEXT, "glBindRenderbufferEXT")
fn_mod!(BindRenderbufferOES, "glBindRenderbufferOES")
fn_mod!(BindSampler, "glBindSampler")
fn_mod!(BindSamplers, "glBindSamplers")
fn_mod!(BindTexGenParameterEXT, "glBindTexGenParameterEXT")
fn_mod!(BindTexture, "glBindTexture")
fn_mod!(BindTextureEXT, "glBindTextureEXT")
fn_mod!(BindTextureUnitParameterEXT, "glBindTextureUnitParameterEXT")
fn_mod!(BindTextures, "glBindTextures")
fn_mod!(BindTransformFeedback, "glBindTransformFeedback")
fn_mod!(BindTransformFeedbackNV, "glBindTransformFeedbackNV")
fn_mod!(BindVertexArray, "glBindVertexArray")
fn_mod!(BindVertexArrayAPPLE, "glBindVertexArrayAPPLE")
fn_mod!(BindVertexArrayOES, "glBindVertexArrayOES")
fn_mod!(BindVertexBuffer, "glBindVertexBuffer")
fn_mod!(BindVertexBuffers, "glBindVertexBuffers")
fn_mod!(BindVertexShaderEXT, "glBindVertexShaderEXT")
fn_mod!(BindVideoCaptureStreamBufferNV, "glBindVideoCaptureStreamBufferNV")
fn_mod!(BindVideoCaptureStreamTextureNV, "glBindVideoCaptureStreamTextureNV")
fn_mod!(Binormal3bEXT, "glBinormal3bEXT")
fn_mod!(Binormal3bvEXT, "glBinormal3bvEXT")
fn_mod!(Binormal3dEXT, "glBinormal3dEXT")
fn_mod!(Binormal3dvEXT, "glBinormal3dvEXT")
fn_mod!(Binormal3fEXT, "glBinormal3fEXT")
fn_mod!(Binormal3fvEXT, "glBinormal3fvEXT")
fn_mod!(Binormal3iEXT, "glBinormal3iEXT")
fn_mod!(Binormal3ivEXT, "glBinormal3ivEXT")
fn_mod!(Binormal3sEXT, "glBinormal3sEXT")
fn_mod!(Binormal3svEXT, "glBinormal3svEXT")
fn_mod!(BinormalPointerEXT, "glBinormalPointerEXT")
fn_mod!(Bitmap, "glBitmap")
fn_mod!(BitmapxOES, "glBitmapxOES")
fn_mod!(BlendColor, "glBlendColor")
fn_mod!(BlendColorEXT, "glBlendColorEXT")
fn_mod!(BlendColorxOES, "glBlendColorxOES")
fn_mod!(BlendEquation, "glBlendEquation")
fn_mod!(BlendEquationEXT, "glBlendEquationEXT")
fn_mod!(BlendEquationIndexedAMD, "glBlendEquationIndexedAMD")
fn_mod!(BlendEquationOES, "glBlendEquationOES")
fn_mod!(BlendEquationSeparate, "glBlendEquationSeparate")
fn_mod!(BlendEquationSeparateEXT, "glBlendEquationSeparateEXT")
fn_mod!(BlendEquationSeparateIndexedAMD, "glBlendEquationSeparateIndexedAMD")
fn_mod!(BlendEquationSeparateOES, "glBlendEquationSeparateOES")
fn_mod!(BlendEquationSeparatei, "glBlendEquationSeparatei")
fn_mod!(BlendEquationSeparateiARB, "glBlendEquationSeparateiARB")
fn_mod!(BlendEquationi, "glBlendEquationi")
fn_mod!(BlendEquationiARB, "glBlendEquationiARB")
fn_mod!(BlendFunc, "glBlendFunc")
fn_mod!(BlendFuncIndexedAMD, "glBlendFuncIndexedAMD")
fn_mod!(BlendFuncSeparate, "glBlendFuncSeparate")
fn_mod!(BlendFuncSeparateEXT, "glBlendFuncSeparateEXT")
fn_mod!(BlendFuncSeparateINGR, "glBlendFuncSeparateINGR")
fn_mod!(BlendFuncSeparateIndexedAMD, "glBlendFuncSeparateIndexedAMD")
fn_mod!(BlendFuncSeparateOES, "glBlendFuncSeparateOES")
fn_mod!(BlendFuncSeparatei, "glBlendFuncSeparatei")
fn_mod!(BlendFuncSeparateiARB, "glBlendFuncSeparateiARB")
fn_mod!(BlendFunci, "glBlendFunci")
fn_mod!(BlendFunciARB, "glBlendFunciARB")
fn_mod!(BlendParameteriNV, "glBlendParameteriNV")
fn_mod!(BlendBarrierNV, "glBlendBarrierNV")
fn_mod!(BlitFramebuffer, "glBlitFramebuffer")
fn_mod!(BlitFramebufferANGLE, "glBlitFramebufferANGLE")
fn_mod!(BlitFramebufferEXT, "glBlitFramebufferEXT")
fn_mod!(BlitFramebufferNV, "glBlitFramebufferNV")
fn_mod!(BufferAddressRangeNV, "glBufferAddressRangeNV")
fn_mod!(BufferData, "glBufferData")
fn_mod!(BufferDataARB, "glBufferDataARB")
fn_mod!(BufferParameteriAPPLE, "glBufferParameteriAPPLE")
fn_mod!(BufferStorage, "glBufferStorage")
fn_mod!(BufferSubData, "glBufferSubData")
fn_mod!(BufferSubDataARB, "glBufferSubDataARB")
fn_mod!(CallList, "glCallList")
fn_mod!(CallLists, "glCallLists")
fn_mod!(CheckFramebufferStatus, "glCheckFramebufferStatus")
fn_mod!(CheckFramebufferStatusEXT, "glCheckFramebufferStatusEXT")
fn_mod!(CheckFramebufferStatusOES, "glCheckFramebufferStatusOES")
fn_mod!(CheckNamedFramebufferStatusEXT, "glCheckNamedFramebufferStatusEXT")
fn_mod!(ClampColor, "glClampColor")
fn_mod!(ClampColorARB, "glClampColorARB")
fn_mod!(Clear, "glClear")
fn_mod!(ClearAccum, "glClearAccum")
fn_mod!(ClearAccumxOES, "glClearAccumxOES")
fn_mod!(ClearBufferData, "glClearBufferData")
fn_mod!(ClearBufferSubData, "glClearBufferSubData")
fn_mod!(ClearBufferfi, "glClearBufferfi")
fn_mod!(ClearBufferfv, "glClearBufferfv")
fn_mod!(ClearBufferiv, "glClearBufferiv")
fn_mod!(ClearBufferuiv, "glClearBufferuiv")
fn_mod!(ClearColor, "glClearColor")
fn_mod!(ClearColorIiEXT, "glClearColorIiEXT")
fn_mod!(ClearColorIuiEXT, "glClearColorIuiEXT")
fn_mod!(ClearColorx, "glClearColorx")
fn_mod!(ClearColorxOES, "glClearColorxOES")
fn_mod!(ClearDepth, "glClearDepth")
fn_mod!(ClearDepthdNV, "glClearDepthdNV")
fn_mod!(ClearDepthf, "glClearDepthf")
fn_mod!(ClearDepthfOES, "glClearDepthfOES")
fn_mod!(ClearDepthx, "glClearDepthx")
fn_mod!(ClearDepthxOES, "glClearDepthxOES")
fn_mod!(ClearIndex, "glClearIndex")
fn_mod!(ClearNamedBufferDataEXT, "glClearNamedBufferDataEXT")
fn_mod!(ClearNamedBufferSubDataEXT, "glClearNamedBufferSubDataEXT")
fn_mod!(ClearStencil, "glClearStencil")
fn_mod!(ClearTexImage, "glClearTexImage")
fn_mod!(ClearTexSubImage, "glClearTexSubImage")
fn_mod!(ClientActiveTexture, "glClientActiveTexture")
fn_mod!(ClientActiveTextureARB, "glClientActiveTextureARB")
fn_mod!(ClientActiveVertexStreamATI, "glClientActiveVertexStreamATI")
fn_mod!(ClientAttribDefaultEXT, "glClientAttribDefaultEXT")
fn_mod!(ClientWaitSync, "glClientWaitSync")
fn_mod!(ClientWaitSyncAPPLE, "glClientWaitSyncAPPLE")
fn_mod!(ClipControlARB, "glClipControlARB")
fn_mod!(ClipPlane, "glClipPlane")
fn_mod!(ClipPlanef, "glClipPlanef")
fn_mod!(ClipPlanefIMG, "glClipPlanefIMG")
fn_mod!(ClipPlanefOES, "glClipPlanefOES")
fn_mod!(ClipPlanex, "glClipPlanex")
fn_mod!(ClipPlanexIMG, "glClipPlanexIMG")
fn_mod!(ClipPlanexOES, "glClipPlanexOES")
fn_mod!(Color3b, "glColor3b")
fn_mod!(Color3bv, "glColor3bv")
fn_mod!(Color3d, "glColor3d")
fn_mod!(Color3dv, "glColor3dv")
fn_mod!(Color3f, "glColor3f")
fn_mod!(Color3fVertex3fSUN, "glColor3fVertex3fSUN")
fn_mod!(Color3fVertex3fvSUN, "glColor3fVertex3fvSUN")
fn_mod!(Color3fv, "glColor3fv")
fn_mod!(Color3hNV, "glColor3hNV")
fn_mod!(Color3hvNV, "glColor3hvNV")
fn_mod!(Color3i, "glColor3i")
fn_mod!(Color3iv, "glColor3iv")
fn_mod!(Color3s, "glColor3s")
fn_mod!(Color3sv, "glColor3sv")
fn_mod!(Color3ub, "glColor3ub")
fn_mod!(Color3ubv, "glColor3ubv")
fn_mod!(Color3ui, "glColor3ui")
fn_mod!(Color3uiv, "glColor3uiv")
fn_mod!(Color3us, "glColor3us")
fn_mod!(Color3usv, "glColor3usv")
fn_mod!(Color3xOES, "glColor3xOES")
fn_mod!(Color3xvOES, "glColor3xvOES")
fn_mod!(Color4b, "glColor4b")
fn_mod!(Color4bv, "glColor4bv")
fn_mod!(Color4d, "glColor4d")
fn_mod!(Color4dv, "glColor4dv")
fn_mod!(Color4f, "glColor4f")
fn_mod!(Color4fNormal3fVertex3fSUN, "glColor4fNormal3fVertex3fSUN")
fn_mod!(Color4fNormal3fVertex3fvSUN, "glColor4fNormal3fVertex3fvSUN")
fn_mod!(Color4fv, "glColor4fv")
fn_mod!(Color4hNV, "glColor4hNV")
fn_mod!(Color4hvNV, "glColor4hvNV")
fn_mod!(Color4i, "glColor4i")
fn_mod!(Color4iv, "glColor4iv")
fn_mod!(Color4s, "glColor4s")
fn_mod!(Color4sv, "glColor4sv")
fn_mod!(Color4ub, "glColor4ub")
fn_mod!(Color4ubVertex2fSUN, "glColor4ubVertex2fSUN")
fn_mod!(Color4ubVertex2fvSUN, "glColor4ubVertex2fvSUN")
fn_mod!(Color4ubVertex3fSUN, "glColor4ubVertex3fSUN")
fn_mod!(Color4ubVertex3fvSUN, "glColor4ubVertex3fvSUN")
fn_mod!(Color4ubv, "glColor4ubv")
fn_mod!(Color4ui, "glColor4ui")
fn_mod!(Color4uiv, "glColor4uiv")
fn_mod!(Color4us, "glColor4us")
fn_mod!(Color4usv, "glColor4usv")
fn_mod!(Color4x, "glColor4x")
fn_mod!(Color4xOES, "glColor4xOES")
fn_mod!(Color4xvOES, "glColor4xvOES")
fn_mod!(ColorFormatNV, "glColorFormatNV")
fn_mod!(ColorFragmentOp1ATI, "glColorFragmentOp1ATI")
fn_mod!(ColorFragmentOp2ATI, "glColorFragmentOp2ATI")
fn_mod!(ColorFragmentOp3ATI, "glColorFragmentOp3ATI")
fn_mod!(ColorMask, "glColorMask")
fn_mod!(ColorMaskIndexedEXT, "glColorMaskIndexedEXT")
fn_mod!(ColorMaski, "glColorMaski")
fn_mod!(ColorMaterial, "glColorMaterial")
fn_mod!(ColorP3ui, "glColorP3ui")
fn_mod!(ColorP3uiv, "glColorP3uiv")
fn_mod!(ColorP4ui, "glColorP4ui")
fn_mod!(ColorP4uiv, "glColorP4uiv")
fn_mod!(ColorPointer, "glColorPointer")
fn_mod!(ColorPointerEXT, "glColorPointerEXT")
fn_mod!(ColorPointerListIBM, "glColorPointerListIBM")
fn_mod!(ColorPointervINTEL, "glColorPointervINTEL")
fn_mod!(ColorSubTable, "glColorSubTable")
fn_mod!(ColorSubTableEXT, "glColorSubTableEXT")
fn_mod!(ColorTable, "glColorTable")
fn_mod!(ColorTableEXT, "glColorTableEXT")
fn_mod!(ColorTableParameterfv, "glColorTableParameterfv")
fn_mod!(ColorTableParameterfvSGI, "glColorTableParameterfvSGI")
fn_mod!(ColorTableParameteriv, "glColorTableParameteriv")
fn_mod!(ColorTableParameterivSGI, "glColorTableParameterivSGI")
fn_mod!(ColorTableSGI, "glColorTableSGI")
fn_mod!(CombinerInputNV, "glCombinerInputNV")
fn_mod!(CombinerOutputNV, "glCombinerOutputNV")
fn_mod!(CombinerParameterfNV, "glCombinerParameterfNV")
fn_mod!(CombinerParameterfvNV, "glCombinerParameterfvNV")
fn_mod!(CombinerParameteriNV, "glCombinerParameteriNV")
fn_mod!(CombinerParameterivNV, "glCombinerParameterivNV")
fn_mod!(CombinerStageParameterfvNV, "glCombinerStageParameterfvNV")
fn_mod!(CompileShader, "glCompileShader")
fn_mod!(CompileShaderARB, "glCompileShaderARB")
fn_mod!(CompileShaderIncludeARB, "glCompileShaderIncludeARB")
fn_mod!(CompressedMultiTexImage1DEXT, "glCompressedMultiTexImage1DEXT")
fn_mod!(CompressedMultiTexImage2DEXT, "glCompressedMultiTexImage2DEXT")
fn_mod!(CompressedMultiTexImage3DEXT, "glCompressedMultiTexImage3DEXT")
fn_mod!(CompressedMultiTexSubImage1DEXT, "glCompressedMultiTexSubImage1DEXT")
fn_mod!(CompressedMultiTexSubImage2DEXT, "glCompressedMultiTexSubImage2DEXT")
fn_mod!(CompressedMultiTexSubImage3DEXT, "glCompressedMultiTexSubImage3DEXT")
fn_mod!(CompressedTexImage1D, "glCompressedTexImage1D")
fn_mod!(CompressedTexImage1DARB, "glCompressedTexImage1DARB")
fn_mod!(CompressedTexImage2D, "glCompressedTexImage2D")
fn_mod!(CompressedTexImage2DARB, "glCompressedTexImage2DARB")
fn_mod!(CompressedTexImage3D, "glCompressedTexImage3D")
fn_mod!(CompressedTexImage3DARB, "glCompressedTexImage3DARB")
fn_mod!(CompressedTexImage3DOES, "glCompressedTexImage3DOES")
fn_mod!(CompressedTexSubImage1D, "glCompressedTexSubImage1D")
fn_mod!(CompressedTexSubImage1DARB, "glCompressedTexSubImage1DARB")
fn_mod!(CompressedTexSubImage2D, "glCompressedTexSubImage2D")
fn_mod!(CompressedTexSubImage2DARB, "glCompressedTexSubImage2DARB")
fn_mod!(CompressedTexSubImage3D, "glCompressedTexSubImage3D")
fn_mod!(CompressedTexSubImage3DARB, "glCompressedTexSubImage3DARB")
fn_mod!(CompressedTexSubImage3DOES, "glCompressedTexSubImage3DOES")
fn_mod!(CompressedTextureImage1DEXT, "glCompressedTextureImage1DEXT")
fn_mod!(CompressedTextureImage2DEXT, "glCompressedTextureImage2DEXT")
fn_mod!(CompressedTextureImage3DEXT, "glCompressedTextureImage3DEXT")
fn_mod!(CompressedTextureSubImage1DEXT, "glCompressedTextureSubImage1DEXT")
fn_mod!(CompressedTextureSubImage2DEXT, "glCompressedTextureSubImage2DEXT")
fn_mod!(CompressedTextureSubImage3DEXT, "glCompressedTextureSubImage3DEXT")
fn_mod!(ConvolutionFilter1D, "glConvolutionFilter1D")
fn_mod!(ConvolutionFilter1DEXT, "glConvolutionFilter1DEXT")
fn_mod!(ConvolutionFilter2D, "glConvolutionFilter2D")
fn_mod!(ConvolutionFilter2DEXT, "glConvolutionFilter2DEXT")
fn_mod!(ConvolutionParameterf, "glConvolutionParameterf")
fn_mod!(ConvolutionParameterfEXT, "glConvolutionParameterfEXT")
fn_mod!(ConvolutionParameterfv, "glConvolutionParameterfv")
fn_mod!(ConvolutionParameterfvEXT, "glConvolutionParameterfvEXT")
fn_mod!(ConvolutionParameteri, "glConvolutionParameteri")
fn_mod!(ConvolutionParameteriEXT, "glConvolutionParameteriEXT")
fn_mod!(ConvolutionParameteriv, "glConvolutionParameteriv")
fn_mod!(ConvolutionParameterivEXT, "glConvolutionParameterivEXT")
fn_mod!(ConvolutionParameterxOES, "glConvolutionParameterxOES")
fn_mod!(ConvolutionParameterxvOES, "glConvolutionParameterxvOES")
fn_mod!(CopyBufferSubData, "glCopyBufferSubData")
fn_mod!(CopyColorSubTable, "glCopyColorSubTable")
fn_mod!(CopyColorSubTableEXT, "glCopyColorSubTableEXT")
fn_mod!(CopyColorTable, "glCopyColorTable")
fn_mod!(CopyColorTableSGI, "glCopyColorTableSGI")
fn_mod!(CopyConvolutionFilter1D, "glCopyConvolutionFilter1D")
fn_mod!(CopyConvolutionFilter1DEXT, "glCopyConvolutionFilter1DEXT")
fn_mod!(CopyConvolutionFilter2D, "glCopyConvolutionFilter2D")
fn_mod!(CopyConvolutionFilter2DEXT, "glCopyConvolutionFilter2DEXT")
fn_mod!(CopyImageSubData, "glCopyImageSubData")
fn_mod!(CopyImageSubDataNV, "glCopyImageSubDataNV")
fn_mod!(CopyMultiTexImage1DEXT, "glCopyMultiTexImage1DEXT")
fn_mod!(CopyMultiTexImage2DEXT, "glCopyMultiTexImage2DEXT")
fn_mod!(CopyMultiTexSubImage1DEXT, "glCopyMultiTexSubImage1DEXT")
fn_mod!(CopyMultiTexSubImage2DEXT, "glCopyMultiTexSubImage2DEXT")
fn_mod!(CopyMultiTexSubImage3DEXT, "glCopyMultiTexSubImage3DEXT")
fn_mod!(CopyPathNV, "glCopyPathNV")
fn_mod!(CopyPixels, "glCopyPixels")
fn_mod!(CopyTexImage1D, "glCopyTexImage1D")
fn_mod!(CopyTexImage1DEXT, "glCopyTexImage1DEXT")
fn_mod!(CopyTexImage2D, "glCopyTexImage2D")
fn_mod!(CopyTexImage2DEXT, "glCopyTexImage2DEXT")
fn_mod!(CopyTexSubImage1D, "glCopyTexSubImage1D")
fn_mod!(CopyTexSubImage1DEXT, "glCopyTexSubImage1DEXT")
fn_mod!(CopyTexSubImage2D, "glCopyTexSubImage2D")
fn_mod!(CopyTexSubImage2DEXT, "glCopyTexSubImage2DEXT")
fn_mod!(CopyTexSubImage3D, "glCopyTexSubImage3D")
fn_mod!(CopyTexSubImage3DEXT, "glCopyTexSubImage3DEXT")
fn_mod!(CopyTexSubImage3DOES, "glCopyTexSubImage3DOES")
fn_mod!(CopyTextureImage1DEXT, "glCopyTextureImage1DEXT")
fn_mod!(CopyTextureImage2DEXT, "glCopyTextureImage2DEXT")
fn_mod!(CopyTextureLevelsAPPLE, "glCopyTextureLevelsAPPLE")
fn_mod!(CopyTextureSubImage1DEXT, "glCopyTextureSubImage1DEXT")
fn_mod!(CopyTextureSubImage2DEXT, "glCopyTextureSubImage2DEXT")
fn_mod!(CopyTextureSubImage3DEXT, "glCopyTextureSubImage3DEXT")
fn_mod!(CoverFillPathInstancedNV, "glCoverFillPathInstancedNV")
fn_mod!(CoverFillPathNV, "glCoverFillPathNV")
fn_mod!(CoverStrokePathInstancedNV, "glCoverStrokePathInstancedNV")
fn_mod!(CoverStrokePathNV, "glCoverStrokePathNV")
fn_mod!(CoverageMaskNV, "glCoverageMaskNV")
fn_mod!(CoverageOperationNV, "glCoverageOperationNV")
fn_mod!(CreateProgram, "glCreateProgram")
fn_mod!(CreateProgramObjectARB, "glCreateProgramObjectARB")
fn_mod!(CreateShader, "glCreateShader")
fn_mod!(CreateShaderObjectARB, "glCreateShaderObjectARB")
fn_mod!(CreateShaderProgramEXT, "glCreateShaderProgramEXT")
fn_mod!(CreateShaderProgramv, "glCreateShaderProgramv")
fn_mod!(CreateShaderProgramvEXT, "glCreateShaderProgramvEXT")
fn_mod!(CreateSyncFromCLeventARB, "glCreateSyncFromCLeventARB")
fn_mod!(CullFace, "glCullFace")
fn_mod!(CullParameterdvEXT, "glCullParameterdvEXT")
fn_mod!(CullParameterfvEXT, "glCullParameterfvEXT")
fn_mod!(CurrentPaletteMatrixARB, "glCurrentPaletteMatrixARB")
fn_mod!(CurrentPaletteMatrixOES, "glCurrentPaletteMatrixOES")
fn_mod!(DebugMessageCallback, "glDebugMessageCallback")
fn_mod!(DebugMessageCallbackAMD, "glDebugMessageCallbackAMD")
fn_mod!(DebugMessageCallbackARB, "glDebugMessageCallbackARB")
fn_mod!(DebugMessageCallbackKHR, "glDebugMessageCallbackKHR")
fn_mod!(DebugMessageControl, "glDebugMessageControl")
fn_mod!(DebugMessageControlARB, "glDebugMessageControlARB")
fn_mod!(DebugMessageControlKHR, "glDebugMessageControlKHR")
fn_mod!(DebugMessageEnableAMD, "glDebugMessageEnableAMD")
fn_mod!(DebugMessageInsert, "glDebugMessageInsert")
fn_mod!(DebugMessageInsertAMD, "glDebugMessageInsertAMD")
fn_mod!(DebugMessageInsertARB, "glDebugMessageInsertARB")
fn_mod!(DebugMessageInsertKHR, "glDebugMessageInsertKHR")
fn_mod!(DeformSGIX, "glDeformSGIX")
fn_mod!(DeformationMap3dSGIX, "glDeformationMap3dSGIX")
fn_mod!(DeformationMap3fSGIX, "glDeformationMap3fSGIX")
fn_mod!(DeleteAsyncMarkersSGIX, "glDeleteAsyncMarkersSGIX")
fn_mod!(DeleteBuffers, "glDeleteBuffers")
fn_mod!(DeleteBuffersARB, "glDeleteBuffersARB")
fn_mod!(DeleteFencesAPPLE, "glDeleteFencesAPPLE")
fn_mod!(DeleteFencesNV, "glDeleteFencesNV")
fn_mod!(DeleteFragmentShaderATI, "glDeleteFragmentShaderATI")
fn_mod!(DeleteFramebuffers, "glDeleteFramebuffers")
fn_mod!(DeleteFramebuffersEXT, "glDeleteFramebuffersEXT")
fn_mod!(DeleteFramebuffersOES, "glDeleteFramebuffersOES")
fn_mod!(DeleteLists, "glDeleteLists")
fn_mod!(DeleteNamedStringARB, "glDeleteNamedStringARB")
fn_mod!(DeleteNamesAMD, "glDeleteNamesAMD")
fn_mod!(DeleteObjectARB, "glDeleteObjectARB")
fn_mod!(DeleteOcclusionQueriesNV, "glDeleteOcclusionQueriesNV")
fn_mod!(DeletePathsNV, "glDeletePathsNV")
fn_mod!(DeletePerfMonitorsAMD, "glDeletePerfMonitorsAMD")
fn_mod!(DeleteProgram, "glDeleteProgram")
fn_mod!(DeleteProgramPipelines, "glDeleteProgramPipelines")
fn_mod!(DeleteProgramPipelinesEXT, "glDeleteProgramPipelinesEXT")
fn_mod!(DeleteProgramsARB, "glDeleteProgramsARB")
fn_mod!(DeleteProgramsNV, "glDeleteProgramsNV")
fn_mod!(DeleteQueries, "glDeleteQueries")
fn_mod!(DeleteQueriesARB, "glDeleteQueriesARB")
fn_mod!(DeleteQueriesEXT, "glDeleteQueriesEXT")
fn_mod!(DeleteRenderbuffers, "glDeleteRenderbuffers")
fn_mod!(DeleteRenderbuffersEXT, "glDeleteRenderbuffersEXT")
fn_mod!(DeleteRenderbuffersOES, "glDeleteRenderbuffersOES")
fn_mod!(DeleteSamplers, "glDeleteSamplers")
fn_mod!(DeleteShader, "glDeleteShader")
fn_mod!(DeleteSync, "glDeleteSync")
fn_mod!(DeleteSyncAPPLE, "glDeleteSyncAPPLE")
fn_mod!(DeleteTextures, "glDeleteTextures")
fn_mod!(DeleteTexturesEXT, "glDeleteTexturesEXT")
fn_mod!(DeleteTransformFeedbacks, "glDeleteTransformFeedbacks")
fn_mod!(DeleteTransformFeedbacksNV, "glDeleteTransformFeedbacksNV")
fn_mod!(DeleteVertexArrays, "glDeleteVertexArrays")
fn_mod!(DeleteVertexArraysAPPLE, "glDeleteVertexArraysAPPLE")
fn_mod!(DeleteVertexArraysOES, "glDeleteVertexArraysOES")
fn_mod!(DeleteVertexShaderEXT, "glDeleteVertexShaderEXT")
fn_mod!(DepthBoundsEXT, "glDepthBoundsEXT")
fn_mod!(DepthBoundsdNV, "glDepthBoundsdNV")
fn_mod!(DepthFunc, "glDepthFunc")
fn_mod!(DepthMask, "glDepthMask")
fn_mod!(DepthRange, "glDepthRange")
fn_mod!(DepthRangeArrayv, "glDepthRangeArrayv")
fn_mod!(DepthRangeIndexed, "glDepthRangeIndexed")
fn_mod!(DepthRangedNV, "glDepthRangedNV")
fn_mod!(DepthRangef, "glDepthRangef")
fn_mod!(DepthRangefOES, "glDepthRangefOES")
fn_mod!(DepthRangex, "glDepthRangex")
fn_mod!(DepthRangexOES, "glDepthRangexOES")
fn_mod!(DetachObjectARB, "glDetachObjectARB")
fn_mod!(DetachShader, "glDetachShader")
fn_mod!(DetailTexFuncSGIS, "glDetailTexFuncSGIS")
fn_mod!(Disable, "glDisable")
fn_mod!(DisableClientState, "glDisableClientState")
fn_mod!(DisableClientStateIndexedEXT, "glDisableClientStateIndexedEXT")
fn_mod!(DisableClientStateiEXT, "glDisableClientStateiEXT")
fn_mod!(DisableDriverControlQCOM, "glDisableDriverControlQCOM")
fn_mod!(DisableIndexedEXT, "glDisableIndexedEXT")
fn_mod!(DisableVariantClientStateEXT, "glDisableVariantClientStateEXT")
fn_mod!(DisableVertexArrayAttribEXT, "glDisableVertexArrayAttribEXT")
fn_mod!(DisableVertexArrayEXT, "glDisableVertexArrayEXT")
fn_mod!(DisableVertexAttribAPPLE, "glDisableVertexAttribAPPLE")
fn_mod!(DisableVertexAttribArray, "glDisableVertexAttribArray")
fn_mod!(DisableVertexAttribArrayARB, "glDisableVertexAttribArrayARB")
fn_mod!(Disablei, "glDisablei")
fn_mod!(DiscardFramebufferEXT, "glDiscardFramebufferEXT")
fn_mod!(DispatchCompute, "glDispatchCompute")
fn_mod!(DispatchComputeGroupSizeARB, "glDispatchComputeGroupSizeARB")
fn_mod!(DispatchComputeIndirect, "glDispatchComputeIndirect")
fn_mod!(DrawArrays, "glDrawArrays")
fn_mod!(DrawArraysEXT, "glDrawArraysEXT")
fn_mod!(DrawArraysIndirect, "glDrawArraysIndirect")
fn_mod!(DrawArraysInstanced, "glDrawArraysInstanced")
fn_mod!(DrawArraysInstancedANGLE, "glDrawArraysInstancedANGLE")
fn_mod!(DrawArraysInstancedARB, "glDrawArraysInstancedARB")
fn_mod!(DrawArraysInstancedBaseInstance, "glDrawArraysInstancedBaseInstance")
fn_mod!(DrawArraysInstancedEXT, "glDrawArraysInstancedEXT")
fn_mod!(DrawArraysInstancedNV, "glDrawArraysInstancedNV")
fn_mod!(DrawBuffer, "glDrawBuffer")
fn_mod!(DrawBuffers, "glDrawBuffers")
fn_mod!(DrawBuffersARB, "glDrawBuffersARB")
fn_mod!(DrawBuffersATI, "glDrawBuffersATI")
fn_mod!(DrawBuffersEXT, "glDrawBuffersEXT")
fn_mod!(DrawBuffersIndexedEXT, "glDrawBuffersIndexedEXT")
fn_mod!(DrawBuffersNV, "glDrawBuffersNV")
fn_mod!(DrawElementArrayAPPLE, "glDrawElementArrayAPPLE")
fn_mod!(DrawElementArrayATI, "glDrawElementArrayATI")
fn_mod!(DrawElements, "glDrawElements")
fn_mod!(DrawElementsBaseVertex, "glDrawElementsBaseVertex")
fn_mod!(DrawElementsIndirect, "glDrawElementsIndirect")
fn_mod!(DrawElementsInstanced, "glDrawElementsInstanced")
fn_mod!(DrawElementsInstancedANGLE, "glDrawElementsInstancedANGLE")
fn_mod!(DrawElementsInstancedARB, "glDrawElementsInstancedARB")
fn_mod!(DrawElementsInstancedBaseInstance, "glDrawElementsInstancedBaseInstance")
fn_mod!(DrawElementsInstancedBaseVertex, "glDrawElementsInstancedBaseVertex")
fn_mod!(DrawElementsInstancedBaseVertexBaseInstance, "glDrawElementsInstancedBaseVertexBaseInstance")
fn_mod!(DrawElementsInstancedEXT, "glDrawElementsInstancedEXT")
fn_mod!(DrawElementsInstancedNV, "glDrawElementsInstancedNV")
fn_mod!(DrawMeshArraysSUN, "glDrawMeshArraysSUN")
fn_mod!(DrawPixels, "glDrawPixels")
fn_mod!(DrawRangeElementArrayAPPLE, "glDrawRangeElementArrayAPPLE")
fn_mod!(DrawRangeElementArrayATI, "glDrawRangeElementArrayATI")
fn_mod!(DrawRangeElements, "glDrawRangeElements")
fn_mod!(DrawRangeElementsBaseVertex, "glDrawRangeElementsBaseVertex")
fn_mod!(DrawRangeElementsEXT, "glDrawRangeElementsEXT")
fn_mod!(DrawTexfOES, "glDrawTexfOES")
fn_mod!(DrawTexfvOES, "glDrawTexfvOES")
fn_mod!(DrawTexiOES, "glDrawTexiOES")
fn_mod!(DrawTexivOES, "glDrawTexivOES")
fn_mod!(DrawTexsOES, "glDrawTexsOES")
fn_mod!(DrawTexsvOES, "glDrawTexsvOES")
fn_mod!(DrawTextureNV, "glDrawTextureNV")
fn_mod!(DrawTexxOES, "glDrawTexxOES")
fn_mod!(DrawTexxvOES, "glDrawTexxvOES")
fn_mod!(DrawTransformFeedback, "glDrawTransformFeedback")
fn_mod!(DrawTransformFeedbackInstanced, "glDrawTransformFeedbackInstanced")
fn_mod!(DrawTransformFeedbackNV, "glDrawTransformFeedbackNV")
fn_mod!(DrawTransformFeedbackStream, "glDrawTransformFeedbackStream")
fn_mod!(DrawTransformFeedbackStreamInstanced, "glDrawTransformFeedbackStreamInstanced")
fn_mod!(EGLImageTargetRenderbufferStorageOES, "glEGLImageTargetRenderbufferStorageOES")
fn_mod!(EGLImageTargetTexture2DOES, "glEGLImageTargetTexture2DOES")
fn_mod!(EdgeFlag, "glEdgeFlag")
fn_mod!(EdgeFlagFormatNV, "glEdgeFlagFormatNV")
fn_mod!(EdgeFlagPointer, "glEdgeFlagPointer")
fn_mod!(EdgeFlagPointerEXT, "glEdgeFlagPointerEXT")
fn_mod!(EdgeFlagPointerListIBM, "glEdgeFlagPointerListIBM")
fn_mod!(EdgeFlagv, "glEdgeFlagv")
fn_mod!(ElementPointerAPPLE, "glElementPointerAPPLE")
fn_mod!(ElementPointerATI, "glElementPointerATI")
fn_mod!(Enable, "glEnable")
fn_mod!(EnableClientState, "glEnableClientState")
fn_mod!(EnableClientStateIndexedEXT, "glEnableClientStateIndexedEXT")
fn_mod!(EnableClientStateiEXT, "glEnableClientStateiEXT")
fn_mod!(EnableDriverControlQCOM, "glEnableDriverControlQCOM")
fn_mod!(EnableIndexedEXT, "glEnableIndexedEXT")
fn_mod!(EnableVariantClientStateEXT, "glEnableVariantClientStateEXT")
fn_mod!(EnableVertexArrayAttribEXT, "glEnableVertexArrayAttribEXT")
fn_mod!(EnableVertexArrayEXT, "glEnableVertexArrayEXT")
fn_mod!(EnableVertexAttribAPPLE, "glEnableVertexAttribAPPLE")
fn_mod!(EnableVertexAttribArray, "glEnableVertexAttribArray")
fn_mod!(EnableVertexAttribArrayARB, "glEnableVertexAttribArrayARB")
fn_mod!(Enablei, "glEnablei")
fn_mod!(End, "glEnd")
fn_mod!(EndConditionalRender, "glEndConditionalRender")
fn_mod!(EndConditionalRenderNV, "glEndConditionalRenderNV")
fn_mod!(EndConditionalRenderNVX, "glEndConditionalRenderNVX")
fn_mod!(EndFragmentShaderATI, "glEndFragmentShaderATI")
fn_mod!(EndList, "glEndList")
fn_mod!(EndOcclusionQueryNV, "glEndOcclusionQueryNV")
fn_mod!(EndPerfMonitorAMD, "glEndPerfMonitorAMD")
fn_mod!(EndQuery, "glEndQuery")
fn_mod!(EndQueryARB, "glEndQueryARB")
fn_mod!(EndQueryEXT, "glEndQueryEXT")
fn_mod!(EndQueryIndexed, "glEndQueryIndexed")
fn_mod!(EndTilingQCOM, "glEndTilingQCOM")
fn_mod!(EndTransformFeedback, "glEndTransformFeedback")
fn_mod!(EndTransformFeedbackEXT, "glEndTransformFeedbackEXT")
fn_mod!(EndTransformFeedbackNV, "glEndTransformFeedbackNV")
fn_mod!(EndVertexShaderEXT, "glEndVertexShaderEXT")
fn_mod!(EndVideoCaptureNV, "glEndVideoCaptureNV")
fn_mod!(EvalCoord1d, "glEvalCoord1d")
fn_mod!(EvalCoord1dv, "glEvalCoord1dv")
fn_mod!(EvalCoord1f, "glEvalCoord1f")
fn_mod!(EvalCoord1fv, "glEvalCoord1fv")
fn_mod!(EvalCoord1xOES, "glEvalCoord1xOES")
fn_mod!(EvalCoord1xvOES, "glEvalCoord1xvOES")
fn_mod!(EvalCoord2d, "glEvalCoord2d")
fn_mod!(EvalCoord2dv, "glEvalCoord2dv")
fn_mod!(EvalCoord2f, "glEvalCoord2f")
fn_mod!(EvalCoord2fv, "glEvalCoord2fv")
fn_mod!(EvalCoord2xOES, "glEvalCoord2xOES")
fn_mod!(EvalCoord2xvOES, "glEvalCoord2xvOES")
fn_mod!(EvalMapsNV, "glEvalMapsNV")
fn_mod!(EvalMesh1, "glEvalMesh1")
fn_mod!(EvalMesh2, "glEvalMesh2")
fn_mod!(EvalPoint1, "glEvalPoint1")
fn_mod!(EvalPoint2, "glEvalPoint2")
fn_mod!(ExecuteProgramNV, "glExecuteProgramNV")
fn_mod!(ExtGetBufferPointervQCOM, "glExtGetBufferPointervQCOM")
fn_mod!(ExtGetBuffersQCOM, "glExtGetBuffersQCOM")
fn_mod!(ExtGetFramebuffersQCOM, "glExtGetFramebuffersQCOM")
fn_mod!(ExtGetProgramBinarySourceQCOM, "glExtGetProgramBinarySourceQCOM")
fn_mod!(ExtGetProgramsQCOM, "glExtGetProgramsQCOM")
fn_mod!(ExtGetRenderbuffersQCOM, "glExtGetRenderbuffersQCOM")
fn_mod!(ExtGetShadersQCOM, "glExtGetShadersQCOM")
fn_mod!(ExtGetTexLevelParameterivQCOM, "glExtGetTexLevelParameterivQCOM")
fn_mod!(ExtGetTexSubImageQCOM, "glExtGetTexSubImageQCOM")
fn_mod!(ExtGetTexturesQCOM, "glExtGetTexturesQCOM")
fn_mod!(ExtIsProgramBinaryQCOM, "glExtIsProgramBinaryQCOM")
fn_mod!(ExtTexObjectStateOverrideiQCOM, "glExtTexObjectStateOverrideiQCOM")
fn_mod!(ExtractComponentEXT, "glExtractComponentEXT")
fn_mod!(FeedbackBuffer, "glFeedbackBuffer")
fn_mod!(FeedbackBufferxOES, "glFeedbackBufferxOES")
fn_mod!(FenceSync, "glFenceSync")
fn_mod!(FenceSyncAPPLE, "glFenceSyncAPPLE")
fn_mod!(FinalCombinerInputNV, "glFinalCombinerInputNV")
fn_mod!(Finish, "glFinish")
fn_mod!(FinishAsyncSGIX, "glFinishAsyncSGIX")
fn_mod!(FinishFenceAPPLE, "glFinishFenceAPPLE")
fn_mod!(FinishFenceNV, "glFinishFenceNV")
fn_mod!(FinishObjectAPPLE, "glFinishObjectAPPLE")
fn_mod!(FinishTextureSUNX, "glFinishTextureSUNX")
fn_mod!(Flush, "glFlush")
fn_mod!(FlushMappedBufferRange, "glFlushMappedBufferRange")
fn_mod!(FlushMappedBufferRangeAPPLE, "glFlushMappedBufferRangeAPPLE")
fn_mod!(FlushMappedBufferRangeEXT, "glFlushMappedBufferRangeEXT")
fn_mod!(FlushMappedNamedBufferRangeEXT, "glFlushMappedNamedBufferRangeEXT")
fn_mod!(FlushPixelDataRangeNV, "glFlushPixelDataRangeNV")
fn_mod!(FlushRasterSGIX, "glFlushRasterSGIX")
fn_mod!(FlushStaticDataIBM, "glFlushStaticDataIBM")
fn_mod!(FlushVertexArrayRangeAPPLE, "glFlushVertexArrayRangeAPPLE")
fn_mod!(FlushVertexArrayRangeNV, "glFlushVertexArrayRangeNV")
fn_mod!(FogCoordFormatNV, "glFogCoordFormatNV")
fn_mod!(FogCoordPointer, "glFogCoordPointer")
fn_mod!(FogCoordPointerEXT, "glFogCoordPointerEXT")
fn_mod!(FogCoordPointerListIBM, "glFogCoordPointerListIBM")
fn_mod!(FogCoordd, "glFogCoordd")
fn_mod!(FogCoorddEXT, "glFogCoorddEXT")
fn_mod!(FogCoorddv, "glFogCoorddv")
fn_mod!(FogCoorddvEXT, "glFogCoorddvEXT")
fn_mod!(FogCoordf, "glFogCoordf")
fn_mod!(FogCoordfEXT, "glFogCoordfEXT")
fn_mod!(FogCoordfv, "glFogCoordfv")
fn_mod!(FogCoordfvEXT, "glFogCoordfvEXT")
fn_mod!(FogCoordhNV, "glFogCoordhNV")
fn_mod!(FogCoordhvNV, "glFogCoordhvNV")
fn_mod!(FogFuncSGIS, "glFogFuncSGIS")
fn_mod!(Fogf, "glFogf")
fn_mod!(Fogfv, "glFogfv")
fn_mod!(Fogi, "glFogi")
fn_mod!(Fogiv, "glFogiv")
fn_mod!(Fogx, "glFogx")
fn_mod!(FogxOES, "glFogxOES")
fn_mod!(Fogxv, "glFogxv")
fn_mod!(FogxvOES, "glFogxvOES")
fn_mod!(FragmentColorMaterialSGIX, "glFragmentColorMaterialSGIX")
fn_mod!(FragmentLightModelfSGIX, "glFragmentLightModelfSGIX")
fn_mod!(FragmentLightModelfvSGIX, "glFragmentLightModelfvSGIX")
fn_mod!(FragmentLightModeliSGIX, "glFragmentLightModeliSGIX")
fn_mod!(FragmentLightModelivSGIX, "glFragmentLightModelivSGIX")
fn_mod!(FragmentLightfSGIX, "glFragmentLightfSGIX")
fn_mod!(FragmentLightfvSGIX, "glFragmentLightfvSGIX")
fn_mod!(FragmentLightiSGIX, "glFragmentLightiSGIX")
fn_mod!(FragmentLightivSGIX, "glFragmentLightivSGIX")
fn_mod!(FragmentMaterialfSGIX, "glFragmentMaterialfSGIX")
fn_mod!(FragmentMaterialfvSGIX, "glFragmentMaterialfvSGIX")
fn_mod!(FragmentMaterialiSGIX, "glFragmentMaterialiSGIX")
fn_mod!(FragmentMaterialivSGIX, "glFragmentMaterialivSGIX")
fn_mod!(FrameTerminatorGREMEDY, "glFrameTerminatorGREMEDY")
fn_mod!(FrameZoomSGIX, "glFrameZoomSGIX")
fn_mod!(FramebufferDrawBufferEXT, "glFramebufferDrawBufferEXT")
fn_mod!(FramebufferDrawBuffersEXT, "glFramebufferDrawBuffersEXT")
fn_mod!(FramebufferParameteri, "glFramebufferParameteri")
fn_mod!(FramebufferReadBufferEXT, "glFramebufferReadBufferEXT")
fn_mod!(FramebufferRenderbuffer, "glFramebufferRenderbuffer")
fn_mod!(FramebufferRenderbufferEXT, "glFramebufferRenderbufferEXT")
fn_mod!(FramebufferRenderbufferOES, "glFramebufferRenderbufferOES")
fn_mod!(FramebufferTexture, "glFramebufferTexture")
fn_mod!(FramebufferTexture1D, "glFramebufferTexture1D")
fn_mod!(FramebufferTexture1DEXT, "glFramebufferTexture1DEXT")
fn_mod!(FramebufferTexture2D, "glFramebufferTexture2D")
fn_mod!(FramebufferTexture2DEXT, "glFramebufferTexture2DEXT")
fn_mod!(FramebufferTexture2DMultisampleEXT, "glFramebufferTexture2DMultisampleEXT")
fn_mod!(FramebufferTexture2DMultisampleIMG, "glFramebufferTexture2DMultisampleIMG")
fn_mod!(FramebufferTexture2DOES, "glFramebufferTexture2DOES")
fn_mod!(FramebufferTexture3D, "glFramebufferTexture3D")
fn_mod!(FramebufferTexture3DEXT, "glFramebufferTexture3DEXT")
fn_mod!(FramebufferTexture3DOES, "glFramebufferTexture3DOES")
fn_mod!(FramebufferTextureARB, "glFramebufferTextureARB")
fn_mod!(FramebufferTextureEXT, "glFramebufferTextureEXT")
fn_mod!(FramebufferTextureFaceARB, "glFramebufferTextureFaceARB")
fn_mod!(FramebufferTextureFaceEXT, "glFramebufferTextureFaceEXT")
fn_mod!(FramebufferTextureLayer, "glFramebufferTextureLayer")
fn_mod!(FramebufferTextureLayerARB, "glFramebufferTextureLayerARB")
fn_mod!(FramebufferTextureLayerEXT, "glFramebufferTextureLayerEXT")
fn_mod!(FreeObjectBufferATI, "glFreeObjectBufferATI")
fn_mod!(FrontFace, "glFrontFace")
fn_mod!(Frustum, "glFrustum")
fn_mod!(Frustumf, "glFrustumf")
fn_mod!(FrustumfOES, "glFrustumfOES")
fn_mod!(Frustumx, "glFrustumx")
fn_mod!(FrustumxOES, "glFrustumxOES")
fn_mod!(GenAsyncMarkersSGIX, "glGenAsyncMarkersSGIX")
fn_mod!(GenBuffers, "glGenBuffers")
fn_mod!(GenBuffersARB, "glGenBuffersARB")
fn_mod!(GenFencesAPPLE, "glGenFencesAPPLE")
fn_mod!(GenFencesNV, "glGenFencesNV")
fn_mod!(GenFragmentShadersATI, "glGenFragmentShadersATI")
fn_mod!(GenFramebuffers, "glGenFramebuffers")
fn_mod!(GenFramebuffersEXT, "glGenFramebuffersEXT")
fn_mod!(GenFramebuffersOES, "glGenFramebuffersOES")
fn_mod!(GenLists, "glGenLists")
fn_mod!(GenNamesAMD, "glGenNamesAMD")
fn_mod!(GenOcclusionQueriesNV, "glGenOcclusionQueriesNV")
fn_mod!(GenPathsNV, "glGenPathsNV")
fn_mod!(GenPerfMonitorsAMD, "glGenPerfMonitorsAMD")
fn_mod!(GenProgramPipelines, "glGenProgramPipelines")
fn_mod!(GenProgramPipelinesEXT, "glGenProgramPipelinesEXT")
fn_mod!(GenProgramsARB, "glGenProgramsARB")
fn_mod!(GenProgramsNV, "glGenProgramsNV")
fn_mod!(GenQueries, "glGenQueries")
fn_mod!(GenQueriesARB, "glGenQueriesARB")
fn_mod!(GenQueriesEXT, "glGenQueriesEXT")
fn_mod!(GenRenderbuffers, "glGenRenderbuffers")
fn_mod!(GenRenderbuffersEXT, "glGenRenderbuffersEXT")
fn_mod!(GenRenderbuffersOES, "glGenRenderbuffersOES")
fn_mod!(GenSamplers, "glGenSamplers")
fn_mod!(GenSymbolsEXT, "glGenSymbolsEXT")
fn_mod!(GenTextures, "glGenTextures")
fn_mod!(GenTexturesEXT, "glGenTexturesEXT")
fn_mod!(GenTransformFeedbacks, "glGenTransformFeedbacks")
fn_mod!(GenTransformFeedbacksNV, "glGenTransformFeedbacksNV")
fn_mod!(GenVertexArrays, "glGenVertexArrays")
fn_mod!(GenVertexArraysAPPLE, "glGenVertexArraysAPPLE")
fn_mod!(GenVertexArraysOES, "glGenVertexArraysOES")
fn_mod!(GenVertexShadersEXT, "glGenVertexShadersEXT")
fn_mod!(GenerateMipmap, "glGenerateMipmap")
fn_mod!(GenerateMipmapEXT, "glGenerateMipmapEXT")
fn_mod!(GenerateMipmapOES, "glGenerateMipmapOES")
fn_mod!(GenerateMultiTexMipmapEXT, "glGenerateMultiTexMipmapEXT")
fn_mod!(GenerateTextureMipmapEXT, "glGenerateTextureMipmapEXT")
fn_mod!(GetActiveAtomicCounterBufferiv, "glGetActiveAtomicCounterBufferiv")
fn_mod!(GetActiveAttrib, "glGetActiveAttrib")
fn_mod!(GetActiveAttribARB, "glGetActiveAttribARB")
fn_mod!(GetActiveSubroutineName, "glGetActiveSubroutineName")
fn_mod!(GetActiveSubroutineUniformName, "glGetActiveSubroutineUniformName")
fn_mod!(GetActiveSubroutineUniformiv, "glGetActiveSubroutineUniformiv")
fn_mod!(GetActiveUniform, "glGetActiveUniform")
fn_mod!(GetActiveUniformARB, "glGetActiveUniformARB")
fn_mod!(GetActiveUniformBlockName, "glGetActiveUniformBlockName")
fn_mod!(GetActiveUniformBlockiv, "glGetActiveUniformBlockiv")
fn_mod!(GetActiveUniformName, "glGetActiveUniformName")
fn_mod!(GetActiveUniformsiv, "glGetActiveUniformsiv")
fn_mod!(GetActiveVaryingNV, "glGetActiveVaryingNV")
fn_mod!(GetArrayObjectfvATI, "glGetArrayObjectfvATI")
fn_mod!(GetArrayObjectivATI, "glGetArrayObjectivATI")
fn_mod!(GetAttachedObjectsARB, "glGetAttachedObjectsARB")
fn_mod!(GetAttachedShaders, "glGetAttachedShaders")
fn_mod!(GetAttribLocation, "glGetAttribLocation")
fn_mod!(GetAttribLocationARB, "glGetAttribLocationARB")
fn_mod!(GetBooleanIndexedvEXT, "glGetBooleanIndexedvEXT")
fn_mod!(GetBooleani_v, "glGetBooleani_v")
fn_mod!(GetBooleanv, "glGetBooleanv")
fn_mod!(GetBufferParameteri64v, "glGetBufferParameteri64v")
fn_mod!(GetBufferParameteriv, "glGetBufferParameteriv")
fn_mod!(GetBufferParameterivARB, "glGetBufferParameterivARB")
fn_mod!(GetBufferParameterui64vNV, "glGetBufferParameterui64vNV")
fn_mod!(GetBufferPointerv, "glGetBufferPointerv")
fn_mod!(GetBufferPointervARB, "glGetBufferPointervARB")
fn_mod!(GetBufferPointervOES, "glGetBufferPointervOES")
fn_mod!(GetBufferSubData, "glGetBufferSubData")
fn_mod!(GetBufferSubDataARB, "glGetBufferSubDataARB")
fn_mod!(GetClipPlane, "glGetClipPlane")
fn_mod!(GetClipPlanef, "glGetClipPlanef")
fn_mod!(GetClipPlanefOES, "glGetClipPlanefOES")
fn_mod!(GetClipPlanex, "glGetClipPlanex")
fn_mod!(GetClipPlanexOES, "glGetClipPlanexOES")
fn_mod!(GetColorTable, "glGetColorTable")
fn_mod!(GetColorTableEXT, "glGetColorTableEXT")
fn_mod!(GetColorTableParameterfv, "glGetColorTableParameterfv")
fn_mod!(GetColorTableParameterfvEXT, "glGetColorTableParameterfvEXT")
fn_mod!(GetColorTableParameterfvSGI, "glGetColorTableParameterfvSGI")
fn_mod!(GetColorTableParameteriv, "glGetColorTableParameteriv")
fn_mod!(GetColorTableParameterivEXT, "glGetColorTableParameterivEXT")
fn_mod!(GetColorTableParameterivSGI, "glGetColorTableParameterivSGI")
fn_mod!(GetColorTableSGI, "glGetColorTableSGI")
fn_mod!(GetCombinerInputParameterfvNV, "glGetCombinerInputParameterfvNV")
fn_mod!(GetCombinerInputParameterivNV, "glGetCombinerInputParameterivNV")
fn_mod!(GetCombinerOutputParameterfvNV, "glGetCombinerOutputParameterfvNV")
fn_mod!(GetCombinerOutputParameterivNV, "glGetCombinerOutputParameterivNV")
fn_mod!(GetCombinerStageParameterfvNV, "glGetCombinerStageParameterfvNV")
fn_mod!(GetCompressedMultiTexImageEXT, "glGetCompressedMultiTexImageEXT")
fn_mod!(GetCompressedTexImage, "glGetCompressedTexImage")
fn_mod!(GetCompressedTexImageARB, "glGetCompressedTexImageARB")
fn_mod!(GetCompressedTextureImageEXT, "glGetCompressedTextureImageEXT")
fn_mod!(GetConvolutionFilter, "glGetConvolutionFilter")
fn_mod!(GetConvolutionFilterEXT, "glGetConvolutionFilterEXT")
fn_mod!(GetConvolutionParameterfv, "glGetConvolutionParameterfv")
fn_mod!(GetConvolutionParameterfvEXT, "glGetConvolutionParameterfvEXT")
fn_mod!(GetConvolutionParameteriv, "glGetConvolutionParameteriv")
fn_mod!(GetConvolutionParameterivEXT, "glGetConvolutionParameterivEXT")
fn_mod!(GetConvolutionParameterxvOES, "glGetConvolutionParameterxvOES")
fn_mod!(GetDebugMessageLog, "glGetDebugMessageLog")
fn_mod!(GetDebugMessageLogAMD, "glGetDebugMessageLogAMD")
fn_mod!(GetDebugMessageLogARB, "glGetDebugMessageLogARB")
fn_mod!(GetDebugMessageLogKHR, "glGetDebugMessageLogKHR")
fn_mod!(GetDetailTexFuncSGIS, "glGetDetailTexFuncSGIS")
fn_mod!(GetDoubleIndexedvEXT, "glGetDoubleIndexedvEXT")
fn_mod!(GetDoublei_v, "glGetDoublei_v")
fn_mod!(GetDoublei_vEXT, "glGetDoublei_vEXT")
fn_mod!(GetDoublev, "glGetDoublev")
fn_mod!(GetDriverControlStringQCOM, "glGetDriverControlStringQCOM")
fn_mod!(GetDriverControlsQCOM, "glGetDriverControlsQCOM")
fn_mod!(GetError, "glGetError")
fn_mod!(GetFenceivNV, "glGetFenceivNV")
fn_mod!(GetFinalCombinerInputParameterfvNV, "glGetFinalCombinerInputParameterfvNV")
fn_mod!(GetFinalCombinerInputParameterivNV, "glGetFinalCombinerInputParameterivNV")
fn_mod!(GetFixedv, "glGetFixedv")
fn_mod!(GetFixedvOES, "glGetFixedvOES")
fn_mod!(GetFloatIndexedvEXT, "glGetFloatIndexedvEXT")
fn_mod!(GetFloati_v, "glGetFloati_v")
fn_mod!(GetFloati_vEXT, "glGetFloati_vEXT")
fn_mod!(GetFloatv, "glGetFloatv")
fn_mod!(GetFogFuncSGIS, "glGetFogFuncSGIS")
fn_mod!(GetFragDataIndex, "glGetFragDataIndex")
fn_mod!(GetFragDataLocation, "glGetFragDataLocation")
fn_mod!(GetFragDataLocationEXT, "glGetFragDataLocationEXT")
fn_mod!(GetFragmentLightfvSGIX, "glGetFragmentLightfvSGIX")
fn_mod!(GetFragmentLightivSGIX, "glGetFragmentLightivSGIX")
fn_mod!(GetFragmentMaterialfvSGIX, "glGetFragmentMaterialfvSGIX")
fn_mod!(GetFragmentMaterialivSGIX, "glGetFragmentMaterialivSGIX")
fn_mod!(GetFramebufferAttachmentParameteriv, "glGetFramebufferAttachmentParameteriv")
fn_mod!(GetFramebufferAttachmentParameterivEXT, "glGetFramebufferAttachmentParameterivEXT")
fn_mod!(GetFramebufferAttachmentParameterivOES, "glGetFramebufferAttachmentParameterivOES")
fn_mod!(GetFramebufferParameteriv, "glGetFramebufferParameteriv")
fn_mod!(GetFramebufferParameterivEXT, "glGetFramebufferParameterivEXT")
fn_mod!(GetGraphicsResetStatusARB, "glGetGraphicsResetStatusARB")
fn_mod!(GetGraphicsResetStatusEXT, "glGetGraphicsResetStatusEXT")
fn_mod!(GetHandleARB, "glGetHandleARB")
fn_mod!(GetHistogram, "glGetHistogram")
fn_mod!(GetHistogramEXT, "glGetHistogramEXT")
fn_mod!(GetHistogramParameterfv, "glGetHistogramParameterfv")
fn_mod!(GetHistogramParameterfvEXT, "glGetHistogramParameterfvEXT")
fn_mod!(GetHistogramParameteriv, "glGetHistogramParameteriv")
fn_mod!(GetHistogramParameterivEXT, "glGetHistogramParameterivEXT")
fn_mod!(GetHistogramParameterxvOES, "glGetHistogramParameterxvOES")
fn_mod!(GetImageHandleARB, "glGetImageHandleARB")
fn_mod!(GetImageHandleNV, "glGetImageHandleNV")
fn_mod!(GetImageTransformParameterfvHP, "glGetImageTransformParameterfvHP")
fn_mod!(GetImageTransformParameterivHP, "glGetImageTransformParameterivHP")
fn_mod!(GetInfoLogARB, "glGetInfoLogARB")
fn_mod!(GetInstrumentsSGIX, "glGetInstrumentsSGIX")
fn_mod!(GetInteger64i_v, "glGetInteger64i_v")
fn_mod!(GetInteger64v, "glGetInteger64v")
fn_mod!(GetInteger64vAPPLE, "glGetInteger64vAPPLE")
fn_mod!(GetIntegerIndexedvEXT, "glGetIntegerIndexedvEXT")
fn_mod!(GetIntegeri_v, "glGetIntegeri_v")
fn_mod!(GetIntegeri_vEXT, "glGetIntegeri_vEXT")
fn_mod!(GetIntegerui64i_vNV, "glGetIntegerui64i_vNV")
fn_mod!(GetIntegerui64vNV, "glGetIntegerui64vNV")
fn_mod!(GetIntegerv, "glGetIntegerv")
fn_mod!(GetInternalformati64v, "glGetInternalformati64v")
fn_mod!(GetInternalformativ, "glGetInternalformativ")
fn_mod!(GetInvariantBooleanvEXT, "glGetInvariantBooleanvEXT")
fn_mod!(GetInvariantFloatvEXT, "glGetInvariantFloatvEXT")
fn_mod!(GetInvariantIntegervEXT, "glGetInvariantIntegervEXT")
fn_mod!(GetLightfv, "glGetLightfv")
fn_mod!(GetLightiv, "glGetLightiv")
fn_mod!(GetLightx, "glGetLightx")
fn_mod!(GetLightxOES, "glGetLightxOES")
fn_mod!(GetLightxv, "glGetLightxv")
fn_mod!(GetLightxvOES, "glGetLightxvOES")
fn_mod!(GetListParameterfvSGIX, "glGetListParameterfvSGIX")
fn_mod!(GetListParameterivSGIX, "glGetListParameterivSGIX")
fn_mod!(GetLocalConstantBooleanvEXT, "glGetLocalConstantBooleanvEXT")
fn_mod!(GetLocalConstantFloatvEXT, "glGetLocalConstantFloatvEXT")
fn_mod!(GetLocalConstantIntegervEXT, "glGetLocalConstantIntegervEXT")
fn_mod!(GetMapAttribParameterfvNV, "glGetMapAttribParameterfvNV")
fn_mod!(GetMapAttribParameterivNV, "glGetMapAttribParameterivNV")
fn_mod!(GetMapControlPointsNV, "glGetMapControlPointsNV")
fn_mod!(GetMapParameterfvNV, "glGetMapParameterfvNV")
fn_mod!(GetMapParameterivNV, "glGetMapParameterivNV")
fn_mod!(GetMapdv, "glGetMapdv")
fn_mod!(GetMapfv, "glGetMapfv")
fn_mod!(GetMapiv, "glGetMapiv")
fn_mod!(GetMapxvOES, "glGetMapxvOES")
fn_mod!(GetMaterialfv, "glGetMaterialfv")
fn_mod!(GetMaterialiv, "glGetMaterialiv")
fn_mod!(GetMaterialx, "glGetMaterialx")
fn_mod!(GetMaterialxOES, "glGetMaterialxOES")
fn_mod!(GetMaterialxv, "glGetMaterialxv")
fn_mod!(GetMaterialxvOES, "glGetMaterialxvOES")
fn_mod!(GetMinmax, "glGetMinmax")
fn_mod!(GetMinmaxEXT, "glGetMinmaxEXT")
fn_mod!(GetMinmaxParameterfv, "glGetMinmaxParameterfv")
fn_mod!(GetMinmaxParameterfvEXT, "glGetMinmaxParameterfvEXT")
fn_mod!(GetMinmaxParameteriv, "glGetMinmaxParameteriv")
fn_mod!(GetMinmaxParameterivEXT, "glGetMinmaxParameterivEXT")
fn_mod!(GetMultiTexEnvfvEXT, "glGetMultiTexEnvfvEXT")
fn_mod!(GetMultiTexEnvivEXT, "glGetMultiTexEnvivEXT")
fn_mod!(GetMultiTexGendvEXT, "glGetMultiTexGendvEXT")
fn_mod!(GetMultiTexGenfvEXT, "glGetMultiTexGenfvEXT")
fn_mod!(GetMultiTexGenivEXT, "glGetMultiTexGenivEXT")
fn_mod!(GetMultiTexImageEXT, "glGetMultiTexImageEXT")
fn_mod!(GetMultiTexLevelParameterfvEXT, "glGetMultiTexLevelParameterfvEXT")
fn_mod!(GetMultiTexLevelParameterivEXT, "glGetMultiTexLevelParameterivEXT")
fn_mod!(GetMultiTexParameterIivEXT, "glGetMultiTexParameterIivEXT")
fn_mod!(GetMultiTexParameterIuivEXT, "glGetMultiTexParameterIuivEXT")
fn_mod!(GetMultiTexParameterfvEXT, "glGetMultiTexParameterfvEXT")
fn_mod!(GetMultiTexParameterivEXT, "glGetMultiTexParameterivEXT")
fn_mod!(GetMultisamplefv, "glGetMultisamplefv")
fn_mod!(GetMultisamplefvNV, "glGetMultisamplefvNV")
fn_mod!(GetNamedBufferParameterivEXT, "glGetNamedBufferParameterivEXT")
fn_mod!(GetNamedBufferParameterui64vNV, "glGetNamedBufferParameterui64vNV")
fn_mod!(GetNamedBufferPointervEXT, "glGetNamedBufferPointervEXT")
fn_mod!(GetNamedBufferSubDataEXT, "glGetNamedBufferSubDataEXT")
fn_mod!(GetNamedFramebufferAttachmentParameterivEXT, "glGetNamedFramebufferAttachmentParameterivEXT")
fn_mod!(GetNamedFramebufferParameterivEXT, "glGetNamedFramebufferParameterivEXT")
fn_mod!(GetNamedProgramLocalParameterIivEXT, "glGetNamedProgramLocalParameterIivEXT")
fn_mod!(GetNamedProgramLocalParameterIuivEXT, "glGetNamedProgramLocalParameterIuivEXT")
fn_mod!(GetNamedProgramLocalParameterdvEXT, "glGetNamedProgramLocalParameterdvEXT")
fn_mod!(GetNamedProgramLocalParameterfvEXT, "glGetNamedProgramLocalParameterfvEXT")
fn_mod!(GetNamedProgramStringEXT, "glGetNamedProgramStringEXT")
fn_mod!(GetNamedProgramivEXT, "glGetNamedProgramivEXT")
fn_mod!(GetNamedRenderbufferParameterivEXT, "glGetNamedRenderbufferParameterivEXT")
fn_mod!(GetNamedStringARB, "glGetNamedStringARB")
fn_mod!(GetNamedStringivARB, "glGetNamedStringivARB")
fn_mod!(GetObjectBufferfvATI, "glGetObjectBufferfvATI")
fn_mod!(GetObjectBufferivATI, "glGetObjectBufferivATI")
fn_mod!(GetObjectLabel, "glGetObjectLabel")
fn_mod!(GetObjectLabelEXT, "glGetObjectLabelEXT")
fn_mod!(GetObjectLabelKHR, "glGetObjectLabelKHR")
fn_mod!(GetObjectParameterfvARB, "glGetObjectParameterfvARB")
fn_mod!(GetObjectParameterivAPPLE, "glGetObjectParameterivAPPLE")
fn_mod!(GetObjectParameterivARB, "glGetObjectParameterivARB")
fn_mod!(GetObjectPtrLabel, "glGetObjectPtrLabel")
fn_mod!(GetObjectPtrLabelKHR, "glGetObjectPtrLabelKHR")
fn_mod!(GetOcclusionQueryivNV, "glGetOcclusionQueryivNV")
fn_mod!(GetOcclusionQueryuivNV, "glGetOcclusionQueryuivNV")
fn_mod!(GetPathColorGenfvNV, "glGetPathColorGenfvNV")
fn_mod!(GetPathColorGenivNV, "glGetPathColorGenivNV")
fn_mod!(GetPathCommandsNV, "glGetPathCommandsNV")
fn_mod!(GetPathCoordsNV, "glGetPathCoordsNV")
fn_mod!(GetPathDashArrayNV, "glGetPathDashArrayNV")
fn_mod!(GetPathLengthNV, "glGetPathLengthNV")
fn_mod!(GetPathMetricRangeNV, "glGetPathMetricRangeNV")
fn_mod!(GetPathMetricsNV, "glGetPathMetricsNV")
fn_mod!(GetPathParameterfvNV, "glGetPathParameterfvNV")
fn_mod!(GetPathParameterivNV, "glGetPathParameterivNV")
fn_mod!(GetPathSpacingNV, "glGetPathSpacingNV")
fn_mod!(GetPathTexGenfvNV, "glGetPathTexGenfvNV")
fn_mod!(GetPathTexGenivNV, "glGetPathTexGenivNV")
fn_mod!(GetPerfMonitorCounterDataAMD, "glGetPerfMonitorCounterDataAMD")
fn_mod!(GetPerfMonitorCounterInfoAMD, "glGetPerfMonitorCounterInfoAMD")
fn_mod!(GetPerfMonitorCounterStringAMD, "glGetPerfMonitorCounterStringAMD")
fn_mod!(GetPerfMonitorCountersAMD, "glGetPerfMonitorCountersAMD")
fn_mod!(GetPerfMonitorGroupStringAMD, "glGetPerfMonitorGroupStringAMD")
fn_mod!(GetPerfMonitorGroupsAMD, "glGetPerfMonitorGroupsAMD")
fn_mod!(GetPixelMapfv, "glGetPixelMapfv")
fn_mod!(GetPixelMapuiv, "glGetPixelMapuiv")
fn_mod!(GetPixelMapusv, "glGetPixelMapusv")
fn_mod!(GetPixelMapxv, "glGetPixelMapxv")
fn_mod!(GetPixelTexGenParameterfvSGIS, "glGetPixelTexGenParameterfvSGIS")
fn_mod!(GetPixelTexGenParameterivSGIS, "glGetPixelTexGenParameterivSGIS")
fn_mod!(GetPixelTransformParameterfvEXT, "glGetPixelTransformParameterfvEXT")
fn_mod!(GetPixelTransformParameterivEXT, "glGetPixelTransformParameterivEXT")
fn_mod!(GetPointerIndexedvEXT, "glGetPointerIndexedvEXT")
fn_mod!(GetPointeri_vEXT, "glGetPointeri_vEXT")
fn_mod!(GetPointerv, "glGetPointerv")
fn_mod!(GetPointervEXT, "glGetPointervEXT")
fn_mod!(GetPointervKHR, "glGetPointervKHR")
fn_mod!(GetPolygonStipple, "glGetPolygonStipple")
fn_mod!(GetProgramBinary, "glGetProgramBinary")
fn_mod!(GetProgramBinaryOES, "glGetProgramBinaryOES")
fn_mod!(GetProgramEnvParameterIivNV, "glGetProgramEnvParameterIivNV")
fn_mod!(GetProgramEnvParameterIuivNV, "glGetProgramEnvParameterIuivNV")
fn_mod!(GetProgramEnvParameterdvARB, "glGetProgramEnvParameterdvARB")
fn_mod!(GetProgramEnvParameterfvARB, "glGetProgramEnvParameterfvARB")
fn_mod!(GetProgramInfoLog, "glGetProgramInfoLog")
fn_mod!(GetProgramInterfaceiv, "glGetProgramInterfaceiv")
fn_mod!(GetProgramLocalParameterIivNV, "glGetProgramLocalParameterIivNV")
fn_mod!(GetProgramLocalParameterIuivNV, "glGetProgramLocalParameterIuivNV")
fn_mod!(GetProgramLocalParameterdvARB, "glGetProgramLocalParameterdvARB")
fn_mod!(GetProgramLocalParameterfvARB, "glGetProgramLocalParameterfvARB")
fn_mod!(GetProgramNamedParameterdvNV, "glGetProgramNamedParameterdvNV")
fn_mod!(GetProgramNamedParameterfvNV, "glGetProgramNamedParameterfvNV")
fn_mod!(GetProgramParameterdvNV, "glGetProgramParameterdvNV")
fn_mod!(GetProgramParameterfvNV, "glGetProgramParameterfvNV")
fn_mod!(GetProgramPipelineInfoLog, "glGetProgramPipelineInfoLog")
fn_mod!(GetProgramPipelineInfoLogEXT, "glGetProgramPipelineInfoLogEXT")
fn_mod!(GetProgramPipelineiv, "glGetProgramPipelineiv")
fn_mod!(GetProgramPipelineivEXT, "glGetProgramPipelineivEXT")
fn_mod!(GetProgramResourceIndex, "glGetProgramResourceIndex")
fn_mod!(GetProgramResourceLocation, "glGetProgramResourceLocation")
fn_mod!(GetProgramResourceLocationIndex, "glGetProgramResourceLocationIndex")
fn_mod!(GetProgramResourceName, "glGetProgramResourceName")
fn_mod!(GetProgramResourceiv, "glGetProgramResourceiv")
fn_mod!(GetProgramStageiv, "glGetProgramStageiv")
fn_mod!(GetProgramStringARB, "glGetProgramStringARB")
fn_mod!(GetProgramStringNV, "glGetProgramStringNV")
fn_mod!(GetProgramSubroutineParameteruivNV, "glGetProgramSubroutineParameteruivNV")
fn_mod!(GetProgramiv, "glGetProgramiv")
fn_mod!(GetProgramivARB, "glGetProgramivARB")
fn_mod!(GetProgramivNV, "glGetProgramivNV")
fn_mod!(GetQueryIndexediv, "glGetQueryIndexediv")
fn_mod!(GetQueryObjecti64v, "glGetQueryObjecti64v")
fn_mod!(GetQueryObjecti64vEXT, "glGetQueryObjecti64vEXT")
fn_mod!(GetQueryObjectiv, "glGetQueryObjectiv")
fn_mod!(GetQueryObjectivARB, "glGetQueryObjectivARB")
fn_mod!(GetQueryObjectivEXT, "glGetQueryObjectivEXT")
fn_mod!(GetQueryObjectui64v, "glGetQueryObjectui64v")
fn_mod!(GetQueryObjectui64vEXT, "glGetQueryObjectui64vEXT")
fn_mod!(GetQueryObjectuiv, "glGetQueryObjectuiv")
fn_mod!(GetQueryObjectuivARB, "glGetQueryObjectuivARB")
fn_mod!(GetQueryObjectuivEXT, "glGetQueryObjectuivEXT")
fn_mod!(GetQueryiv, "glGetQueryiv")
fn_mod!(GetQueryivARB, "glGetQueryivARB")
fn_mod!(GetQueryivEXT, "glGetQueryivEXT")
fn_mod!(GetRenderbufferParameteriv, "glGetRenderbufferParameteriv")
fn_mod!(GetRenderbufferParameterivEXT, "glGetRenderbufferParameterivEXT")
fn_mod!(GetRenderbufferParameterivOES, "glGetRenderbufferParameterivOES")
fn_mod!(GetSamplerParameterIiv, "glGetSamplerParameterIiv")
fn_mod!(GetSamplerParameterIuiv, "glGetSamplerParameterIuiv")
fn_mod!(GetSamplerParameterfv, "glGetSamplerParameterfv")
fn_mod!(GetSamplerParameteriv, "glGetSamplerParameteriv")
fn_mod!(GetSeparableFilter, "glGetSeparableFilter")
fn_mod!(GetSeparableFilterEXT, "glGetSeparableFilterEXT")
fn_mod!(GetShaderInfoLog, "glGetShaderInfoLog")
fn_mod!(GetShaderPrecisionFormat, "glGetShaderPrecisionFormat")
fn_mod!(GetShaderSource, "glGetShaderSource")
fn_mod!(GetShaderSourceARB, "glGetShaderSourceARB")
fn_mod!(GetShaderiv, "glGetShaderiv")
fn_mod!(GetSharpenTexFuncSGIS, "glGetSharpenTexFuncSGIS")
fn_mod!(GetString, "glGetString")
fn_mod!(GetStringi, "glGetStringi")
fn_mod!(GetSubroutineIndex, "glGetSubroutineIndex")
fn_mod!(GetSubroutineUniformLocation, "glGetSubroutineUniformLocation")
fn_mod!(GetSynciv, "glGetSynciv")
fn_mod!(GetSyncivAPPLE, "glGetSyncivAPPLE")
fn_mod!(GetTexBumpParameterfvATI, "glGetTexBumpParameterfvATI")
fn_mod!(GetTexBumpParameterivATI, "glGetTexBumpParameterivATI")
fn_mod!(GetTexEnvfv, "glGetTexEnvfv")
fn_mod!(GetTexEnviv, "glGetTexEnviv")
fn_mod!(GetTexEnvxv, "glGetTexEnvxv")
fn_mod!(GetTexEnvxvOES, "glGetTexEnvxvOES")
fn_mod!(GetTexFilterFuncSGIS, "glGetTexFilterFuncSGIS")
fn_mod!(GetTexGendv, "glGetTexGendv")
fn_mod!(GetTexGenfv, "glGetTexGenfv")
fn_mod!(GetTexGenfvOES, "glGetTexGenfvOES")
fn_mod!(GetTexGeniv, "glGetTexGeniv")
fn_mod!(GetTexGenivOES, "glGetTexGenivOES")
fn_mod!(GetTexGenxvOES, "glGetTexGenxvOES")
fn_mod!(GetTexImage, "glGetTexImage")
fn_mod!(GetTexLevelParameterfv, "glGetTexLevelParameterfv")
fn_mod!(GetTexLevelParameteriv, "glGetTexLevelParameteriv")
fn_mod!(GetTexLevelParameterxvOES, "glGetTexLevelParameterxvOES")
fn_mod!(GetTexParameterIiv, "glGetTexParameterIiv")
fn_mod!(GetTexParameterIivEXT, "glGetTexParameterIivEXT")
fn_mod!(GetTexParameterIuiv, "glGetTexParameterIuiv")
fn_mod!(GetTexParameterIuivEXT, "glGetTexParameterIuivEXT")
fn_mod!(GetTexParameterPointervAPPLE, "glGetTexParameterPointervAPPLE")
fn_mod!(GetTexParameterfv, "glGetTexParameterfv")
fn_mod!(GetTexParameteriv, "glGetTexParameteriv")
fn_mod!(GetTexParameterxv, "glGetTexParameterxv")
fn_mod!(GetTexParameterxvOES, "glGetTexParameterxvOES")
fn_mod!(GetTextureHandleARB, "glGetTextureHandleARB")
fn_mod!(GetTextureHandleNV, "glGetTextureHandleNV")
fn_mod!(GetTextureImageEXT, "glGetTextureImageEXT")
fn_mod!(GetTextureLevelParameterfvEXT, "glGetTextureLevelParameterfvEXT")
fn_mod!(GetTextureLevelParameterivEXT, "glGetTextureLevelParameterivEXT")
fn_mod!(GetTextureParameterIivEXT, "glGetTextureParameterIivEXT")
fn_mod!(GetTextureParameterIuivEXT, "glGetTextureParameterIuivEXT")
fn_mod!(GetTextureParameterfvEXT, "glGetTextureParameterfvEXT")
fn_mod!(GetTextureParameterivEXT, "glGetTextureParameterivEXT")
fn_mod!(GetTextureSamplerHandleARB, "glGetTextureSamplerHandleARB")
fn_mod!(GetTextureSamplerHandleNV, "glGetTextureSamplerHandleNV")
fn_mod!(GetTrackMatrixivNV, "glGetTrackMatrixivNV")
fn_mod!(GetTransformFeedbackVarying, "glGetTransformFeedbackVarying")
fn_mod!(GetTransformFeedbackVaryingEXT, "glGetTransformFeedbackVaryingEXT")
fn_mod!(GetTransformFeedbackVaryingNV, "glGetTransformFeedbackVaryingNV")
fn_mod!(GetTranslatedShaderSourceANGLE, "glGetTranslatedShaderSourceANGLE")
fn_mod!(GetUniformBlockIndex, "glGetUniformBlockIndex")
fn_mod!(GetUniformBufferSizeEXT, "glGetUniformBufferSizeEXT")
fn_mod!(GetUniformIndices, "glGetUniformIndices")
fn_mod!(GetUniformLocation, "glGetUniformLocation")
fn_mod!(GetUniformLocationARB, "glGetUniformLocationARB")
fn_mod!(GetUniformOffsetEXT, "glGetUniformOffsetEXT")
fn_mod!(GetUniformSubroutineuiv, "glGetUniformSubroutineuiv")
fn_mod!(GetUniformdv, "glGetUniformdv")
fn_mod!(GetUniformfv, "glGetUniformfv")
fn_mod!(GetUniformfvARB, "glGetUniformfvARB")
fn_mod!(GetUniformi64vNV, "glGetUniformi64vNV")
fn_mod!(GetUniformiv, "glGetUniformiv")
fn_mod!(GetUniformivARB, "glGetUniformivARB")
fn_mod!(GetUniformui64vNV, "glGetUniformui64vNV")
fn_mod!(GetUniformuiv, "glGetUniformuiv")
fn_mod!(GetUniformuivEXT, "glGetUniformuivEXT")
fn_mod!(GetVariantArrayObjectfvATI, "glGetVariantArrayObjectfvATI")
fn_mod!(GetVariantArrayObjectivATI, "glGetVariantArrayObjectivATI")
fn_mod!(GetVariantBooleanvEXT, "glGetVariantBooleanvEXT")
fn_mod!(GetVariantFloatvEXT, "glGetVariantFloatvEXT")
fn_mod!(GetVariantIntegervEXT, "glGetVariantIntegervEXT")
fn_mod!(GetVariantPointervEXT, "glGetVariantPointervEXT")
fn_mod!(GetVaryingLocationNV, "glGetVaryingLocationNV")
fn_mod!(GetVertexArrayIntegeri_vEXT, "glGetVertexArrayIntegeri_vEXT")
fn_mod!(GetVertexArrayIntegervEXT, "glGetVertexArrayIntegervEXT")
fn_mod!(GetVertexArrayPointeri_vEXT, "glGetVertexArrayPointeri_vEXT")
fn_mod!(GetVertexArrayPointervEXT, "glGetVertexArrayPointervEXT")
fn_mod!(GetVertexAttribArrayObjectfvATI, "glGetVertexAttribArrayObjectfvATI")
fn_mod!(GetVertexAttribArrayObjectivATI, "glGetVertexAttribArrayObjectivATI")
fn_mod!(GetVertexAttribIiv, "glGetVertexAttribIiv")
fn_mod!(GetVertexAttribIivEXT, "glGetVertexAttribIivEXT")
fn_mod!(GetVertexAttribIuiv, "glGetVertexAttribIuiv")
fn_mod!(GetVertexAttribIuivEXT, "glGetVertexAttribIuivEXT")
fn_mod!(GetVertexAttribLdv, "glGetVertexAttribLdv")
fn_mod!(GetVertexAttribLdvEXT, "glGetVertexAttribLdvEXT")
fn_mod!(GetVertexAttribLi64vNV, "glGetVertexAttribLi64vNV")
fn_mod!(GetVertexAttribLui64vARB, "glGetVertexAttribLui64vARB")
fn_mod!(GetVertexAttribLui64vNV, "glGetVertexAttribLui64vNV")
fn_mod!(GetVertexAttribPointerv, "glGetVertexAttribPointerv")
fn_mod!(GetVertexAttribPointervARB, "glGetVertexAttribPointervARB")
fn_mod!(GetVertexAttribPointervNV, "glGetVertexAttribPointervNV")
fn_mod!(GetVertexAttribdv, "glGetVertexAttribdv")
fn_mod!(GetVertexAttribdvARB, "glGetVertexAttribdvARB")
fn_mod!(GetVertexAttribdvNV, "glGetVertexAttribdvNV")
fn_mod!(GetVertexAttribfv, "glGetVertexAttribfv")
fn_mod!(GetVertexAttribfvARB, "glGetVertexAttribfvARB")
fn_mod!(GetVertexAttribfvNV, "glGetVertexAttribfvNV")
fn_mod!(GetVertexAttribiv, "glGetVertexAttribiv")
fn_mod!(GetVertexAttribivARB, "glGetVertexAttribivARB")
fn_mod!(GetVertexAttribivNV, "glGetVertexAttribivNV")
fn_mod!(GetVideoCaptureStreamdvNV, "glGetVideoCaptureStreamdvNV")
fn_mod!(GetVideoCaptureStreamfvNV, "glGetVideoCaptureStreamfvNV")
fn_mod!(GetVideoCaptureStreamivNV, "glGetVideoCaptureStreamivNV")
fn_mod!(GetVideoCaptureivNV, "glGetVideoCaptureivNV")
fn_mod!(GetVideoi64vNV, "glGetVideoi64vNV")
fn_mod!(GetVideoivNV, "glGetVideoivNV")
fn_mod!(GetVideoui64vNV, "glGetVideoui64vNV")
fn_mod!(GetVideouivNV, "glGetVideouivNV")
fn_mod!(GetnColorTableARB, "glGetnColorTableARB")
fn_mod!(GetnCompressedTexImageARB, "glGetnCompressedTexImageARB")
fn_mod!(GetnConvolutionFilterARB, "glGetnConvolutionFilterARB")
fn_mod!(GetnHistogramARB, "glGetnHistogramARB")
fn_mod!(GetnMapdvARB, "glGetnMapdvARB")
fn_mod!(GetnMapfvARB, "glGetnMapfvARB")
fn_mod!(GetnMapivARB, "glGetnMapivARB")
fn_mod!(GetnMinmaxARB, "glGetnMinmaxARB")
fn_mod!(GetnPixelMapfvARB, "glGetnPixelMapfvARB")
fn_mod!(GetnPixelMapuivARB, "glGetnPixelMapuivARB")
fn_mod!(GetnPixelMapusvARB, "glGetnPixelMapusvARB")
fn_mod!(GetnPolygonStippleARB, "glGetnPolygonStippleARB")
fn_mod!(GetnSeparableFilterARB, "glGetnSeparableFilterARB")
fn_mod!(GetnTexImageARB, "glGetnTexImageARB")
fn_mod!(GetnUniformdvARB, "glGetnUniformdvARB")
fn_mod!(GetnUniformfvARB, "glGetnUniformfvARB")
fn_mod!(GetnUniformfvEXT, "glGetnUniformfvEXT")
fn_mod!(GetnUniformivARB, "glGetnUniformivARB")
fn_mod!(GetnUniformivEXT, "glGetnUniformivEXT")
fn_mod!(GetnUniformuivARB, "glGetnUniformuivARB")
fn_mod!(GlobalAlphaFactorbSUN, "glGlobalAlphaFactorbSUN")
fn_mod!(GlobalAlphaFactordSUN, "glGlobalAlphaFactordSUN")
fn_mod!(GlobalAlphaFactorfSUN, "glGlobalAlphaFactorfSUN")
fn_mod!(GlobalAlphaFactoriSUN, "glGlobalAlphaFactoriSUN")
fn_mod!(GlobalAlphaFactorsSUN, "glGlobalAlphaFactorsSUN")
fn_mod!(GlobalAlphaFactorubSUN, "glGlobalAlphaFactorubSUN")
fn_mod!(GlobalAlphaFactoruiSUN, "glGlobalAlphaFactoruiSUN")
fn_mod!(GlobalAlphaFactorusSUN, "glGlobalAlphaFactorusSUN")
fn_mod!(Hint, "glHint")
fn_mod!(HintPGI, "glHintPGI")
fn_mod!(Histogram, "glHistogram")
fn_mod!(HistogramEXT, "glHistogramEXT")
fn_mod!(IglooInterfaceSGIX, "glIglooInterfaceSGIX")
fn_mod!(ImageTransformParameterfHP, "glImageTransformParameterfHP")
fn_mod!(ImageTransformParameterfvHP, "glImageTransformParameterfvHP")
fn_mod!(ImageTransformParameteriHP, "glImageTransformParameteriHP")
fn_mod!(ImageTransformParameterivHP, "glImageTransformParameterivHP")
fn_mod!(ImportSyncEXT, "glImportSyncEXT")
fn_mod!(IndexFormatNV, "glIndexFormatNV")
fn_mod!(IndexFuncEXT, "glIndexFuncEXT")
fn_mod!(IndexMask, "glIndexMask")
fn_mod!(IndexMaterialEXT, "glIndexMaterialEXT")
fn_mod!(IndexPointer, "glIndexPointer")
fn_mod!(IndexPointerEXT, "glIndexPointerEXT")
fn_mod!(IndexPointerListIBM, "glIndexPointerListIBM")
fn_mod!(Indexd, "glIndexd")
fn_mod!(Indexdv, "glIndexdv")
fn_mod!(Indexf, "glIndexf")
fn_mod!(Indexfv, "glIndexfv")
fn_mod!(Indexi, "glIndexi")
fn_mod!(Indexiv, "glIndexiv")
fn_mod!(Indexs, "glIndexs")
fn_mod!(Indexsv, "glIndexsv")
fn_mod!(Indexub, "glIndexub")
fn_mod!(Indexubv, "glIndexubv")
fn_mod!(IndexxOES, "glIndexxOES")
fn_mod!(IndexxvOES, "glIndexxvOES")
fn_mod!(InitNames, "glInitNames")
fn_mod!(InsertComponentEXT, "glInsertComponentEXT")
fn_mod!(InsertEventMarkerEXT, "glInsertEventMarkerEXT")
fn_mod!(InstrumentsBufferSGIX, "glInstrumentsBufferSGIX")
fn_mod!(InterleavedArrays, "glInterleavedArrays")
fn_mod!(InterpolatePathsNV, "glInterpolatePathsNV")
fn_mod!(InvalidateBufferData, "glInvalidateBufferData")
fn_mod!(InvalidateBufferSubData, "glInvalidateBufferSubData")
fn_mod!(InvalidateFramebuffer, "glInvalidateFramebuffer")
fn_mod!(InvalidateSubFramebuffer, "glInvalidateSubFramebuffer")
fn_mod!(InvalidateTexImage, "glInvalidateTexImage")
fn_mod!(InvalidateTexSubImage, "glInvalidateTexSubImage")
fn_mod!(IsAsyncMarkerSGIX, "glIsAsyncMarkerSGIX")
fn_mod!(IsBuffer, "glIsBuffer")
fn_mod!(IsBufferARB, "glIsBufferARB")
fn_mod!(IsBufferResidentNV, "glIsBufferResidentNV")
fn_mod!(IsEnabled, "glIsEnabled")
fn_mod!(IsEnabledIndexedEXT, "glIsEnabledIndexedEXT")
fn_mod!(IsEnabledi, "glIsEnabledi")
fn_mod!(IsFenceAPPLE, "glIsFenceAPPLE")
fn_mod!(IsFenceNV, "glIsFenceNV")
fn_mod!(IsFramebuffer, "glIsFramebuffer")
fn_mod!(IsFramebufferEXT, "glIsFramebufferEXT")
fn_mod!(IsFramebufferOES, "glIsFramebufferOES")
fn_mod!(IsImageHandleResidentARB, "glIsImageHandleResidentARB")
fn_mod!(IsImageHandleResidentNV, "glIsImageHandleResidentNV")
fn_mod!(IsList, "glIsList")
fn_mod!(IsNameAMD, "glIsNameAMD")
fn_mod!(IsNamedBufferResidentNV, "glIsNamedBufferResidentNV")
fn_mod!(IsNamedStringARB, "glIsNamedStringARB")
fn_mod!(IsObjectBufferATI, "glIsObjectBufferATI")
fn_mod!(IsOcclusionQueryNV, "glIsOcclusionQueryNV")
fn_mod!(IsPathNV, "glIsPathNV")
fn_mod!(IsPointInFillPathNV, "glIsPointInFillPathNV")
fn_mod!(IsPointInStrokePathNV, "glIsPointInStrokePathNV")
fn_mod!(IsProgram, "glIsProgram")
fn_mod!(IsProgramARB, "glIsProgramARB")
fn_mod!(IsProgramNV, "glIsProgramNV")
fn_mod!(IsProgramPipeline, "glIsProgramPipeline")
fn_mod!(IsProgramPipelineEXT, "glIsProgramPipelineEXT")
fn_mod!(IsQuery, "glIsQuery")
fn_mod!(IsQueryARB, "glIsQueryARB")
fn_mod!(IsQueryEXT, "glIsQueryEXT")
fn_mod!(IsRenderbuffer, "glIsRenderbuffer")
fn_mod!(IsRenderbufferEXT, "glIsRenderbufferEXT")
fn_mod!(IsRenderbufferOES, "glIsRenderbufferOES")
fn_mod!(IsSampler, "glIsSampler")
fn_mod!(IsShader, "glIsShader")
fn_mod!(IsSync, "glIsSync")
fn_mod!(IsSyncAPPLE, "glIsSyncAPPLE")
fn_mod!(IsTexture, "glIsTexture")
fn_mod!(IsTextureEXT, "glIsTextureEXT")
fn_mod!(IsTextureHandleResidentARB, "glIsTextureHandleResidentARB")
fn_mod!(IsTextureHandleResidentNV, "glIsTextureHandleResidentNV")
fn_mod!(IsTransformFeedback, "glIsTransformFeedback")
fn_mod!(IsTransformFeedbackNV, "glIsTransformFeedbackNV")
fn_mod!(IsVariantEnabledEXT, "glIsVariantEnabledEXT")
fn_mod!(IsVertexArray, "glIsVertexArray")
fn_mod!(IsVertexArrayAPPLE, "glIsVertexArrayAPPLE")
fn_mod!(IsVertexArrayOES, "glIsVertexArrayOES")
fn_mod!(IsVertexAttribEnabledAPPLE, "glIsVertexAttribEnabledAPPLE")
fn_mod!(LabelObjectEXT, "glLabelObjectEXT")
fn_mod!(LightEnviSGIX, "glLightEnviSGIX")
fn_mod!(LightModelf, "glLightModelf")
fn_mod!(LightModelfv, "glLightModelfv")
fn_mod!(LightModeli, "glLightModeli")
fn_mod!(LightModeliv, "glLightModeliv")
fn_mod!(LightModelx, "glLightModelx")
fn_mod!(LightModelxOES, "glLightModelxOES")
fn_mod!(LightModelxv, "glLightModelxv")
fn_mod!(LightModelxvOES, "glLightModelxvOES")
fn_mod!(Lightf, "glLightf")
fn_mod!(Lightfv, "glLightfv")
fn_mod!(Lighti, "glLighti")
fn_mod!(Lightiv, "glLightiv")
fn_mod!(Lightx, "glLightx")
fn_mod!(LightxOES, "glLightxOES")
fn_mod!(Lightxv, "glLightxv")
fn_mod!(LightxvOES, "glLightxvOES")
fn_mod!(LineStipple, "glLineStipple")
fn_mod!(LineWidth, "glLineWidth")
fn_mod!(LineWidthx, "glLineWidthx")
fn_mod!(LineWidthxOES, "glLineWidthxOES")
fn_mod!(LinkProgram, "glLinkProgram")
fn_mod!(LinkProgramARB, "glLinkProgramARB")
fn_mod!(ListBase, "glListBase")
fn_mod!(ListParameterfSGIX, "glListParameterfSGIX")
fn_mod!(ListParameterfvSGIX, "glListParameterfvSGIX")
fn_mod!(ListParameteriSGIX, "glListParameteriSGIX")
fn_mod!(ListParameterivSGIX, "glListParameterivSGIX")
fn_mod!(LoadIdentity, "glLoadIdentity")
fn_mod!(LoadIdentityDeformationMapSGIX, "glLoadIdentityDeformationMapSGIX")
fn_mod!(LoadMatrixd, "glLoadMatrixd")
fn_mod!(LoadMatrixf, "glLoadMatrixf")
fn_mod!(LoadMatrixx, "glLoadMatrixx")
fn_mod!(LoadMatrixxOES, "glLoadMatrixxOES")
fn_mod!(LoadName, "glLoadName")
fn_mod!(LoadPaletteFromModelViewMatrixOES, "glLoadPaletteFromModelViewMatrixOES")
fn_mod!(LoadProgramNV, "glLoadProgramNV")
fn_mod!(LoadTransposeMatrixd, "glLoadTransposeMatrixd")
fn_mod!(LoadTransposeMatrixdARB, "glLoadTransposeMatrixdARB")
fn_mod!(LoadTransposeMatrixf, "glLoadTransposeMatrixf")
fn_mod!(LoadTransposeMatrixfARB, "glLoadTransposeMatrixfARB")
fn_mod!(LoadTransposeMatrixxOES, "glLoadTransposeMatrixxOES")
fn_mod!(LockArraysEXT, "glLockArraysEXT")
fn_mod!(LogicOp, "glLogicOp")
fn_mod!(MakeBufferNonResidentNV, "glMakeBufferNonResidentNV")
fn_mod!(MakeBufferResidentNV, "glMakeBufferResidentNV")
fn_mod!(MakeImageHandleNonResidentARB, "glMakeImageHandleNonResidentARB")
fn_mod!(MakeImageHandleNonResidentNV, "glMakeImageHandleNonResidentNV")
fn_mod!(MakeImageHandleResidentARB, "glMakeImageHandleResidentARB")
fn_mod!(MakeImageHandleResidentNV, "glMakeImageHandleResidentNV")
fn_mod!(MakeNamedBufferNonResidentNV, "glMakeNamedBufferNonResidentNV")
fn_mod!(MakeNamedBufferResidentNV, "glMakeNamedBufferResidentNV")
fn_mod!(MakeTextureHandleNonResidentARB, "glMakeTextureHandleNonResidentARB")
fn_mod!(MakeTextureHandleNonResidentNV, "glMakeTextureHandleNonResidentNV")
fn_mod!(MakeTextureHandleResidentARB, "glMakeTextureHandleResidentARB")
fn_mod!(MakeTextureHandleResidentNV, "glMakeTextureHandleResidentNV")
fn_mod!(Map1d, "glMap1d")
fn_mod!(Map1f, "glMap1f")
fn_mod!(Map1xOES, "glMap1xOES")
fn_mod!(Map2d, "glMap2d")
fn_mod!(Map2f, "glMap2f")
fn_mod!(Map2xOES, "glMap2xOES")
fn_mod!(MapBuffer, "glMapBuffer")
fn_mod!(MapBufferARB, "glMapBufferARB")
fn_mod!(MapBufferOES, "glMapBufferOES")
fn_mod!(MapBufferRange, "glMapBufferRange")
fn_mod!(MapBufferRangeEXT, "glMapBufferRangeEXT")
fn_mod!(MapControlPointsNV, "glMapControlPointsNV")
fn_mod!(MapGrid1d, "glMapGrid1d")
fn_mod!(MapGrid1f, "glMapGrid1f")
fn_mod!(MapGrid1xOES, "glMapGrid1xOES")
fn_mod!(MapGrid2d, "glMapGrid2d")
fn_mod!(MapGrid2f, "glMapGrid2f")
fn_mod!(MapGrid2xOES, "glMapGrid2xOES")
fn_mod!(MapNamedBufferEXT, "glMapNamedBufferEXT")
fn_mod!(MapNamedBufferRangeEXT, "glMapNamedBufferRangeEXT")
fn_mod!(MapObjectBufferATI, "glMapObjectBufferATI")
fn_mod!(MapParameterfvNV, "glMapParameterfvNV")
fn_mod!(MapParameterivNV, "glMapParameterivNV")
fn_mod!(MapTexture2DINTEL, "glMapTexture2DINTEL")
fn_mod!(MapVertexAttrib1dAPPLE, "glMapVertexAttrib1dAPPLE")
fn_mod!(MapVertexAttrib1fAPPLE, "glMapVertexAttrib1fAPPLE")
fn_mod!(MapVertexAttrib2dAPPLE, "glMapVertexAttrib2dAPPLE")
fn_mod!(MapVertexAttrib2fAPPLE, "glMapVertexAttrib2fAPPLE")
fn_mod!(Materialf, "glMaterialf")
fn_mod!(Materialfv, "glMaterialfv")
fn_mod!(Materiali, "glMateriali")
fn_mod!(Materialiv, "glMaterialiv")
fn_mod!(Materialx, "glMaterialx")
fn_mod!(MaterialxOES, "glMaterialxOES")
fn_mod!(Materialxv, "glMaterialxv")
fn_mod!(MaterialxvOES, "glMaterialxvOES")
fn_mod!(MatrixFrustumEXT, "glMatrixFrustumEXT")
fn_mod!(MatrixIndexPointerARB, "glMatrixIndexPointerARB")
fn_mod!(MatrixIndexPointerOES, "glMatrixIndexPointerOES")
fn_mod!(MatrixIndexubvARB, "glMatrixIndexubvARB")
fn_mod!(MatrixIndexuivARB, "glMatrixIndexuivARB")
fn_mod!(MatrixIndexusvARB, "glMatrixIndexusvARB")
fn_mod!(MatrixLoadIdentityEXT, "glMatrixLoadIdentityEXT")
fn_mod!(MatrixLoadTransposedEXT, "glMatrixLoadTransposedEXT")
fn_mod!(MatrixLoadTransposefEXT, "glMatrixLoadTransposefEXT")
fn_mod!(MatrixLoaddEXT, "glMatrixLoaddEXT")
fn_mod!(MatrixLoadfEXT, "glMatrixLoadfEXT")
fn_mod!(MatrixMode, "glMatrixMode")
fn_mod!(MatrixMultTransposedEXT, "glMatrixMultTransposedEXT")
fn_mod!(MatrixMultTransposefEXT, "glMatrixMultTransposefEXT")
fn_mod!(MatrixMultdEXT, "glMatrixMultdEXT")
fn_mod!(MatrixMultfEXT, "glMatrixMultfEXT")
fn_mod!(MatrixOrthoEXT, "glMatrixOrthoEXT")
fn_mod!(MatrixPopEXT, "glMatrixPopEXT")
fn_mod!(MatrixPushEXT, "glMatrixPushEXT")
fn_mod!(MatrixRotatedEXT, "glMatrixRotatedEXT")
fn_mod!(MatrixRotatefEXT, "glMatrixRotatefEXT")
fn_mod!(MatrixScaledEXT, "glMatrixScaledEXT")
fn_mod!(MatrixScalefEXT, "glMatrixScalefEXT")
fn_mod!(MatrixTranslatedEXT, "glMatrixTranslatedEXT")
fn_mod!(MatrixTranslatefEXT, "glMatrixTranslatefEXT")
fn_mod!(MemoryBarrier, "glMemoryBarrier")
fn_mod!(MemoryBarrierEXT, "glMemoryBarrierEXT")
fn_mod!(MinSampleShading, "glMinSampleShading")
fn_mod!(MinSampleShadingARB, "glMinSampleShadingARB")
fn_mod!(Minmax, "glMinmax")
fn_mod!(MinmaxEXT, "glMinmaxEXT")
fn_mod!(MultMatrixd, "glMultMatrixd")
fn_mod!(MultMatrixf, "glMultMatrixf")
fn_mod!(MultMatrixx, "glMultMatrixx")
fn_mod!(MultMatrixxOES, "glMultMatrixxOES")
fn_mod!(MultTransposeMatrixd, "glMultTransposeMatrixd")
fn_mod!(MultTransposeMatrixdARB, "glMultTransposeMatrixdARB")
fn_mod!(MultTransposeMatrixf, "glMultTransposeMatrixf")
fn_mod!(MultTransposeMatrixfARB, "glMultTransposeMatrixfARB")
fn_mod!(MultTransposeMatrixxOES, "glMultTransposeMatrixxOES")
fn_mod!(MultiDrawArrays, "glMultiDrawArrays")
fn_mod!(MultiDrawArraysEXT, "glMultiDrawArraysEXT")
fn_mod!(MultiDrawArraysIndirect, "glMultiDrawArraysIndirect")
fn_mod!(MultiDrawArraysIndirectAMD, "glMultiDrawArraysIndirectAMD")
fn_mod!(MultiDrawArraysIndirectBindlessNV, "glMultiDrawArraysIndirectBindlessNV")
fn_mod!(MultiDrawElementsIndirectBindlessNV, "glMultiDrawElementsIndirectBindlessNV")
fn_mod!(MultiDrawArraysIndirectCountARB, "glMultiDrawArraysIndirectCountARB")
fn_mod!(MultiDrawElementArrayAPPLE, "glMultiDrawElementArrayAPPLE")
fn_mod!(MultiDrawElements, "glMultiDrawElements")
fn_mod!(MultiDrawElementsBaseVertex, "glMultiDrawElementsBaseVertex")
fn_mod!(MultiDrawElementsEXT, "glMultiDrawElementsEXT")
fn_mod!(MultiDrawElementsIndirect, "glMultiDrawElementsIndirect")
fn_mod!(MultiDrawElementsIndirectAMD, "glMultiDrawElementsIndirectAMD")
fn_mod!(MultiDrawElementsIndirectCountARB, "glMultiDrawElementsIndirectCountARB")
fn_mod!(MultiDrawRangeElementArrayAPPLE, "glMultiDrawRangeElementArrayAPPLE")
fn_mod!(MultiModeDrawArraysIBM, "glMultiModeDrawArraysIBM")
fn_mod!(MultiModeDrawElementsIBM, "glMultiModeDrawElementsIBM")
fn_mod!(MultiTexBufferEXT, "glMultiTexBufferEXT")
fn_mod!(MultiTexCoord1bOES, "glMultiTexCoord1bOES")
fn_mod!(MultiTexCoord1bvOES, "glMultiTexCoord1bvOES")
fn_mod!(MultiTexCoord1d, "glMultiTexCoord1d")
fn_mod!(MultiTexCoord1dARB, "glMultiTexCoord1dARB")
fn_mod!(MultiTexCoord1dv, "glMultiTexCoord1dv")
fn_mod!(MultiTexCoord1dvARB, "glMultiTexCoord1dvARB")
fn_mod!(MultiTexCoord1f, "glMultiTexCoord1f")
fn_mod!(MultiTexCoord1fARB, "glMultiTexCoord1fARB")
fn_mod!(MultiTexCoord1fv, "glMultiTexCoord1fv")
fn_mod!(MultiTexCoord1fvARB, "glMultiTexCoord1fvARB")
fn_mod!(MultiTexCoord1hNV, "glMultiTexCoord1hNV")
fn_mod!(MultiTexCoord1hvNV, "glMultiTexCoord1hvNV")
fn_mod!(MultiTexCoord1i, "glMultiTexCoord1i")
fn_mod!(MultiTexCoord1iARB, "glMultiTexCoord1iARB")
fn_mod!(MultiTexCoord1iv, "glMultiTexCoord1iv")
fn_mod!(MultiTexCoord1ivARB, "glMultiTexCoord1ivARB")
fn_mod!(MultiTexCoord1s, "glMultiTexCoord1s")
fn_mod!(MultiTexCoord1sARB, "glMultiTexCoord1sARB")
fn_mod!(MultiTexCoord1sv, "glMultiTexCoord1sv")
fn_mod!(MultiTexCoord1svARB, "glMultiTexCoord1svARB")
fn_mod!(MultiTexCoord1xOES, "glMultiTexCoord1xOES")
fn_mod!(MultiTexCoord1xvOES, "glMultiTexCoord1xvOES")
fn_mod!(MultiTexCoord2bOES, "glMultiTexCoord2bOES")
fn_mod!(MultiTexCoord2bvOES, "glMultiTexCoord2bvOES")
fn_mod!(MultiTexCoord2d, "glMultiTexCoord2d")
fn_mod!(MultiTexCoord2dARB, "glMultiTexCoord2dARB")
fn_mod!(MultiTexCoord2dv, "glMultiTexCoord2dv")
fn_mod!(MultiTexCoord2dvARB, "glMultiTexCoord2dvARB")
fn_mod!(MultiTexCoord2f, "glMultiTexCoord2f")
fn_mod!(MultiTexCoord2fARB, "glMultiTexCoord2fARB")
fn_mod!(MultiTexCoord2fv, "glMultiTexCoord2fv")
fn_mod!(MultiTexCoord2fvARB, "glMultiTexCoord2fvARB")
fn_mod!(MultiTexCoord2hNV, "glMultiTexCoord2hNV")
fn_mod!(MultiTexCoord2hvNV, "glMultiTexCoord2hvNV")
fn_mod!(MultiTexCoord2i, "glMultiTexCoord2i")
fn_mod!(MultiTexCoord2iARB, "glMultiTexCoord2iARB")
fn_mod!(MultiTexCoord2iv, "glMultiTexCoord2iv")
fn_mod!(MultiTexCoord2ivARB, "glMultiTexCoord2ivARB")
fn_mod!(MultiTexCoord2s, "glMultiTexCoord2s")
fn_mod!(MultiTexCoord2sARB, "glMultiTexCoord2sARB")
fn_mod!(MultiTexCoord2sv, "glMultiTexCoord2sv")
fn_mod!(MultiTexCoord2svARB, "glMultiTexCoord2svARB")
fn_mod!(MultiTexCoord2xOES, "glMultiTexCoord2xOES")
fn_mod!(MultiTexCoord2xvOES, "glMultiTexCoord2xvOES")
fn_mod!(MultiTexCoord3bOES, "glMultiTexCoord3bOES")
fn_mod!(MultiTexCoord3bvOES, "glMultiTexCoord3bvOES")
fn_mod!(MultiTexCoord3d, "glMultiTexCoord3d")
fn_mod!(MultiTexCoord3dARB, "glMultiTexCoord3dARB")
fn_mod!(MultiTexCoord3dv, "glMultiTexCoord3dv")
fn_mod!(MultiTexCoord3dvARB, "glMultiTexCoord3dvARB")
fn_mod!(MultiTexCoord3f, "glMultiTexCoord3f")
fn_mod!(MultiTexCoord3fARB, "glMultiTexCoord3fARB")
fn_mod!(MultiTexCoord3fv, "glMultiTexCoord3fv")
fn_mod!(MultiTexCoord3fvARB, "glMultiTexCoord3fvARB")
fn_mod!(MultiTexCoord3hNV, "glMultiTexCoord3hNV")
fn_mod!(MultiTexCoord3hvNV, "glMultiTexCoord3hvNV")
fn_mod!(MultiTexCoord3i, "glMultiTexCoord3i")
fn_mod!(MultiTexCoord3iARB, "glMultiTexCoord3iARB")
fn_mod!(MultiTexCoord3iv, "glMultiTexCoord3iv")
fn_mod!(MultiTexCoord3ivARB, "glMultiTexCoord3ivARB")
fn_mod!(MultiTexCoord3s, "glMultiTexCoord3s")
fn_mod!(MultiTexCoord3sARB, "glMultiTexCoord3sARB")
fn_mod!(MultiTexCoord3sv, "glMultiTexCoord3sv")
fn_mod!(MultiTexCoord3svARB, "glMultiTexCoord3svARB")
fn_mod!(MultiTexCoord3xOES, "glMultiTexCoord3xOES")
fn_mod!(MultiTexCoord3xvOES, "glMultiTexCoord3xvOES")
fn_mod!(MultiTexCoord4bOES, "glMultiTexCoord4bOES")
fn_mod!(MultiTexCoord4bvOES, "glMultiTexCoord4bvOES")
fn_mod!(MultiTexCoord4d, "glMultiTexCoord4d")
fn_mod!(MultiTexCoord4dARB, "glMultiTexCoord4dARB")
fn_mod!(MultiTexCoord4dv, "glMultiTexCoord4dv")
fn_mod!(MultiTexCoord4dvARB, "glMultiTexCoord4dvARB")
fn_mod!(MultiTexCoord4f, "glMultiTexCoord4f")
fn_mod!(MultiTexCoord4fARB, "glMultiTexCoord4fARB")
fn_mod!(MultiTexCoord4fv, "glMultiTexCoord4fv")
fn_mod!(MultiTexCoord4fvARB, "glMultiTexCoord4fvARB")
fn_mod!(MultiTexCoord4hNV, "glMultiTexCoord4hNV")
fn_mod!(MultiTexCoord4hvNV, "glMultiTexCoord4hvNV")
fn_mod!(MultiTexCoord4i, "glMultiTexCoord4i")
fn_mod!(MultiTexCoord4iARB, "glMultiTexCoord4iARB")
fn_mod!(MultiTexCoord4iv, "glMultiTexCoord4iv")
fn_mod!(MultiTexCoord4ivARB, "glMultiTexCoord4ivARB")
fn_mod!(MultiTexCoord4s, "glMultiTexCoord4s")
fn_mod!(MultiTexCoord4sARB, "glMultiTexCoord4sARB")
fn_mod!(MultiTexCoord4sv, "glMultiTexCoord4sv")
fn_mod!(MultiTexCoord4svARB, "glMultiTexCoord4svARB")
fn_mod!(MultiTexCoord4x, "glMultiTexCoord4x")
fn_mod!(MultiTexCoord4xOES, "glMultiTexCoord4xOES")
fn_mod!(MultiTexCoord4xvOES, "glMultiTexCoord4xvOES")
fn_mod!(MultiTexCoordP1ui, "glMultiTexCoordP1ui")
fn_mod!(MultiTexCoordP1uiv, "glMultiTexCoordP1uiv")
fn_mod!(MultiTexCoordP2ui, "glMultiTexCoordP2ui")
fn_mod!(MultiTexCoordP2uiv, "glMultiTexCoordP2uiv")
fn_mod!(MultiTexCoordP3ui, "glMultiTexCoordP3ui")
fn_mod!(MultiTexCoordP3uiv, "glMultiTexCoordP3uiv")
fn_mod!(MultiTexCoordP4ui, "glMultiTexCoordP4ui")
fn_mod!(MultiTexCoordP4uiv, "glMultiTexCoordP4uiv")
fn_mod!(MultiTexCoordPointerEXT, "glMultiTexCoordPointerEXT")
fn_mod!(MultiTexEnvfEXT, "glMultiTexEnvfEXT")
fn_mod!(MultiTexEnvfvEXT, "glMultiTexEnvfvEXT")
fn_mod!(MultiTexEnviEXT, "glMultiTexEnviEXT")
fn_mod!(MultiTexEnvivEXT, "glMultiTexEnvivEXT")
fn_mod!(MultiTexGendEXT, "glMultiTexGendEXT")
fn_mod!(MultiTexGendvEXT, "glMultiTexGendvEXT")
fn_mod!(MultiTexGenfEXT, "glMultiTexGenfEXT")
fn_mod!(MultiTexGenfvEXT, "glMultiTexGenfvEXT")
fn_mod!(MultiTexGeniEXT, "glMultiTexGeniEXT")
fn_mod!(MultiTexGenivEXT, "glMultiTexGenivEXT")
fn_mod!(MultiTexImage1DEXT, "glMultiTexImage1DEXT")
fn_mod!(MultiTexImage2DEXT, "glMultiTexImage2DEXT")
fn_mod!(MultiTexImage3DEXT, "glMultiTexImage3DEXT")
fn_mod!(MultiTexParameterIivEXT, "glMultiTexParameterIivEXT")
fn_mod!(MultiTexParameterIuivEXT, "glMultiTexParameterIuivEXT")
fn_mod!(MultiTexParameterfEXT, "glMultiTexParameterfEXT")
fn_mod!(MultiTexParameterfvEXT, "glMultiTexParameterfvEXT")
fn_mod!(MultiTexParameteriEXT, "glMultiTexParameteriEXT")
fn_mod!(MultiTexParameterivEXT, "glMultiTexParameterivEXT")
fn_mod!(MultiTexRenderbufferEXT, "glMultiTexRenderbufferEXT")
fn_mod!(MultiTexSubImage1DEXT, "glMultiTexSubImage1DEXT")
fn_mod!(MultiTexSubImage2DEXT, "glMultiTexSubImage2DEXT")
fn_mod!(MultiTexSubImage3DEXT, "glMultiTexSubImage3DEXT")
fn_mod!(NamedBufferDataEXT, "glNamedBufferDataEXT")
fn_mod!(NamedBufferStorageEXT, "glNamedBufferStorageEXT")
fn_mod!(NamedBufferSubDataEXT, "glNamedBufferSubDataEXT")
fn_mod!(NamedCopyBufferSubDataEXT, "glNamedCopyBufferSubDataEXT")
fn_mod!(NamedFramebufferParameteriEXT, "glNamedFramebufferParameteriEXT")
fn_mod!(NamedFramebufferRenderbufferEXT, "glNamedFramebufferRenderbufferEXT")
fn_mod!(NamedFramebufferTexture1DEXT, "glNamedFramebufferTexture1DEXT")
fn_mod!(NamedFramebufferTexture2DEXT, "glNamedFramebufferTexture2DEXT")
fn_mod!(NamedFramebufferTexture3DEXT, "glNamedFramebufferTexture3DEXT")
fn_mod!(NamedFramebufferTextureEXT, "glNamedFramebufferTextureEXT")
fn_mod!(NamedFramebufferTextureFaceEXT, "glNamedFramebufferTextureFaceEXT")
fn_mod!(NamedFramebufferTextureLayerEXT, "glNamedFramebufferTextureLayerEXT")
fn_mod!(NamedProgramLocalParameter4dEXT, "glNamedProgramLocalParameter4dEXT")
fn_mod!(NamedProgramLocalParameter4dvEXT, "glNamedProgramLocalParameter4dvEXT")
fn_mod!(NamedProgramLocalParameter4fEXT, "glNamedProgramLocalParameter4fEXT")
fn_mod!(NamedProgramLocalParameter4fvEXT, "glNamedProgramLocalParameter4fvEXT")
fn_mod!(NamedProgramLocalParameterI4iEXT, "glNamedProgramLocalParameterI4iEXT")
fn_mod!(NamedProgramLocalParameterI4ivEXT, "glNamedProgramLocalParameterI4ivEXT")
fn_mod!(NamedProgramLocalParameterI4uiEXT, "glNamedProgramLocalParameterI4uiEXT")
fn_mod!(NamedProgramLocalParameterI4uivEXT, "glNamedProgramLocalParameterI4uivEXT")
fn_mod!(NamedProgramLocalParameters4fvEXT, "glNamedProgramLocalParameters4fvEXT")
fn_mod!(NamedProgramLocalParametersI4ivEXT, "glNamedProgramLocalParametersI4ivEXT")
fn_mod!(NamedProgramLocalParametersI4uivEXT, "glNamedProgramLocalParametersI4uivEXT")
fn_mod!(NamedProgramStringEXT, "glNamedProgramStringEXT")
fn_mod!(NamedRenderbufferStorageEXT, "glNamedRenderbufferStorageEXT")
fn_mod!(NamedRenderbufferStorageMultisampleCoverageEXT, "glNamedRenderbufferStorageMultisampleCoverageEXT")
fn_mod!(NamedRenderbufferStorageMultisampleEXT, "glNamedRenderbufferStorageMultisampleEXT")
fn_mod!(NamedStringARB, "glNamedStringARB")
fn_mod!(NewList, "glNewList")
fn_mod!(NewObjectBufferATI, "glNewObjectBufferATI")
fn_mod!(Normal3b, "glNormal3b")
fn_mod!(Normal3bv, "glNormal3bv")
fn_mod!(Normal3d, "glNormal3d")
fn_mod!(Normal3dv, "glNormal3dv")
fn_mod!(Normal3f, "glNormal3f")
fn_mod!(Normal3fVertex3fSUN, "glNormal3fVertex3fSUN")
fn_mod!(Normal3fVertex3fvSUN, "glNormal3fVertex3fvSUN")
fn_mod!(Normal3fv, "glNormal3fv")
fn_mod!(Normal3hNV, "glNormal3hNV")
fn_mod!(Normal3hvNV, "glNormal3hvNV")
fn_mod!(Normal3i, "glNormal3i")
fn_mod!(Normal3iv, "glNormal3iv")
fn_mod!(Normal3s, "glNormal3s")
fn_mod!(Normal3sv, "glNormal3sv")
fn_mod!(Normal3x, "glNormal3x")
fn_mod!(Normal3xOES, "glNormal3xOES")
fn_mod!(Normal3xvOES, "glNormal3xvOES")
fn_mod!(NormalFormatNV, "glNormalFormatNV")
fn_mod!(NormalP3ui, "glNormalP3ui")
fn_mod!(NormalP3uiv, "glNormalP3uiv")
fn_mod!(NormalPointer, "glNormalPointer")
fn_mod!(NormalPointerEXT, "glNormalPointerEXT")
fn_mod!(NormalPointerListIBM, "glNormalPointerListIBM")
fn_mod!(NormalPointervINTEL, "glNormalPointervINTEL")
fn_mod!(NormalStream3bATI, "glNormalStream3bATI")
fn_mod!(NormalStream3bvATI, "glNormalStream3bvATI")
fn_mod!(NormalStream3dATI, "glNormalStream3dATI")
fn_mod!(NormalStream3dvATI, "glNormalStream3dvATI")
fn_mod!(NormalStream3fATI, "glNormalStream3fATI")
fn_mod!(NormalStream3fvATI, "glNormalStream3fvATI")
fn_mod!(NormalStream3iATI, "glNormalStream3iATI")
fn_mod!(NormalStream3ivATI, "glNormalStream3ivATI")
fn_mod!(NormalStream3sATI, "glNormalStream3sATI")
fn_mod!(NormalStream3svATI, "glNormalStream3svATI")
fn_mod!(ObjectLabel, "glObjectLabel")
fn_mod!(ObjectLabelKHR, "glObjectLabelKHR")
fn_mod!(ObjectPtrLabel, "glObjectPtrLabel")
fn_mod!(ObjectPtrLabelKHR, "glObjectPtrLabelKHR")
fn_mod!(ObjectPurgeableAPPLE, "glObjectPurgeableAPPLE")
fn_mod!(ObjectUnpurgeableAPPLE, "glObjectUnpurgeableAPPLE")
fn_mod!(Ortho, "glOrtho")
fn_mod!(Orthof, "glOrthof")
fn_mod!(OrthofOES, "glOrthofOES")
fn_mod!(Orthox, "glOrthox")
fn_mod!(OrthoxOES, "glOrthoxOES")
fn_mod!(PNTrianglesfATI, "glPNTrianglesfATI")
fn_mod!(PNTrianglesiATI, "glPNTrianglesiATI")
fn_mod!(PassTexCoordATI, "glPassTexCoordATI")
fn_mod!(PassThrough, "glPassThrough")
fn_mod!(PassThroughxOES, "glPassThroughxOES")
fn_mod!(PatchParameterfv, "glPatchParameterfv")
fn_mod!(PatchParameteri, "glPatchParameteri")
fn_mod!(PathColorGenNV, "glPathColorGenNV")
fn_mod!(PathCommandsNV, "glPathCommandsNV")
fn_mod!(PathCoordsNV, "glPathCoordsNV")
fn_mod!(PathCoverDepthFuncNV, "glPathCoverDepthFuncNV")
fn_mod!(PathDashArrayNV, "glPathDashArrayNV")
fn_mod!(PathFogGenNV, "glPathFogGenNV")
fn_mod!(PathGlyphRangeNV, "glPathGlyphRangeNV")
fn_mod!(PathGlyphsNV, "glPathGlyphsNV")
fn_mod!(PathParameterfNV, "glPathParameterfNV")
fn_mod!(PathParameterfvNV, "glPathParameterfvNV")
fn_mod!(PathParameteriNV, "glPathParameteriNV")
fn_mod!(PathParameterivNV, "glPathParameterivNV")
fn_mod!(PathStencilDepthOffsetNV, "glPathStencilDepthOffsetNV")
fn_mod!(PathStencilFuncNV, "glPathStencilFuncNV")
fn_mod!(PathStringNV, "glPathStringNV")
fn_mod!(PathSubCommandsNV, "glPathSubCommandsNV")
fn_mod!(PathSubCoordsNV, "glPathSubCoordsNV")
fn_mod!(PathTexGenNV, "glPathTexGenNV")
fn_mod!(PauseTransformFeedback, "glPauseTransformFeedback")
fn_mod!(PauseTransformFeedbackNV, "glPauseTransformFeedbackNV")
fn_mod!(PixelDataRangeNV, "glPixelDataRangeNV")
fn_mod!(PixelMapfv, "glPixelMapfv")
fn_mod!(PixelMapuiv, "glPixelMapuiv")
fn_mod!(PixelMapusv, "glPixelMapusv")
fn_mod!(PixelMapx, "glPixelMapx")
fn_mod!(PixelStoref, "glPixelStoref")
fn_mod!(PixelStorei, "glPixelStorei")
fn_mod!(PixelStorex, "glPixelStorex")
fn_mod!(PixelTexGenParameterfSGIS, "glPixelTexGenParameterfSGIS")
fn_mod!(PixelTexGenParameterfvSGIS, "glPixelTexGenParameterfvSGIS")
fn_mod!(PixelTexGenParameteriSGIS, "glPixelTexGenParameteriSGIS")
fn_mod!(PixelTexGenParameterivSGIS, "glPixelTexGenParameterivSGIS")
fn_mod!(PixelTexGenSGIX, "glPixelTexGenSGIX")
fn_mod!(PixelTransferf, "glPixelTransferf")
fn_mod!(PixelTransferi, "glPixelTransferi")
fn_mod!(PixelTransferxOES, "glPixelTransferxOES")
fn_mod!(PixelTransformParameterfEXT, "glPixelTransformParameterfEXT")
fn_mod!(PixelTransformParameterfvEXT, "glPixelTransformParameterfvEXT")
fn_mod!(PixelTransformParameteriEXT, "glPixelTransformParameteriEXT")
fn_mod!(PixelTransformParameterivEXT, "glPixelTransformParameterivEXT")
fn_mod!(PixelZoom, "glPixelZoom")
fn_mod!(PixelZoomxOES, "glPixelZoomxOES")
fn_mod!(PointAlongPathNV, "glPointAlongPathNV")
fn_mod!(PointParameterf, "glPointParameterf")
fn_mod!(PointParameterfARB, "glPointParameterfARB")
fn_mod!(PointParameterfEXT, "glPointParameterfEXT")
fn_mod!(PointParameterfSGIS, "glPointParameterfSGIS")
fn_mod!(PointParameterfv, "glPointParameterfv")
fn_mod!(PointParameterfvARB, "glPointParameterfvARB")
fn_mod!(PointParameterfvEXT, "glPointParameterfvEXT")
fn_mod!(PointParameterfvSGIS, "glPointParameterfvSGIS")
fn_mod!(PointParameteri, "glPointParameteri")
fn_mod!(PointParameteriNV, "glPointParameteriNV")
fn_mod!(PointParameteriv, "glPointParameteriv")
fn_mod!(PointParameterivNV, "glPointParameterivNV")
fn_mod!(PointParameterx, "glPointParameterx")
fn_mod!(PointParameterxOES, "glPointParameterxOES")
fn_mod!(PointParameterxv, "glPointParameterxv")
fn_mod!(PointParameterxvOES, "glPointParameterxvOES")
fn_mod!(PointSize, "glPointSize")
fn_mod!(PointSizePointerOES, "glPointSizePointerOES")
fn_mod!(PointSizex, "glPointSizex")
fn_mod!(PointSizexOES, "glPointSizexOES")
fn_mod!(PollAsyncSGIX, "glPollAsyncSGIX")
fn_mod!(PollInstrumentsSGIX, "glPollInstrumentsSGIX")
fn_mod!(PolygonMode, "glPolygonMode")
fn_mod!(PolygonOffset, "glPolygonOffset")
fn_mod!(PolygonOffsetEXT, "glPolygonOffsetEXT")
fn_mod!(PolygonOffsetx, "glPolygonOffsetx")
fn_mod!(PolygonOffsetxOES, "glPolygonOffsetxOES")
fn_mod!(PolygonStipple, "glPolygonStipple")
fn_mod!(PopAttrib, "glPopAttrib")
fn_mod!(PopClientAttrib, "glPopClientAttrib")
fn_mod!(PopDebugGroup, "glPopDebugGroup")
fn_mod!(PopDebugGroupKHR, "glPopDebugGroupKHR")
fn_mod!(PopGroupMarkerEXT, "glPopGroupMarkerEXT")
fn_mod!(PopMatrix, "glPopMatrix")
fn_mod!(PopName, "glPopName")
fn_mod!(PresentFrameDualFillNV, "glPresentFrameDualFillNV")
fn_mod!(PresentFrameKeyedNV, "glPresentFrameKeyedNV")
fn_mod!(PrimitiveRestartIndex, "glPrimitiveRestartIndex")
fn_mod!(PrimitiveRestartIndexNV, "glPrimitiveRestartIndexNV")
fn_mod!(PrimitiveRestartNV, "glPrimitiveRestartNV")
fn_mod!(PrioritizeTextures, "glPrioritizeTextures")
fn_mod!(PrioritizeTexturesEXT, "glPrioritizeTexturesEXT")
fn_mod!(PrioritizeTexturesxOES, "glPrioritizeTexturesxOES")
fn_mod!(ProgramBinary, "glProgramBinary")
fn_mod!(ProgramBinaryOES, "glProgramBinaryOES")
fn_mod!(ProgramBufferParametersIivNV, "glProgramBufferParametersIivNV")
fn_mod!(ProgramBufferParametersIuivNV, "glProgramBufferParametersIuivNV")
fn_mod!(ProgramBufferParametersfvNV, "glProgramBufferParametersfvNV")
fn_mod!(ProgramEnvParameter4dARB, "glProgramEnvParameter4dARB")
fn_mod!(ProgramEnvParameter4dvARB, "glProgramEnvParameter4dvARB")
fn_mod!(ProgramEnvParameter4fARB, "glProgramEnvParameter4fARB")
fn_mod!(ProgramEnvParameter4fvARB, "glProgramEnvParameter4fvARB")
fn_mod!(ProgramEnvParameterI4iNV, "glProgramEnvParameterI4iNV")
fn_mod!(ProgramEnvParameterI4ivNV, "glProgramEnvParameterI4ivNV")
fn_mod!(ProgramEnvParameterI4uiNV, "glProgramEnvParameterI4uiNV")
fn_mod!(ProgramEnvParameterI4uivNV, "glProgramEnvParameterI4uivNV")
fn_mod!(ProgramEnvParameters4fvEXT, "glProgramEnvParameters4fvEXT")
fn_mod!(ProgramEnvParametersI4ivNV, "glProgramEnvParametersI4ivNV")
fn_mod!(ProgramEnvParametersI4uivNV, "glProgramEnvParametersI4uivNV")
fn_mod!(ProgramLocalParameter4dARB, "glProgramLocalParameter4dARB")
fn_mod!(ProgramLocalParameter4dvARB, "glProgramLocalParameter4dvARB")
fn_mod!(ProgramLocalParameter4fARB, "glProgramLocalParameter4fARB")
fn_mod!(ProgramLocalParameter4fvARB, "glProgramLocalParameter4fvARB")
fn_mod!(ProgramLocalParameterI4iNV, "glProgramLocalParameterI4iNV")
fn_mod!(ProgramLocalParameterI4ivNV, "glProgramLocalParameterI4ivNV")
fn_mod!(ProgramLocalParameterI4uiNV, "glProgramLocalParameterI4uiNV")
fn_mod!(ProgramLocalParameterI4uivNV, "glProgramLocalParameterI4uivNV")
fn_mod!(ProgramLocalParameters4fvEXT, "glProgramLocalParameters4fvEXT")
fn_mod!(ProgramLocalParametersI4ivNV, "glProgramLocalParametersI4ivNV")
fn_mod!(ProgramLocalParametersI4uivNV, "glProgramLocalParametersI4uivNV")
fn_mod!(ProgramNamedParameter4dNV, "glProgramNamedParameter4dNV")
fn_mod!(ProgramNamedParameter4dvNV, "glProgramNamedParameter4dvNV")
fn_mod!(ProgramNamedParameter4fNV, "glProgramNamedParameter4fNV")
fn_mod!(ProgramNamedParameter4fvNV, "glProgramNamedParameter4fvNV")
fn_mod!(ProgramParameter4dNV, "glProgramParameter4dNV")
fn_mod!(ProgramParameter4dvNV, "glProgramParameter4dvNV")
fn_mod!(ProgramParameter4fNV, "glProgramParameter4fNV")
fn_mod!(ProgramParameter4fvNV, "glProgramParameter4fvNV")
fn_mod!(ProgramParameteri, "glProgramParameteri")
fn_mod!(ProgramParameteriARB, "glProgramParameteriARB")
fn_mod!(ProgramParameteriEXT, "glProgramParameteriEXT")
fn_mod!(ProgramParameters4dvNV, "glProgramParameters4dvNV")
fn_mod!(ProgramParameters4fvNV, "glProgramParameters4fvNV")
fn_mod!(ProgramStringARB, "glProgramStringARB")
fn_mod!(ProgramSubroutineParametersuivNV, "glProgramSubroutineParametersuivNV")
fn_mod!(ProgramUniform1d, "glProgramUniform1d")
fn_mod!(ProgramUniform1dEXT, "glProgramUniform1dEXT")
fn_mod!(ProgramUniform1dv, "glProgramUniform1dv")
fn_mod!(ProgramUniform1dvEXT, "glProgramUniform1dvEXT")
fn_mod!(ProgramUniform1f, "glProgramUniform1f")
fn_mod!(ProgramUniform1fEXT, "glProgramUniform1fEXT")
fn_mod!(ProgramUniform1fv, "glProgramUniform1fv")
fn_mod!(ProgramUniform1fvEXT, "glProgramUniform1fvEXT")
fn_mod!(ProgramUniform1i, "glProgramUniform1i")
fn_mod!(ProgramUniform1i64NV, "glProgramUniform1i64NV")
fn_mod!(ProgramUniform1i64vNV, "glProgramUniform1i64vNV")
fn_mod!(ProgramUniform1iEXT, "glProgramUniform1iEXT")
fn_mod!(ProgramUniform1iv, "glProgramUniform1iv")
fn_mod!(ProgramUniform1ivEXT, "glProgramUniform1ivEXT")
fn_mod!(ProgramUniform1ui, "glProgramUniform1ui")
fn_mod!(ProgramUniform1ui64NV, "glProgramUniform1ui64NV")
fn_mod!(ProgramUniform1ui64vNV, "glProgramUniform1ui64vNV")
fn_mod!(ProgramUniform1uiEXT, "glProgramUniform1uiEXT")
fn_mod!(ProgramUniform1uiv, "glProgramUniform1uiv")
fn_mod!(ProgramUniform1uivEXT, "glProgramUniform1uivEXT")
fn_mod!(ProgramUniform2d, "glProgramUniform2d")
fn_mod!(ProgramUniform2dEXT, "glProgramUniform2dEXT")
fn_mod!(ProgramUniform2dv, "glProgramUniform2dv")
fn_mod!(ProgramUniform2dvEXT, "glProgramUniform2dvEXT")
fn_mod!(ProgramUniform2f, "glProgramUniform2f")
fn_mod!(ProgramUniform2fEXT, "glProgramUniform2fEXT")
fn_mod!(ProgramUniform2fv, "glProgramUniform2fv")
fn_mod!(ProgramUniform2fvEXT, "glProgramUniform2fvEXT")
fn_mod!(ProgramUniform2i, "glProgramUniform2i")
fn_mod!(ProgramUniform2i64NV, "glProgramUniform2i64NV")
fn_mod!(ProgramUniform2i64vNV, "glProgramUniform2i64vNV")
fn_mod!(ProgramUniform2iEXT, "glProgramUniform2iEXT")
fn_mod!(ProgramUniform2iv, "glProgramUniform2iv")
fn_mod!(ProgramUniform2ivEXT, "glProgramUniform2ivEXT")
fn_mod!(ProgramUniform2ui, "glProgramUniform2ui")
fn_mod!(ProgramUniform2ui64NV, "glProgramUniform2ui64NV")
fn_mod!(ProgramUniform2ui64vNV, "glProgramUniform2ui64vNV")
fn_mod!(ProgramUniform2uiEXT, "glProgramUniform2uiEXT")
fn_mod!(ProgramUniform2uiv, "glProgramUniform2uiv")
fn_mod!(ProgramUniform2uivEXT, "glProgramUniform2uivEXT")
fn_mod!(ProgramUniform3d, "glProgramUniform3d")
fn_mod!(ProgramUniform3dEXT, "glProgramUniform3dEXT")
fn_mod!(ProgramUniform3dv, "glProgramUniform3dv")
fn_mod!(ProgramUniform3dvEXT, "glProgramUniform3dvEXT")
fn_mod!(ProgramUniform3f, "glProgramUniform3f")
fn_mod!(ProgramUniform3fEXT, "glProgramUniform3fEXT")
fn_mod!(ProgramUniform3fv, "glProgramUniform3fv")
fn_mod!(ProgramUniform3fvEXT, "glProgramUniform3fvEXT")
fn_mod!(ProgramUniform3i, "glProgramUniform3i")
fn_mod!(ProgramUniform3i64NV, "glProgramUniform3i64NV")
fn_mod!(ProgramUniform3i64vNV, "glProgramUniform3i64vNV")
fn_mod!(ProgramUniform3iEXT, "glProgramUniform3iEXT")
fn_mod!(ProgramUniform3iv, "glProgramUniform3iv")
fn_mod!(ProgramUniform3ivEXT, "glProgramUniform3ivEXT")
fn_mod!(ProgramUniform3ui, "glProgramUniform3ui")
fn_mod!(ProgramUniform3ui64NV, "glProgramUniform3ui64NV")
fn_mod!(ProgramUniform3ui64vNV, "glProgramUniform3ui64vNV")
fn_mod!(ProgramUniform3uiEXT, "glProgramUniform3uiEXT")
fn_mod!(ProgramUniform3uiv, "glProgramUniform3uiv")
fn_mod!(ProgramUniform3uivEXT, "glProgramUniform3uivEXT")
fn_mod!(ProgramUniform4d, "glProgramUniform4d")
fn_mod!(ProgramUniform4dEXT, "glProgramUniform4dEXT")
fn_mod!(ProgramUniform4dv, "glProgramUniform4dv")
fn_mod!(ProgramUniform4dvEXT, "glProgramUniform4dvEXT")
fn_mod!(ProgramUniform4f, "glProgramUniform4f")
fn_mod!(ProgramUniform4fEXT, "glProgramUniform4fEXT")
fn_mod!(ProgramUniform4fv, "glProgramUniform4fv")
fn_mod!(ProgramUniform4fvEXT, "glProgramUniform4fvEXT")
fn_mod!(ProgramUniform4i, "glProgramUniform4i")
fn_mod!(ProgramUniform4i64NV, "glProgramUniform4i64NV")
fn_mod!(ProgramUniform4i64vNV, "glProgramUniform4i64vNV")
fn_mod!(ProgramUniform4iEXT, "glProgramUniform4iEXT")
fn_mod!(ProgramUniform4iv, "glProgramUniform4iv")
fn_mod!(ProgramUniform4ivEXT, "glProgramUniform4ivEXT")
fn_mod!(ProgramUniform4ui, "glProgramUniform4ui")
fn_mod!(ProgramUniform4ui64NV, "glProgramUniform4ui64NV")
fn_mod!(ProgramUniform4ui64vNV, "glProgramUniform4ui64vNV")
fn_mod!(ProgramUniform4uiEXT, "glProgramUniform4uiEXT")
fn_mod!(ProgramUniform4uiv, "glProgramUniform4uiv")
fn_mod!(ProgramUniform4uivEXT, "glProgramUniform4uivEXT")
fn_mod!(ProgramUniformHandleui64ARB, "glProgramUniformHandleui64ARB")
fn_mod!(ProgramUniformHandleui64NV, "glProgramUniformHandleui64NV")
fn_mod!(ProgramUniformHandleui64vARB, "glProgramUniformHandleui64vARB")
fn_mod!(ProgramUniformHandleui64vNV, "glProgramUniformHandleui64vNV")
fn_mod!(ProgramUniformMatrix2dv, "glProgramUniformMatrix2dv")
fn_mod!(ProgramUniformMatrix2dvEXT, "glProgramUniformMatrix2dvEXT")
fn_mod!(ProgramUniformMatrix2fv, "glProgramUniformMatrix2fv")
fn_mod!(ProgramUniformMatrix2fvEXT, "glProgramUniformMatrix2fvEXT")
fn_mod!(ProgramUniformMatrix2x3dv, "glProgramUniformMatrix2x3dv")
fn_mod!(ProgramUniformMatrix2x3dvEXT, "glProgramUniformMatrix2x3dvEXT")
fn_mod!(ProgramUniformMatrix2x3fv, "glProgramUniformMatrix2x3fv")
fn_mod!(ProgramUniformMatrix2x3fvEXT, "glProgramUniformMatrix2x3fvEXT")
fn_mod!(ProgramUniformMatrix2x4dv, "glProgramUniformMatrix2x4dv")
fn_mod!(ProgramUniformMatrix2x4dvEXT, "glProgramUniformMatrix2x4dvEXT")
fn_mod!(ProgramUniformMatrix2x4fv, "glProgramUniformMatrix2x4fv")
fn_mod!(ProgramUniformMatrix2x4fvEXT, "glProgramUniformMatrix2x4fvEXT")
fn_mod!(ProgramUniformMatrix3dv, "glProgramUniformMatrix3dv")
fn_mod!(ProgramUniformMatrix3dvEXT, "glProgramUniformMatrix3dvEXT")
fn_mod!(ProgramUniformMatrix3fv, "glProgramUniformMatrix3fv")
fn_mod!(ProgramUniformMatrix3fvEXT, "glProgramUniformMatrix3fvEXT")
fn_mod!(ProgramUniformMatrix3x2dv, "glProgramUniformMatrix3x2dv")
fn_mod!(ProgramUniformMatrix3x2dvEXT, "glProgramUniformMatrix3x2dvEXT")
fn_mod!(ProgramUniformMatrix3x2fv, "glProgramUniformMatrix3x2fv")
fn_mod!(ProgramUniformMatrix3x2fvEXT, "glProgramUniformMatrix3x2fvEXT")
fn_mod!(ProgramUniformMatrix3x4dv, "glProgramUniformMatrix3x4dv")
fn_mod!(ProgramUniformMatrix3x4dvEXT, "glProgramUniformMatrix3x4dvEXT")
fn_mod!(ProgramUniformMatrix3x4fv, "glProgramUniformMatrix3x4fv")
fn_mod!(ProgramUniformMatrix3x4fvEXT, "glProgramUniformMatrix3x4fvEXT")
fn_mod!(ProgramUniformMatrix4dv, "glProgramUniformMatrix4dv")
fn_mod!(ProgramUniformMatrix4dvEXT, "glProgramUniformMatrix4dvEXT")
fn_mod!(ProgramUniformMatrix4fv, "glProgramUniformMatrix4fv")
fn_mod!(ProgramUniformMatrix4fvEXT, "glProgramUniformMatrix4fvEXT")
fn_mod!(ProgramUniformMatrix4x2dv, "glProgramUniformMatrix4x2dv")
fn_mod!(ProgramUniformMatrix4x2dvEXT, "glProgramUniformMatrix4x2dvEXT")
fn_mod!(ProgramUniformMatrix4x2fv, "glProgramUniformMatrix4x2fv")
fn_mod!(ProgramUniformMatrix4x2fvEXT, "glProgramUniformMatrix4x2fvEXT")
fn_mod!(ProgramUniformMatrix4x3dv, "glProgramUniformMatrix4x3dv")
fn_mod!(ProgramUniformMatrix4x3dvEXT, "glProgramUniformMatrix4x3dvEXT")
fn_mod!(ProgramUniformMatrix4x3fv, "glProgramUniformMatrix4x3fv")
fn_mod!(ProgramUniformMatrix4x3fvEXT, "glProgramUniformMatrix4x3fvEXT")
fn_mod!(ProgramUniformui64NV, "glProgramUniformui64NV")
fn_mod!(ProgramUniformui64vNV, "glProgramUniformui64vNV")
fn_mod!(ProgramVertexLimitNV, "glProgramVertexLimitNV")
fn_mod!(ProvokingVertex, "glProvokingVertex")
fn_mod!(ProvokingVertexEXT, "glProvokingVertexEXT")
fn_mod!(PushAttrib, "glPushAttrib")
fn_mod!(PushClientAttrib, "glPushClientAttrib")
fn_mod!(PushClientAttribDefaultEXT, "glPushClientAttribDefaultEXT")
fn_mod!(PushDebugGroup, "glPushDebugGroup")
fn_mod!(PushDebugGroupKHR, "glPushDebugGroupKHR")
fn_mod!(PushGroupMarkerEXT, "glPushGroupMarkerEXT")
fn_mod!(PushMatrix, "glPushMatrix")
fn_mod!(PushName, "glPushName")
fn_mod!(QueryCounter, "glQueryCounter")
fn_mod!(QueryCounterEXT, "glQueryCounterEXT")
fn_mod!(QueryMatrixxOES, "glQueryMatrixxOES")
fn_mod!(RasterPos2d, "glRasterPos2d")
fn_mod!(RasterPos2dv, "glRasterPos2dv")
fn_mod!(RasterPos2f, "glRasterPos2f")
fn_mod!(RasterPos2fv, "glRasterPos2fv")
fn_mod!(RasterPos2i, "glRasterPos2i")
fn_mod!(RasterPos2iv, "glRasterPos2iv")
fn_mod!(RasterPos2s, "glRasterPos2s")
fn_mod!(RasterPos2sv, "glRasterPos2sv")
fn_mod!(RasterPos2xOES, "glRasterPos2xOES")
fn_mod!(RasterPos2xvOES, "glRasterPos2xvOES")
fn_mod!(RasterPos3d, "glRasterPos3d")
fn_mod!(RasterPos3dv, "glRasterPos3dv")
fn_mod!(RasterPos3f, "glRasterPos3f")
fn_mod!(RasterPos3fv, "glRasterPos3fv")
fn_mod!(RasterPos3i, "glRasterPos3i")
fn_mod!(RasterPos3iv, "glRasterPos3iv")
fn_mod!(RasterPos3s, "glRasterPos3s")
fn_mod!(RasterPos3sv, "glRasterPos3sv")
fn_mod!(RasterPos3xOES, "glRasterPos3xOES")
fn_mod!(RasterPos3xvOES, "glRasterPos3xvOES")
fn_mod!(RasterPos4d, "glRasterPos4d")
fn_mod!(RasterPos4dv, "glRasterPos4dv")
fn_mod!(RasterPos4f, "glRasterPos4f")
fn_mod!(RasterPos4fv, "glRasterPos4fv")
fn_mod!(RasterPos4i, "glRasterPos4i")
fn_mod!(RasterPos4iv, "glRasterPos4iv")
fn_mod!(RasterPos4s, "glRasterPos4s")
fn_mod!(RasterPos4sv, "glRasterPos4sv")
fn_mod!(RasterPos4xOES, "glRasterPos4xOES")
fn_mod!(RasterPos4xvOES, "glRasterPos4xvOES")
fn_mod!(ReadBuffer, "glReadBuffer")
fn_mod!(ReadBufferIndexedEXT, "glReadBufferIndexedEXT")
fn_mod!(ReadBufferNV, "glReadBufferNV")
fn_mod!(ReadInstrumentsSGIX, "glReadInstrumentsSGIX")
fn_mod!(ReadPixels, "glReadPixels")
fn_mod!(ReadnPixelsARB, "glReadnPixelsARB")
fn_mod!(ReadnPixelsEXT, "glReadnPixelsEXT")
fn_mod!(Rectd, "glRectd")
fn_mod!(Rectdv, "glRectdv")
fn_mod!(Rectf, "glRectf")
fn_mod!(Rectfv, "glRectfv")
fn_mod!(Recti, "glRecti")
fn_mod!(Rectiv, "glRectiv")
fn_mod!(Rects, "glRects")
fn_mod!(Rectsv, "glRectsv")
fn_mod!(RectxOES, "glRectxOES")
fn_mod!(RectxvOES, "glRectxvOES")
fn_mod!(ReferencePlaneSGIX, "glReferencePlaneSGIX")
fn_mod!(ReleaseShaderCompiler, "glReleaseShaderCompiler")
fn_mod!(RenderMode, "glRenderMode")
fn_mod!(RenderbufferStorage, "glRenderbufferStorage")
fn_mod!(RenderbufferStorageEXT, "glRenderbufferStorageEXT")
fn_mod!(RenderbufferStorageMultisample, "glRenderbufferStorageMultisample")
fn_mod!(RenderbufferStorageMultisampleANGLE, "glRenderbufferStorageMultisampleANGLE")
fn_mod!(RenderbufferStorageMultisampleAPPLE, "glRenderbufferStorageMultisampleAPPLE")
fn_mod!(RenderbufferStorageMultisampleCoverageNV, "glRenderbufferStorageMultisampleCoverageNV")
fn_mod!(RenderbufferStorageMultisampleEXT, "glRenderbufferStorageMultisampleEXT")
fn_mod!(RenderbufferStorageMultisampleIMG, "glRenderbufferStorageMultisampleIMG")
fn_mod!(RenderbufferStorageMultisampleNV, "glRenderbufferStorageMultisampleNV")
fn_mod!(RenderbufferStorageOES, "glRenderbufferStorageOES")
fn_mod!(ReplacementCodePointerSUN, "glReplacementCodePointerSUN")
fn_mod!(ReplacementCodeubSUN, "glReplacementCodeubSUN")
fn_mod!(ReplacementCodeubvSUN, "glReplacementCodeubvSUN")
fn_mod!(ReplacementCodeuiColor3fVertex3fSUN, "glReplacementCodeuiColor3fVertex3fSUN")
fn_mod!(ReplacementCodeuiColor3fVertex3fvSUN, "glReplacementCodeuiColor3fVertex3fvSUN")
fn_mod!(ReplacementCodeuiColor4fNormal3fVertex3fSUN, "glReplacementCodeuiColor4fNormal3fVertex3fSUN")
fn_mod!(ReplacementCodeuiColor4fNormal3fVertex3fvSUN, "glReplacementCodeuiColor4fNormal3fVertex3fvSUN")
fn_mod!(ReplacementCodeuiColor4ubVertex3fSUN, "glReplacementCodeuiColor4ubVertex3fSUN")
fn_mod!(ReplacementCodeuiColor4ubVertex3fvSUN, "glReplacementCodeuiColor4ubVertex3fvSUN")
fn_mod!(ReplacementCodeuiNormal3fVertex3fSUN, "glReplacementCodeuiNormal3fVertex3fSUN")
fn_mod!(ReplacementCodeuiNormal3fVertex3fvSUN, "glReplacementCodeuiNormal3fVertex3fvSUN")
fn_mod!(ReplacementCodeuiSUN, "glReplacementCodeuiSUN")
fn_mod!(ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN, "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN")
fn_mod!(ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN, "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN")
fn_mod!(ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN, "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN")
fn_mod!(ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN, "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN")
fn_mod!(ReplacementCodeuiTexCoord2fVertex3fSUN, "glReplacementCodeuiTexCoord2fVertex3fSUN")
fn_mod!(ReplacementCodeuiTexCoord2fVertex3fvSUN, "glReplacementCodeuiTexCoord2fVertex3fvSUN")
fn_mod!(ReplacementCodeuiVertex3fSUN, "glReplacementCodeuiVertex3fSUN")
fn_mod!(ReplacementCodeuiVertex3fvSUN, "glReplacementCodeuiVertex3fvSUN")
fn_mod!(ReplacementCodeuivSUN, "glReplacementCodeuivSUN")
fn_mod!(ReplacementCodeusSUN, "glReplacementCodeusSUN")
fn_mod!(ReplacementCodeusvSUN, "glReplacementCodeusvSUN")
fn_mod!(RequestResidentProgramsNV, "glRequestResidentProgramsNV")
fn_mod!(ResetHistogram, "glResetHistogram")
fn_mod!(ResetHistogramEXT, "glResetHistogramEXT")
fn_mod!(ResetMinmax, "glResetMinmax")
fn_mod!(ResetMinmaxEXT, "glResetMinmaxEXT")
fn_mod!(ResizeBuffersMESA, "glResizeBuffersMESA")
fn_mod!(ResolveMultisampleFramebufferAPPLE, "glResolveMultisampleFramebufferAPPLE")
fn_mod!(ResumeTransformFeedback, "glResumeTransformFeedback")
fn_mod!(ResumeTransformFeedbackNV, "glResumeTransformFeedbackNV")
fn_mod!(Rotated, "glRotated")
fn_mod!(Rotatef, "glRotatef")
fn_mod!(Rotatex, "glRotatex")
fn_mod!(RotatexOES, "glRotatexOES")
fn_mod!(SampleCoverage, "glSampleCoverage")
fn_mod!(SampleCoverageARB, "glSampleCoverageARB")
fn_mod!(SampleCoverageOES, "glSampleCoverageOES")
fn_mod!(SampleCoveragex, "glSampleCoveragex")
fn_mod!(SampleCoveragexOES, "glSampleCoveragexOES")
fn_mod!(SampleMapATI, "glSampleMapATI")
fn_mod!(SampleMaskEXT, "glSampleMaskEXT")
fn_mod!(SampleMaskIndexedNV, "glSampleMaskIndexedNV")
fn_mod!(SampleMaskSGIS, "glSampleMaskSGIS")
fn_mod!(SampleMaski, "glSampleMaski")
fn_mod!(SamplePatternEXT, "glSamplePatternEXT")
fn_mod!(SamplePatternSGIS, "glSamplePatternSGIS")
fn_mod!(SamplerParameterIiv, "glSamplerParameterIiv")
fn_mod!(SamplerParameterIuiv, "glSamplerParameterIuiv")
fn_mod!(SamplerParameterf, "glSamplerParameterf")
fn_mod!(SamplerParameterfv, "glSamplerParameterfv")
fn_mod!(SamplerParameteri, "glSamplerParameteri")
fn_mod!(SamplerParameteriv, "glSamplerParameteriv")
fn_mod!(Scaled, "glScaled")
fn_mod!(Scalef, "glScalef")
fn_mod!(Scalex, "glScalex")
fn_mod!(ScalexOES, "glScalexOES")
fn_mod!(Scissor, "glScissor")
fn_mod!(ScissorArrayv, "glScissorArrayv")
fn_mod!(ScissorIndexed, "glScissorIndexed")
fn_mod!(ScissorIndexedv, "glScissorIndexedv")
fn_mod!(SecondaryColor3b, "glSecondaryColor3b")
fn_mod!(SecondaryColor3bEXT, "glSecondaryColor3bEXT")
fn_mod!(SecondaryColor3bv, "glSecondaryColor3bv")
fn_mod!(SecondaryColor3bvEXT, "glSecondaryColor3bvEXT")
fn_mod!(SecondaryColor3d, "glSecondaryColor3d")
fn_mod!(SecondaryColor3dEXT, "glSecondaryColor3dEXT")
fn_mod!(SecondaryColor3dv, "glSecondaryColor3dv")
fn_mod!(SecondaryColor3dvEXT, "glSecondaryColor3dvEXT")
fn_mod!(SecondaryColor3f, "glSecondaryColor3f")
fn_mod!(SecondaryColor3fEXT, "glSecondaryColor3fEXT")
fn_mod!(SecondaryColor3fv, "glSecondaryColor3fv")
fn_mod!(SecondaryColor3fvEXT, "glSecondaryColor3fvEXT")
fn_mod!(SecondaryColor3hNV, "glSecondaryColor3hNV")
fn_mod!(SecondaryColor3hvNV, "glSecondaryColor3hvNV")
fn_mod!(SecondaryColor3i, "glSecondaryColor3i")
fn_mod!(SecondaryColor3iEXT, "glSecondaryColor3iEXT")
fn_mod!(SecondaryColor3iv, "glSecondaryColor3iv")
fn_mod!(SecondaryColor3ivEXT, "glSecondaryColor3ivEXT")
fn_mod!(SecondaryColor3s, "glSecondaryColor3s")
fn_mod!(SecondaryColor3sEXT, "glSecondaryColor3sEXT")
fn_mod!(SecondaryColor3sv, "glSecondaryColor3sv")
fn_mod!(SecondaryColor3svEXT, "glSecondaryColor3svEXT")
fn_mod!(SecondaryColor3ub, "glSecondaryColor3ub")
fn_mod!(SecondaryColor3ubEXT, "glSecondaryColor3ubEXT")
fn_mod!(SecondaryColor3ubv, "glSecondaryColor3ubv")
fn_mod!(SecondaryColor3ubvEXT, "glSecondaryColor3ubvEXT")
fn_mod!(SecondaryColor3ui, "glSecondaryColor3ui")
fn_mod!(SecondaryColor3uiEXT, "glSecondaryColor3uiEXT")
fn_mod!(SecondaryColor3uiv, "glSecondaryColor3uiv")
fn_mod!(SecondaryColor3uivEXT, "glSecondaryColor3uivEXT")
fn_mod!(SecondaryColor3us, "glSecondaryColor3us")
fn_mod!(SecondaryColor3usEXT, "glSecondaryColor3usEXT")
fn_mod!(SecondaryColor3usv, "glSecondaryColor3usv")
fn_mod!(SecondaryColor3usvEXT, "glSecondaryColor3usvEXT")
fn_mod!(SecondaryColorFormatNV, "glSecondaryColorFormatNV")
fn_mod!(SecondaryColorP3ui, "glSecondaryColorP3ui")
fn_mod!(SecondaryColorP3uiv, "glSecondaryColorP3uiv")
fn_mod!(SecondaryColorPointer, "glSecondaryColorPointer")
fn_mod!(SecondaryColorPointerEXT, "glSecondaryColorPointerEXT")
fn_mod!(SecondaryColorPointerListIBM, "glSecondaryColorPointerListIBM")
fn_mod!(SelectBuffer, "glSelectBuffer")
fn_mod!(SelectPerfMonitorCountersAMD, "glSelectPerfMonitorCountersAMD")
fn_mod!(SeparableFilter2D, "glSeparableFilter2D")
fn_mod!(SeparableFilter2DEXT, "glSeparableFilter2DEXT")
fn_mod!(SetFenceAPPLE, "glSetFenceAPPLE")
fn_mod!(SetFenceNV, "glSetFenceNV")
fn_mod!(SetFragmentShaderConstantATI, "glSetFragmentShaderConstantATI")
fn_mod!(SetInvariantEXT, "glSetInvariantEXT")
fn_mod!(SetLocalConstantEXT, "glSetLocalConstantEXT")
fn_mod!(SetMultisamplefvAMD, "glSetMultisamplefvAMD")
fn_mod!(ShadeModel, "glShadeModel")
fn_mod!(ShaderBinary, "glShaderBinary")
fn_mod!(ShaderOp1EXT, "glShaderOp1EXT")
fn_mod!(ShaderOp2EXT, "glShaderOp2EXT")
fn_mod!(ShaderOp3EXT, "glShaderOp3EXT")
fn_mod!(ShaderSource, "glShaderSource")
fn_mod!(ShaderSourceARB, "glShaderSourceARB")
fn_mod!(ShaderStorageBlockBinding, "glShaderStorageBlockBinding")
fn_mod!(SharpenTexFuncSGIS, "glSharpenTexFuncSGIS")
fn_mod!(SpriteParameterfSGIX, "glSpriteParameterfSGIX")
fn_mod!(SpriteParameterfvSGIX, "glSpriteParameterfvSGIX")
fn_mod!(SpriteParameteriSGIX, "glSpriteParameteriSGIX")
fn_mod!(SpriteParameterivSGIX, "glSpriteParameterivSGIX")
fn_mod!(StartInstrumentsSGIX, "glStartInstrumentsSGIX")
fn_mod!(StartTilingQCOM, "glStartTilingQCOM")
fn_mod!(StencilClearTagEXT, "glStencilClearTagEXT")
fn_mod!(StencilFillPathInstancedNV, "glStencilFillPathInstancedNV")
fn_mod!(StencilFillPathNV, "glStencilFillPathNV")
fn_mod!(StencilFunc, "glStencilFunc")
fn_mod!(StencilFuncSeparate, "glStencilFuncSeparate")
fn_mod!(StencilFuncSeparateATI, "glStencilFuncSeparateATI")
fn_mod!(StencilMask, "glStencilMask")
fn_mod!(StencilMaskSeparate, "glStencilMaskSeparate")
fn_mod!(StencilOp, "glStencilOp")
fn_mod!(StencilOpSeparate, "glStencilOpSeparate")
fn_mod!(StencilOpSeparateATI, "glStencilOpSeparateATI")
fn_mod!(StencilOpValueAMD, "glStencilOpValueAMD")
fn_mod!(StencilStrokePathInstancedNV, "glStencilStrokePathInstancedNV")
fn_mod!(StencilStrokePathNV, "glStencilStrokePathNV")
fn_mod!(StopInstrumentsSGIX, "glStopInstrumentsSGIX")
fn_mod!(StringMarkerGREMEDY, "glStringMarkerGREMEDY")
fn_mod!(SwizzleEXT, "glSwizzleEXT")
fn_mod!(SyncTextureINTEL, "glSyncTextureINTEL")
fn_mod!(TagSampleBufferSGIX, "glTagSampleBufferSGIX")
fn_mod!(Tangent3bEXT, "glTangent3bEXT")
fn_mod!(Tangent3bvEXT, "glTangent3bvEXT")
fn_mod!(Tangent3dEXT, "glTangent3dEXT")
fn_mod!(Tangent3dvEXT, "glTangent3dvEXT")
fn_mod!(Tangent3fEXT, "glTangent3fEXT")
fn_mod!(Tangent3fvEXT, "glTangent3fvEXT")
fn_mod!(Tangent3iEXT, "glTangent3iEXT")
fn_mod!(Tangent3ivEXT, "glTangent3ivEXT")
fn_mod!(Tangent3sEXT, "glTangent3sEXT")
fn_mod!(Tangent3svEXT, "glTangent3svEXT")
fn_mod!(TangentPointerEXT, "glTangentPointerEXT")
fn_mod!(TbufferMask3DFX, "glTbufferMask3DFX")
fn_mod!(TessellationFactorAMD, "glTessellationFactorAMD")
fn_mod!(TessellationModeAMD, "glTessellationModeAMD")
fn_mod!(TestFenceAPPLE, "glTestFenceAPPLE")
fn_mod!(TestFenceNV, "glTestFenceNV")
fn_mod!(TestObjectAPPLE, "glTestObjectAPPLE")
fn_mod!(TexBuffer, "glTexBuffer")
fn_mod!(TexBufferARB, "glTexBufferARB")
fn_mod!(TexBufferEXT, "glTexBufferEXT")
fn_mod!(TexBufferRange, "glTexBufferRange")
fn_mod!(TexBumpParameterfvATI, "glTexBumpParameterfvATI")
fn_mod!(TexBumpParameterivATI, "glTexBumpParameterivATI")
fn_mod!(TexCoord1bOES, "glTexCoord1bOES")
fn_mod!(TexCoord1bvOES, "glTexCoord1bvOES")
fn_mod!(TexCoord1d, "glTexCoord1d")
fn_mod!(TexCoord1dv, "glTexCoord1dv")
fn_mod!(TexCoord1f, "glTexCoord1f")
fn_mod!(TexCoord1fv, "glTexCoord1fv")
fn_mod!(TexCoord1hNV, "glTexCoord1hNV")
fn_mod!(TexCoord1hvNV, "glTexCoord1hvNV")
fn_mod!(TexCoord1i, "glTexCoord1i")
fn_mod!(TexCoord1iv, "glTexCoord1iv")
fn_mod!(TexCoord1s, "glTexCoord1s")
fn_mod!(TexCoord1sv, "glTexCoord1sv")
fn_mod!(TexCoord1xOES, "glTexCoord1xOES")
fn_mod!(TexCoord1xvOES, "glTexCoord1xvOES")
fn_mod!(TexCoord2bOES, "glTexCoord2bOES")
fn_mod!(TexCoord2bvOES, "glTexCoord2bvOES")
fn_mod!(TexCoord2d, "glTexCoord2d")
fn_mod!(TexCoord2dv, "glTexCoord2dv")
fn_mod!(TexCoord2f, "glTexCoord2f")
fn_mod!(TexCoord2fColor3fVertex3fSUN, "glTexCoord2fColor3fVertex3fSUN")
fn_mod!(TexCoord2fColor3fVertex3fvSUN, "glTexCoord2fColor3fVertex3fvSUN")
fn_mod!(TexCoord2fColor4fNormal3fVertex3fSUN, "glTexCoord2fColor4fNormal3fVertex3fSUN")
fn_mod!(TexCoord2fColor4fNormal3fVertex3fvSUN, "glTexCoord2fColor4fNormal3fVertex3fvSUN")
fn_mod!(TexCoord2fColor4ubVertex3fSUN, "glTexCoord2fColor4ubVertex3fSUN")
fn_mod!(TexCoord2fColor4ubVertex3fvSUN, "glTexCoord2fColor4ubVertex3fvSUN")
fn_mod!(TexCoord2fNormal3fVertex3fSUN, "glTexCoord2fNormal3fVertex3fSUN")
fn_mod!(TexCoord2fNormal3fVertex3fvSUN, "glTexCoord2fNormal3fVertex3fvSUN")
fn_mod!(TexCoord2fVertex3fSUN, "glTexCoord2fVertex3fSUN")
fn_mod!(TexCoord2fVertex3fvSUN, "glTexCoord2fVertex3fvSUN")
fn_mod!(TexCoord2fv, "glTexCoord2fv")
fn_mod!(TexCoord2hNV, "glTexCoord2hNV")
fn_mod!(TexCoord2hvNV, "glTexCoord2hvNV")
fn_mod!(TexCoord2i, "glTexCoord2i")
fn_mod!(TexCoord2iv, "glTexCoord2iv")
fn_mod!(TexCoord2s, "glTexCoord2s")
fn_mod!(TexCoord2sv, "glTexCoord2sv")
fn_mod!(TexCoord2xOES, "glTexCoord2xOES")
fn_mod!(TexCoord2xvOES, "glTexCoord2xvOES")
fn_mod!(TexCoord3bOES, "glTexCoord3bOES")
fn_mod!(TexCoord3bvOES, "glTexCoord3bvOES")
fn_mod!(TexCoord3d, "glTexCoord3d")
fn_mod!(TexCoord3dv, "glTexCoord3dv")
fn_mod!(TexCoord3f, "glTexCoord3f")
fn_mod!(TexCoord3fv, "glTexCoord3fv")
fn_mod!(TexCoord3hNV, "glTexCoord3hNV")
fn_mod!(TexCoord3hvNV, "glTexCoord3hvNV")
fn_mod!(TexCoord3i, "glTexCoord3i")
fn_mod!(TexCoord3iv, "glTexCoord3iv")
fn_mod!(TexCoord3s, "glTexCoord3s")
fn_mod!(TexCoord3sv, "glTexCoord3sv")
fn_mod!(TexCoord3xOES, "glTexCoord3xOES")
fn_mod!(TexCoord3xvOES, "glTexCoord3xvOES")
fn_mod!(TexCoord4bOES, "glTexCoord4bOES")
fn_mod!(TexCoord4bvOES, "glTexCoord4bvOES")
fn_mod!(TexCoord4d, "glTexCoord4d")
fn_mod!(TexCoord4dv, "glTexCoord4dv")
fn_mod!(TexCoord4f, "glTexCoord4f")
fn_mod!(TexCoord4fColor4fNormal3fVertex4fSUN, "glTexCoord4fColor4fNormal3fVertex4fSUN")
fn_mod!(TexCoord4fColor4fNormal3fVertex4fvSUN, "glTexCoord4fColor4fNormal3fVertex4fvSUN")
fn_mod!(TexCoord4fVertex4fSUN, "glTexCoord4fVertex4fSUN")
fn_mod!(TexCoord4fVertex4fvSUN, "glTexCoord4fVertex4fvSUN")
fn_mod!(TexCoord4fv, "glTexCoord4fv")
fn_mod!(TexCoord4hNV, "glTexCoord4hNV")
fn_mod!(TexCoord4hvNV, "glTexCoord4hvNV")
fn_mod!(TexCoord4i, "glTexCoord4i")
fn_mod!(TexCoord4iv, "glTexCoord4iv")
fn_mod!(TexCoord4s, "glTexCoord4s")
fn_mod!(TexCoord4sv, "glTexCoord4sv")
fn_mod!(TexCoord4xOES, "glTexCoord4xOES")
fn_mod!(TexCoord4xvOES, "glTexCoord4xvOES")
fn_mod!(TexCoordFormatNV, "glTexCoordFormatNV")
fn_mod!(TexCoordP1ui, "glTexCoordP1ui")
fn_mod!(TexCoordP1uiv, "glTexCoordP1uiv")
fn_mod!(TexCoordP2ui, "glTexCoordP2ui")
fn_mod!(TexCoordP2uiv, "glTexCoordP2uiv")
fn_mod!(TexCoordP3ui, "glTexCoordP3ui")
fn_mod!(TexCoordP3uiv, "glTexCoordP3uiv")
fn_mod!(TexCoordP4ui, "glTexCoordP4ui")
fn_mod!(TexCoordP4uiv, "glTexCoordP4uiv")
fn_mod!(TexCoordPointer, "glTexCoordPointer")
fn_mod!(TexCoordPointerEXT, "glTexCoordPointerEXT")
fn_mod!(TexCoordPointerListIBM, "glTexCoordPointerListIBM")
fn_mod!(TexCoordPointervINTEL, "glTexCoordPointervINTEL")
fn_mod!(TexEnvf, "glTexEnvf")
fn_mod!(TexEnvfv, "glTexEnvfv")
fn_mod!(TexEnvi, "glTexEnvi")
fn_mod!(TexEnviv, "glTexEnviv")
fn_mod!(TexEnvx, "glTexEnvx")
fn_mod!(TexEnvxOES, "glTexEnvxOES")
fn_mod!(TexEnvxv, "glTexEnvxv")
fn_mod!(TexEnvxvOES, "glTexEnvxvOES")
fn_mod!(TexFilterFuncSGIS, "glTexFilterFuncSGIS")
fn_mod!(TexGend, "glTexGend")
fn_mod!(TexGendv, "glTexGendv")
fn_mod!(TexGenf, "glTexGenf")
fn_mod!(TexGenfOES, "glTexGenfOES")
fn_mod!(TexGenfv, "glTexGenfv")
fn_mod!(TexGenfvOES, "glTexGenfvOES")
fn_mod!(TexGeni, "glTexGeni")
fn_mod!(TexGeniOES, "glTexGeniOES")
fn_mod!(TexGeniv, "glTexGeniv")
fn_mod!(TexGenivOES, "glTexGenivOES")
fn_mod!(TexGenxOES, "glTexGenxOES")
fn_mod!(TexGenxvOES, "glTexGenxvOES")
fn_mod!(TexImage1D, "glTexImage1D")
fn_mod!(TexImage2D, "glTexImage2D")
fn_mod!(TexImage2DMultisample, "glTexImage2DMultisample")
fn_mod!(TexImage2DMultisampleCoverageNV, "glTexImage2DMultisampleCoverageNV")
fn_mod!(TexImage3D, "glTexImage3D")
fn_mod!(TexImage3DEXT, "glTexImage3DEXT")
fn_mod!(TexImage3DMultisample, "glTexImage3DMultisample")
fn_mod!(TexImage3DMultisampleCoverageNV, "glTexImage3DMultisampleCoverageNV")
fn_mod!(TexImage3DOES, "glTexImage3DOES")
fn_mod!(TexImage4DSGIS, "glTexImage4DSGIS")
fn_mod!(TexPageCommitmentARB, "glTexPageCommitmentARB")
fn_mod!(TexParameterIiv, "glTexParameterIiv")
fn_mod!(TexParameterIivEXT, "glTexParameterIivEXT")
fn_mod!(TexParameterIuiv, "glTexParameterIuiv")
fn_mod!(TexParameterIuivEXT, "glTexParameterIuivEXT")
fn_mod!(TexParameterf, "glTexParameterf")
fn_mod!(TexParameterfv, "glTexParameterfv")
fn_mod!(TexParameteri, "glTexParameteri")
fn_mod!(TexParameteriv, "glTexParameteriv")
fn_mod!(TexParameterx, "glTexParameterx")
fn_mod!(TexParameterxOES, "glTexParameterxOES")
fn_mod!(TexParameterxv, "glTexParameterxv")
fn_mod!(TexParameterxvOES, "glTexParameterxvOES")
fn_mod!(TexRenderbufferNV, "glTexRenderbufferNV")
fn_mod!(TexStorage1D, "glTexStorage1D")
fn_mod!(TexStorage1DEXT, "glTexStorage1DEXT")
fn_mod!(TexStorage2D, "glTexStorage2D")
fn_mod!(TexStorage2DEXT, "glTexStorage2DEXT")
fn_mod!(TexStorage2DMultisample, "glTexStorage2DMultisample")
fn_mod!(TexStorage3D, "glTexStorage3D")
fn_mod!(TexStorage3DEXT, "glTexStorage3DEXT")
fn_mod!(TexStorage3DMultisample, "glTexStorage3DMultisample")
fn_mod!(TexStorageSparseAMD, "glTexStorageSparseAMD")
fn_mod!(TexSubImage1D, "glTexSubImage1D")
fn_mod!(TexSubImage1DEXT, "glTexSubImage1DEXT")
fn_mod!(TexSubImage2D, "glTexSubImage2D")
fn_mod!(TexSubImage2DEXT, "glTexSubImage2DEXT")
fn_mod!(TexSubImage3D, "glTexSubImage3D")
fn_mod!(TexSubImage3DEXT, "glTexSubImage3DEXT")
fn_mod!(TexSubImage3DOES, "glTexSubImage3DOES")
fn_mod!(TexSubImage4DSGIS, "glTexSubImage4DSGIS")
fn_mod!(TextureBarrierNV, "glTextureBarrierNV")
fn_mod!(TextureBufferEXT, "glTextureBufferEXT")
fn_mod!(TextureBufferRangeEXT, "glTextureBufferRangeEXT")
fn_mod!(TextureColorMaskSGIS, "glTextureColorMaskSGIS")
fn_mod!(TextureImage1DEXT, "glTextureImage1DEXT")
fn_mod!(TextureImage2DEXT, "glTextureImage2DEXT")
fn_mod!(TextureImage2DMultisampleCoverageNV, "glTextureImage2DMultisampleCoverageNV")
fn_mod!(TextureImage2DMultisampleNV, "glTextureImage2DMultisampleNV")
fn_mod!(TextureImage3DEXT, "glTextureImage3DEXT")
fn_mod!(TextureImage3DMultisampleCoverageNV, "glTextureImage3DMultisampleCoverageNV")
fn_mod!(TextureImage3DMultisampleNV, "glTextureImage3DMultisampleNV")
fn_mod!(TextureLightEXT, "glTextureLightEXT")
fn_mod!(TextureMaterialEXT, "glTextureMaterialEXT")
fn_mod!(TextureNormalEXT, "glTextureNormalEXT")
fn_mod!(TexturePageCommitmentEXT, "glTexturePageCommitmentEXT")
fn_mod!(TextureParameterIivEXT, "glTextureParameterIivEXT")
fn_mod!(TextureParameterIuivEXT, "glTextureParameterIuivEXT")
fn_mod!(TextureParameterfEXT, "glTextureParameterfEXT")
fn_mod!(TextureParameterfvEXT, "glTextureParameterfvEXT")
fn_mod!(TextureParameteriEXT, "glTextureParameteriEXT")
fn_mod!(TextureParameterivEXT, "glTextureParameterivEXT")
fn_mod!(TextureRangeAPPLE, "glTextureRangeAPPLE")
fn_mod!(TextureRenderbufferEXT, "glTextureRenderbufferEXT")
fn_mod!(TextureStorage1DEXT, "glTextureStorage1DEXT")
fn_mod!(TextureStorage2DEXT, "glTextureStorage2DEXT")
fn_mod!(TextureStorage2DMultisampleEXT, "glTextureStorage2DMultisampleEXT")
fn_mod!(TextureStorage3DEXT, "glTextureStorage3DEXT")
fn_mod!(TextureStorage3DMultisampleEXT, "glTextureStorage3DMultisampleEXT")
fn_mod!(TextureStorageSparseAMD, "glTextureStorageSparseAMD")
fn_mod!(TextureSubImage1DEXT, "glTextureSubImage1DEXT")
fn_mod!(TextureSubImage2DEXT, "glTextureSubImage2DEXT")
fn_mod!(TextureSubImage3DEXT, "glTextureSubImage3DEXT")
fn_mod!(TextureView, "glTextureView")
fn_mod!(TrackMatrixNV, "glTrackMatrixNV")
fn_mod!(TransformFeedbackAttribsNV, "glTransformFeedbackAttribsNV")
fn_mod!(TransformFeedbackStreamAttribsNV, "glTransformFeedbackStreamAttribsNV")
fn_mod!(TransformFeedbackVaryings, "glTransformFeedbackVaryings")
fn_mod!(TransformFeedbackVaryingsEXT, "glTransformFeedbackVaryingsEXT")
fn_mod!(TransformFeedbackVaryingsNV, "glTransformFeedbackVaryingsNV")
fn_mod!(TransformPathNV, "glTransformPathNV")
fn_mod!(Translated, "glTranslated")
fn_mod!(Translatef, "glTranslatef")
fn_mod!(Translatex, "glTranslatex")
fn_mod!(TranslatexOES, "glTranslatexOES")
fn_mod!(Uniform1d, "glUniform1d")
fn_mod!(Uniform1dv, "glUniform1dv")
fn_mod!(Uniform1f, "glUniform1f")
fn_mod!(Uniform1fARB, "glUniform1fARB")
fn_mod!(Uniform1fv, "glUniform1fv")
fn_mod!(Uniform1fvARB, "glUniform1fvARB")
fn_mod!(Uniform1i, "glUniform1i")
fn_mod!(Uniform1i64NV, "glUniform1i64NV")
fn_mod!(Uniform1i64vNV, "glUniform1i64vNV")
fn_mod!(Uniform1iARB, "glUniform1iARB")
fn_mod!(Uniform1iv, "glUniform1iv")
fn_mod!(Uniform1ivARB, "glUniform1ivARB")
fn_mod!(Uniform1ui, "glUniform1ui")
fn_mod!(Uniform1ui64NV, "glUniform1ui64NV")
fn_mod!(Uniform1ui64vNV, "glUniform1ui64vNV")
fn_mod!(Uniform1uiEXT, "glUniform1uiEXT")
fn_mod!(Uniform1uiv, "glUniform1uiv")
fn_mod!(Uniform1uivEXT, "glUniform1uivEXT")
fn_mod!(Uniform2d, "glUniform2d")
fn_mod!(Uniform2dv, "glUniform2dv")
fn_mod!(Uniform2f, "glUniform2f")
fn_mod!(Uniform2fARB, "glUniform2fARB")
fn_mod!(Uniform2fv, "glUniform2fv")
fn_mod!(Uniform2fvARB, "glUniform2fvARB")
fn_mod!(Uniform2i, "glUniform2i")
fn_mod!(Uniform2i64NV, "glUniform2i64NV")
fn_mod!(Uniform2i64vNV, "glUniform2i64vNV")
fn_mod!(Uniform2iARB, "glUniform2iARB")
fn_mod!(Uniform2iv, "glUniform2iv")
fn_mod!(Uniform2ivARB, "glUniform2ivARB")
fn_mod!(Uniform2ui, "glUniform2ui")
fn_mod!(Uniform2ui64NV, "glUniform2ui64NV")
fn_mod!(Uniform2ui64vNV, "glUniform2ui64vNV")
fn_mod!(Uniform2uiEXT, "glUniform2uiEXT")
fn_mod!(Uniform2uiv, "glUniform2uiv")
fn_mod!(Uniform2uivEXT, "glUniform2uivEXT")
fn_mod!(Uniform3d, "glUniform3d")
fn_mod!(Uniform3dv, "glUniform3dv")
fn_mod!(Uniform3f, "glUniform3f")
fn_mod!(Uniform3fARB, "glUniform3fARB")
fn_mod!(Uniform3fv, "glUniform3fv")
fn_mod!(Uniform3fvARB, "glUniform3fvARB")
fn_mod!(Uniform3i, "glUniform3i")
fn_mod!(Uniform3i64NV, "glUniform3i64NV")
fn_mod!(Uniform3i64vNV, "glUniform3i64vNV")
fn_mod!(Uniform3iARB, "glUniform3iARB")
fn_mod!(Uniform3iv, "glUniform3iv")
fn_mod!(Uniform3ivARB, "glUniform3ivARB")
fn_mod!(Uniform3ui, "glUniform3ui")
fn_mod!(Uniform3ui64NV, "glUniform3ui64NV")
fn_mod!(Uniform3ui64vNV, "glUniform3ui64vNV")
fn_mod!(Uniform3uiEXT, "glUniform3uiEXT")
fn_mod!(Uniform3uiv, "glUniform3uiv")
fn_mod!(Uniform3uivEXT, "glUniform3uivEXT")
fn_mod!(Uniform4d, "glUniform4d")
fn_mod!(Uniform4dv, "glUniform4dv")
fn_mod!(Uniform4f, "glUniform4f")
fn_mod!(Uniform4fARB, "glUniform4fARB")
fn_mod!(Uniform4fv, "glUniform4fv")
fn_mod!(Uniform4fvARB, "glUniform4fvARB")
fn_mod!(Uniform4i, "glUniform4i")
fn_mod!(Uniform4i64NV, "glUniform4i64NV")
fn_mod!(Uniform4i64vNV, "glUniform4i64vNV")
fn_mod!(Uniform4iARB, "glUniform4iARB")
fn_mod!(Uniform4iv, "glUniform4iv")
fn_mod!(Uniform4ivARB, "glUniform4ivARB")
fn_mod!(Uniform4ui, "glUniform4ui")
fn_mod!(Uniform4ui64NV, "glUniform4ui64NV")
fn_mod!(Uniform4ui64vNV, "glUniform4ui64vNV")
fn_mod!(Uniform4uiEXT, "glUniform4uiEXT")
fn_mod!(Uniform4uiv, "glUniform4uiv")
fn_mod!(Uniform4uivEXT, "glUniform4uivEXT")
fn_mod!(UniformBlockBinding, "glUniformBlockBinding")
fn_mod!(UniformBufferEXT, "glUniformBufferEXT")
fn_mod!(UniformHandleui64ARB, "glUniformHandleui64ARB")
fn_mod!(UniformHandleui64NV, "glUniformHandleui64NV")
fn_mod!(UniformHandleui64vARB, "glUniformHandleui64vARB")
fn_mod!(UniformHandleui64vNV, "glUniformHandleui64vNV")
fn_mod!(UniformMatrix2dv, "glUniformMatrix2dv")
fn_mod!(UniformMatrix2fv, "glUniformMatrix2fv")
fn_mod!(UniformMatrix2fvARB, "glUniformMatrix2fvARB")
fn_mod!(UniformMatrix2x3dv, "glUniformMatrix2x3dv")
fn_mod!(UniformMatrix2x3fv, "glUniformMatrix2x3fv")
fn_mod!(UniformMatrix2x4dv, "glUniformMatrix2x4dv")
fn_mod!(UniformMatrix2x4fv, "glUniformMatrix2x4fv")
fn_mod!(UniformMatrix3dv, "glUniformMatrix3dv")
fn_mod!(UniformMatrix3fv, "glUniformMatrix3fv")
fn_mod!(UniformMatrix3fvARB, "glUniformMatrix3fvARB")
fn_mod!(UniformMatrix3x2dv, "glUniformMatrix3x2dv")
fn_mod!(UniformMatrix3x2fv, "glUniformMatrix3x2fv")
fn_mod!(UniformMatrix3x4dv, "glUniformMatrix3x4dv")
fn_mod!(UniformMatrix3x4fv, "glUniformMatrix3x4fv")
fn_mod!(UniformMatrix4dv, "glUniformMatrix4dv")
fn_mod!(UniformMatrix4fv, "glUniformMatrix4fv")
fn_mod!(UniformMatrix4fvARB, "glUniformMatrix4fvARB")
fn_mod!(UniformMatrix4x2dv, "glUniformMatrix4x2dv")
fn_mod!(UniformMatrix4x2fv, "glUniformMatrix4x2fv")
fn_mod!(UniformMatrix4x3dv, "glUniformMatrix4x3dv")
fn_mod!(UniformMatrix4x3fv, "glUniformMatrix4x3fv")
fn_mod!(UniformSubroutinesuiv, "glUniformSubroutinesuiv")
fn_mod!(Uniformui64NV, "glUniformui64NV")
fn_mod!(Uniformui64vNV, "glUniformui64vNV")
fn_mod!(UnlockArraysEXT, "glUnlockArraysEXT")
fn_mod!(UnmapBuffer, "glUnmapBuffer")
fn_mod!(UnmapBufferARB, "glUnmapBufferARB")
fn_mod!(UnmapBufferOES, "glUnmapBufferOES")
fn_mod!(UnmapNamedBufferEXT, "glUnmapNamedBufferEXT")
fn_mod!(UnmapObjectBufferATI, "glUnmapObjectBufferATI")
fn_mod!(UnmapTexture2DINTEL, "glUnmapTexture2DINTEL")
fn_mod!(UpdateObjectBufferATI, "glUpdateObjectBufferATI")
fn_mod!(UseProgram, "glUseProgram")
fn_mod!(UseProgramObjectARB, "glUseProgramObjectARB")
fn_mod!(UseProgramStages, "glUseProgramStages")
fn_mod!(UseProgramStagesEXT, "glUseProgramStagesEXT")
fn_mod!(UseShaderProgramEXT, "glUseShaderProgramEXT")
fn_mod!(VDPAUFiniNV, "glVDPAUFiniNV")
fn_mod!(VDPAUGetSurfaceivNV, "glVDPAUGetSurfaceivNV")
fn_mod!(VDPAUInitNV, "glVDPAUInitNV")
fn_mod!(VDPAUIsSurfaceNV, "glVDPAUIsSurfaceNV")
fn_mod!(VDPAUMapSurfacesNV, "glVDPAUMapSurfacesNV")
fn_mod!(VDPAURegisterOutputSurfaceNV, "glVDPAURegisterOutputSurfaceNV")
fn_mod!(VDPAURegisterVideoSurfaceNV, "glVDPAURegisterVideoSurfaceNV")
fn_mod!(VDPAUSurfaceAccessNV, "glVDPAUSurfaceAccessNV")
fn_mod!(VDPAUUnmapSurfacesNV, "glVDPAUUnmapSurfacesNV")
fn_mod!(VDPAUUnregisterSurfaceNV, "glVDPAUUnregisterSurfaceNV")
fn_mod!(ValidateProgram, "glValidateProgram")
fn_mod!(ValidateProgramARB, "glValidateProgramARB")
fn_mod!(ValidateProgramPipeline, "glValidateProgramPipeline")
fn_mod!(ValidateProgramPipelineEXT, "glValidateProgramPipelineEXT")
fn_mod!(VariantArrayObjectATI, "glVariantArrayObjectATI")
fn_mod!(VariantPointerEXT, "glVariantPointerEXT")
fn_mod!(VariantbvEXT, "glVariantbvEXT")
fn_mod!(VariantdvEXT, "glVariantdvEXT")
fn_mod!(VariantfvEXT, "glVariantfvEXT")
fn_mod!(VariantivEXT, "glVariantivEXT")
fn_mod!(VariantsvEXT, "glVariantsvEXT")
fn_mod!(VariantubvEXT, "glVariantubvEXT")
fn_mod!(VariantuivEXT, "glVariantuivEXT")
fn_mod!(VariantusvEXT, "glVariantusvEXT")
fn_mod!(Vertex2bOES, "glVertex2bOES")
fn_mod!(Vertex2bvOES, "glVertex2bvOES")
fn_mod!(Vertex2d, "glVertex2d")
fn_mod!(Vertex2dv, "glVertex2dv")
fn_mod!(Vertex2f, "glVertex2f")
fn_mod!(Vertex2fv, "glVertex2fv")
fn_mod!(Vertex2hNV, "glVertex2hNV")
fn_mod!(Vertex2hvNV, "glVertex2hvNV")
fn_mod!(Vertex2i, "glVertex2i")
fn_mod!(Vertex2iv, "glVertex2iv")
fn_mod!(Vertex2s, "glVertex2s")
fn_mod!(Vertex2sv, "glVertex2sv")
fn_mod!(Vertex2xOES, "glVertex2xOES")
fn_mod!(Vertex2xvOES, "glVertex2xvOES")
fn_mod!(Vertex3bOES, "glVertex3bOES")
fn_mod!(Vertex3bvOES, "glVertex3bvOES")
fn_mod!(Vertex3d, "glVertex3d")
fn_mod!(Vertex3dv, "glVertex3dv")
fn_mod!(Vertex3f, "glVertex3f")
fn_mod!(Vertex3fv, "glVertex3fv")
fn_mod!(Vertex3hNV, "glVertex3hNV")
fn_mod!(Vertex3hvNV, "glVertex3hvNV")
fn_mod!(Vertex3i, "glVertex3i")
fn_mod!(Vertex3iv, "glVertex3iv")
fn_mod!(Vertex3s, "glVertex3s")
fn_mod!(Vertex3sv, "glVertex3sv")
fn_mod!(Vertex3xOES, "glVertex3xOES")
fn_mod!(Vertex3xvOES, "glVertex3xvOES")
fn_mod!(Vertex4bOES, "glVertex4bOES")
fn_mod!(Vertex4bvOES, "glVertex4bvOES")
fn_mod!(Vertex4d, "glVertex4d")
fn_mod!(Vertex4dv, "glVertex4dv")
fn_mod!(Vertex4f, "glVertex4f")
fn_mod!(Vertex4fv, "glVertex4fv")
fn_mod!(Vertex4hNV, "glVertex4hNV")
fn_mod!(Vertex4hvNV, "glVertex4hvNV")
fn_mod!(Vertex4i, "glVertex4i")
fn_mod!(Vertex4iv, "glVertex4iv")
fn_mod!(Vertex4s, "glVertex4s")
fn_mod!(Vertex4sv, "glVertex4sv")
fn_mod!(Vertex4xOES, "glVertex4xOES")
fn_mod!(Vertex4xvOES, "glVertex4xvOES")
fn_mod!(VertexArrayBindVertexBufferEXT, "glVertexArrayBindVertexBufferEXT")
fn_mod!(VertexArrayColorOffsetEXT, "glVertexArrayColorOffsetEXT")
fn_mod!(VertexArrayEdgeFlagOffsetEXT, "glVertexArrayEdgeFlagOffsetEXT")
fn_mod!(VertexArrayFogCoordOffsetEXT, "glVertexArrayFogCoordOffsetEXT")
fn_mod!(VertexArrayIndexOffsetEXT, "glVertexArrayIndexOffsetEXT")
fn_mod!(VertexArrayMultiTexCoordOffsetEXT, "glVertexArrayMultiTexCoordOffsetEXT")
fn_mod!(VertexArrayNormalOffsetEXT, "glVertexArrayNormalOffsetEXT")
fn_mod!(VertexArrayParameteriAPPLE, "glVertexArrayParameteriAPPLE")
fn_mod!(VertexArrayRangeAPPLE, "glVertexArrayRangeAPPLE")
fn_mod!(VertexArrayRangeNV, "glVertexArrayRangeNV")
fn_mod!(VertexArraySecondaryColorOffsetEXT, "glVertexArraySecondaryColorOffsetEXT")
fn_mod!(VertexArrayTexCoordOffsetEXT, "glVertexArrayTexCoordOffsetEXT")
fn_mod!(VertexArrayVertexAttribBindingEXT, "glVertexArrayVertexAttribBindingEXT")
fn_mod!(VertexArrayVertexAttribFormatEXT, "glVertexArrayVertexAttribFormatEXT")
fn_mod!(VertexArrayVertexAttribIFormatEXT, "glVertexArrayVertexAttribIFormatEXT")
fn_mod!(VertexArrayVertexAttribIOffsetEXT, "glVertexArrayVertexAttribIOffsetEXT")
fn_mod!(VertexArrayVertexAttribLFormatEXT, "glVertexArrayVertexAttribLFormatEXT")
fn_mod!(VertexArrayVertexAttribLOffsetEXT, "glVertexArrayVertexAttribLOffsetEXT")
fn_mod!(VertexArrayVertexAttribOffsetEXT, "glVertexArrayVertexAttribOffsetEXT")
fn_mod!(VertexArrayVertexBindingDivisorEXT, "glVertexArrayVertexBindingDivisorEXT")
fn_mod!(VertexArrayVertexOffsetEXT, "glVertexArrayVertexOffsetEXT")
fn_mod!(VertexAttrib1d, "glVertexAttrib1d")
fn_mod!(VertexAttrib1dARB, "glVertexAttrib1dARB")
fn_mod!(VertexAttrib1dNV, "glVertexAttrib1dNV")
fn_mod!(VertexAttrib1dv, "glVertexAttrib1dv")
fn_mod!(VertexAttrib1dvARB, "glVertexAttrib1dvARB")
fn_mod!(VertexAttrib1dvNV, "glVertexAttrib1dvNV")
fn_mod!(VertexAttrib1f, "glVertexAttrib1f")
fn_mod!(VertexAttrib1fARB, "glVertexAttrib1fARB")
fn_mod!(VertexAttrib1fNV, "glVertexAttrib1fNV")
fn_mod!(VertexAttrib1fv, "glVertexAttrib1fv")
fn_mod!(VertexAttrib1fvARB, "glVertexAttrib1fvARB")
fn_mod!(VertexAttrib1fvNV, "glVertexAttrib1fvNV")
fn_mod!(VertexAttrib1hNV, "glVertexAttrib1hNV")
fn_mod!(VertexAttrib1hvNV, "glVertexAttrib1hvNV")
fn_mod!(VertexAttrib1s, "glVertexAttrib1s")
fn_mod!(VertexAttrib1sARB, "glVertexAttrib1sARB")
fn_mod!(VertexAttrib1sNV, "glVertexAttrib1sNV")
fn_mod!(VertexAttrib1sv, "glVertexAttrib1sv")
fn_mod!(VertexAttrib1svARB, "glVertexAttrib1svARB")
fn_mod!(VertexAttrib1svNV, "glVertexAttrib1svNV")
fn_mod!(VertexAttrib2d, "glVertexAttrib2d")
fn_mod!(VertexAttrib2dARB, "glVertexAttrib2dARB")
fn_mod!(VertexAttrib2dNV, "glVertexAttrib2dNV")
fn_mod!(VertexAttrib2dv, "glVertexAttrib2dv")
fn_mod!(VertexAttrib2dvARB, "glVertexAttrib2dvARB")
fn_mod!(VertexAttrib2dvNV, "glVertexAttrib2dvNV")
fn_mod!(VertexAttrib2f, "glVertexAttrib2f")
fn_mod!(VertexAttrib2fARB, "glVertexAttrib2fARB")
fn_mod!(VertexAttrib2fNV, "glVertexAttrib2fNV")
fn_mod!(VertexAttrib2fv, "glVertexAttrib2fv")
fn_mod!(VertexAttrib2fvARB, "glVertexAttrib2fvARB")
fn_mod!(VertexAttrib2fvNV, "glVertexAttrib2fvNV")
fn_mod!(VertexAttrib2hNV, "glVertexAttrib2hNV")
fn_mod!(VertexAttrib2hvNV, "glVertexAttrib2hvNV")
fn_mod!(VertexAttrib2s, "glVertexAttrib2s")
fn_mod!(VertexAttrib2sARB, "glVertexAttrib2sARB")
fn_mod!(VertexAttrib2sNV, "glVertexAttrib2sNV")
fn_mod!(VertexAttrib2sv, "glVertexAttrib2sv")
fn_mod!(VertexAttrib2svARB, "glVertexAttrib2svARB")
fn_mod!(VertexAttrib2svNV, "glVertexAttrib2svNV")
fn_mod!(VertexAttrib3d, "glVertexAttrib3d")
fn_mod!(VertexAttrib3dARB, "glVertexAttrib3dARB")
fn_mod!(VertexAttrib3dNV, "glVertexAttrib3dNV")
fn_mod!(VertexAttrib3dv, "glVertexAttrib3dv")
fn_mod!(VertexAttrib3dvARB, "glVertexAttrib3dvARB")
fn_mod!(VertexAttrib3dvNV, "glVertexAttrib3dvNV")
fn_mod!(VertexAttrib3f, "glVertexAttrib3f")
fn_mod!(VertexAttrib3fARB, "glVertexAttrib3fARB")
fn_mod!(VertexAttrib3fNV, "glVertexAttrib3fNV")
fn_mod!(VertexAttrib3fv, "glVertexAttrib3fv")
fn_mod!(VertexAttrib3fvARB, "glVertexAttrib3fvARB")
fn_mod!(VertexAttrib3fvNV, "glVertexAttrib3fvNV")
fn_mod!(VertexAttrib3hNV, "glVertexAttrib3hNV")
fn_mod!(VertexAttrib3hvNV, "glVertexAttrib3hvNV")
fn_mod!(VertexAttrib3s, "glVertexAttrib3s")
fn_mod!(VertexAttrib3sARB, "glVertexAttrib3sARB")
fn_mod!(VertexAttrib3sNV, "glVertexAttrib3sNV")
fn_mod!(VertexAttrib3sv, "glVertexAttrib3sv")
fn_mod!(VertexAttrib3svARB, "glVertexAttrib3svARB")
fn_mod!(VertexAttrib3svNV, "glVertexAttrib3svNV")
fn_mod!(VertexAttrib4Nbv, "glVertexAttrib4Nbv")
fn_mod!(VertexAttrib4NbvARB, "glVertexAttrib4NbvARB")
fn_mod!(VertexAttrib4Niv, "glVertexAttrib4Niv")
fn_mod!(VertexAttrib4NivARB, "glVertexAttrib4NivARB")
fn_mod!(VertexAttrib4Nsv, "glVertexAttrib4Nsv")
fn_mod!(VertexAttrib4NsvARB, "glVertexAttrib4NsvARB")
fn_mod!(VertexAttrib4Nub, "glVertexAttrib4Nub")
fn_mod!(VertexAttrib4NubARB, "glVertexAttrib4NubARB")
fn_mod!(VertexAttrib4Nubv, "glVertexAttrib4Nubv")
fn_mod!(VertexAttrib4NubvARB, "glVertexAttrib4NubvARB")
fn_mod!(VertexAttrib4Nuiv, "glVertexAttrib4Nuiv")
fn_mod!(VertexAttrib4NuivARB, "glVertexAttrib4NuivARB")
fn_mod!(VertexAttrib4Nusv, "glVertexAttrib4Nusv")
fn_mod!(VertexAttrib4NusvARB, "glVertexAttrib4NusvARB")
fn_mod!(VertexAttrib4bv, "glVertexAttrib4bv")
fn_mod!(VertexAttrib4bvARB, "glVertexAttrib4bvARB")
fn_mod!(VertexAttrib4d, "glVertexAttrib4d")
fn_mod!(VertexAttrib4dARB, "glVertexAttrib4dARB")
fn_mod!(VertexAttrib4dNV, "glVertexAttrib4dNV")
fn_mod!(VertexAttrib4dv, "glVertexAttrib4dv")
fn_mod!(VertexAttrib4dvARB, "glVertexAttrib4dvARB")
fn_mod!(VertexAttrib4dvNV, "glVertexAttrib4dvNV")
fn_mod!(VertexAttrib4f, "glVertexAttrib4f")
fn_mod!(VertexAttrib4fARB, "glVertexAttrib4fARB")
fn_mod!(VertexAttrib4fNV, "glVertexAttrib4fNV")
fn_mod!(VertexAttrib4fv, "glVertexAttrib4fv")
fn_mod!(VertexAttrib4fvARB, "glVertexAttrib4fvARB")
fn_mod!(VertexAttrib4fvNV, "glVertexAttrib4fvNV")
fn_mod!(VertexAttrib4hNV, "glVertexAttrib4hNV")
fn_mod!(VertexAttrib4hvNV, "glVertexAttrib4hvNV")
fn_mod!(VertexAttrib4iv, "glVertexAttrib4iv")
fn_mod!(VertexAttrib4ivARB, "glVertexAttrib4ivARB")
fn_mod!(VertexAttrib4s, "glVertexAttrib4s")
fn_mod!(VertexAttrib4sARB, "glVertexAttrib4sARB")
fn_mod!(VertexAttrib4sNV, "glVertexAttrib4sNV")
fn_mod!(VertexAttrib4sv, "glVertexAttrib4sv")
fn_mod!(VertexAttrib4svARB, "glVertexAttrib4svARB")
fn_mod!(VertexAttrib4svNV, "glVertexAttrib4svNV")
fn_mod!(VertexAttrib4ubNV, "glVertexAttrib4ubNV")
fn_mod!(VertexAttrib4ubv, "glVertexAttrib4ubv")
fn_mod!(VertexAttrib4ubvARB, "glVertexAttrib4ubvARB")
fn_mod!(VertexAttrib4ubvNV, "glVertexAttrib4ubvNV")
fn_mod!(VertexAttrib4uiv, "glVertexAttrib4uiv")
fn_mod!(VertexAttrib4uivARB, "glVertexAttrib4uivARB")
fn_mod!(VertexAttrib4usv, "glVertexAttrib4usv")
fn_mod!(VertexAttrib4usvARB, "glVertexAttrib4usvARB")
fn_mod!(VertexAttribArrayObjectATI, "glVertexAttribArrayObjectATI")
fn_mod!(VertexAttribBinding, "glVertexAttribBinding")
fn_mod!(VertexAttribDivisor, "glVertexAttribDivisor")
fn_mod!(VertexAttribDivisorANGLE, "glVertexAttribDivisorANGLE")
fn_mod!(VertexAttribDivisorARB, "glVertexAttribDivisorARB")
fn_mod!(VertexAttribDivisorNV, "glVertexAttribDivisorNV")
fn_mod!(VertexAttribFormat, "glVertexAttribFormat")
fn_mod!(VertexAttribFormatNV, "glVertexAttribFormatNV")
fn_mod!(VertexAttribI1i, "glVertexAttribI1i")
fn_mod!(VertexAttribI1iEXT, "glVertexAttribI1iEXT")
fn_mod!(VertexAttribI1iv, "glVertexAttribI1iv")
fn_mod!(VertexAttribI1ivEXT, "glVertexAttribI1ivEXT")
fn_mod!(VertexAttribI1ui, "glVertexAttribI1ui")
fn_mod!(VertexAttribI1uiEXT, "glVertexAttribI1uiEXT")
fn_mod!(VertexAttribI1uiv, "glVertexAttribI1uiv")
fn_mod!(VertexAttribI1uivEXT, "glVertexAttribI1uivEXT")
fn_mod!(VertexAttribI2i, "glVertexAttribI2i")
fn_mod!(VertexAttribI2iEXT, "glVertexAttribI2iEXT")
fn_mod!(VertexAttribI2iv, "glVertexAttribI2iv")
fn_mod!(VertexAttribI2ivEXT, "glVertexAttribI2ivEXT")
fn_mod!(VertexAttribI2ui, "glVertexAttribI2ui")
fn_mod!(VertexAttribI2uiEXT, "glVertexAttribI2uiEXT")
fn_mod!(VertexAttribI2uiv, "glVertexAttribI2uiv")
fn_mod!(VertexAttribI2uivEXT, "glVertexAttribI2uivEXT")
fn_mod!(VertexAttribI3i, "glVertexAttribI3i")
fn_mod!(VertexAttribI3iEXT, "glVertexAttribI3iEXT")
fn_mod!(VertexAttribI3iv, "glVertexAttribI3iv")
fn_mod!(VertexAttribI3ivEXT, "glVertexAttribI3ivEXT")
fn_mod!(VertexAttribI3ui, "glVertexAttribI3ui")
fn_mod!(VertexAttribI3uiEXT, "glVertexAttribI3uiEXT")
fn_mod!(VertexAttribI3uiv, "glVertexAttribI3uiv")
fn_mod!(VertexAttribI3uivEXT, "glVertexAttribI3uivEXT")
fn_mod!(VertexAttribI4bv, "glVertexAttribI4bv")
fn_mod!(VertexAttribI4bvEXT, "glVertexAttribI4bvEXT")
fn_mod!(VertexAttribI4i, "glVertexAttribI4i")
fn_mod!(VertexAttribI4iEXT, "glVertexAttribI4iEXT")
fn_mod!(VertexAttribI4iv, "glVertexAttribI4iv")
fn_mod!(VertexAttribI4ivEXT, "glVertexAttribI4ivEXT")
fn_mod!(VertexAttribI4sv, "glVertexAttribI4sv")
fn_mod!(VertexAttribI4svEXT, "glVertexAttribI4svEXT")
fn_mod!(VertexAttribI4ubv, "glVertexAttribI4ubv")
fn_mod!(VertexAttribI4ubvEXT, "glVertexAttribI4ubvEXT")
fn_mod!(VertexAttribI4ui, "glVertexAttribI4ui")
fn_mod!(VertexAttribI4uiEXT, "glVertexAttribI4uiEXT")
fn_mod!(VertexAttribI4uiv, "glVertexAttribI4uiv")
fn_mod!(VertexAttribI4uivEXT, "glVertexAttribI4uivEXT")
fn_mod!(VertexAttribI4usv, "glVertexAttribI4usv")
fn_mod!(VertexAttribI4usvEXT, "glVertexAttribI4usvEXT")
fn_mod!(VertexAttribIFormat, "glVertexAttribIFormat")
fn_mod!(VertexAttribIFormatNV, "glVertexAttribIFormatNV")
fn_mod!(VertexAttribIPointer, "glVertexAttribIPointer")
fn_mod!(VertexAttribIPointerEXT, "glVertexAttribIPointerEXT")
fn_mod!(VertexAttribL1d, "glVertexAttribL1d")
fn_mod!(VertexAttribL1dEXT, "glVertexAttribL1dEXT")
fn_mod!(VertexAttribL1dv, "glVertexAttribL1dv")
fn_mod!(VertexAttribL1dvEXT, "glVertexAttribL1dvEXT")
fn_mod!(VertexAttribL1i64NV, "glVertexAttribL1i64NV")
fn_mod!(VertexAttribL1i64vNV, "glVertexAttribL1i64vNV")
fn_mod!(VertexAttribL1ui64ARB, "glVertexAttribL1ui64ARB")
fn_mod!(VertexAttribL1ui64NV, "glVertexAttribL1ui64NV")
fn_mod!(VertexAttribL1ui64vARB, "glVertexAttribL1ui64vARB")
fn_mod!(VertexAttribL1ui64vNV, "glVertexAttribL1ui64vNV")
fn_mod!(VertexAttribL2d, "glVertexAttribL2d")
fn_mod!(VertexAttribL2dEXT, "glVertexAttribL2dEXT")
fn_mod!(VertexAttribL2dv, "glVertexAttribL2dv")
fn_mod!(VertexAttribL2dvEXT, "glVertexAttribL2dvEXT")
fn_mod!(VertexAttribL2i64NV, "glVertexAttribL2i64NV")
fn_mod!(VertexAttribL2i64vNV, "glVertexAttribL2i64vNV")
fn_mod!(VertexAttribL2ui64NV, "glVertexAttribL2ui64NV")
fn_mod!(VertexAttribL2ui64vNV, "glVertexAttribL2ui64vNV")
fn_mod!(VertexAttribL3d, "glVertexAttribL3d")
fn_mod!(VertexAttribL3dEXT, "glVertexAttribL3dEXT")
fn_mod!(VertexAttribL3dv, "glVertexAttribL3dv")
fn_mod!(VertexAttribL3dvEXT, "glVertexAttribL3dvEXT")
fn_mod!(VertexAttribL3i64NV, "glVertexAttribL3i64NV")
fn_mod!(VertexAttribL3i64vNV, "glVertexAttribL3i64vNV")
fn_mod!(VertexAttribL3ui64NV, "glVertexAttribL3ui64NV")
fn_mod!(VertexAttribL3ui64vNV, "glVertexAttribL3ui64vNV")
fn_mod!(VertexAttribL4d, "glVertexAttribL4d")
fn_mod!(VertexAttribL4dEXT, "glVertexAttribL4dEXT")
fn_mod!(VertexAttribL4dv, "glVertexAttribL4dv")
fn_mod!(VertexAttribL4dvEXT, "glVertexAttribL4dvEXT")
fn_mod!(VertexAttribL4i64NV, "glVertexAttribL4i64NV")
fn_mod!(VertexAttribL4i64vNV, "glVertexAttribL4i64vNV")
fn_mod!(VertexAttribL4ui64NV, "glVertexAttribL4ui64NV")
fn_mod!(VertexAttribL4ui64vNV, "glVertexAttribL4ui64vNV")
fn_mod!(VertexAttribLFormat, "glVertexAttribLFormat")
fn_mod!(VertexAttribLFormatNV, "glVertexAttribLFormatNV")
fn_mod!(VertexAttribLPointer, "glVertexAttribLPointer")
fn_mod!(VertexAttribLPointerEXT, "glVertexAttribLPointerEXT")
fn_mod!(VertexAttribP1ui, "glVertexAttribP1ui")
fn_mod!(VertexAttribP1uiv, "glVertexAttribP1uiv")
fn_mod!(VertexAttribP2ui, "glVertexAttribP2ui")
fn_mod!(VertexAttribP2uiv, "glVertexAttribP2uiv")
fn_mod!(VertexAttribP3ui, "glVertexAttribP3ui")
fn_mod!(VertexAttribP3uiv, "glVertexAttribP3uiv")
fn_mod!(VertexAttribP4ui, "glVertexAttribP4ui")
fn_mod!(VertexAttribP4uiv, "glVertexAttribP4uiv")
fn_mod!(VertexAttribParameteriAMD, "glVertexAttribParameteriAMD")
fn_mod!(VertexAttribPointer, "glVertexAttribPointer")
fn_mod!(VertexAttribPointerARB, "glVertexAttribPointerARB")
fn_mod!(VertexAttribPointerNV, "glVertexAttribPointerNV")
fn_mod!(VertexAttribs1dvNV, "glVertexAttribs1dvNV")
fn_mod!(VertexAttribs1fvNV, "glVertexAttribs1fvNV")
fn_mod!(VertexAttribs1hvNV, "glVertexAttribs1hvNV")
fn_mod!(VertexAttribs1svNV, "glVertexAttribs1svNV")
fn_mod!(VertexAttribs2dvNV, "glVertexAttribs2dvNV")
fn_mod!(VertexAttribs2fvNV, "glVertexAttribs2fvNV")
fn_mod!(VertexAttribs2hvNV, "glVertexAttribs2hvNV")
fn_mod!(VertexAttribs2svNV, "glVertexAttribs2svNV")
fn_mod!(VertexAttribs3dvNV, "glVertexAttribs3dvNV")
fn_mod!(VertexAttribs3fvNV, "glVertexAttribs3fvNV")
fn_mod!(VertexAttribs3hvNV, "glVertexAttribs3hvNV")
fn_mod!(VertexAttribs3svNV, "glVertexAttribs3svNV")
fn_mod!(VertexAttribs4dvNV, "glVertexAttribs4dvNV")
fn_mod!(VertexAttribs4fvNV, "glVertexAttribs4fvNV")
fn_mod!(VertexAttribs4hvNV, "glVertexAttribs4hvNV")
fn_mod!(VertexAttribs4svNV, "glVertexAttribs4svNV")
fn_mod!(VertexAttribs4ubvNV, "glVertexAttribs4ubvNV")
fn_mod!(VertexBindingDivisor, "glVertexBindingDivisor")
fn_mod!(VertexBlendARB, "glVertexBlendARB")
fn_mod!(VertexBlendEnvfATI, "glVertexBlendEnvfATI")
fn_mod!(VertexBlendEnviATI, "glVertexBlendEnviATI")
fn_mod!(VertexFormatNV, "glVertexFormatNV")
fn_mod!(VertexP2ui, "glVertexP2ui")
fn_mod!(VertexP2uiv, "glVertexP2uiv")
fn_mod!(VertexP3ui, "glVertexP3ui")
fn_mod!(VertexP3uiv, "glVertexP3uiv")
fn_mod!(VertexP4ui, "glVertexP4ui")
fn_mod!(VertexP4uiv, "glVertexP4uiv")
fn_mod!(VertexPointer, "glVertexPointer")
fn_mod!(VertexPointerEXT, "glVertexPointerEXT")
fn_mod!(VertexPointerListIBM, "glVertexPointerListIBM")
fn_mod!(VertexPointervINTEL, "glVertexPointervINTEL")
fn_mod!(VertexStream1dATI, "glVertexStream1dATI")
fn_mod!(VertexStream1dvATI, "glVertexStream1dvATI")
fn_mod!(VertexStream1fATI, "glVertexStream1fATI")
fn_mod!(VertexStream1fvATI, "glVertexStream1fvATI")
fn_mod!(VertexStream1iATI, "glVertexStream1iATI")
fn_mod!(VertexStream1ivATI, "glVertexStream1ivATI")
fn_mod!(VertexStream1sATI, "glVertexStream1sATI")
fn_mod!(VertexStream1svATI, "glVertexStream1svATI")
fn_mod!(VertexStream2dATI, "glVertexStream2dATI")
fn_mod!(VertexStream2dvATI, "glVertexStream2dvATI")
fn_mod!(VertexStream2fATI, "glVertexStream2fATI")
fn_mod!(VertexStream2fvATI, "glVertexStream2fvATI")
fn_mod!(VertexStream2iATI, "glVertexStream2iATI")
fn_mod!(VertexStream2ivATI, "glVertexStream2ivATI")
fn_mod!(VertexStream2sATI, "glVertexStream2sATI")
fn_mod!(VertexStream2svATI, "glVertexStream2svATI")
fn_mod!(VertexStream3dATI, "glVertexStream3dATI")
fn_mod!(VertexStream3dvATI, "glVertexStream3dvATI")
fn_mod!(VertexStream3fATI, "glVertexStream3fATI")
fn_mod!(VertexStream3fvATI, "glVertexStream3fvATI")
fn_mod!(VertexStream3iATI, "glVertexStream3iATI")
fn_mod!(VertexStream3ivATI, "glVertexStream3ivATI")
fn_mod!(VertexStream3sATI, "glVertexStream3sATI")
fn_mod!(VertexStream3svATI, "glVertexStream3svATI")
fn_mod!(VertexStream4dATI, "glVertexStream4dATI")
fn_mod!(VertexStream4dvATI, "glVertexStream4dvATI")
fn_mod!(VertexStream4fATI, "glVertexStream4fATI")
fn_mod!(VertexStream4fvATI, "glVertexStream4fvATI")
fn_mod!(VertexStream4iATI, "glVertexStream4iATI")
fn_mod!(VertexStream4ivATI, "glVertexStream4ivATI")
fn_mod!(VertexStream4sATI, "glVertexStream4sATI")
fn_mod!(VertexStream4svATI, "glVertexStream4svATI")
fn_mod!(VertexWeightPointerEXT, "glVertexWeightPointerEXT")
fn_mod!(VertexWeightfEXT, "glVertexWeightfEXT")
fn_mod!(VertexWeightfvEXT, "glVertexWeightfvEXT")
fn_mod!(VertexWeighthNV, "glVertexWeighthNV")
fn_mod!(VertexWeighthvNV, "glVertexWeighthvNV")
fn_mod!(VideoCaptureNV, "glVideoCaptureNV")
fn_mod!(VideoCaptureStreamParameterdvNV, "glVideoCaptureStreamParameterdvNV")
fn_mod!(VideoCaptureStreamParameterfvNV, "glVideoCaptureStreamParameterfvNV")
fn_mod!(VideoCaptureStreamParameterivNV, "glVideoCaptureStreamParameterivNV")
fn_mod!(Viewport, "glViewport")
fn_mod!(ViewportArrayv, "glViewportArrayv")
fn_mod!(ViewportIndexedf, "glViewportIndexedf")
fn_mod!(ViewportIndexedfv, "glViewportIndexedfv")
fn_mod!(WaitSync, "glWaitSync")
fn_mod!(WaitSyncAPPLE, "glWaitSyncAPPLE")
fn_mod!(WeightPathsNV, "glWeightPathsNV")
fn_mod!(WeightPointerARB, "glWeightPointerARB")
fn_mod!(WeightPointerOES, "glWeightPointerOES")
fn_mod!(WeightbvARB, "glWeightbvARB")
fn_mod!(WeightdvARB, "glWeightdvARB")
fn_mod!(WeightfvARB, "glWeightfvARB")
fn_mod!(WeightivARB, "glWeightivARB")
fn_mod!(WeightsvARB, "glWeightsvARB")
fn_mod!(WeightubvARB, "glWeightubvARB")
fn_mod!(WeightuivARB, "glWeightuivARB")
fn_mod!(WeightusvARB, "glWeightusvARB")
fn_mod!(WindowPos2d, "glWindowPos2d")
fn_mod!(WindowPos2dARB, "glWindowPos2dARB")
fn_mod!(WindowPos2dMESA, "glWindowPos2dMESA")
fn_mod!(WindowPos2dv, "glWindowPos2dv")
fn_mod!(WindowPos2dvARB, "glWindowPos2dvARB")
fn_mod!(WindowPos2dvMESA, "glWindowPos2dvMESA")
fn_mod!(WindowPos2f, "glWindowPos2f")
fn_mod!(WindowPos2fARB, "glWindowPos2fARB")
fn_mod!(WindowPos2fMESA, "glWindowPos2fMESA")
fn_mod!(WindowPos2fv, "glWindowPos2fv")
fn_mod!(WindowPos2fvARB, "glWindowPos2fvARB")
fn_mod!(WindowPos2fvMESA, "glWindowPos2fvMESA")
fn_mod!(WindowPos2i, "glWindowPos2i")
fn_mod!(WindowPos2iARB, "glWindowPos2iARB")
fn_mod!(WindowPos2iMESA, "glWindowPos2iMESA")
fn_mod!(WindowPos2iv, "glWindowPos2iv")
fn_mod!(WindowPos2ivARB, "glWindowPos2ivARB")
fn_mod!(WindowPos2ivMESA, "glWindowPos2ivMESA")
fn_mod!(WindowPos2s, "glWindowPos2s")
fn_mod!(WindowPos2sARB, "glWindowPos2sARB")
fn_mod!(WindowPos2sMESA, "glWindowPos2sMESA")
fn_mod!(WindowPos2sv, "glWindowPos2sv")
fn_mod!(WindowPos2svARB, "glWindowPos2svARB")
fn_mod!(WindowPos2svMESA, "glWindowPos2svMESA")
fn_mod!(WindowPos3d, "glWindowPos3d")
fn_mod!(WindowPos3dARB, "glWindowPos3dARB")
fn_mod!(WindowPos3dMESA, "glWindowPos3dMESA")
fn_mod!(WindowPos3dv, "glWindowPos3dv")
fn_mod!(WindowPos3dvARB, "glWindowPos3dvARB")
fn_mod!(WindowPos3dvMESA, "glWindowPos3dvMESA")
fn_mod!(WindowPos3f, "glWindowPos3f")
fn_mod!(WindowPos3fARB, "glWindowPos3fARB")
fn_mod!(WindowPos3fMESA, "glWindowPos3fMESA")
fn_mod!(WindowPos3fv, "glWindowPos3fv")
fn_mod!(WindowPos3fvARB, "glWindowPos3fvARB")
fn_mod!(WindowPos3fvMESA, "glWindowPos3fvMESA")
fn_mod!(WindowPos3i, "glWindowPos3i")
fn_mod!(WindowPos3iARB, "glWindowPos3iARB")
fn_mod!(WindowPos3iMESA, "glWindowPos3iMESA")
fn_mod!(WindowPos3iv, "glWindowPos3iv")
fn_mod!(WindowPos3ivARB, "glWindowPos3ivARB")
fn_mod!(WindowPos3ivMESA, "glWindowPos3ivMESA")
fn_mod!(WindowPos3s, "glWindowPos3s")
fn_mod!(WindowPos3sARB, "glWindowPos3sARB")
fn_mod!(WindowPos3sMESA, "glWindowPos3sMESA")
fn_mod!(WindowPos3sv, "glWindowPos3sv")
fn_mod!(WindowPos3svARB, "glWindowPos3svARB")
fn_mod!(WindowPos3svMESA, "glWindowPos3svMESA")
fn_mod!(WindowPos4dMESA, "glWindowPos4dMESA")
fn_mod!(WindowPos4dvMESA, "glWindowPos4dvMESA")
fn_mod!(WindowPos4fMESA, "glWindowPos4fMESA")
fn_mod!(WindowPos4fvMESA, "glWindowPos4fvMESA")
fn_mod!(WindowPos4iMESA, "glWindowPos4iMESA")
fn_mod!(WindowPos4ivMESA, "glWindowPos4ivMESA")
fn_mod!(WindowPos4sMESA, "glWindowPos4sMESA")
fn_mod!(WindowPos4svMESA, "glWindowPos4svMESA")
fn_mod!(WriteMaskEXT, "glWriteMaskEXT")

mod failing {
    use std::libc::*;
    use super::types::*;
    
    macro_rules! failing(
        (fn $name:ident()) => (pub extern "C" fn $name() { fail!(stringify!($name was not loaded)) });
        (fn $name:ident() -> $ret_ty:ty) => (pub extern "C" fn $name() -> $ret_ty { fail!(stringify!($name was not loaded)) });
        (fn $name:ident($($arg_ty:ty),*)) => (pub extern "C" fn $name($(_: $arg_ty),*) { fail!(stringify!($name was not loaded)) });
        (fn $name:ident($($arg_ty:ty),*) -> $ret_ty:ty) => (pub extern "C" fn $name($(_: $arg_ty),*) -> $ret_ty { fail!(stringify!($name was not loaded)) });
    )
    
    failing!(fn Accum(GLenum, GLfloat) -> c_void)
    failing!(fn AccumxOES(GLenum, GLfixed) -> c_void)
    failing!(fn ActiveProgramEXT(GLuint) -> c_void)
    failing!(fn ActiveShaderProgram(GLuint, GLuint) -> c_void)
    failing!(fn ActiveShaderProgramEXT(GLuint, GLuint) -> c_void)
    failing!(fn ActiveStencilFaceEXT(GLenum) -> c_void)
    failing!(fn ActiveTexture(GLenum) -> c_void)
    failing!(fn ActiveTextureARB(GLenum) -> c_void)
    failing!(fn ActiveVaryingNV(GLuint, *GLchar) -> c_void)
    failing!(fn AlphaFragmentOp1ATI(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn AlphaFragmentOp2ATI(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn AlphaFragmentOp3ATI(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn AlphaFunc(GLenum, GLfloat) -> c_void)
    failing!(fn AlphaFuncQCOM(GLenum, GLclampf) -> c_void)
    failing!(fn AlphaFuncx(GLenum, GLfixed) -> c_void)
    failing!(fn AlphaFuncxOES(GLenum, GLfixed) -> c_void)
    failing!(fn ApplyTextureEXT(GLenum) -> c_void)
    failing!(fn AreProgramsResidentNV(GLsizei, *GLuint, *GLboolean) -> GLboolean)
    failing!(fn AreTexturesResident(GLsizei, *GLuint, *GLboolean) -> GLboolean)
    failing!(fn AreTexturesResidentEXT(GLsizei, *GLuint, *GLboolean) -> GLboolean)
    failing!(fn ArrayElement(GLint) -> c_void)
    failing!(fn ArrayElementEXT(GLint) -> c_void)
    failing!(fn ArrayObjectATI(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) -> c_void)
    failing!(fn AsyncMarkerSGIX(GLuint) -> c_void)
    failing!(fn AttachObjectARB(GLhandleARB, GLhandleARB) -> c_void)
    failing!(fn AttachShader(GLuint, GLuint) -> c_void)
    failing!(fn Begin(GLenum) -> c_void)
    failing!(fn BeginConditionalRender(GLuint, GLenum) -> c_void)
    failing!(fn BeginConditionalRenderNV(GLuint, GLenum) -> c_void)
    failing!(fn BeginConditionalRenderNVX(GLuint) -> c_void)
    failing!(fn BeginFragmentShaderATI() -> c_void)
    failing!(fn BeginOcclusionQueryNV(GLuint) -> c_void)
    failing!(fn BeginPerfMonitorAMD(GLuint) -> c_void)
    failing!(fn BeginQuery(GLenum, GLuint) -> c_void)
    failing!(fn BeginQueryARB(GLenum, GLuint) -> c_void)
    failing!(fn BeginQueryEXT(GLenum, GLuint) -> c_void)
    failing!(fn BeginQueryIndexed(GLenum, GLuint, GLuint) -> c_void)
    failing!(fn BeginTransformFeedback(GLenum) -> c_void)
    failing!(fn BeginTransformFeedbackEXT(GLenum) -> c_void)
    failing!(fn BeginTransformFeedbackNV(GLenum) -> c_void)
    failing!(fn BeginVertexShaderEXT() -> c_void)
    failing!(fn BeginVideoCaptureNV(GLuint) -> c_void)
    failing!(fn BindAttribLocation(GLuint, GLuint, *GLchar) -> c_void)
    failing!(fn BindAttribLocationARB(GLhandleARB, GLuint, *GLcharARB) -> c_void)
    failing!(fn BindBuffer(GLenum, GLuint) -> c_void)
    failing!(fn BindBufferARB(GLenum, GLuint) -> c_void)
    failing!(fn BindBufferBase(GLenum, GLuint, GLuint) -> c_void)
    failing!(fn BindBufferBaseEXT(GLenum, GLuint, GLuint) -> c_void)
    failing!(fn BindBufferBaseNV(GLenum, GLuint, GLuint) -> c_void)
    failing!(fn BindBufferOffsetEXT(GLenum, GLuint, GLuint, GLintptr) -> c_void)
    failing!(fn BindBufferOffsetNV(GLenum, GLuint, GLuint, GLintptr) -> c_void)
    failing!(fn BindBufferRange(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn BindBufferRangeEXT(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn BindBufferRangeNV(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn BindBuffersBase(GLenum, GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn BindBuffersRange(GLenum, GLuint, GLsizei, *GLuint, *GLintptr, *GLsizeiptr) -> c_void)
    failing!(fn BindFragDataLocation(GLuint, GLuint, *GLchar) -> c_void)
    failing!(fn BindFragDataLocationEXT(GLuint, GLuint, *GLchar) -> c_void)
    failing!(fn BindFragDataLocationIndexed(GLuint, GLuint, GLuint, *GLchar) -> c_void)
    failing!(fn BindFragmentShaderATI(GLuint) -> c_void)
    failing!(fn BindFramebuffer(GLenum, GLuint) -> c_void)
    failing!(fn BindFramebufferEXT(GLenum, GLuint) -> c_void)
    failing!(fn BindFramebufferOES(GLenum, GLuint) -> c_void)
    failing!(fn BindImageTexture(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum) -> c_void)
    failing!(fn BindImageTextureEXT(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint) -> c_void)
    failing!(fn BindImageTextures(GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn BindLightParameterEXT(GLenum, GLenum) -> GLuint)
    failing!(fn BindMaterialParameterEXT(GLenum, GLenum) -> GLuint)
    failing!(fn BindMultiTextureEXT(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn BindParameterEXT(GLenum) -> GLuint)
    failing!(fn BindProgramARB(GLenum, GLuint) -> c_void)
    failing!(fn BindProgramNV(GLenum, GLuint) -> c_void)
    failing!(fn BindProgramPipeline(GLuint) -> c_void)
    failing!(fn BindProgramPipelineEXT(GLuint) -> c_void)
    failing!(fn BindRenderbuffer(GLenum, GLuint) -> c_void)
    failing!(fn BindRenderbufferEXT(GLenum, GLuint) -> c_void)
    failing!(fn BindRenderbufferOES(GLenum, GLuint) -> c_void)
    failing!(fn BindSampler(GLuint, GLuint) -> c_void)
    failing!(fn BindSamplers(GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn BindTexGenParameterEXT(GLenum, GLenum, GLenum) -> GLuint)
    failing!(fn BindTexture(GLenum, GLuint) -> c_void)
    failing!(fn BindTextureEXT(GLenum, GLuint) -> c_void)
    failing!(fn BindTextureUnitParameterEXT(GLenum, GLenum) -> GLuint)
    failing!(fn BindTextures(GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn BindTransformFeedback(GLenum, GLuint) -> c_void)
    failing!(fn BindTransformFeedbackNV(GLenum, GLuint) -> c_void)
    failing!(fn BindVertexArray(GLuint) -> c_void)
    failing!(fn BindVertexArrayAPPLE(GLuint) -> c_void)
    failing!(fn BindVertexArrayOES(GLuint) -> c_void)
    failing!(fn BindVertexBuffer(GLuint, GLuint, GLintptr, GLsizei) -> c_void)
    failing!(fn BindVertexBuffers(GLuint, GLsizei, *GLuint, *GLintptr, *GLsizei) -> c_void)
    failing!(fn BindVertexShaderEXT(GLuint) -> c_void)
    failing!(fn BindVideoCaptureStreamBufferNV(GLuint, GLuint, GLenum, GLintptrARB) -> c_void)
    failing!(fn BindVideoCaptureStreamTextureNV(GLuint, GLuint, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn Binormal3bEXT(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn Binormal3bvEXT(*GLbyte) -> c_void)
    failing!(fn Binormal3dEXT(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Binormal3dvEXT(*GLdouble) -> c_void)
    failing!(fn Binormal3fEXT(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Binormal3fvEXT(*GLfloat) -> c_void)
    failing!(fn Binormal3iEXT(GLint, GLint, GLint) -> c_void)
    failing!(fn Binormal3ivEXT(*GLint) -> c_void)
    failing!(fn Binormal3sEXT(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Binormal3svEXT(*GLshort) -> c_void)
    failing!(fn BinormalPointerEXT(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn Bitmap(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, *GLubyte) -> c_void)
    failing!(fn BitmapxOES(GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, *GLubyte) -> c_void)
    failing!(fn BlendColor(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn BlendColorEXT(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn BlendColorxOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn BlendEquation(GLenum) -> c_void)
    failing!(fn BlendEquationEXT(GLenum) -> c_void)
    failing!(fn BlendEquationIndexedAMD(GLuint, GLenum) -> c_void)
    failing!(fn BlendEquationOES(GLenum) -> c_void)
    failing!(fn BlendEquationSeparate(GLenum, GLenum) -> c_void)
    failing!(fn BlendEquationSeparateEXT(GLenum, GLenum) -> c_void)
    failing!(fn BlendEquationSeparateIndexedAMD(GLuint, GLenum, GLenum) -> c_void)
    failing!(fn BlendEquationSeparateOES(GLenum, GLenum) -> c_void)
    failing!(fn BlendEquationSeparatei(GLuint, GLenum, GLenum) -> c_void)
    failing!(fn BlendEquationSeparateiARB(GLuint, GLenum, GLenum) -> c_void)
    failing!(fn BlendEquationi(GLuint, GLenum) -> c_void)
    failing!(fn BlendEquationiARB(GLuint, GLenum) -> c_void)
    failing!(fn BlendFunc(GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncIndexedAMD(GLuint, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparate(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparateEXT(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparateINGR(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparateIndexedAMD(GLuint, GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparateOES(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparatei(GLuint, GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFuncSeparateiARB(GLuint, GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn BlendFunci(GLuint, GLenum, GLenum) -> c_void)
    failing!(fn BlendFunciARB(GLuint, GLenum, GLenum) -> c_void)
    failing!(fn BlendParameteriNV(GLenum, GLint) -> c_void)
    failing!(fn BlendBarrierNV() -> c_void)
    failing!(fn BlitFramebuffer(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> c_void)
    failing!(fn BlitFramebufferANGLE(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> c_void)
    failing!(fn BlitFramebufferEXT(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> c_void)
    failing!(fn BlitFramebufferNV(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) -> c_void)
    failing!(fn BufferAddressRangeNV(GLenum, GLuint, GLuint64EXT, GLsizeiptr) -> c_void)
    failing!(fn BufferData(GLenum, GLsizeiptr, *GLvoid, GLenum) -> c_void)
    failing!(fn BufferDataARB(GLenum, GLsizeiptrARB, *GLvoid, GLenum) -> c_void)
    failing!(fn BufferParameteriAPPLE(GLenum, GLenum, GLint) -> c_void)
    failing!(fn BufferStorage(GLenum, GLsizeiptr, *c_void, GLbitfield) -> c_void)
    failing!(fn BufferSubData(GLenum, GLintptr, GLsizeiptr, *GLvoid) -> c_void)
    failing!(fn BufferSubDataARB(GLenum, GLintptrARB, GLsizeiptrARB, *GLvoid) -> c_void)
    failing!(fn CallList(GLuint) -> c_void)
    failing!(fn CallLists(GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn CheckFramebufferStatus(GLenum) -> GLenum)
    failing!(fn CheckFramebufferStatusEXT(GLenum) -> GLenum)
    failing!(fn CheckFramebufferStatusOES(GLenum) -> GLenum)
    failing!(fn CheckNamedFramebufferStatusEXT(GLuint, GLenum) -> GLenum)
    failing!(fn ClampColor(GLenum, GLenum) -> c_void)
    failing!(fn ClampColorARB(GLenum, GLenum) -> c_void)
    failing!(fn Clear(GLbitfield) -> c_void)
    failing!(fn ClearAccum(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ClearAccumxOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn ClearBufferData(GLenum, GLenum, GLenum, GLenum, *c_void) -> c_void)
    failing!(fn ClearBufferSubData(GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, *c_void) -> c_void)
    failing!(fn ClearBufferfi(GLenum, GLint, GLfloat, GLint) -> c_void)
    failing!(fn ClearBufferfv(GLenum, GLint, *GLfloat) -> c_void)
    failing!(fn ClearBufferiv(GLenum, GLint, *GLint) -> c_void)
    failing!(fn ClearBufferuiv(GLenum, GLint, *GLuint) -> c_void)
    failing!(fn ClearColor(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ClearColorIiEXT(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ClearColorIuiEXT(GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ClearColorx(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn ClearColorxOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn ClearDepth(GLdouble) -> c_void)
    failing!(fn ClearDepthdNV(GLdouble) -> c_void)
    failing!(fn ClearDepthf(GLfloat) -> c_void)
    failing!(fn ClearDepthfOES(GLclampf) -> c_void)
    failing!(fn ClearDepthx(GLfixed) -> c_void)
    failing!(fn ClearDepthxOES(GLfixed) -> c_void)
    failing!(fn ClearIndex(GLfloat) -> c_void)
    failing!(fn ClearNamedBufferDataEXT(GLuint, GLenum, GLenum, GLenum, *c_void) -> c_void)
    failing!(fn ClearNamedBufferSubDataEXT(GLuint, GLenum, GLenum, GLenum, GLsizeiptr, GLsizeiptr, *c_void) -> c_void)
    failing!(fn ClearStencil(GLint) -> c_void)
    failing!(fn ClearTexImage(GLuint, GLint, GLenum, GLenum, *c_void) -> c_void)
    failing!(fn ClearTexSubImage(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *c_void) -> c_void)
    failing!(fn ClientActiveTexture(GLenum) -> c_void)
    failing!(fn ClientActiveTextureARB(GLenum) -> c_void)
    failing!(fn ClientActiveVertexStreamATI(GLenum) -> c_void)
    failing!(fn ClientAttribDefaultEXT(GLbitfield) -> c_void)
    failing!(fn ClientWaitSync(GLsync, GLbitfield, GLuint64) -> GLenum)
    failing!(fn ClientWaitSyncAPPLE(GLsync, GLbitfield, GLuint64) -> GLenum)
    failing!(fn ClipControlARB(GLenum, GLenum) -> c_void)
    failing!(fn ClipPlane(GLenum, *GLdouble) -> c_void)
    failing!(fn ClipPlanef(GLenum, *GLfloat) -> c_void)
    failing!(fn ClipPlanefIMG(GLenum, *GLfloat) -> c_void)
    failing!(fn ClipPlanefOES(GLenum, *GLfloat) -> c_void)
    failing!(fn ClipPlanex(GLenum, *GLfixed) -> c_void)
    failing!(fn ClipPlanexIMG(GLenum, *GLfixed) -> c_void)
    failing!(fn ClipPlanexOES(GLenum, *GLfixed) -> c_void)
    failing!(fn Color3b(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn Color3bv(*GLbyte) -> c_void)
    failing!(fn Color3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Color3dv(*GLdouble) -> c_void)
    failing!(fn Color3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Color3fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Color3fVertex3fvSUN(*GLfloat, *GLfloat) -> c_void)
    failing!(fn Color3fv(*GLfloat) -> c_void)
    failing!(fn Color3hNV(GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn Color3hvNV(*GLhalfNV) -> c_void)
    failing!(fn Color3i(GLint, GLint, GLint) -> c_void)
    failing!(fn Color3iv(*GLint) -> c_void)
    failing!(fn Color3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Color3sv(*GLshort) -> c_void)
    failing!(fn Color3ub(GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn Color3ubv(*GLubyte) -> c_void)
    failing!(fn Color3ui(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn Color3uiv(*GLuint) -> c_void)
    failing!(fn Color3us(GLushort, GLushort, GLushort) -> c_void)
    failing!(fn Color3usv(*GLushort) -> c_void)
    failing!(fn Color3xOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Color3xvOES(*GLfixed) -> c_void)
    failing!(fn Color4b(GLbyte, GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn Color4bv(*GLbyte) -> c_void)
    failing!(fn Color4d(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Color4dv(*GLdouble) -> c_void)
    failing!(fn Color4f(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Color4fNormal3fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Color4fNormal3fVertex3fvSUN(*GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn Color4fv(*GLfloat) -> c_void)
    failing!(fn Color4hNV(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn Color4hvNV(*GLhalfNV) -> c_void)
    failing!(fn Color4i(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Color4iv(*GLint) -> c_void)
    failing!(fn Color4s(GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Color4sv(*GLshort) -> c_void)
    failing!(fn Color4ub(GLubyte, GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn Color4ubVertex2fSUN(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat) -> c_void)
    failing!(fn Color4ubVertex2fvSUN(*GLubyte, *GLfloat) -> c_void)
    failing!(fn Color4ubVertex3fSUN(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Color4ubVertex3fvSUN(*GLubyte, *GLfloat) -> c_void)
    failing!(fn Color4ubv(*GLubyte) -> c_void)
    failing!(fn Color4ui(GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn Color4uiv(*GLuint) -> c_void)
    failing!(fn Color4us(GLushort, GLushort, GLushort, GLushort) -> c_void)
    failing!(fn Color4usv(*GLushort) -> c_void)
    failing!(fn Color4x(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Color4xOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Color4xvOES(*GLfixed) -> c_void)
    failing!(fn ColorFormatNV(GLint, GLenum, GLsizei) -> c_void)
    failing!(fn ColorFragmentOp1ATI(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ColorFragmentOp2ATI(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ColorFragmentOp3ATI(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ColorMask(GLboolean, GLboolean, GLboolean, GLboolean) -> c_void)
    failing!(fn ColorMaskIndexedEXT(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) -> c_void)
    failing!(fn ColorMaski(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) -> c_void)
    failing!(fn ColorMaterial(GLenum, GLenum) -> c_void)
    failing!(fn ColorP3ui(GLenum, GLuint) -> c_void)
    failing!(fn ColorP3uiv(GLenum, *GLuint) -> c_void)
    failing!(fn ColorP4ui(GLenum, GLuint) -> c_void)
    failing!(fn ColorP4uiv(GLenum, *GLuint) -> c_void)
    failing!(fn ColorPointer(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn ColorPointerEXT(GLint, GLenum, GLsizei, GLsizei, *GLvoid) -> c_void)
    failing!(fn ColorPointerListIBM(GLint, GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn ColorPointervINTEL(GLint, GLenum, **GLvoid) -> c_void)
    failing!(fn ColorSubTable(GLenum, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ColorSubTableEXT(GLenum, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ColorTable(GLenum, GLenum, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ColorTableEXT(GLenum, GLenum, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ColorTableParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn ColorTableParameterfvSGI(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn ColorTableParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn ColorTableParameterivSGI(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn ColorTableSGI(GLenum, GLenum, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn CombinerInputNV(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn CombinerOutputNV(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) -> c_void)
    failing!(fn CombinerParameterfNV(GLenum, GLfloat) -> c_void)
    failing!(fn CombinerParameterfvNV(GLenum, *GLfloat) -> c_void)
    failing!(fn CombinerParameteriNV(GLenum, GLint) -> c_void)
    failing!(fn CombinerParameterivNV(GLenum, *GLint) -> c_void)
    failing!(fn CombinerStageParameterfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn CompileShader(GLuint) -> c_void)
    failing!(fn CompileShaderARB(GLhandleARB) -> c_void)
    failing!(fn CompileShaderIncludeARB(GLuint, GLsizei, **GLchar, *GLint) -> c_void)
    failing!(fn CompressedMultiTexImage1DEXT(GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedMultiTexImage2DEXT(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedMultiTexImage3DEXT(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedMultiTexSubImage1DEXT(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedMultiTexSubImage2DEXT(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedMultiTexSubImage3DEXT(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage1D(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage1DARB(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage2D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage2DARB(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage3D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage3DARB(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexImage3DOES(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage1DARB(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage2DARB(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage3DARB(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTexSubImage3DOES(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTextureImage1DEXT(GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTextureImage2DEXT(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTextureImage3DEXT(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTextureSubImage1DEXT(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTextureSubImage2DEXT(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn CompressedTextureSubImage3DEXT(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn ConvolutionFilter1D(GLenum, GLenum, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ConvolutionFilter1DEXT(GLenum, GLenum, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ConvolutionFilter2D(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ConvolutionFilter2DEXT(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ConvolutionParameterf(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn ConvolutionParameterfEXT(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn ConvolutionParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn ConvolutionParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn ConvolutionParameteri(GLenum, GLenum, GLint) -> c_void)
    failing!(fn ConvolutionParameteriEXT(GLenum, GLenum, GLint) -> c_void)
    failing!(fn ConvolutionParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn ConvolutionParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn ConvolutionParameterxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn ConvolutionParameterxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn CopyBufferSubData(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn CopyColorSubTable(GLenum, GLsizei, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyColorSubTableEXT(GLenum, GLsizei, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyColorTable(GLenum, GLenum, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyColorTableSGI(GLenum, GLenum, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyConvolutionFilter1D(GLenum, GLenum, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyConvolutionFilter1DEXT(GLenum, GLenum, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyConvolutionFilter2D(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyConvolutionFilter2DEXT(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyImageSubData(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyImageSubDataNV(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyMultiTexImage1DEXT(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> c_void)
    failing!(fn CopyMultiTexImage2DEXT(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn CopyMultiTexSubImage1DEXT(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyMultiTexSubImage2DEXT(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyMultiTexSubImage3DEXT(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyPathNV(GLuint, GLuint) -> c_void)
    failing!(fn CopyPixels(GLint, GLint, GLsizei, GLsizei, GLenum) -> c_void)
    failing!(fn CopyTexImage1D(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> c_void)
    failing!(fn CopyTexImage1DEXT(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> c_void)
    failing!(fn CopyTexImage2D(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn CopyTexImage2DEXT(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn CopyTexSubImage1D(GLenum, GLint, GLint, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyTexSubImage1DEXT(GLenum, GLint, GLint, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyTexSubImage2D(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyTexSubImage2DEXT(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyTexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyTexSubImage3DEXT(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyTexSubImage3DOES(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyTextureImage1DEXT(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) -> c_void)
    failing!(fn CopyTextureImage2DEXT(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn CopyTextureLevelsAPPLE(GLuint, GLuint, GLint, GLsizei) -> c_void)
    failing!(fn CopyTextureSubImage1DEXT(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei) -> c_void)
    failing!(fn CopyTextureSubImage2DEXT(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CopyTextureSubImage3DEXT(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn CoverFillPathInstancedNV(GLsizei, GLenum, *GLvoid, GLuint, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn CoverFillPathNV(GLuint, GLenum) -> c_void)
    failing!(fn CoverStrokePathInstancedNV(GLsizei, GLenum, *GLvoid, GLuint, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn CoverStrokePathNV(GLuint, GLenum) -> c_void)
    failing!(fn CoverageMaskNV(GLboolean) -> c_void)
    failing!(fn CoverageOperationNV(GLenum) -> c_void)
    failing!(fn CreateProgram() -> GLuint)
    failing!(fn CreateProgramObjectARB() -> GLhandleARB)
    failing!(fn CreateShader(GLenum) -> GLuint)
    failing!(fn CreateShaderObjectARB(GLenum) -> GLhandleARB)
    failing!(fn CreateShaderProgramEXT(GLenum, *GLchar) -> GLuint)
    failing!(fn CreateShaderProgramv(GLenum, GLsizei, **GLchar) -> GLuint)
    failing!(fn CreateShaderProgramvEXT(GLenum, GLsizei, **GLchar) -> GLuint)
    failing!(fn CreateSyncFromCLeventARB(*_cl_context, *_cl_event, GLbitfield) -> GLsync)
    failing!(fn CullFace(GLenum) -> c_void)
    failing!(fn CullParameterdvEXT(GLenum, *GLdouble) -> c_void)
    failing!(fn CullParameterfvEXT(GLenum, *GLfloat) -> c_void)
    failing!(fn CurrentPaletteMatrixARB(GLint) -> c_void)
    failing!(fn CurrentPaletteMatrixOES(GLuint) -> c_void)
    failing!(fn DebugMessageCallback(GLDEBUGPROC, *c_void) -> c_void)
    failing!(fn DebugMessageCallbackAMD(GLDEBUGPROCAMD, *c_void) -> c_void)
    failing!(fn DebugMessageCallbackARB(GLDEBUGPROCARB, *c_void) -> c_void)
    failing!(fn DebugMessageCallbackKHR(GLDEBUGPROCKHR, *c_void) -> c_void)
    failing!(fn DebugMessageControl(GLenum, GLenum, GLenum, GLsizei, *GLuint, GLboolean) -> c_void)
    failing!(fn DebugMessageControlARB(GLenum, GLenum, GLenum, GLsizei, *GLuint, GLboolean) -> c_void)
    failing!(fn DebugMessageControlKHR(GLenum, GLenum, GLenum, GLsizei, *GLuint, GLboolean) -> c_void)
    failing!(fn DebugMessageEnableAMD(GLenum, GLenum, GLsizei, *GLuint, GLboolean) -> c_void)
    failing!(fn DebugMessageInsert(GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar) -> c_void)
    failing!(fn DebugMessageInsertAMD(GLenum, GLenum, GLuint, GLsizei, *GLchar) -> c_void)
    failing!(fn DebugMessageInsertARB(GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar) -> c_void)
    failing!(fn DebugMessageInsertKHR(GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar) -> c_void)
    failing!(fn DeformSGIX(GLbitfield) -> c_void)
    failing!(fn DeformationMap3dSGIX(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, *GLdouble) -> c_void)
    failing!(fn DeformationMap3fSGIX(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, *GLfloat) -> c_void)
    failing!(fn DeleteAsyncMarkersSGIX(GLuint, GLsizei) -> c_void)
    failing!(fn DeleteBuffers(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteBuffersARB(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteFencesAPPLE(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteFencesNV(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteFragmentShaderATI(GLuint) -> c_void)
    failing!(fn DeleteFramebuffers(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteFramebuffersEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteFramebuffersOES(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteLists(GLuint, GLsizei) -> c_void)
    failing!(fn DeleteNamedStringARB(GLint, *GLchar) -> c_void)
    failing!(fn DeleteNamesAMD(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn DeleteObjectARB(GLhandleARB) -> c_void)
    failing!(fn DeleteOcclusionQueriesNV(GLsizei, *GLuint) -> c_void)
    failing!(fn DeletePathsNV(GLuint, GLsizei) -> c_void)
    failing!(fn DeletePerfMonitorsAMD(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteProgram(GLuint) -> c_void)
    failing!(fn DeleteProgramPipelines(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteProgramPipelinesEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteProgramsARB(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteProgramsNV(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteQueries(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteQueriesARB(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteQueriesEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteRenderbuffers(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteRenderbuffersEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteRenderbuffersOES(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteSamplers(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteShader(GLuint) -> c_void)
    failing!(fn DeleteSync(GLsync) -> c_void)
    failing!(fn DeleteSyncAPPLE(GLsync) -> c_void)
    failing!(fn DeleteTextures(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteTexturesEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteTransformFeedbacks(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteTransformFeedbacksNV(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteVertexArrays(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteVertexArraysAPPLE(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteVertexArraysOES(GLsizei, *GLuint) -> c_void)
    failing!(fn DeleteVertexShaderEXT(GLuint) -> c_void)
    failing!(fn DepthBoundsEXT(GLclampd, GLclampd) -> c_void)
    failing!(fn DepthBoundsdNV(GLdouble, GLdouble) -> c_void)
    failing!(fn DepthFunc(GLenum) -> c_void)
    failing!(fn DepthMask(GLboolean) -> c_void)
    failing!(fn DepthRange(GLdouble, GLdouble) -> c_void)
    failing!(fn DepthRangeArrayv(GLuint, GLsizei, *GLdouble) -> c_void)
    failing!(fn DepthRangeIndexed(GLuint, GLdouble, GLdouble) -> c_void)
    failing!(fn DepthRangedNV(GLdouble, GLdouble) -> c_void)
    failing!(fn DepthRangef(GLfloat, GLfloat) -> c_void)
    failing!(fn DepthRangefOES(GLclampf, GLclampf) -> c_void)
    failing!(fn DepthRangex(GLfixed, GLfixed) -> c_void)
    failing!(fn DepthRangexOES(GLfixed, GLfixed) -> c_void)
    failing!(fn DetachObjectARB(GLhandleARB, GLhandleARB) -> c_void)
    failing!(fn DetachShader(GLuint, GLuint) -> c_void)
    failing!(fn DetailTexFuncSGIS(GLenum, GLsizei, *GLfloat) -> c_void)
    failing!(fn Disable(GLenum) -> c_void)
    failing!(fn DisableClientState(GLenum) -> c_void)
    failing!(fn DisableClientStateIndexedEXT(GLenum, GLuint) -> c_void)
    failing!(fn DisableClientStateiEXT(GLenum, GLuint) -> c_void)
    failing!(fn DisableDriverControlQCOM(GLuint) -> c_void)
    failing!(fn DisableIndexedEXT(GLenum, GLuint) -> c_void)
    failing!(fn DisableVariantClientStateEXT(GLuint) -> c_void)
    failing!(fn DisableVertexArrayAttribEXT(GLuint, GLuint) -> c_void)
    failing!(fn DisableVertexArrayEXT(GLuint, GLenum) -> c_void)
    failing!(fn DisableVertexAttribAPPLE(GLuint, GLenum) -> c_void)
    failing!(fn DisableVertexAttribArray(GLuint) -> c_void)
    failing!(fn DisableVertexAttribArrayARB(GLuint) -> c_void)
    failing!(fn Disablei(GLenum, GLuint) -> c_void)
    failing!(fn DiscardFramebufferEXT(GLenum, GLsizei, *GLenum) -> c_void)
    failing!(fn DispatchCompute(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn DispatchComputeGroupSizeARB(GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn DispatchComputeIndirect(GLintptr) -> c_void)
    failing!(fn DrawArrays(GLenum, GLint, GLsizei) -> c_void)
    failing!(fn DrawArraysEXT(GLenum, GLint, GLsizei) -> c_void)
    failing!(fn DrawArraysIndirect(GLenum, *GLvoid) -> c_void)
    failing!(fn DrawArraysInstanced(GLenum, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn DrawArraysInstancedANGLE(GLenum, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn DrawArraysInstancedARB(GLenum, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn DrawArraysInstancedBaseInstance(GLenum, GLint, GLsizei, GLsizei, GLuint) -> c_void)
    failing!(fn DrawArraysInstancedEXT(GLenum, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn DrawArraysInstancedNV(GLenum, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn DrawBuffer(GLenum) -> c_void)
    failing!(fn DrawBuffers(GLsizei, *GLenum) -> c_void)
    failing!(fn DrawBuffersARB(GLsizei, *GLenum) -> c_void)
    failing!(fn DrawBuffersATI(GLsizei, *GLenum) -> c_void)
    failing!(fn DrawBuffersEXT(GLsizei, *GLenum) -> c_void)
    failing!(fn DrawBuffersIndexedEXT(GLint, *GLenum, *GLint) -> c_void)
    failing!(fn DrawBuffersNV(GLsizei, *GLenum) -> c_void)
    failing!(fn DrawElementArrayAPPLE(GLenum, GLint, GLsizei) -> c_void)
    failing!(fn DrawElementArrayATI(GLenum, GLsizei) -> c_void)
    failing!(fn DrawElements(GLenum, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn DrawElementsBaseVertex(GLenum, GLsizei, GLenum, *GLvoid, GLint) -> c_void)
    failing!(fn DrawElementsIndirect(GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn DrawElementsInstanced(GLenum, GLsizei, GLenum, *GLvoid, GLsizei) -> c_void)
    failing!(fn DrawElementsInstancedANGLE(GLenum, GLsizei, GLenum, *c_void, GLsizei) -> c_void)
    failing!(fn DrawElementsInstancedARB(GLenum, GLsizei, GLenum, *GLvoid, GLsizei) -> c_void)
    failing!(fn DrawElementsInstancedBaseInstance(GLenum, GLsizei, GLenum, *c_void, GLsizei, GLuint) -> c_void)
    failing!(fn DrawElementsInstancedBaseVertex(GLenum, GLsizei, GLenum, *GLvoid, GLsizei, GLint) -> c_void)
    failing!(fn DrawElementsInstancedBaseVertexBaseInstance(GLenum, GLsizei, GLenum, *c_void, GLsizei, GLint, GLuint) -> c_void)
    failing!(fn DrawElementsInstancedEXT(GLenum, GLsizei, GLenum, *GLvoid, GLsizei) -> c_void)
    failing!(fn DrawElementsInstancedNV(GLenum, GLsizei, GLenum, *GLvoid, GLsizei) -> c_void)
    failing!(fn DrawMeshArraysSUN(GLenum, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn DrawPixels(GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn DrawRangeElementArrayAPPLE(GLenum, GLuint, GLuint, GLint, GLsizei) -> c_void)
    failing!(fn DrawRangeElementArrayATI(GLenum, GLuint, GLuint, GLsizei) -> c_void)
    failing!(fn DrawRangeElements(GLenum, GLuint, GLuint, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn DrawRangeElementsBaseVertex(GLenum, GLuint, GLuint, GLsizei, GLenum, *GLvoid, GLint) -> c_void)
    failing!(fn DrawRangeElementsEXT(GLenum, GLuint, GLuint, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn DrawTexfOES(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn DrawTexfvOES(*GLfloat) -> c_void)
    failing!(fn DrawTexiOES(GLint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn DrawTexivOES(*GLint) -> c_void)
    failing!(fn DrawTexsOES(GLshort, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn DrawTexsvOES(*GLshort) -> c_void)
    failing!(fn DrawTextureNV(GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn DrawTexxOES(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn DrawTexxvOES(*GLfixed) -> c_void)
    failing!(fn DrawTransformFeedback(GLenum, GLuint) -> c_void)
    failing!(fn DrawTransformFeedbackInstanced(GLenum, GLuint, GLsizei) -> c_void)
    failing!(fn DrawTransformFeedbackNV(GLenum, GLuint) -> c_void)
    failing!(fn DrawTransformFeedbackStream(GLenum, GLuint, GLuint) -> c_void)
    failing!(fn DrawTransformFeedbackStreamInstanced(GLenum, GLuint, GLuint, GLsizei) -> c_void)
    failing!(fn EGLImageTargetRenderbufferStorageOES(GLenum, GLeglImageOES) -> c_void)
    failing!(fn EGLImageTargetTexture2DOES(GLenum, GLeglImageOES) -> c_void)
    failing!(fn EdgeFlag(GLboolean) -> c_void)
    failing!(fn EdgeFlagFormatNV(GLsizei) -> c_void)
    failing!(fn EdgeFlagPointer(GLsizei, *GLvoid) -> c_void)
    failing!(fn EdgeFlagPointerEXT(GLsizei, GLsizei, *GLboolean) -> c_void)
    failing!(fn EdgeFlagPointerListIBM(GLint, **GLboolean, GLint) -> c_void)
    failing!(fn EdgeFlagv(*GLboolean) -> c_void)
    failing!(fn ElementPointerAPPLE(GLenum, *GLvoid) -> c_void)
    failing!(fn ElementPointerATI(GLenum, *GLvoid) -> c_void)
    failing!(fn Enable(GLenum) -> c_void)
    failing!(fn EnableClientState(GLenum) -> c_void)
    failing!(fn EnableClientStateIndexedEXT(GLenum, GLuint) -> c_void)
    failing!(fn EnableClientStateiEXT(GLenum, GLuint) -> c_void)
    failing!(fn EnableDriverControlQCOM(GLuint) -> c_void)
    failing!(fn EnableIndexedEXT(GLenum, GLuint) -> c_void)
    failing!(fn EnableVariantClientStateEXT(GLuint) -> c_void)
    failing!(fn EnableVertexArrayAttribEXT(GLuint, GLuint) -> c_void)
    failing!(fn EnableVertexArrayEXT(GLuint, GLenum) -> c_void)
    failing!(fn EnableVertexAttribAPPLE(GLuint, GLenum) -> c_void)
    failing!(fn EnableVertexAttribArray(GLuint) -> c_void)
    failing!(fn EnableVertexAttribArrayARB(GLuint) -> c_void)
    failing!(fn Enablei(GLenum, GLuint) -> c_void)
    failing!(fn End() -> c_void)
    failing!(fn EndConditionalRender() -> c_void)
    failing!(fn EndConditionalRenderNV() -> c_void)
    failing!(fn EndConditionalRenderNVX() -> c_void)
    failing!(fn EndFragmentShaderATI() -> c_void)
    failing!(fn EndList() -> c_void)
    failing!(fn EndOcclusionQueryNV() -> c_void)
    failing!(fn EndPerfMonitorAMD(GLuint) -> c_void)
    failing!(fn EndQuery(GLenum) -> c_void)
    failing!(fn EndQueryARB(GLenum) -> c_void)
    failing!(fn EndQueryEXT(GLenum) -> c_void)
    failing!(fn EndQueryIndexed(GLenum, GLuint) -> c_void)
    failing!(fn EndTilingQCOM(GLbitfield) -> c_void)
    failing!(fn EndTransformFeedback() -> c_void)
    failing!(fn EndTransformFeedbackEXT() -> c_void)
    failing!(fn EndTransformFeedbackNV() -> c_void)
    failing!(fn EndVertexShaderEXT() -> c_void)
    failing!(fn EndVideoCaptureNV(GLuint) -> c_void)
    failing!(fn EvalCoord1d(GLdouble) -> c_void)
    failing!(fn EvalCoord1dv(*GLdouble) -> c_void)
    failing!(fn EvalCoord1f(GLfloat) -> c_void)
    failing!(fn EvalCoord1fv(*GLfloat) -> c_void)
    failing!(fn EvalCoord1xOES(GLfixed) -> c_void)
    failing!(fn EvalCoord1xvOES(*GLfixed) -> c_void)
    failing!(fn EvalCoord2d(GLdouble, GLdouble) -> c_void)
    failing!(fn EvalCoord2dv(*GLdouble) -> c_void)
    failing!(fn EvalCoord2f(GLfloat, GLfloat) -> c_void)
    failing!(fn EvalCoord2fv(*GLfloat) -> c_void)
    failing!(fn EvalCoord2xOES(GLfixed, GLfixed) -> c_void)
    failing!(fn EvalCoord2xvOES(*GLfixed) -> c_void)
    failing!(fn EvalMapsNV(GLenum, GLenum) -> c_void)
    failing!(fn EvalMesh1(GLenum, GLint, GLint) -> c_void)
    failing!(fn EvalMesh2(GLenum, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn EvalPoint1(GLint) -> c_void)
    failing!(fn EvalPoint2(GLint, GLint) -> c_void)
    failing!(fn ExecuteProgramNV(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn ExtGetBufferPointervQCOM(GLenum, **GLvoid) -> c_void)
    failing!(fn ExtGetBuffersQCOM(*GLuint, GLint, *GLint) -> c_void)
    failing!(fn ExtGetFramebuffersQCOM(*GLuint, GLint, *GLint) -> c_void)
    failing!(fn ExtGetProgramBinarySourceQCOM(GLuint, GLenum, *GLchar, *GLint) -> c_void)
    failing!(fn ExtGetProgramsQCOM(*GLuint, GLint, *GLint) -> c_void)
    failing!(fn ExtGetRenderbuffersQCOM(*GLuint, GLint, *GLint) -> c_void)
    failing!(fn ExtGetShadersQCOM(*GLuint, GLint, *GLint) -> c_void)
    failing!(fn ExtGetTexLevelParameterivQCOM(GLuint, GLenum, GLint, GLenum, *GLint) -> c_void)
    failing!(fn ExtGetTexSubImageQCOM(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ExtGetTexturesQCOM(*GLuint, GLint, *GLint) -> c_void)
    failing!(fn ExtIsProgramBinaryQCOM(GLuint) -> GLboolean)
    failing!(fn ExtTexObjectStateOverrideiQCOM(GLenum, GLenum, GLint) -> c_void)
    failing!(fn ExtractComponentEXT(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn FeedbackBuffer(GLsizei, GLenum, *GLfloat) -> c_void)
    failing!(fn FeedbackBufferxOES(GLsizei, GLenum, *GLfixed) -> c_void)
    failing!(fn FenceSync(GLenum, GLbitfield) -> GLsync)
    failing!(fn FenceSyncAPPLE(GLenum, GLbitfield) -> GLsync)
    failing!(fn FinalCombinerInputNV(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn Finish() -> c_void)
    failing!(fn FinishAsyncSGIX(*GLuint) -> GLint)
    failing!(fn FinishFenceAPPLE(GLuint) -> c_void)
    failing!(fn FinishFenceNV(GLuint) -> c_void)
    failing!(fn FinishObjectAPPLE(GLenum, GLint) -> c_void)
    failing!(fn FinishTextureSUNX() -> c_void)
    failing!(fn Flush() -> c_void)
    failing!(fn FlushMappedBufferRange(GLenum, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn FlushMappedBufferRangeAPPLE(GLenum, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn FlushMappedBufferRangeEXT(GLenum, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn FlushMappedNamedBufferRangeEXT(GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn FlushPixelDataRangeNV(GLenum) -> c_void)
    failing!(fn FlushRasterSGIX() -> c_void)
    failing!(fn FlushStaticDataIBM(GLenum) -> c_void)
    failing!(fn FlushVertexArrayRangeAPPLE(GLsizei, *GLvoid) -> c_void)
    failing!(fn FlushVertexArrayRangeNV() -> c_void)
    failing!(fn FogCoordFormatNV(GLenum, GLsizei) -> c_void)
    failing!(fn FogCoordPointer(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn FogCoordPointerEXT(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn FogCoordPointerListIBM(GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn FogCoordd(GLdouble) -> c_void)
    failing!(fn FogCoorddEXT(GLdouble) -> c_void)
    failing!(fn FogCoorddv(*GLdouble) -> c_void)
    failing!(fn FogCoorddvEXT(*GLdouble) -> c_void)
    failing!(fn FogCoordf(GLfloat) -> c_void)
    failing!(fn FogCoordfEXT(GLfloat) -> c_void)
    failing!(fn FogCoordfv(*GLfloat) -> c_void)
    failing!(fn FogCoordfvEXT(*GLfloat) -> c_void)
    failing!(fn FogCoordhNV(GLhalfNV) -> c_void)
    failing!(fn FogCoordhvNV(*GLhalfNV) -> c_void)
    failing!(fn FogFuncSGIS(GLsizei, *GLfloat) -> c_void)
    failing!(fn Fogf(GLenum, GLfloat) -> c_void)
    failing!(fn Fogfv(GLenum, *GLfloat) -> c_void)
    failing!(fn Fogi(GLenum, GLint) -> c_void)
    failing!(fn Fogiv(GLenum, *GLint) -> c_void)
    failing!(fn Fogx(GLenum, GLfixed) -> c_void)
    failing!(fn FogxOES(GLenum, GLfixed) -> c_void)
    failing!(fn Fogxv(GLenum, *GLfixed) -> c_void)
    failing!(fn FogxvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn FragmentColorMaterialSGIX(GLenum, GLenum) -> c_void)
    failing!(fn FragmentLightModelfSGIX(GLenum, GLfloat) -> c_void)
    failing!(fn FragmentLightModelfvSGIX(GLenum, *GLfloat) -> c_void)
    failing!(fn FragmentLightModeliSGIX(GLenum, GLint) -> c_void)
    failing!(fn FragmentLightModelivSGIX(GLenum, *GLint) -> c_void)
    failing!(fn FragmentLightfSGIX(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn FragmentLightfvSGIX(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn FragmentLightiSGIX(GLenum, GLenum, GLint) -> c_void)
    failing!(fn FragmentLightivSGIX(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn FragmentMaterialfSGIX(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn FragmentMaterialfvSGIX(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn FragmentMaterialiSGIX(GLenum, GLenum, GLint) -> c_void)
    failing!(fn FragmentMaterialivSGIX(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn FrameTerminatorGREMEDY() -> c_void)
    failing!(fn FrameZoomSGIX(GLint) -> c_void)
    failing!(fn FramebufferDrawBufferEXT(GLuint, GLenum) -> c_void)
    failing!(fn FramebufferDrawBuffersEXT(GLuint, GLsizei, *GLenum) -> c_void)
    failing!(fn FramebufferParameteri(GLenum, GLenum, GLint) -> c_void)
    failing!(fn FramebufferReadBufferEXT(GLuint, GLenum) -> c_void)
    failing!(fn FramebufferRenderbuffer(GLenum, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn FramebufferRenderbufferEXT(GLenum, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn FramebufferRenderbufferOES(GLenum, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn FramebufferTexture(GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTexture1D(GLenum, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTexture1DEXT(GLenum, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTexture2D(GLenum, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTexture2DEXT(GLenum, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTexture2DMultisampleEXT(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) -> c_void)
    failing!(fn FramebufferTexture2DMultisampleIMG(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei) -> c_void)
    failing!(fn FramebufferTexture2DOES(GLenum, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTexture3D(GLenum, GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn FramebufferTexture3DEXT(GLenum, GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn FramebufferTexture3DOES(GLenum, GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn FramebufferTextureARB(GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTextureEXT(GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn FramebufferTextureFaceARB(GLenum, GLenum, GLuint, GLint, GLenum) -> c_void)
    failing!(fn FramebufferTextureFaceEXT(GLenum, GLenum, GLuint, GLint, GLenum) -> c_void)
    failing!(fn FramebufferTextureLayer(GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn FramebufferTextureLayerARB(GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn FramebufferTextureLayerEXT(GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn FreeObjectBufferATI(GLuint) -> c_void)
    failing!(fn FrontFace(GLenum) -> c_void)
    failing!(fn Frustum(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Frustumf(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn FrustumfOES(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Frustumx(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn FrustumxOES(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn GenAsyncMarkersSGIX(GLsizei) -> GLuint)
    failing!(fn GenBuffers(GLsizei, *GLuint) -> c_void)
    failing!(fn GenBuffersARB(GLsizei, *GLuint) -> c_void)
    failing!(fn GenFencesAPPLE(GLsizei, *GLuint) -> c_void)
    failing!(fn GenFencesNV(GLsizei, *GLuint) -> c_void)
    failing!(fn GenFragmentShadersATI(GLuint) -> GLuint)
    failing!(fn GenFramebuffers(GLsizei, *GLuint) -> c_void)
    failing!(fn GenFramebuffersEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn GenFramebuffersOES(GLsizei, *GLuint) -> c_void)
    failing!(fn GenLists(GLsizei) -> GLuint)
    failing!(fn GenNamesAMD(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn GenOcclusionQueriesNV(GLsizei, *GLuint) -> c_void)
    failing!(fn GenPathsNV(GLsizei) -> GLuint)
    failing!(fn GenPerfMonitorsAMD(GLsizei, *GLuint) -> c_void)
    failing!(fn GenProgramPipelines(GLsizei, *GLuint) -> c_void)
    failing!(fn GenProgramPipelinesEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn GenProgramsARB(GLsizei, *GLuint) -> c_void)
    failing!(fn GenProgramsNV(GLsizei, *GLuint) -> c_void)
    failing!(fn GenQueries(GLsizei, *GLuint) -> c_void)
    failing!(fn GenQueriesARB(GLsizei, *GLuint) -> c_void)
    failing!(fn GenQueriesEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn GenRenderbuffers(GLsizei, *GLuint) -> c_void)
    failing!(fn GenRenderbuffersEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn GenRenderbuffersOES(GLsizei, *GLuint) -> c_void)
    failing!(fn GenSamplers(GLsizei, *GLuint) -> c_void)
    failing!(fn GenSymbolsEXT(GLenum, GLenum, GLenum, GLuint) -> GLuint)
    failing!(fn GenTextures(GLsizei, *GLuint) -> c_void)
    failing!(fn GenTexturesEXT(GLsizei, *GLuint) -> c_void)
    failing!(fn GenTransformFeedbacks(GLsizei, *GLuint) -> c_void)
    failing!(fn GenTransformFeedbacksNV(GLsizei, *GLuint) -> c_void)
    failing!(fn GenVertexArrays(GLsizei, *GLuint) -> c_void)
    failing!(fn GenVertexArraysAPPLE(GLsizei, *GLuint) -> c_void)
    failing!(fn GenVertexArraysOES(GLsizei, *GLuint) -> c_void)
    failing!(fn GenVertexShadersEXT(GLuint) -> GLuint)
    failing!(fn GenerateMipmap(GLenum) -> c_void)
    failing!(fn GenerateMipmapEXT(GLenum) -> c_void)
    failing!(fn GenerateMipmapOES(GLenum) -> c_void)
    failing!(fn GenerateMultiTexMipmapEXT(GLenum, GLenum) -> c_void)
    failing!(fn GenerateTextureMipmapEXT(GLuint, GLenum) -> c_void)
    failing!(fn GetActiveAtomicCounterBufferiv(GLuint, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetActiveAttrib(GLuint, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLchar) -> c_void)
    failing!(fn GetActiveAttribARB(GLhandleARB, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLcharARB) -> c_void)
    failing!(fn GetActiveSubroutineName(GLuint, GLenum, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetActiveSubroutineUniformName(GLuint, GLenum, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetActiveSubroutineUniformiv(GLuint, GLenum, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetActiveUniform(GLuint, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLchar) -> c_void)
    failing!(fn GetActiveUniformARB(GLhandleARB, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *GLcharARB) -> c_void)
    failing!(fn GetActiveUniformBlockName(GLuint, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetActiveUniformBlockiv(GLuint, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetActiveUniformName(GLuint, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetActiveUniformsiv(GLuint, GLsizei, *GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetActiveVaryingNV(GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *GLchar) -> c_void)
    failing!(fn GetArrayObjectfvATI(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetArrayObjectivATI(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetAttachedObjectsARB(GLhandleARB, GLsizei, *GLsizei, *GLhandleARB) -> c_void)
    failing!(fn GetAttachedShaders(GLuint, GLsizei, *GLsizei, *GLuint) -> c_void)
    failing!(fn GetAttribLocation(GLuint, *GLchar) -> GLint)
    failing!(fn GetAttribLocationARB(GLhandleARB, *GLcharARB) -> GLint)
    failing!(fn GetBooleanIndexedvEXT(GLenum, GLuint, *GLboolean) -> c_void)
    failing!(fn GetBooleani_v(GLenum, GLuint, *GLboolean) -> c_void)
    failing!(fn GetBooleanv(GLenum, *GLboolean) -> c_void)
    failing!(fn GetBufferParameteri64v(GLenum, GLenum, *GLint64) -> c_void)
    failing!(fn GetBufferParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetBufferParameterivARB(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetBufferParameterui64vNV(GLenum, GLenum, *GLuint64EXT) -> c_void)
    failing!(fn GetBufferPointerv(GLenum, GLenum, **GLvoid) -> c_void)
    failing!(fn GetBufferPointervARB(GLenum, GLenum, **GLvoid) -> c_void)
    failing!(fn GetBufferPointervOES(GLenum, GLenum, **GLvoid) -> c_void)
    failing!(fn GetBufferSubData(GLenum, GLintptr, GLsizeiptr, *GLvoid) -> c_void)
    failing!(fn GetBufferSubDataARB(GLenum, GLintptrARB, GLsizeiptrARB, *GLvoid) -> c_void)
    failing!(fn GetClipPlane(GLenum, *GLdouble) -> c_void)
    failing!(fn GetClipPlanef(GLenum, *GLfloat) -> c_void)
    failing!(fn GetClipPlanefOES(GLenum, *GLfloat) -> c_void)
    failing!(fn GetClipPlanex(GLenum, *GLfixed) -> c_void)
    failing!(fn GetClipPlanexOES(GLenum, *GLfixed) -> c_void)
    failing!(fn GetColorTable(GLenum, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetColorTableEXT(GLenum, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetColorTableParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetColorTableParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetColorTableParameterfvSGI(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetColorTableParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetColorTableParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetColorTableParameterivSGI(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetColorTableSGI(GLenum, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetCombinerInputParameterfvNV(GLenum, GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetCombinerInputParameterivNV(GLenum, GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetCombinerOutputParameterfvNV(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetCombinerOutputParameterivNV(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetCombinerStageParameterfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetCompressedMultiTexImageEXT(GLenum, GLenum, GLint, *GLvoid) -> c_void)
    failing!(fn GetCompressedTexImage(GLenum, GLint, *GLvoid) -> c_void)
    failing!(fn GetCompressedTexImageARB(GLenum, GLint, *GLvoid) -> c_void)
    failing!(fn GetCompressedTextureImageEXT(GLuint, GLenum, GLint, *GLvoid) -> c_void)
    failing!(fn GetConvolutionFilter(GLenum, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetConvolutionFilterEXT(GLenum, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetConvolutionParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetConvolutionParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetConvolutionParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetConvolutionParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetConvolutionParameterxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetDebugMessageLog(GLuint, GLsizei, *GLenum, *GLenum, *GLuint, *GLenum, *GLsizei, *GLchar) -> GLuint)
    failing!(fn GetDebugMessageLogAMD(GLuint, GLsizei, *GLenum, *GLuint, *GLuint, *GLsizei, *GLchar) -> GLuint)
    failing!(fn GetDebugMessageLogARB(GLuint, GLsizei, *GLenum, *GLenum, *GLuint, *GLenum, *GLsizei, *GLchar) -> GLuint)
    failing!(fn GetDebugMessageLogKHR(GLuint, GLsizei, *GLenum, *GLenum, *GLuint, *GLenum, *GLsizei, *GLchar) -> GLuint)
    failing!(fn GetDetailTexFuncSGIS(GLenum, *GLfloat) -> c_void)
    failing!(fn GetDoubleIndexedvEXT(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn GetDoublei_v(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn GetDoublei_vEXT(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn GetDoublev(GLenum, *GLdouble) -> c_void)
    failing!(fn GetDriverControlStringQCOM(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetDriverControlsQCOM(*GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn GetError() -> GLenum)
    failing!(fn GetFenceivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetFinalCombinerInputParameterfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetFinalCombinerInputParameterivNV(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFixedv(GLenum, *GLfixed) -> c_void)
    failing!(fn GetFixedvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn GetFloatIndexedvEXT(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetFloati_v(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetFloati_vEXT(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetFloatv(GLenum, *GLfloat) -> c_void)
    failing!(fn GetFogFuncSGIS(*GLfloat) -> c_void)
    failing!(fn GetFragDataIndex(GLuint, *GLchar) -> GLint)
    failing!(fn GetFragDataLocation(GLuint, *GLchar) -> GLint)
    failing!(fn GetFragDataLocationEXT(GLuint, *GLchar) -> GLint)
    failing!(fn GetFragmentLightfvSGIX(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetFragmentLightivSGIX(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFragmentMaterialfvSGIX(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetFragmentMaterialivSGIX(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFramebufferAttachmentParameteriv(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFramebufferAttachmentParameterivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFramebufferAttachmentParameterivOES(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFramebufferParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetFramebufferParameterivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetGraphicsResetStatusARB() -> GLenum)
    failing!(fn GetGraphicsResetStatusEXT() -> GLenum)
    failing!(fn GetHandleARB(GLenum) -> GLhandleARB)
    failing!(fn GetHistogram(GLenum, GLboolean, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetHistogramEXT(GLenum, GLboolean, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetHistogramParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetHistogramParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetHistogramParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetHistogramParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetHistogramParameterxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetImageHandleARB(GLuint, GLint, GLboolean, GLint, GLenum) -> GLuint64)
    failing!(fn GetImageHandleNV(GLuint, GLint, GLboolean, GLint, GLenum) -> GLuint64)
    failing!(fn GetImageTransformParameterfvHP(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetImageTransformParameterivHP(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetInfoLogARB(GLhandleARB, GLsizei, *GLsizei, *GLcharARB) -> c_void)
    failing!(fn GetInstrumentsSGIX() -> GLint)
    failing!(fn GetInteger64i_v(GLenum, GLuint, *GLint64) -> c_void)
    failing!(fn GetInteger64v(GLenum, *GLint64) -> c_void)
    failing!(fn GetInteger64vAPPLE(GLenum, *GLint64) -> c_void)
    failing!(fn GetIntegerIndexedvEXT(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn GetIntegeri_v(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn GetIntegeri_vEXT(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn GetIntegerui64i_vNV(GLenum, GLuint, *GLuint64EXT) -> c_void)
    failing!(fn GetIntegerui64vNV(GLenum, *GLuint64EXT) -> c_void)
    failing!(fn GetIntegerv(GLenum, *GLint) -> c_void)
    failing!(fn GetInternalformati64v(GLenum, GLenum, GLenum, GLsizei, *GLint64) -> c_void)
    failing!(fn GetInternalformativ(GLenum, GLenum, GLenum, GLsizei, *GLint) -> c_void)
    failing!(fn GetInvariantBooleanvEXT(GLuint, GLenum, *GLboolean) -> c_void)
    failing!(fn GetInvariantFloatvEXT(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetInvariantIntegervEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetLightfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetLightiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetLightx(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetLightxOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetLightxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetLightxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetListParameterfvSGIX(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetListParameterivSGIX(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetLocalConstantBooleanvEXT(GLuint, GLenum, *GLboolean) -> c_void)
    failing!(fn GetLocalConstantFloatvEXT(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetLocalConstantIntegervEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetMapAttribParameterfvNV(GLenum, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMapAttribParameterivNV(GLenum, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetMapControlPointsNV(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, *GLvoid) -> c_void)
    failing!(fn GetMapParameterfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMapParameterivNV(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMapdv(GLenum, GLenum, *GLdouble) -> c_void)
    failing!(fn GetMapfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMapiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMapxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetMaterialfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMaterialiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMaterialx(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn GetMaterialxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn GetMaterialxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetMaterialxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetMinmax(GLenum, GLboolean, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetMinmaxEXT(GLenum, GLboolean, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetMinmaxParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMinmaxParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMinmaxParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMinmaxParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMultiTexEnvfvEXT(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMultiTexEnvivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMultiTexGendvEXT(GLenum, GLenum, GLenum, *GLdouble) -> c_void)
    failing!(fn GetMultiTexGenfvEXT(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMultiTexGenivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMultiTexImageEXT(GLenum, GLenum, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetMultiTexLevelParameterfvEXT(GLenum, GLenum, GLint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMultiTexLevelParameterivEXT(GLenum, GLenum, GLint, GLenum, *GLint) -> c_void)
    failing!(fn GetMultiTexParameterIivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMultiTexParameterIuivEXT(GLenum, GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn GetMultiTexParameterfvEXT(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetMultiTexParameterivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetMultisamplefv(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetMultisamplefvNV(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetNamedBufferParameterivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetNamedBufferParameterui64vNV(GLuint, GLenum, *GLuint64EXT) -> c_void)
    failing!(fn GetNamedBufferPointervEXT(GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetNamedBufferSubDataEXT(GLuint, GLintptr, GLsizeiptr, *GLvoid) -> c_void)
    failing!(fn GetNamedFramebufferAttachmentParameterivEXT(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetNamedFramebufferParameterivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetNamedProgramLocalParameterIivEXT(GLuint, GLenum, GLuint, *GLint) -> c_void)
    failing!(fn GetNamedProgramLocalParameterIuivEXT(GLuint, GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn GetNamedProgramLocalParameterdvEXT(GLuint, GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn GetNamedProgramLocalParameterfvEXT(GLuint, GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetNamedProgramStringEXT(GLuint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetNamedProgramivEXT(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetNamedRenderbufferParameterivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetNamedStringARB(GLint, *GLchar, GLsizei, *GLint, *GLchar) -> c_void)
    failing!(fn GetNamedStringivARB(GLint, *GLchar, GLenum, *GLint) -> c_void)
    failing!(fn GetObjectBufferfvATI(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetObjectBufferivATI(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetObjectLabel(GLenum, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetObjectLabelEXT(GLenum, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetObjectLabelKHR(GLenum, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetObjectParameterfvARB(GLhandleARB, GLenum, *GLfloat) -> c_void)
    failing!(fn GetObjectParameterivAPPLE(GLenum, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetObjectParameterivARB(GLhandleARB, GLenum, *GLint) -> c_void)
    failing!(fn GetObjectPtrLabel(*c_void, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetObjectPtrLabelKHR(*c_void, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetOcclusionQueryivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetOcclusionQueryuivNV(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetPathColorGenfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetPathColorGenivNV(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetPathCommandsNV(GLuint, *GLubyte) -> c_void)
    failing!(fn GetPathCoordsNV(GLuint, *GLfloat) -> c_void)
    failing!(fn GetPathDashArrayNV(GLuint, *GLfloat) -> c_void)
    failing!(fn GetPathLengthNV(GLuint, GLsizei, GLsizei) -> GLfloat)
    failing!(fn GetPathMetricRangeNV(GLbitfield, GLuint, GLsizei, GLsizei, *GLfloat) -> c_void)
    failing!(fn GetPathMetricsNV(GLbitfield, GLsizei, GLenum, *GLvoid, GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn GetPathParameterfvNV(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetPathParameterivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetPathSpacingNV(GLenum, GLsizei, GLenum, *GLvoid, GLuint, GLfloat, GLfloat, GLenum, *GLfloat) -> c_void)
    failing!(fn GetPathTexGenfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetPathTexGenivNV(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetPerfMonitorCounterDataAMD(GLuint, GLenum, GLsizei, *GLuint, *GLint) -> c_void)
    failing!(fn GetPerfMonitorCounterInfoAMD(GLuint, GLuint, GLenum, *GLvoid) -> c_void)
    failing!(fn GetPerfMonitorCounterStringAMD(GLuint, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetPerfMonitorCountersAMD(GLuint, *GLint, *GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn GetPerfMonitorGroupStringAMD(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetPerfMonitorGroupsAMD(*GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn GetPixelMapfv(GLenum, *GLfloat) -> c_void)
    failing!(fn GetPixelMapuiv(GLenum, *GLuint) -> c_void)
    failing!(fn GetPixelMapusv(GLenum, *GLushort) -> c_void)
    failing!(fn GetPixelMapxv(GLenum, GLint, *GLfixed) -> c_void)
    failing!(fn GetPixelTexGenParameterfvSGIS(GLenum, *GLfloat) -> c_void)
    failing!(fn GetPixelTexGenParameterivSGIS(GLenum, *GLint) -> c_void)
    failing!(fn GetPixelTransformParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetPixelTransformParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetPointerIndexedvEXT(GLenum, GLuint, **GLvoid) -> c_void)
    failing!(fn GetPointeri_vEXT(GLenum, GLuint, **GLvoid) -> c_void)
    failing!(fn GetPointerv(GLenum, **GLvoid) -> c_void)
    failing!(fn GetPointervEXT(GLenum, **GLvoid) -> c_void)
    failing!(fn GetPointervKHR(GLenum, **GLvoid) -> c_void)
    failing!(fn GetPolygonStipple(*GLubyte) -> c_void)
    failing!(fn GetProgramBinary(GLuint, GLsizei, *GLsizei, *GLenum, *GLvoid) -> c_void)
    failing!(fn GetProgramBinaryOES(GLuint, GLsizei, *GLsizei, *GLenum, *GLvoid) -> c_void)
    failing!(fn GetProgramEnvParameterIivNV(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn GetProgramEnvParameterIuivNV(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn GetProgramEnvParameterdvARB(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn GetProgramEnvParameterfvARB(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetProgramInfoLog(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetProgramInterfaceiv(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetProgramLocalParameterIivNV(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn GetProgramLocalParameterIuivNV(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn GetProgramLocalParameterdvARB(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn GetProgramLocalParameterfvARB(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn GetProgramNamedParameterdvNV(GLuint, GLsizei, *GLubyte, *GLdouble) -> c_void)
    failing!(fn GetProgramNamedParameterfvNV(GLuint, GLsizei, *GLubyte, *GLfloat) -> c_void)
    failing!(fn GetProgramParameterdvNV(GLenum, GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetProgramParameterfvNV(GLenum, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetProgramPipelineInfoLog(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetProgramPipelineInfoLogEXT(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetProgramPipelineiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetProgramPipelineivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetProgramResourceIndex(GLuint, GLenum, *GLchar) -> GLuint)
    failing!(fn GetProgramResourceLocation(GLuint, GLenum, *GLchar) -> GLint)
    failing!(fn GetProgramResourceLocationIndex(GLuint, GLenum, *GLchar) -> GLint)
    failing!(fn GetProgramResourceName(GLuint, GLenum, GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetProgramResourceiv(GLuint, GLenum, GLuint, GLsizei, *GLenum, GLsizei, *GLsizei, *GLint) -> c_void)
    failing!(fn GetProgramStageiv(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetProgramStringARB(GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetProgramStringNV(GLuint, GLenum, *GLubyte) -> c_void)
    failing!(fn GetProgramSubroutineParameteruivNV(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn GetProgramiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetProgramivARB(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetProgramivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryIndexediv(GLenum, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryObjecti64v(GLuint, GLenum, *GLint64) -> c_void)
    failing!(fn GetQueryObjecti64vEXT(GLuint, GLenum, *GLint64) -> c_void)
    failing!(fn GetQueryObjectiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryObjectivARB(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryObjectivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryObjectui64v(GLuint, GLenum, *GLuint64) -> c_void)
    failing!(fn GetQueryObjectui64vEXT(GLuint, GLenum, *GLuint64) -> c_void)
    failing!(fn GetQueryObjectuiv(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetQueryObjectuivARB(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetQueryObjectuivEXT(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetQueryiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryivARB(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetQueryivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetRenderbufferParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetRenderbufferParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetRenderbufferParameterivOES(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetSamplerParameterIiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetSamplerParameterIuiv(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetSamplerParameterfv(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetSamplerParameteriv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetSeparableFilter(GLenum, GLenum, GLenum, *GLvoid, *GLvoid, *GLvoid) -> c_void)
    failing!(fn GetSeparableFilterEXT(GLenum, GLenum, GLenum, *GLvoid, *GLvoid, *GLvoid) -> c_void)
    failing!(fn GetShaderInfoLog(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetShaderPrecisionFormat(GLenum, GLenum, *GLint, *GLint) -> c_void)
    failing!(fn GetShaderSource(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetShaderSourceARB(GLhandleARB, GLsizei, *GLsizei, *GLcharARB) -> c_void)
    failing!(fn GetShaderiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetSharpenTexFuncSGIS(GLenum, *GLfloat) -> c_void)
    failing!(fn GetString(GLenum) -> *GLubyte)
    failing!(fn GetStringi(GLenum, GLuint) -> *GLubyte)
    failing!(fn GetSubroutineIndex(GLuint, GLenum, *GLchar) -> GLuint)
    failing!(fn GetSubroutineUniformLocation(GLuint, GLenum, *GLchar) -> GLint)
    failing!(fn GetSynciv(GLsync, GLenum, GLsizei, *GLsizei, *GLint) -> c_void)
    failing!(fn GetSyncivAPPLE(GLsync, GLenum, GLsizei, *GLsizei, *GLint) -> c_void)
    failing!(fn GetTexBumpParameterfvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexBumpParameterivATI(GLenum, *GLint) -> c_void)
    failing!(fn GetTexEnvfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexEnviv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTexEnvxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetTexEnvxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetTexFilterFuncSGIS(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexGendv(GLenum, GLenum, *GLdouble) -> c_void)
    failing!(fn GetTexGenfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexGenfvOES(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexGeniv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTexGenivOES(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTexGenxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetTexImage(GLenum, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetTexLevelParameterfv(GLenum, GLint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexLevelParameteriv(GLenum, GLint, GLenum, *GLint) -> c_void)
    failing!(fn GetTexLevelParameterxvOES(GLenum, GLint, GLenum, *GLfixed) -> c_void)
    failing!(fn GetTexParameterIiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTexParameterIivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTexParameterIuiv(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn GetTexParameterIuivEXT(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn GetTexParameterPointervAPPLE(GLenum, GLenum, **GLvoid) -> c_void)
    failing!(fn GetTexParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTexParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTexParameterxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetTexParameterxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn GetTextureHandleARB(GLuint) -> GLuint64)
    failing!(fn GetTextureHandleNV(GLuint) -> GLuint64)
    failing!(fn GetTextureImageEXT(GLuint, GLenum, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn GetTextureLevelParameterfvEXT(GLuint, GLenum, GLint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTextureLevelParameterivEXT(GLuint, GLenum, GLint, GLenum, *GLint) -> c_void)
    failing!(fn GetTextureParameterIivEXT(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTextureParameterIuivEXT(GLuint, GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn GetTextureParameterfvEXT(GLuint, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn GetTextureParameterivEXT(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn GetTextureSamplerHandleARB(GLuint, GLuint) -> GLuint64)
    failing!(fn GetTextureSamplerHandleNV(GLuint, GLuint) -> GLuint64)
    failing!(fn GetTrackMatrixivNV(GLenum, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetTransformFeedbackVarying(GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *GLchar) -> c_void)
    failing!(fn GetTransformFeedbackVaryingEXT(GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *GLchar) -> c_void)
    failing!(fn GetTransformFeedbackVaryingNV(GLuint, GLuint, *GLint) -> c_void)
    failing!(fn GetTranslatedShaderSourceANGLE(GLuint, GLsizei, *GLsizei, *GLchar) -> c_void)
    failing!(fn GetUniformBlockIndex(GLuint, *GLchar) -> GLuint)
    failing!(fn GetUniformBufferSizeEXT(GLuint, GLint) -> GLint)
    failing!(fn GetUniformIndices(GLuint, GLsizei, **GLchar, *GLuint) -> c_void)
    failing!(fn GetUniformLocation(GLuint, *GLchar) -> GLint)
    failing!(fn GetUniformLocationARB(GLhandleARB, *GLcharARB) -> GLint)
    failing!(fn GetUniformOffsetEXT(GLuint, GLint) -> GLintptr)
    failing!(fn GetUniformSubroutineuiv(GLenum, GLint, *GLuint) -> c_void)
    failing!(fn GetUniformdv(GLuint, GLint, *GLdouble) -> c_void)
    failing!(fn GetUniformfv(GLuint, GLint, *GLfloat) -> c_void)
    failing!(fn GetUniformfvARB(GLhandleARB, GLint, *GLfloat) -> c_void)
    failing!(fn GetUniformi64vNV(GLuint, GLint, *GLint64EXT) -> c_void)
    failing!(fn GetUniformiv(GLuint, GLint, *GLint) -> c_void)
    failing!(fn GetUniformivARB(GLhandleARB, GLint, *GLint) -> c_void)
    failing!(fn GetUniformui64vNV(GLuint, GLint, *GLuint64EXT) -> c_void)
    failing!(fn GetUniformuiv(GLuint, GLint, *GLuint) -> c_void)
    failing!(fn GetUniformuivEXT(GLuint, GLint, *GLuint) -> c_void)
    failing!(fn GetVariantArrayObjectfvATI(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVariantArrayObjectivATI(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVariantBooleanvEXT(GLuint, GLenum, *GLboolean) -> c_void)
    failing!(fn GetVariantFloatvEXT(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVariantIntegervEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVariantPointervEXT(GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetVaryingLocationNV(GLuint, *GLchar) -> GLint)
    failing!(fn GetVertexArrayIntegeri_vEXT(GLuint, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexArrayIntegervEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexArrayPointeri_vEXT(GLuint, GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetVertexArrayPointervEXT(GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetVertexAttribArrayObjectfvATI(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVertexAttribArrayObjectivATI(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexAttribIiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexAttribIivEXT(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexAttribIuiv(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetVertexAttribIuivEXT(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetVertexAttribLdv(GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetVertexAttribLdvEXT(GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetVertexAttribLi64vNV(GLuint, GLenum, *GLint64EXT) -> c_void)
    failing!(fn GetVertexAttribLui64vARB(GLuint, GLenum, *GLuint64EXT) -> c_void)
    failing!(fn GetVertexAttribLui64vNV(GLuint, GLenum, *GLuint64EXT) -> c_void)
    failing!(fn GetVertexAttribPointerv(GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetVertexAttribPointervARB(GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetVertexAttribPointervNV(GLuint, GLenum, **GLvoid) -> c_void)
    failing!(fn GetVertexAttribdv(GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetVertexAttribdvARB(GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetVertexAttribdvNV(GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetVertexAttribfv(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVertexAttribfvARB(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVertexAttribfvNV(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVertexAttribiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexAttribivARB(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVertexAttribivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVideoCaptureStreamdvNV(GLuint, GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn GetVideoCaptureStreamfvNV(GLuint, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn GetVideoCaptureStreamivNV(GLuint, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVideoCaptureivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVideoi64vNV(GLuint, GLenum, *GLint64EXT) -> c_void)
    failing!(fn GetVideoivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn GetVideoui64vNV(GLuint, GLenum, *GLuint64EXT) -> c_void)
    failing!(fn GetVideouivNV(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn GetnColorTableARB(GLenum, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn GetnCompressedTexImageARB(GLenum, GLint, GLsizei, *GLvoid) -> c_void)
    failing!(fn GetnConvolutionFilterARB(GLenum, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn GetnHistogramARB(GLenum, GLboolean, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn GetnMapdvARB(GLenum, GLenum, GLsizei, *GLdouble) -> c_void)
    failing!(fn GetnMapfvARB(GLenum, GLenum, GLsizei, *GLfloat) -> c_void)
    failing!(fn GetnMapivARB(GLenum, GLenum, GLsizei, *GLint) -> c_void)
    failing!(fn GetnMinmaxARB(GLenum, GLboolean, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn GetnPixelMapfvARB(GLenum, GLsizei, *GLfloat) -> c_void)
    failing!(fn GetnPixelMapuivARB(GLenum, GLsizei, *GLuint) -> c_void)
    failing!(fn GetnPixelMapusvARB(GLenum, GLsizei, *GLushort) -> c_void)
    failing!(fn GetnPolygonStippleARB(GLsizei, *GLubyte) -> c_void)
    failing!(fn GetnSeparableFilterARB(GLenum, GLenum, GLenum, GLsizei, *GLvoid, GLsizei, *GLvoid, *GLvoid) -> c_void)
    failing!(fn GetnTexImageARB(GLenum, GLint, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn GetnUniformdvARB(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn GetnUniformfvARB(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn GetnUniformfvEXT(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn GetnUniformivARB(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn GetnUniformivEXT(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn GetnUniformuivARB(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn GlobalAlphaFactorbSUN(GLbyte) -> c_void)
    failing!(fn GlobalAlphaFactordSUN(GLdouble) -> c_void)
    failing!(fn GlobalAlphaFactorfSUN(GLfloat) -> c_void)
    failing!(fn GlobalAlphaFactoriSUN(GLint) -> c_void)
    failing!(fn GlobalAlphaFactorsSUN(GLshort) -> c_void)
    failing!(fn GlobalAlphaFactorubSUN(GLubyte) -> c_void)
    failing!(fn GlobalAlphaFactoruiSUN(GLuint) -> c_void)
    failing!(fn GlobalAlphaFactorusSUN(GLushort) -> c_void)
    failing!(fn Hint(GLenum, GLenum) -> c_void)
    failing!(fn HintPGI(GLenum, GLint) -> c_void)
    failing!(fn Histogram(GLenum, GLsizei, GLenum, GLboolean) -> c_void)
    failing!(fn HistogramEXT(GLenum, GLsizei, GLenum, GLboolean) -> c_void)
    failing!(fn IglooInterfaceSGIX(GLenum, *GLvoid) -> c_void)
    failing!(fn ImageTransformParameterfHP(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn ImageTransformParameterfvHP(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn ImageTransformParameteriHP(GLenum, GLenum, GLint) -> c_void)
    failing!(fn ImageTransformParameterivHP(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn ImportSyncEXT(GLenum, GLintptr, GLbitfield) -> GLsync)
    failing!(fn IndexFormatNV(GLenum, GLsizei) -> c_void)
    failing!(fn IndexFuncEXT(GLenum, GLclampf) -> c_void)
    failing!(fn IndexMask(GLuint) -> c_void)
    failing!(fn IndexMaterialEXT(GLenum, GLenum) -> c_void)
    failing!(fn IndexPointer(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn IndexPointerEXT(GLenum, GLsizei, GLsizei, *GLvoid) -> c_void)
    failing!(fn IndexPointerListIBM(GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn Indexd(GLdouble) -> c_void)
    failing!(fn Indexdv(*GLdouble) -> c_void)
    failing!(fn Indexf(GLfloat) -> c_void)
    failing!(fn Indexfv(*GLfloat) -> c_void)
    failing!(fn Indexi(GLint) -> c_void)
    failing!(fn Indexiv(*GLint) -> c_void)
    failing!(fn Indexs(GLshort) -> c_void)
    failing!(fn Indexsv(*GLshort) -> c_void)
    failing!(fn Indexub(GLubyte) -> c_void)
    failing!(fn Indexubv(*GLubyte) -> c_void)
    failing!(fn IndexxOES(GLfixed) -> c_void)
    failing!(fn IndexxvOES(*GLfixed) -> c_void)
    failing!(fn InitNames() -> c_void)
    failing!(fn InsertComponentEXT(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn InsertEventMarkerEXT(GLsizei, *GLchar) -> c_void)
    failing!(fn InstrumentsBufferSGIX(GLsizei, *GLint) -> c_void)
    failing!(fn InterleavedArrays(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn InterpolatePathsNV(GLuint, GLuint, GLuint, GLfloat) -> c_void)
    failing!(fn InvalidateBufferData(GLuint) -> c_void)
    failing!(fn InvalidateBufferSubData(GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn InvalidateFramebuffer(GLenum, GLsizei, *GLenum) -> c_void)
    failing!(fn InvalidateSubFramebuffer(GLenum, GLsizei, *GLenum, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn InvalidateTexImage(GLuint, GLint) -> c_void)
    failing!(fn InvalidateTexSubImage(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) -> c_void)
    failing!(fn IsAsyncMarkerSGIX(GLuint) -> GLboolean)
    failing!(fn IsBuffer(GLuint) -> GLboolean)
    failing!(fn IsBufferARB(GLuint) -> GLboolean)
    failing!(fn IsBufferResidentNV(GLenum) -> GLboolean)
    failing!(fn IsEnabled(GLenum) -> GLboolean)
    failing!(fn IsEnabledIndexedEXT(GLenum, GLuint) -> GLboolean)
    failing!(fn IsEnabledi(GLenum, GLuint) -> GLboolean)
    failing!(fn IsFenceAPPLE(GLuint) -> GLboolean)
    failing!(fn IsFenceNV(GLuint) -> GLboolean)
    failing!(fn IsFramebuffer(GLuint) -> GLboolean)
    failing!(fn IsFramebufferEXT(GLuint) -> GLboolean)
    failing!(fn IsFramebufferOES(GLuint) -> GLboolean)
    failing!(fn IsImageHandleResidentARB(GLuint64) -> GLboolean)
    failing!(fn IsImageHandleResidentNV(GLuint64) -> GLboolean)
    failing!(fn IsList(GLuint) -> GLboolean)
    failing!(fn IsNameAMD(GLenum, GLuint) -> GLboolean)
    failing!(fn IsNamedBufferResidentNV(GLuint) -> GLboolean)
    failing!(fn IsNamedStringARB(GLint, *GLchar) -> GLboolean)
    failing!(fn IsObjectBufferATI(GLuint) -> GLboolean)
    failing!(fn IsOcclusionQueryNV(GLuint) -> GLboolean)
    failing!(fn IsPathNV(GLuint) -> GLboolean)
    failing!(fn IsPointInFillPathNV(GLuint, GLuint, GLfloat, GLfloat) -> GLboolean)
    failing!(fn IsPointInStrokePathNV(GLuint, GLfloat, GLfloat) -> GLboolean)
    failing!(fn IsProgram(GLuint) -> GLboolean)
    failing!(fn IsProgramARB(GLuint) -> GLboolean)
    failing!(fn IsProgramNV(GLuint) -> GLboolean)
    failing!(fn IsProgramPipeline(GLuint) -> GLboolean)
    failing!(fn IsProgramPipelineEXT(GLuint) -> GLboolean)
    failing!(fn IsQuery(GLuint) -> GLboolean)
    failing!(fn IsQueryARB(GLuint) -> GLboolean)
    failing!(fn IsQueryEXT(GLuint) -> GLboolean)
    failing!(fn IsRenderbuffer(GLuint) -> GLboolean)
    failing!(fn IsRenderbufferEXT(GLuint) -> GLboolean)
    failing!(fn IsRenderbufferOES(GLuint) -> GLboolean)
    failing!(fn IsSampler(GLuint) -> GLboolean)
    failing!(fn IsShader(GLuint) -> GLboolean)
    failing!(fn IsSync(GLsync) -> GLboolean)
    failing!(fn IsSyncAPPLE(GLsync) -> GLboolean)
    failing!(fn IsTexture(GLuint) -> GLboolean)
    failing!(fn IsTextureEXT(GLuint) -> GLboolean)
    failing!(fn IsTextureHandleResidentARB(GLuint64) -> GLboolean)
    failing!(fn IsTextureHandleResidentNV(GLuint64) -> GLboolean)
    failing!(fn IsTransformFeedback(GLuint) -> GLboolean)
    failing!(fn IsTransformFeedbackNV(GLuint) -> GLboolean)
    failing!(fn IsVariantEnabledEXT(GLuint, GLenum) -> GLboolean)
    failing!(fn IsVertexArray(GLuint) -> GLboolean)
    failing!(fn IsVertexArrayAPPLE(GLuint) -> GLboolean)
    failing!(fn IsVertexArrayOES(GLuint) -> GLboolean)
    failing!(fn IsVertexAttribEnabledAPPLE(GLuint, GLenum) -> GLboolean)
    failing!(fn LabelObjectEXT(GLenum, GLuint, GLsizei, *GLchar) -> c_void)
    failing!(fn LightEnviSGIX(GLenum, GLint) -> c_void)
    failing!(fn LightModelf(GLenum, GLfloat) -> c_void)
    failing!(fn LightModelfv(GLenum, *GLfloat) -> c_void)
    failing!(fn LightModeli(GLenum, GLint) -> c_void)
    failing!(fn LightModeliv(GLenum, *GLint) -> c_void)
    failing!(fn LightModelx(GLenum, GLfixed) -> c_void)
    failing!(fn LightModelxOES(GLenum, GLfixed) -> c_void)
    failing!(fn LightModelxv(GLenum, *GLfixed) -> c_void)
    failing!(fn LightModelxvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn Lightf(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn Lightfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn Lighti(GLenum, GLenum, GLint) -> c_void)
    failing!(fn Lightiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn Lightx(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn LightxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn Lightxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn LightxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn LineStipple(GLint, GLushort) -> c_void)
    failing!(fn LineWidth(GLfloat) -> c_void)
    failing!(fn LineWidthx(GLfixed) -> c_void)
    failing!(fn LineWidthxOES(GLfixed) -> c_void)
    failing!(fn LinkProgram(GLuint) -> c_void)
    failing!(fn LinkProgramARB(GLhandleARB) -> c_void)
    failing!(fn ListBase(GLuint) -> c_void)
    failing!(fn ListParameterfSGIX(GLuint, GLenum, GLfloat) -> c_void)
    failing!(fn ListParameterfvSGIX(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn ListParameteriSGIX(GLuint, GLenum, GLint) -> c_void)
    failing!(fn ListParameterivSGIX(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn LoadIdentity() -> c_void)
    failing!(fn LoadIdentityDeformationMapSGIX(GLbitfield) -> c_void)
    failing!(fn LoadMatrixd(*GLdouble) -> c_void)
    failing!(fn LoadMatrixf(*GLfloat) -> c_void)
    failing!(fn LoadMatrixx(*GLfixed) -> c_void)
    failing!(fn LoadMatrixxOES(*GLfixed) -> c_void)
    failing!(fn LoadName(GLuint) -> c_void)
    failing!(fn LoadPaletteFromModelViewMatrixOES() -> c_void)
    failing!(fn LoadProgramNV(GLenum, GLuint, GLsizei, *GLubyte) -> c_void)
    failing!(fn LoadTransposeMatrixd(*GLdouble) -> c_void)
    failing!(fn LoadTransposeMatrixdARB(*GLdouble) -> c_void)
    failing!(fn LoadTransposeMatrixf(*GLfloat) -> c_void)
    failing!(fn LoadTransposeMatrixfARB(*GLfloat) -> c_void)
    failing!(fn LoadTransposeMatrixxOES(*GLfixed) -> c_void)
    failing!(fn LockArraysEXT(GLint, GLsizei) -> c_void)
    failing!(fn LogicOp(GLenum) -> c_void)
    failing!(fn MakeBufferNonResidentNV(GLenum) -> c_void)
    failing!(fn MakeBufferResidentNV(GLenum, GLenum) -> c_void)
    failing!(fn MakeImageHandleNonResidentARB(GLuint64) -> c_void)
    failing!(fn MakeImageHandleNonResidentNV(GLuint64) -> c_void)
    failing!(fn MakeImageHandleResidentARB(GLuint64, GLenum) -> c_void)
    failing!(fn MakeImageHandleResidentNV(GLuint64, GLenum) -> c_void)
    failing!(fn MakeNamedBufferNonResidentNV(GLuint) -> c_void)
    failing!(fn MakeNamedBufferResidentNV(GLuint, GLenum) -> c_void)
    failing!(fn MakeTextureHandleNonResidentARB(GLuint64) -> c_void)
    failing!(fn MakeTextureHandleNonResidentNV(GLuint64) -> c_void)
    failing!(fn MakeTextureHandleResidentARB(GLuint64) -> c_void)
    failing!(fn MakeTextureHandleResidentNV(GLuint64) -> c_void)
    failing!(fn Map1d(GLenum, GLdouble, GLdouble, GLint, GLint, *GLdouble) -> c_void)
    failing!(fn Map1f(GLenum, GLfloat, GLfloat, GLint, GLint, *GLfloat) -> c_void)
    failing!(fn Map1xOES(GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed) -> c_void)
    failing!(fn Map2d(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, *GLdouble) -> c_void)
    failing!(fn Map2f(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, *GLfloat) -> c_void)
    failing!(fn Map2xOES(GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed) -> c_void)
    failing!(fn MapBuffer(GLenum, GLenum) -> *c_void)
    failing!(fn MapBufferARB(GLenum, GLenum) -> *c_void)
    failing!(fn MapBufferOES(GLenum, GLenum) -> *c_void)
    failing!(fn MapBufferRange(GLenum, GLintptr, GLsizeiptr, GLbitfield) -> *c_void)
    failing!(fn MapBufferRangeEXT(GLenum, GLintptr, GLsizeiptr, GLbitfield) -> *c_void)
    failing!(fn MapControlPointsNV(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, *GLvoid) -> c_void)
    failing!(fn MapGrid1d(GLint, GLdouble, GLdouble) -> c_void)
    failing!(fn MapGrid1f(GLint, GLfloat, GLfloat) -> c_void)
    failing!(fn MapGrid1xOES(GLint, GLfixed, GLfixed) -> c_void)
    failing!(fn MapGrid2d(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble) -> c_void)
    failing!(fn MapGrid2f(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat) -> c_void)
    failing!(fn MapGrid2xOES(GLint, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn MapNamedBufferEXT(GLuint, GLenum) -> *c_void)
    failing!(fn MapNamedBufferRangeEXT(GLuint, GLintptr, GLsizeiptr, GLbitfield) -> *c_void)
    failing!(fn MapObjectBufferATI(GLuint) -> *c_void)
    failing!(fn MapParameterfvNV(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn MapParameterivNV(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn MapTexture2DINTEL(GLuint, GLint, GLbitfield, *GLint, *GLenum) -> *c_void)
    failing!(fn MapVertexAttrib1dAPPLE(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, *GLdouble) -> c_void)
    failing!(fn MapVertexAttrib1fAPPLE(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, *GLfloat) -> c_void)
    failing!(fn MapVertexAttrib2dAPPLE(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, *GLdouble) -> c_void)
    failing!(fn MapVertexAttrib2fAPPLE(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, *GLfloat) -> c_void)
    failing!(fn Materialf(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn Materialfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn Materiali(GLenum, GLenum, GLint) -> c_void)
    failing!(fn Materialiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn Materialx(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn MaterialxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn Materialxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn MaterialxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn MatrixFrustumEXT(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MatrixIndexPointerARB(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn MatrixIndexPointerOES(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn MatrixIndexubvARB(GLint, *GLubyte) -> c_void)
    failing!(fn MatrixIndexuivARB(GLint, *GLuint) -> c_void)
    failing!(fn MatrixIndexusvARB(GLint, *GLushort) -> c_void)
    failing!(fn MatrixLoadIdentityEXT(GLenum) -> c_void)
    failing!(fn MatrixLoadTransposedEXT(GLenum, *GLdouble) -> c_void)
    failing!(fn MatrixLoadTransposefEXT(GLenum, *GLfloat) -> c_void)
    failing!(fn MatrixLoaddEXT(GLenum, *GLdouble) -> c_void)
    failing!(fn MatrixLoadfEXT(GLenum, *GLfloat) -> c_void)
    failing!(fn MatrixMode(GLenum) -> c_void)
    failing!(fn MatrixMultTransposedEXT(GLenum, *GLdouble) -> c_void)
    failing!(fn MatrixMultTransposefEXT(GLenum, *GLfloat) -> c_void)
    failing!(fn MatrixMultdEXT(GLenum, *GLdouble) -> c_void)
    failing!(fn MatrixMultfEXT(GLenum, *GLfloat) -> c_void)
    failing!(fn MatrixOrthoEXT(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MatrixPopEXT(GLenum) -> c_void)
    failing!(fn MatrixPushEXT(GLenum) -> c_void)
    failing!(fn MatrixRotatedEXT(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MatrixRotatefEXT(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MatrixScaledEXT(GLenum, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MatrixScalefEXT(GLenum, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MatrixTranslatedEXT(GLenum, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MatrixTranslatefEXT(GLenum, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MemoryBarrier(GLbitfield) -> c_void)
    failing!(fn MemoryBarrierEXT(GLbitfield) -> c_void)
    failing!(fn MinSampleShading(GLfloat) -> c_void)
    failing!(fn MinSampleShadingARB(GLfloat) -> c_void)
    failing!(fn Minmax(GLenum, GLenum, GLboolean) -> c_void)
    failing!(fn MinmaxEXT(GLenum, GLenum, GLboolean) -> c_void)
    failing!(fn MultMatrixd(*GLdouble) -> c_void)
    failing!(fn MultMatrixf(*GLfloat) -> c_void)
    failing!(fn MultMatrixx(*GLfixed) -> c_void)
    failing!(fn MultMatrixxOES(*GLfixed) -> c_void)
    failing!(fn MultTransposeMatrixd(*GLdouble) -> c_void)
    failing!(fn MultTransposeMatrixdARB(*GLdouble) -> c_void)
    failing!(fn MultTransposeMatrixf(*GLfloat) -> c_void)
    failing!(fn MultTransposeMatrixfARB(*GLfloat) -> c_void)
    failing!(fn MultTransposeMatrixxOES(*GLfixed) -> c_void)
    failing!(fn MultiDrawArrays(GLenum, *GLint, *GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawArraysEXT(GLenum, *GLint, *GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawArraysIndirect(GLenum, *c_void, GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawArraysIndirectAMD(GLenum, *GLvoid, GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawArraysIndirectBindlessNV(GLenum, *GLvoid, GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn MultiDrawElementsIndirectBindlessNV(GLenum, GLenum, *GLvoid, GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn MultiDrawArraysIndirectCountARB(GLenum, GLintptr, GLintptr, GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawElementArrayAPPLE(GLenum, *GLint, *GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawElements(GLenum, *GLsizei, GLenum, **GLvoid, GLsizei) -> c_void)
    failing!(fn MultiDrawElementsBaseVertex(GLenum, *GLsizei, GLenum, **GLvoid, GLsizei, *GLint) -> c_void)
    failing!(fn MultiDrawElementsEXT(GLenum, *GLsizei, GLenum, **GLvoid, GLsizei) -> c_void)
    failing!(fn MultiDrawElementsIndirect(GLenum, GLenum, *c_void, GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawElementsIndirectAMD(GLenum, GLenum, *GLvoid, GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawElementsIndirectCountARB(GLenum, GLenum, GLintptr, GLintptr, GLsizei, GLsizei) -> c_void)
    failing!(fn MultiDrawRangeElementArrayAPPLE(GLenum, GLuint, GLuint, *GLint, *GLsizei, GLsizei) -> c_void)
    failing!(fn MultiModeDrawArraysIBM(*GLenum, *GLint, *GLsizei, GLsizei, GLint) -> c_void)
    failing!(fn MultiModeDrawElementsIBM(*GLenum, *GLsizei, GLenum, **GLvoid, GLsizei, GLint) -> c_void)
    failing!(fn MultiTexBufferEXT(GLenum, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn MultiTexCoord1bOES(GLenum, GLbyte) -> c_void)
    failing!(fn MultiTexCoord1bvOES(GLenum, *GLbyte) -> c_void)
    failing!(fn MultiTexCoord1d(GLenum, GLdouble) -> c_void)
    failing!(fn MultiTexCoord1dARB(GLenum, GLdouble) -> c_void)
    failing!(fn MultiTexCoord1dv(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord1dvARB(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord1f(GLenum, GLfloat) -> c_void)
    failing!(fn MultiTexCoord1fARB(GLenum, GLfloat) -> c_void)
    failing!(fn MultiTexCoord1fv(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord1fvARB(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord1hNV(GLenum, GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord1hvNV(GLenum, *GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord1i(GLenum, GLint) -> c_void)
    failing!(fn MultiTexCoord1iARB(GLenum, GLint) -> c_void)
    failing!(fn MultiTexCoord1iv(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord1ivARB(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord1s(GLenum, GLshort) -> c_void)
    failing!(fn MultiTexCoord1sARB(GLenum, GLshort) -> c_void)
    failing!(fn MultiTexCoord1sv(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord1svARB(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord1xOES(GLenum, GLfixed) -> c_void)
    failing!(fn MultiTexCoord1xvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn MultiTexCoord2bOES(GLenum, GLbyte, GLbyte) -> c_void)
    failing!(fn MultiTexCoord2bvOES(GLenum, *GLbyte) -> c_void)
    failing!(fn MultiTexCoord2d(GLenum, GLdouble, GLdouble) -> c_void)
    failing!(fn MultiTexCoord2dARB(GLenum, GLdouble, GLdouble) -> c_void)
    failing!(fn MultiTexCoord2dv(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord2dvARB(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord2f(GLenum, GLfloat, GLfloat) -> c_void)
    failing!(fn MultiTexCoord2fARB(GLenum, GLfloat, GLfloat) -> c_void)
    failing!(fn MultiTexCoord2fv(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord2fvARB(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord2hNV(GLenum, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord2hvNV(GLenum, *GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord2i(GLenum, GLint, GLint) -> c_void)
    failing!(fn MultiTexCoord2iARB(GLenum, GLint, GLint) -> c_void)
    failing!(fn MultiTexCoord2iv(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord2ivARB(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord2s(GLenum, GLshort, GLshort) -> c_void)
    failing!(fn MultiTexCoord2sARB(GLenum, GLshort, GLshort) -> c_void)
    failing!(fn MultiTexCoord2sv(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord2svARB(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord2xOES(GLenum, GLfixed, GLfixed) -> c_void)
    failing!(fn MultiTexCoord2xvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn MultiTexCoord3bOES(GLenum, GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn MultiTexCoord3bvOES(GLenum, *GLbyte) -> c_void)
    failing!(fn MultiTexCoord3d(GLenum, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MultiTexCoord3dARB(GLenum, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MultiTexCoord3dv(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord3dvARB(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord3f(GLenum, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MultiTexCoord3fARB(GLenum, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MultiTexCoord3fv(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord3fvARB(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord3hNV(GLenum, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord3hvNV(GLenum, *GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord3i(GLenum, GLint, GLint, GLint) -> c_void)
    failing!(fn MultiTexCoord3iARB(GLenum, GLint, GLint, GLint) -> c_void)
    failing!(fn MultiTexCoord3iv(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord3ivARB(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord3s(GLenum, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn MultiTexCoord3sARB(GLenum, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn MultiTexCoord3sv(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord3svARB(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord3xOES(GLenum, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn MultiTexCoord3xvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn MultiTexCoord4bOES(GLenum, GLbyte, GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn MultiTexCoord4bvOES(GLenum, *GLbyte) -> c_void)
    failing!(fn MultiTexCoord4d(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MultiTexCoord4dARB(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn MultiTexCoord4dv(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord4dvARB(GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexCoord4f(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MultiTexCoord4fARB(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn MultiTexCoord4fv(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord4fvARB(GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexCoord4hNV(GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord4hvNV(GLenum, *GLhalfNV) -> c_void)
    failing!(fn MultiTexCoord4i(GLenum, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn MultiTexCoord4iARB(GLenum, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn MultiTexCoord4iv(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord4ivARB(GLenum, *GLint) -> c_void)
    failing!(fn MultiTexCoord4s(GLenum, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn MultiTexCoord4sARB(GLenum, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn MultiTexCoord4sv(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord4svARB(GLenum, *GLshort) -> c_void)
    failing!(fn MultiTexCoord4x(GLenum, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn MultiTexCoord4xOES(GLenum, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn MultiTexCoord4xvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn MultiTexCoordP1ui(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn MultiTexCoordP1uiv(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn MultiTexCoordP2ui(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn MultiTexCoordP2uiv(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn MultiTexCoordP3ui(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn MultiTexCoordP3uiv(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn MultiTexCoordP4ui(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn MultiTexCoordP4uiv(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn MultiTexCoordPointerEXT(GLenum, GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn MultiTexEnvfEXT(GLenum, GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn MultiTexEnvfvEXT(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexEnviEXT(GLenum, GLenum, GLenum, GLint) -> c_void)
    failing!(fn MultiTexEnvivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn MultiTexGendEXT(GLenum, GLenum, GLenum, GLdouble) -> c_void)
    failing!(fn MultiTexGendvEXT(GLenum, GLenum, GLenum, *GLdouble) -> c_void)
    failing!(fn MultiTexGenfEXT(GLenum, GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn MultiTexGenfvEXT(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexGeniEXT(GLenum, GLenum, GLenum, GLint) -> c_void)
    failing!(fn MultiTexGenivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn MultiTexImage1DEXT(GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn MultiTexImage2DEXT(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn MultiTexImage3DEXT(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn MultiTexParameterIivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn MultiTexParameterIuivEXT(GLenum, GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn MultiTexParameterfEXT(GLenum, GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn MultiTexParameterfvEXT(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn MultiTexParameteriEXT(GLenum, GLenum, GLenum, GLint) -> c_void)
    failing!(fn MultiTexParameterivEXT(GLenum, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn MultiTexRenderbufferEXT(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn MultiTexSubImage1DEXT(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn MultiTexSubImage2DEXT(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn MultiTexSubImage3DEXT(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn NamedBufferDataEXT(GLuint, GLsizeiptr, *GLvoid, GLenum) -> c_void)
    failing!(fn NamedBufferStorageEXT(GLuint, GLsizeiptr, *c_void, GLbitfield) -> c_void)
    failing!(fn NamedBufferSubDataEXT(GLuint, GLintptr, GLsizeiptr, *GLvoid) -> c_void)
    failing!(fn NamedCopyBufferSubDataEXT(GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn NamedFramebufferParameteriEXT(GLuint, GLenum, GLint) -> c_void)
    failing!(fn NamedFramebufferRenderbufferEXT(GLuint, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn NamedFramebufferTexture1DEXT(GLuint, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn NamedFramebufferTexture2DEXT(GLuint, GLenum, GLenum, GLuint, GLint) -> c_void)
    failing!(fn NamedFramebufferTexture3DEXT(GLuint, GLenum, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn NamedFramebufferTextureEXT(GLuint, GLenum, GLuint, GLint) -> c_void)
    failing!(fn NamedFramebufferTextureFaceEXT(GLuint, GLenum, GLuint, GLint, GLenum) -> c_void)
    failing!(fn NamedFramebufferTextureLayerEXT(GLuint, GLenum, GLuint, GLint, GLint) -> c_void)
    failing!(fn NamedProgramLocalParameter4dEXT(GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn NamedProgramLocalParameter4dvEXT(GLuint, GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn NamedProgramLocalParameter4fEXT(GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn NamedProgramLocalParameter4fvEXT(GLuint, GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn NamedProgramLocalParameterI4iEXT(GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn NamedProgramLocalParameterI4ivEXT(GLuint, GLenum, GLuint, *GLint) -> c_void)
    failing!(fn NamedProgramLocalParameterI4uiEXT(GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn NamedProgramLocalParameterI4uivEXT(GLuint, GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn NamedProgramLocalParameters4fvEXT(GLuint, GLenum, GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn NamedProgramLocalParametersI4ivEXT(GLuint, GLenum, GLuint, GLsizei, *GLint) -> c_void)
    failing!(fn NamedProgramLocalParametersI4uivEXT(GLuint, GLenum, GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn NamedProgramStringEXT(GLuint, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn NamedRenderbufferStorageEXT(GLuint, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn NamedRenderbufferStorageMultisampleCoverageEXT(GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn NamedRenderbufferStorageMultisampleEXT(GLuint, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn NamedStringARB(GLenum, GLint, *GLchar, GLint, *GLchar) -> c_void)
    failing!(fn NewList(GLuint, GLenum) -> c_void)
    failing!(fn NewObjectBufferATI(GLsizei, *GLvoid, GLenum) -> GLuint)
    failing!(fn Normal3b(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn Normal3bv(*GLbyte) -> c_void)
    failing!(fn Normal3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Normal3dv(*GLdouble) -> c_void)
    failing!(fn Normal3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Normal3fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Normal3fVertex3fvSUN(*GLfloat, *GLfloat) -> c_void)
    failing!(fn Normal3fv(*GLfloat) -> c_void)
    failing!(fn Normal3hNV(GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn Normal3hvNV(*GLhalfNV) -> c_void)
    failing!(fn Normal3i(GLint, GLint, GLint) -> c_void)
    failing!(fn Normal3iv(*GLint) -> c_void)
    failing!(fn Normal3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Normal3sv(*GLshort) -> c_void)
    failing!(fn Normal3x(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Normal3xOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Normal3xvOES(*GLfixed) -> c_void)
    failing!(fn NormalFormatNV(GLenum, GLsizei) -> c_void)
    failing!(fn NormalP3ui(GLenum, GLuint) -> c_void)
    failing!(fn NormalP3uiv(GLenum, *GLuint) -> c_void)
    failing!(fn NormalPointer(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn NormalPointerEXT(GLenum, GLsizei, GLsizei, *GLvoid) -> c_void)
    failing!(fn NormalPointerListIBM(GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn NormalPointervINTEL(GLenum, **GLvoid) -> c_void)
    failing!(fn NormalStream3bATI(GLenum, GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn NormalStream3bvATI(GLenum, *GLbyte) -> c_void)
    failing!(fn NormalStream3dATI(GLenum, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn NormalStream3dvATI(GLenum, *GLdouble) -> c_void)
    failing!(fn NormalStream3fATI(GLenum, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn NormalStream3fvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn NormalStream3iATI(GLenum, GLint, GLint, GLint) -> c_void)
    failing!(fn NormalStream3ivATI(GLenum, *GLint) -> c_void)
    failing!(fn NormalStream3sATI(GLenum, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn NormalStream3svATI(GLenum, *GLshort) -> c_void)
    failing!(fn ObjectLabel(GLenum, GLuint, GLsizei, *GLchar) -> c_void)
    failing!(fn ObjectLabelKHR(GLenum, GLuint, GLsizei, *GLchar) -> c_void)
    failing!(fn ObjectPtrLabel(*c_void, GLsizei, *GLchar) -> c_void)
    failing!(fn ObjectPtrLabelKHR(*c_void, GLsizei, *GLchar) -> c_void)
    failing!(fn ObjectPurgeableAPPLE(GLenum, GLuint, GLenum) -> GLenum)
    failing!(fn ObjectUnpurgeableAPPLE(GLenum, GLuint, GLenum) -> GLenum)
    failing!(fn Ortho(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Orthof(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn OrthofOES(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Orthox(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn OrthoxOES(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn PNTrianglesfATI(GLenum, GLfloat) -> c_void)
    failing!(fn PNTrianglesiATI(GLenum, GLint) -> c_void)
    failing!(fn PassTexCoordATI(GLuint, GLuint, GLenum) -> c_void)
    failing!(fn PassThrough(GLfloat) -> c_void)
    failing!(fn PassThroughxOES(GLfixed) -> c_void)
    failing!(fn PatchParameterfv(GLenum, *GLfloat) -> c_void)
    failing!(fn PatchParameteri(GLenum, GLint) -> c_void)
    failing!(fn PathColorGenNV(GLenum, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn PathCommandsNV(GLuint, GLsizei, *GLubyte, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn PathCoordsNV(GLuint, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn PathCoverDepthFuncNV(GLenum) -> c_void)
    failing!(fn PathDashArrayNV(GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn PathFogGenNV(GLenum) -> c_void)
    failing!(fn PathGlyphRangeNV(GLuint, GLenum, *GLvoid, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat) -> c_void)
    failing!(fn PathGlyphsNV(GLuint, GLenum, *GLvoid, GLbitfield, GLsizei, GLenum, *GLvoid, GLenum, GLuint, GLfloat) -> c_void)
    failing!(fn PathParameterfNV(GLuint, GLenum, GLfloat) -> c_void)
    failing!(fn PathParameterfvNV(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn PathParameteriNV(GLuint, GLenum, GLint) -> c_void)
    failing!(fn PathParameterivNV(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn PathStencilDepthOffsetNV(GLfloat, GLfloat) -> c_void)
    failing!(fn PathStencilFuncNV(GLenum, GLint, GLuint) -> c_void)
    failing!(fn PathStringNV(GLuint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn PathSubCommandsNV(GLuint, GLsizei, GLsizei, GLsizei, *GLubyte, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn PathSubCoordsNV(GLuint, GLsizei, GLsizei, GLenum, *GLvoid) -> c_void)
    failing!(fn PathTexGenNV(GLenum, GLenum, GLint, *GLfloat) -> c_void)
    failing!(fn PauseTransformFeedback() -> c_void)
    failing!(fn PauseTransformFeedbackNV() -> c_void)
    failing!(fn PixelDataRangeNV(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn PixelMapfv(GLenum, GLsizei, *GLfloat) -> c_void)
    failing!(fn PixelMapuiv(GLenum, GLsizei, *GLuint) -> c_void)
    failing!(fn PixelMapusv(GLenum, GLsizei, *GLushort) -> c_void)
    failing!(fn PixelMapx(GLenum, GLint, *GLfixed) -> c_void)
    failing!(fn PixelStoref(GLenum, GLfloat) -> c_void)
    failing!(fn PixelStorei(GLenum, GLint) -> c_void)
    failing!(fn PixelStorex(GLenum, GLfixed) -> c_void)
    failing!(fn PixelTexGenParameterfSGIS(GLenum, GLfloat) -> c_void)
    failing!(fn PixelTexGenParameterfvSGIS(GLenum, *GLfloat) -> c_void)
    failing!(fn PixelTexGenParameteriSGIS(GLenum, GLint) -> c_void)
    failing!(fn PixelTexGenParameterivSGIS(GLenum, *GLint) -> c_void)
    failing!(fn PixelTexGenSGIX(GLenum) -> c_void)
    failing!(fn PixelTransferf(GLenum, GLfloat) -> c_void)
    failing!(fn PixelTransferi(GLenum, GLint) -> c_void)
    failing!(fn PixelTransferxOES(GLenum, GLfixed) -> c_void)
    failing!(fn PixelTransformParameterfEXT(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn PixelTransformParameterfvEXT(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn PixelTransformParameteriEXT(GLenum, GLenum, GLint) -> c_void)
    failing!(fn PixelTransformParameterivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn PixelZoom(GLfloat, GLfloat) -> c_void)
    failing!(fn PixelZoomxOES(GLfixed, GLfixed) -> c_void)
    failing!(fn PointAlongPathNV(GLuint, GLsizei, GLsizei, GLfloat, *GLfloat, *GLfloat, *GLfloat, *GLfloat) -> GLboolean)
    failing!(fn PointParameterf(GLenum, GLfloat) -> c_void)
    failing!(fn PointParameterfARB(GLenum, GLfloat) -> c_void)
    failing!(fn PointParameterfEXT(GLenum, GLfloat) -> c_void)
    failing!(fn PointParameterfSGIS(GLenum, GLfloat) -> c_void)
    failing!(fn PointParameterfv(GLenum, *GLfloat) -> c_void)
    failing!(fn PointParameterfvARB(GLenum, *GLfloat) -> c_void)
    failing!(fn PointParameterfvEXT(GLenum, *GLfloat) -> c_void)
    failing!(fn PointParameterfvSGIS(GLenum, *GLfloat) -> c_void)
    failing!(fn PointParameteri(GLenum, GLint) -> c_void)
    failing!(fn PointParameteriNV(GLenum, GLint) -> c_void)
    failing!(fn PointParameteriv(GLenum, *GLint) -> c_void)
    failing!(fn PointParameterivNV(GLenum, *GLint) -> c_void)
    failing!(fn PointParameterx(GLenum, GLfixed) -> c_void)
    failing!(fn PointParameterxOES(GLenum, GLfixed) -> c_void)
    failing!(fn PointParameterxv(GLenum, *GLfixed) -> c_void)
    failing!(fn PointParameterxvOES(GLenum, *GLfixed) -> c_void)
    failing!(fn PointSize(GLfloat) -> c_void)
    failing!(fn PointSizePointerOES(GLenum, GLsizei, *c_void) -> c_void)
    failing!(fn PointSizex(GLfixed) -> c_void)
    failing!(fn PointSizexOES(GLfixed) -> c_void)
    failing!(fn PollAsyncSGIX(*GLuint) -> GLint)
    failing!(fn PollInstrumentsSGIX(*GLint) -> GLint)
    failing!(fn PolygonMode(GLenum, GLenum) -> c_void)
    failing!(fn PolygonOffset(GLfloat, GLfloat) -> c_void)
    failing!(fn PolygonOffsetEXT(GLfloat, GLfloat) -> c_void)
    failing!(fn PolygonOffsetx(GLfixed, GLfixed) -> c_void)
    failing!(fn PolygonOffsetxOES(GLfixed, GLfixed) -> c_void)
    failing!(fn PolygonStipple(*GLubyte) -> c_void)
    failing!(fn PopAttrib() -> c_void)
    failing!(fn PopClientAttrib() -> c_void)
    failing!(fn PopDebugGroup() -> c_void)
    failing!(fn PopDebugGroupKHR() -> c_void)
    failing!(fn PopGroupMarkerEXT() -> c_void)
    failing!(fn PopMatrix() -> c_void)
    failing!(fn PopName() -> c_void)
    failing!(fn PresentFrameDualFillNV(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint) -> c_void)
    failing!(fn PresentFrameKeyedNV(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint) -> c_void)
    failing!(fn PrimitiveRestartIndex(GLuint) -> c_void)
    failing!(fn PrimitiveRestartIndexNV(GLuint) -> c_void)
    failing!(fn PrimitiveRestartNV() -> c_void)
    failing!(fn PrioritizeTextures(GLsizei, *GLuint, *GLfloat) -> c_void)
    failing!(fn PrioritizeTexturesEXT(GLsizei, *GLuint, *GLclampf) -> c_void)
    failing!(fn PrioritizeTexturesxOES(GLsizei, *GLuint, *GLfixed) -> c_void)
    failing!(fn ProgramBinary(GLuint, GLenum, *GLvoid, GLsizei) -> c_void)
    failing!(fn ProgramBinaryOES(GLuint, GLenum, *GLvoid, GLint) -> c_void)
    failing!(fn ProgramBufferParametersIivNV(GLenum, GLuint, GLuint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramBufferParametersIuivNV(GLenum, GLuint, GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramBufferParametersfvNV(GLenum, GLuint, GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramEnvParameter4dARB(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramEnvParameter4dvARB(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn ProgramEnvParameter4fARB(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramEnvParameter4fvARB(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn ProgramEnvParameterI4iNV(GLenum, GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramEnvParameterI4ivNV(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn ProgramEnvParameterI4uiNV(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramEnvParameterI4uivNV(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn ProgramEnvParameters4fvEXT(GLenum, GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramEnvParametersI4ivNV(GLenum, GLuint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramEnvParametersI4uivNV(GLenum, GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramLocalParameter4dARB(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramLocalParameter4dvARB(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn ProgramLocalParameter4fARB(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramLocalParameter4fvARB(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn ProgramLocalParameterI4iNV(GLenum, GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramLocalParameterI4ivNV(GLenum, GLuint, *GLint) -> c_void)
    failing!(fn ProgramLocalParameterI4uiNV(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramLocalParameterI4uivNV(GLenum, GLuint, *GLuint) -> c_void)
    failing!(fn ProgramLocalParameters4fvEXT(GLenum, GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramLocalParametersI4ivNV(GLenum, GLuint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramLocalParametersI4uivNV(GLenum, GLuint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramNamedParameter4dNV(GLuint, GLsizei, *GLubyte, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramNamedParameter4dvNV(GLuint, GLsizei, *GLubyte, *GLdouble) -> c_void)
    failing!(fn ProgramNamedParameter4fNV(GLuint, GLsizei, *GLubyte, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramNamedParameter4fvNV(GLuint, GLsizei, *GLubyte, *GLfloat) -> c_void)
    failing!(fn ProgramParameter4dNV(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramParameter4dvNV(GLenum, GLuint, *GLdouble) -> c_void)
    failing!(fn ProgramParameter4fNV(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramParameter4fvNV(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn ProgramParameteri(GLuint, GLenum, GLint) -> c_void)
    failing!(fn ProgramParameteriARB(GLuint, GLenum, GLint) -> c_void)
    failing!(fn ProgramParameteriEXT(GLuint, GLenum, GLint) -> c_void)
    failing!(fn ProgramParameters4dvNV(GLenum, GLuint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramParameters4fvNV(GLenum, GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramStringARB(GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn ProgramSubroutineParametersuivNV(GLenum, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform1d(GLuint, GLint, GLdouble) -> c_void)
    failing!(fn ProgramUniform1dEXT(GLuint, GLint, GLdouble) -> c_void)
    failing!(fn ProgramUniform1dv(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform1dvEXT(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform1f(GLuint, GLint, GLfloat) -> c_void)
    failing!(fn ProgramUniform1fEXT(GLuint, GLint, GLfloat) -> c_void)
    failing!(fn ProgramUniform1fv(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform1fvEXT(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform1i(GLuint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform1i64NV(GLuint, GLint, GLint64EXT) -> c_void)
    failing!(fn ProgramUniform1i64vNV(GLuint, GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn ProgramUniform1iEXT(GLuint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform1iv(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform1ivEXT(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform1ui(GLuint, GLint, GLuint) -> c_void)
    failing!(fn ProgramUniform1ui64NV(GLuint, GLint, GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform1ui64vNV(GLuint, GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform1uiEXT(GLuint, GLint, GLuint) -> c_void)
    failing!(fn ProgramUniform1uiv(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform1uivEXT(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform2d(GLuint, GLint, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramUniform2dEXT(GLuint, GLint, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramUniform2dv(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform2dvEXT(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform2f(GLuint, GLint, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramUniform2fEXT(GLuint, GLint, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramUniform2fv(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform2fvEXT(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform2i(GLuint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform2i64NV(GLuint, GLint, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn ProgramUniform2i64vNV(GLuint, GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn ProgramUniform2iEXT(GLuint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform2iv(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform2ivEXT(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform2ui(GLuint, GLint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramUniform2ui64NV(GLuint, GLint, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform2ui64vNV(GLuint, GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform2uiEXT(GLuint, GLint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramUniform2uiv(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform2uivEXT(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform3d(GLuint, GLint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramUniform3dEXT(GLuint, GLint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramUniform3dv(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform3dvEXT(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform3f(GLuint, GLint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramUniform3fEXT(GLuint, GLint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramUniform3fv(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform3fvEXT(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform3i(GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform3i64NV(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn ProgramUniform3i64vNV(GLuint, GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn ProgramUniform3iEXT(GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform3iv(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform3ivEXT(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform3ui(GLuint, GLint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramUniform3ui64NV(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform3ui64vNV(GLuint, GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform3uiEXT(GLuint, GLint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramUniform3uiv(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform3uivEXT(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform4d(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramUniform4dEXT(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn ProgramUniform4dv(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform4dvEXT(GLuint, GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn ProgramUniform4f(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramUniform4fEXT(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ProgramUniform4fv(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform4fvEXT(GLuint, GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ProgramUniform4i(GLuint, GLint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform4i64NV(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn ProgramUniform4i64vNV(GLuint, GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn ProgramUniform4iEXT(GLuint, GLint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn ProgramUniform4iv(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform4ivEXT(GLuint, GLint, GLsizei, *GLint) -> c_void)
    failing!(fn ProgramUniform4ui(GLuint, GLint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramUniform4ui64NV(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform4ui64vNV(GLuint, GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn ProgramUniform4uiEXT(GLuint, GLint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ProgramUniform4uiv(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniform4uivEXT(GLuint, GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn ProgramUniformHandleui64ARB(GLuint, GLint, GLuint64) -> c_void)
    failing!(fn ProgramUniformHandleui64NV(GLuint, GLint, GLuint64) -> c_void)
    failing!(fn ProgramUniformHandleui64vARB(GLuint, GLint, GLsizei, *GLuint64) -> c_void)
    failing!(fn ProgramUniformHandleui64vNV(GLuint, GLint, GLsizei, *GLuint64) -> c_void)
    failing!(fn ProgramUniformMatrix2dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix2dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix2fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix2fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix2x3dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix2x3dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix2x3fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix2x3fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix2x4dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix2x4dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix2x4fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix2x4fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix3dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix3dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix3fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix3fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix3x2dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix3x2dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix3x2fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix3x2fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix3x4dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix3x4dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix3x4fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix3x4fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix4dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix4dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix4fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix4fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix4x2dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix4x2dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix4x2fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix4x2fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix4x3dv(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix4x3dvEXT(GLuint, GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn ProgramUniformMatrix4x3fv(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformMatrix4x3fvEXT(GLuint, GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn ProgramUniformui64NV(GLuint, GLint, GLuint64EXT) -> c_void)
    failing!(fn ProgramUniformui64vNV(GLuint, GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn ProgramVertexLimitNV(GLenum, GLint) -> c_void)
    failing!(fn ProvokingVertex(GLenum) -> c_void)
    failing!(fn ProvokingVertexEXT(GLenum) -> c_void)
    failing!(fn PushAttrib(GLbitfield) -> c_void)
    failing!(fn PushClientAttrib(GLbitfield) -> c_void)
    failing!(fn PushClientAttribDefaultEXT(GLbitfield) -> c_void)
    failing!(fn PushDebugGroup(GLenum, GLuint, GLsizei, *GLchar) -> c_void)
    failing!(fn PushDebugGroupKHR(GLenum, GLuint, GLsizei, *GLchar) -> c_void)
    failing!(fn PushGroupMarkerEXT(GLsizei, *GLchar) -> c_void)
    failing!(fn PushMatrix() -> c_void)
    failing!(fn PushName(GLuint) -> c_void)
    failing!(fn QueryCounter(GLuint, GLenum) -> c_void)
    failing!(fn QueryCounterEXT(GLuint, GLenum) -> c_void)
    failing!(fn QueryMatrixxOES(*GLfixed, *GLint) -> GLbitfield)
    failing!(fn RasterPos2d(GLdouble, GLdouble) -> c_void)
    failing!(fn RasterPos2dv(*GLdouble) -> c_void)
    failing!(fn RasterPos2f(GLfloat, GLfloat) -> c_void)
    failing!(fn RasterPos2fv(*GLfloat) -> c_void)
    failing!(fn RasterPos2i(GLint, GLint) -> c_void)
    failing!(fn RasterPos2iv(*GLint) -> c_void)
    failing!(fn RasterPos2s(GLshort, GLshort) -> c_void)
    failing!(fn RasterPos2sv(*GLshort) -> c_void)
    failing!(fn RasterPos2xOES(GLfixed, GLfixed) -> c_void)
    failing!(fn RasterPos2xvOES(*GLfixed) -> c_void)
    failing!(fn RasterPos3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn RasterPos3dv(*GLdouble) -> c_void)
    failing!(fn RasterPos3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn RasterPos3fv(*GLfloat) -> c_void)
    failing!(fn RasterPos3i(GLint, GLint, GLint) -> c_void)
    failing!(fn RasterPos3iv(*GLint) -> c_void)
    failing!(fn RasterPos3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn RasterPos3sv(*GLshort) -> c_void)
    failing!(fn RasterPos3xOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn RasterPos3xvOES(*GLfixed) -> c_void)
    failing!(fn RasterPos4d(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn RasterPos4dv(*GLdouble) -> c_void)
    failing!(fn RasterPos4f(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn RasterPos4fv(*GLfloat) -> c_void)
    failing!(fn RasterPos4i(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn RasterPos4iv(*GLint) -> c_void)
    failing!(fn RasterPos4s(GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn RasterPos4sv(*GLshort) -> c_void)
    failing!(fn RasterPos4xOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn RasterPos4xvOES(*GLfixed) -> c_void)
    failing!(fn ReadBuffer(GLenum) -> c_void)
    failing!(fn ReadBufferIndexedEXT(GLenum, GLint) -> c_void)
    failing!(fn ReadBufferNV(GLenum) -> c_void)
    failing!(fn ReadInstrumentsSGIX(GLint) -> c_void)
    failing!(fn ReadPixels(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn ReadnPixelsARB(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn ReadnPixelsEXT(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn Rectd(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Rectdv(*GLdouble, *GLdouble) -> c_void)
    failing!(fn Rectf(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Rectfv(*GLfloat, *GLfloat) -> c_void)
    failing!(fn Recti(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Rectiv(*GLint, *GLint) -> c_void)
    failing!(fn Rects(GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Rectsv(*GLshort, *GLshort) -> c_void)
    failing!(fn RectxOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn RectxvOES(*GLfixed, *GLfixed) -> c_void)
    failing!(fn ReferencePlaneSGIX(*GLdouble) -> c_void)
    failing!(fn ReleaseShaderCompiler() -> c_void)
    failing!(fn RenderMode(GLenum) -> GLint)
    failing!(fn RenderbufferStorage(GLenum, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageEXT(GLenum, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisample(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisampleANGLE(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisampleAPPLE(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisampleCoverageNV(GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisampleEXT(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisampleIMG(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageMultisampleNV(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn RenderbufferStorageOES(GLenum, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn ReplacementCodePointerSUN(GLenum, GLsizei, **GLvoid) -> c_void)
    failing!(fn ReplacementCodeubSUN(GLubyte) -> c_void)
    failing!(fn ReplacementCodeubvSUN(*GLubyte) -> c_void)
    failing!(fn ReplacementCodeuiColor3fVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiColor3fVertex3fvSUN(*GLuint, *GLfloat, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiColor4fNormal3fVertex3fvSUN(*GLuint, *GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiColor4ubVertex3fSUN(GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiColor4ubVertex3fvSUN(*GLuint, *GLubyte, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiNormal3fVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiNormal3fVertex3fvSUN(*GLuint, *GLfloat, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiSUN(GLuint) -> c_void)
    failing!(fn ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(*GLuint, *GLfloat, *GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(*GLuint, *GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiTexCoord2fVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiTexCoord2fVertex3fvSUN(*GLuint, *GLfloat, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiVertex3fSUN(GLuint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ReplacementCodeuiVertex3fvSUN(*GLuint, *GLfloat) -> c_void)
    failing!(fn ReplacementCodeuivSUN(*GLuint) -> c_void)
    failing!(fn ReplacementCodeusSUN(GLushort) -> c_void)
    failing!(fn ReplacementCodeusvSUN(*GLushort) -> c_void)
    failing!(fn RequestResidentProgramsNV(GLsizei, *GLuint) -> c_void)
    failing!(fn ResetHistogram(GLenum) -> c_void)
    failing!(fn ResetHistogramEXT(GLenum) -> c_void)
    failing!(fn ResetMinmax(GLenum) -> c_void)
    failing!(fn ResetMinmaxEXT(GLenum) -> c_void)
    failing!(fn ResizeBuffersMESA() -> c_void)
    failing!(fn ResolveMultisampleFramebufferAPPLE() -> c_void)
    failing!(fn ResumeTransformFeedback() -> c_void)
    failing!(fn ResumeTransformFeedbackNV() -> c_void)
    failing!(fn Rotated(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Rotatef(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Rotatex(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn RotatexOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn SampleCoverage(GLfloat, GLboolean) -> c_void)
    failing!(fn SampleCoverageARB(GLfloat, GLboolean) -> c_void)
    failing!(fn SampleCoverageOES(GLfixed, GLboolean) -> c_void)
    failing!(fn SampleCoveragex(GLclampx, GLboolean) -> c_void)
    failing!(fn SampleCoveragexOES(GLclampx, GLboolean) -> c_void)
    failing!(fn SampleMapATI(GLuint, GLuint, GLenum) -> c_void)
    failing!(fn SampleMaskEXT(GLclampf, GLboolean) -> c_void)
    failing!(fn SampleMaskIndexedNV(GLuint, GLbitfield) -> c_void)
    failing!(fn SampleMaskSGIS(GLclampf, GLboolean) -> c_void)
    failing!(fn SampleMaski(GLuint, GLbitfield) -> c_void)
    failing!(fn SamplePatternEXT(GLenum) -> c_void)
    failing!(fn SamplePatternSGIS(GLenum) -> c_void)
    failing!(fn SamplerParameterIiv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn SamplerParameterIuiv(GLuint, GLenum, *GLuint) -> c_void)
    failing!(fn SamplerParameterf(GLuint, GLenum, GLfloat) -> c_void)
    failing!(fn SamplerParameterfv(GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn SamplerParameteri(GLuint, GLenum, GLint) -> c_void)
    failing!(fn SamplerParameteriv(GLuint, GLenum, *GLint) -> c_void)
    failing!(fn Scaled(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Scalef(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Scalex(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn ScalexOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Scissor(GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn ScissorArrayv(GLuint, GLsizei, *GLint) -> c_void)
    failing!(fn ScissorIndexed(GLuint, GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn ScissorIndexedv(GLuint, *GLint) -> c_void)
    failing!(fn SecondaryColor3b(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn SecondaryColor3bEXT(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn SecondaryColor3bv(*GLbyte) -> c_void)
    failing!(fn SecondaryColor3bvEXT(*GLbyte) -> c_void)
    failing!(fn SecondaryColor3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn SecondaryColor3dEXT(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn SecondaryColor3dv(*GLdouble) -> c_void)
    failing!(fn SecondaryColor3dvEXT(*GLdouble) -> c_void)
    failing!(fn SecondaryColor3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn SecondaryColor3fEXT(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn SecondaryColor3fv(*GLfloat) -> c_void)
    failing!(fn SecondaryColor3fvEXT(*GLfloat) -> c_void)
    failing!(fn SecondaryColor3hNV(GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn SecondaryColor3hvNV(*GLhalfNV) -> c_void)
    failing!(fn SecondaryColor3i(GLint, GLint, GLint) -> c_void)
    failing!(fn SecondaryColor3iEXT(GLint, GLint, GLint) -> c_void)
    failing!(fn SecondaryColor3iv(*GLint) -> c_void)
    failing!(fn SecondaryColor3ivEXT(*GLint) -> c_void)
    failing!(fn SecondaryColor3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn SecondaryColor3sEXT(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn SecondaryColor3sv(*GLshort) -> c_void)
    failing!(fn SecondaryColor3svEXT(*GLshort) -> c_void)
    failing!(fn SecondaryColor3ub(GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn SecondaryColor3ubEXT(GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn SecondaryColor3ubv(*GLubyte) -> c_void)
    failing!(fn SecondaryColor3ubvEXT(*GLubyte) -> c_void)
    failing!(fn SecondaryColor3ui(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn SecondaryColor3uiEXT(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn SecondaryColor3uiv(*GLuint) -> c_void)
    failing!(fn SecondaryColor3uivEXT(*GLuint) -> c_void)
    failing!(fn SecondaryColor3us(GLushort, GLushort, GLushort) -> c_void)
    failing!(fn SecondaryColor3usEXT(GLushort, GLushort, GLushort) -> c_void)
    failing!(fn SecondaryColor3usv(*GLushort) -> c_void)
    failing!(fn SecondaryColor3usvEXT(*GLushort) -> c_void)
    failing!(fn SecondaryColorFormatNV(GLint, GLenum, GLsizei) -> c_void)
    failing!(fn SecondaryColorP3ui(GLenum, GLuint) -> c_void)
    failing!(fn SecondaryColorP3uiv(GLenum, *GLuint) -> c_void)
    failing!(fn SecondaryColorPointer(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn SecondaryColorPointerEXT(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn SecondaryColorPointerListIBM(GLint, GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn SelectBuffer(GLsizei, *GLuint) -> c_void)
    failing!(fn SelectPerfMonitorCountersAMD(GLuint, GLboolean, GLuint, GLint, *GLuint) -> c_void)
    failing!(fn SeparableFilter2D(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, *GLvoid, *GLvoid) -> c_void)
    failing!(fn SeparableFilter2DEXT(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, *GLvoid, *GLvoid) -> c_void)
    failing!(fn SetFenceAPPLE(GLuint) -> c_void)
    failing!(fn SetFenceNV(GLuint, GLenum) -> c_void)
    failing!(fn SetFragmentShaderConstantATI(GLuint, *GLfloat) -> c_void)
    failing!(fn SetInvariantEXT(GLuint, GLenum, *GLvoid) -> c_void)
    failing!(fn SetLocalConstantEXT(GLuint, GLenum, *GLvoid) -> c_void)
    failing!(fn SetMultisamplefvAMD(GLenum, GLuint, *GLfloat) -> c_void)
    failing!(fn ShadeModel(GLenum) -> c_void)
    failing!(fn ShaderBinary(GLsizei, *GLuint, GLenum, *GLvoid, GLsizei) -> c_void)
    failing!(fn ShaderOp1EXT(GLenum, GLuint, GLuint) -> c_void)
    failing!(fn ShaderOp2EXT(GLenum, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ShaderOp3EXT(GLenum, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn ShaderSource(GLuint, GLsizei, **GLchar, *GLint) -> c_void)
    failing!(fn ShaderSourceARB(GLhandleARB, GLsizei, **GLcharARB, *GLint) -> c_void)
    failing!(fn ShaderStorageBlockBinding(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn SharpenTexFuncSGIS(GLenum, GLsizei, *GLfloat) -> c_void)
    failing!(fn SpriteParameterfSGIX(GLenum, GLfloat) -> c_void)
    failing!(fn SpriteParameterfvSGIX(GLenum, *GLfloat) -> c_void)
    failing!(fn SpriteParameteriSGIX(GLenum, GLint) -> c_void)
    failing!(fn SpriteParameterivSGIX(GLenum, *GLint) -> c_void)
    failing!(fn StartInstrumentsSGIX() -> c_void)
    failing!(fn StartTilingQCOM(GLuint, GLuint, GLuint, GLuint, GLbitfield) -> c_void)
    failing!(fn StencilClearTagEXT(GLsizei, GLuint) -> c_void)
    failing!(fn StencilFillPathInstancedNV(GLsizei, GLenum, *GLvoid, GLuint, GLenum, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn StencilFillPathNV(GLuint, GLenum, GLuint) -> c_void)
    failing!(fn StencilFunc(GLenum, GLint, GLuint) -> c_void)
    failing!(fn StencilFuncSeparate(GLenum, GLenum, GLint, GLuint) -> c_void)
    failing!(fn StencilFuncSeparateATI(GLenum, GLenum, GLint, GLuint) -> c_void)
    failing!(fn StencilMask(GLuint) -> c_void)
    failing!(fn StencilMaskSeparate(GLenum, GLuint) -> c_void)
    failing!(fn StencilOp(GLenum, GLenum, GLenum) -> c_void)
    failing!(fn StencilOpSeparate(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn StencilOpSeparateATI(GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn StencilOpValueAMD(GLenum, GLuint) -> c_void)
    failing!(fn StencilStrokePathInstancedNV(GLsizei, GLenum, *GLvoid, GLuint, GLint, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn StencilStrokePathNV(GLuint, GLint, GLuint) -> c_void)
    failing!(fn StopInstrumentsSGIX(GLint) -> c_void)
    failing!(fn StringMarkerGREMEDY(GLsizei, *GLvoid) -> c_void)
    failing!(fn SwizzleEXT(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) -> c_void)
    failing!(fn SyncTextureINTEL(GLuint) -> c_void)
    failing!(fn TagSampleBufferSGIX() -> c_void)
    failing!(fn Tangent3bEXT(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn Tangent3bvEXT(*GLbyte) -> c_void)
    failing!(fn Tangent3dEXT(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Tangent3dvEXT(*GLdouble) -> c_void)
    failing!(fn Tangent3fEXT(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Tangent3fvEXT(*GLfloat) -> c_void)
    failing!(fn Tangent3iEXT(GLint, GLint, GLint) -> c_void)
    failing!(fn Tangent3ivEXT(*GLint) -> c_void)
    failing!(fn Tangent3sEXT(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Tangent3svEXT(*GLshort) -> c_void)
    failing!(fn TangentPointerEXT(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn TbufferMask3DFX(GLuint) -> c_void)
    failing!(fn TessellationFactorAMD(GLfloat) -> c_void)
    failing!(fn TessellationModeAMD(GLenum) -> c_void)
    failing!(fn TestFenceAPPLE(GLuint) -> GLboolean)
    failing!(fn TestFenceNV(GLuint) -> GLboolean)
    failing!(fn TestObjectAPPLE(GLenum, GLuint) -> GLboolean)
    failing!(fn TexBuffer(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn TexBufferARB(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn TexBufferEXT(GLenum, GLenum, GLuint) -> c_void)
    failing!(fn TexBufferRange(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn TexBumpParameterfvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn TexBumpParameterivATI(GLenum, *GLint) -> c_void)
    failing!(fn TexCoord1bOES(GLbyte) -> c_void)
    failing!(fn TexCoord1bvOES(*GLbyte) -> c_void)
    failing!(fn TexCoord1d(GLdouble) -> c_void)
    failing!(fn TexCoord1dv(*GLdouble) -> c_void)
    failing!(fn TexCoord1f(GLfloat) -> c_void)
    failing!(fn TexCoord1fv(*GLfloat) -> c_void)
    failing!(fn TexCoord1hNV(GLhalfNV) -> c_void)
    failing!(fn TexCoord1hvNV(*GLhalfNV) -> c_void)
    failing!(fn TexCoord1i(GLint) -> c_void)
    failing!(fn TexCoord1iv(*GLint) -> c_void)
    failing!(fn TexCoord1s(GLshort) -> c_void)
    failing!(fn TexCoord1sv(*GLshort) -> c_void)
    failing!(fn TexCoord1xOES(GLfixed) -> c_void)
    failing!(fn TexCoord1xvOES(*GLfixed) -> c_void)
    failing!(fn TexCoord2bOES(GLbyte, GLbyte) -> c_void)
    failing!(fn TexCoord2bvOES(*GLbyte) -> c_void)
    failing!(fn TexCoord2d(GLdouble, GLdouble) -> c_void)
    failing!(fn TexCoord2dv(*GLdouble) -> c_void)
    failing!(fn TexCoord2f(GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord2fColor3fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord2fColor3fVertex3fvSUN(*GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn TexCoord2fColor4fNormal3fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord2fColor4fNormal3fVertex3fvSUN(*GLfloat, *GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn TexCoord2fColor4ubVertex3fSUN(GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord2fColor4ubVertex3fvSUN(*GLfloat, *GLubyte, *GLfloat) -> c_void)
    failing!(fn TexCoord2fNormal3fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord2fNormal3fVertex3fvSUN(*GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn TexCoord2fVertex3fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord2fVertex3fvSUN(*GLfloat, *GLfloat) -> c_void)
    failing!(fn TexCoord2fv(*GLfloat) -> c_void)
    failing!(fn TexCoord2hNV(GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn TexCoord2hvNV(*GLhalfNV) -> c_void)
    failing!(fn TexCoord2i(GLint, GLint) -> c_void)
    failing!(fn TexCoord2iv(*GLint) -> c_void)
    failing!(fn TexCoord2s(GLshort, GLshort) -> c_void)
    failing!(fn TexCoord2sv(*GLshort) -> c_void)
    failing!(fn TexCoord2xOES(GLfixed, GLfixed) -> c_void)
    failing!(fn TexCoord2xvOES(*GLfixed) -> c_void)
    failing!(fn TexCoord3bOES(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn TexCoord3bvOES(*GLbyte) -> c_void)
    failing!(fn TexCoord3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn TexCoord3dv(*GLdouble) -> c_void)
    failing!(fn TexCoord3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord3fv(*GLfloat) -> c_void)
    failing!(fn TexCoord3hNV(GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn TexCoord3hvNV(*GLhalfNV) -> c_void)
    failing!(fn TexCoord3i(GLint, GLint, GLint) -> c_void)
    failing!(fn TexCoord3iv(*GLint) -> c_void)
    failing!(fn TexCoord3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn TexCoord3sv(*GLshort) -> c_void)
    failing!(fn TexCoord3xOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn TexCoord3xvOES(*GLfixed) -> c_void)
    failing!(fn TexCoord4bOES(GLbyte, GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn TexCoord4bvOES(*GLbyte) -> c_void)
    failing!(fn TexCoord4d(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn TexCoord4dv(*GLdouble) -> c_void)
    failing!(fn TexCoord4f(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord4fColor4fNormal3fVertex4fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord4fColor4fNormal3fVertex4fvSUN(*GLfloat, *GLfloat, *GLfloat, *GLfloat) -> c_void)
    failing!(fn TexCoord4fVertex4fSUN(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn TexCoord4fVertex4fvSUN(*GLfloat, *GLfloat) -> c_void)
    failing!(fn TexCoord4fv(*GLfloat) -> c_void)
    failing!(fn TexCoord4hNV(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn TexCoord4hvNV(*GLhalfNV) -> c_void)
    failing!(fn TexCoord4i(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn TexCoord4iv(*GLint) -> c_void)
    failing!(fn TexCoord4s(GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn TexCoord4sv(*GLshort) -> c_void)
    failing!(fn TexCoord4xOES(GLfixed, GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn TexCoord4xvOES(*GLfixed) -> c_void)
    failing!(fn TexCoordFormatNV(GLint, GLenum, GLsizei) -> c_void)
    failing!(fn TexCoordP1ui(GLenum, GLuint) -> c_void)
    failing!(fn TexCoordP1uiv(GLenum, *GLuint) -> c_void)
    failing!(fn TexCoordP2ui(GLenum, GLuint) -> c_void)
    failing!(fn TexCoordP2uiv(GLenum, *GLuint) -> c_void)
    failing!(fn TexCoordP3ui(GLenum, GLuint) -> c_void)
    failing!(fn TexCoordP3uiv(GLenum, *GLuint) -> c_void)
    failing!(fn TexCoordP4ui(GLenum, GLuint) -> c_void)
    failing!(fn TexCoordP4uiv(GLenum, *GLuint) -> c_void)
    failing!(fn TexCoordPointer(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn TexCoordPointerEXT(GLint, GLenum, GLsizei, GLsizei, *GLvoid) -> c_void)
    failing!(fn TexCoordPointerListIBM(GLint, GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn TexCoordPointervINTEL(GLint, GLenum, **GLvoid) -> c_void)
    failing!(fn TexEnvf(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn TexEnvfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn TexEnvi(GLenum, GLenum, GLint) -> c_void)
    failing!(fn TexEnviv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TexEnvx(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn TexEnvxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn TexEnvxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn TexEnvxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn TexFilterFuncSGIS(GLenum, GLenum, GLsizei, *GLfloat) -> c_void)
    failing!(fn TexGend(GLenum, GLenum, GLdouble) -> c_void)
    failing!(fn TexGendv(GLenum, GLenum, *GLdouble) -> c_void)
    failing!(fn TexGenf(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn TexGenfOES(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn TexGenfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn TexGenfvOES(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn TexGeni(GLenum, GLenum, GLint) -> c_void)
    failing!(fn TexGeniOES(GLenum, GLenum, GLint) -> c_void)
    failing!(fn TexGeniv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TexGenivOES(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TexGenxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn TexGenxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn TexImage1D(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexImage2D(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexImage2DMultisample(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexImage2DMultisampleCoverageNV(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexImage3D(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexImage3DEXT(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexImage3DMultisample(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexImage3DMultisampleCoverageNV(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexImage3DOES(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexImage4DSGIS(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexPageCommitmentARB(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexParameterIiv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TexParameterIivEXT(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TexParameterIuiv(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn TexParameterIuivEXT(GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn TexParameterf(GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn TexParameterfv(GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn TexParameteri(GLenum, GLenum, GLint) -> c_void)
    failing!(fn TexParameteriv(GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TexParameterx(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn TexParameterxOES(GLenum, GLenum, GLfixed) -> c_void)
    failing!(fn TexParameterxv(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn TexParameterxvOES(GLenum, GLenum, *GLfixed) -> c_void)
    failing!(fn TexRenderbufferNV(GLenum, GLuint) -> c_void)
    failing!(fn TexStorage1D(GLenum, GLsizei, GLenum, GLsizei) -> c_void)
    failing!(fn TexStorage1DEXT(GLenum, GLsizei, GLenum, GLsizei) -> c_void)
    failing!(fn TexStorage2D(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn TexStorage2DEXT(GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn TexStorage2DMultisample(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexStorage3D(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> c_void)
    failing!(fn TexStorage3DEXT(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> c_void)
    failing!(fn TexStorage3DMultisample(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TexStorageSparseAMD(GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) -> c_void)
    failing!(fn TexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage1DEXT(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage2D(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage2DEXT(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage3D(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage3DEXT(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage3DOES(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TexSubImage4DSGIS(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureBarrierNV() -> c_void)
    failing!(fn TextureBufferEXT(GLuint, GLenum, GLenum, GLuint) -> c_void)
    failing!(fn TextureBufferRangeEXT(GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr) -> c_void)
    failing!(fn TextureColorMaskSGIS(GLboolean, GLboolean, GLboolean, GLboolean) -> c_void)
    failing!(fn TextureImage1DEXT(GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureImage2DEXT(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureImage2DMultisampleCoverageNV(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureImage2DMultisampleNV(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureImage3DEXT(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureImage3DMultisampleCoverageNV(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureImage3DMultisampleNV(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureLightEXT(GLenum) -> c_void)
    failing!(fn TextureMaterialEXT(GLenum, GLenum) -> c_void)
    failing!(fn TextureNormalEXT(GLenum) -> c_void)
    failing!(fn TexturePageCommitmentEXT(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureParameterIivEXT(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TextureParameterIuivEXT(GLuint, GLenum, GLenum, *GLuint) -> c_void)
    failing!(fn TextureParameterfEXT(GLuint, GLenum, GLenum, GLfloat) -> c_void)
    failing!(fn TextureParameterfvEXT(GLuint, GLenum, GLenum, *GLfloat) -> c_void)
    failing!(fn TextureParameteriEXT(GLuint, GLenum, GLenum, GLint) -> c_void)
    failing!(fn TextureParameterivEXT(GLuint, GLenum, GLenum, *GLint) -> c_void)
    failing!(fn TextureRangeAPPLE(GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn TextureRenderbufferEXT(GLuint, GLenum, GLuint) -> c_void)
    failing!(fn TextureStorage1DEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei) -> c_void)
    failing!(fn TextureStorage2DEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei) -> c_void)
    failing!(fn TextureStorage2DMultisampleEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureStorage3DEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei) -> c_void)
    failing!(fn TextureStorage3DMultisampleEXT(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) -> c_void)
    failing!(fn TextureStorageSparseAMD(GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield) -> c_void)
    failing!(fn TextureSubImage1DEXT(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureSubImage2DEXT(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureSubImage3DEXT(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) -> c_void)
    failing!(fn TextureView(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn TrackMatrixNV(GLenum, GLuint, GLenum, GLenum) -> c_void)
    failing!(fn TransformFeedbackAttribsNV(GLuint, *GLint, GLenum) -> c_void)
    failing!(fn TransformFeedbackStreamAttribsNV(GLsizei, *GLint, GLsizei, *GLint, GLenum) -> c_void)
    failing!(fn TransformFeedbackVaryings(GLuint, GLsizei, **GLchar, GLenum) -> c_void)
    failing!(fn TransformFeedbackVaryingsEXT(GLuint, GLsizei, **GLchar, GLenum) -> c_void)
    failing!(fn TransformFeedbackVaryingsNV(GLuint, GLsizei, *GLint, GLenum) -> c_void)
    failing!(fn TransformPathNV(GLuint, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn Translated(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Translatef(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Translatex(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn TranslatexOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Uniform1d(GLint, GLdouble) -> c_void)
    failing!(fn Uniform1dv(GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn Uniform1f(GLint, GLfloat) -> c_void)
    failing!(fn Uniform1fARB(GLint, GLfloat) -> c_void)
    failing!(fn Uniform1fv(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform1fvARB(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform1i(GLint, GLint) -> c_void)
    failing!(fn Uniform1i64NV(GLint, GLint64EXT) -> c_void)
    failing!(fn Uniform1i64vNV(GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn Uniform1iARB(GLint, GLint) -> c_void)
    failing!(fn Uniform1iv(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform1ivARB(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform1ui(GLint, GLuint) -> c_void)
    failing!(fn Uniform1ui64NV(GLint, GLuint64EXT) -> c_void)
    failing!(fn Uniform1ui64vNV(GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn Uniform1uiEXT(GLint, GLuint) -> c_void)
    failing!(fn Uniform1uiv(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform1uivEXT(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform2d(GLint, GLdouble, GLdouble) -> c_void)
    failing!(fn Uniform2dv(GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn Uniform2f(GLint, GLfloat, GLfloat) -> c_void)
    failing!(fn Uniform2fARB(GLint, GLfloat, GLfloat) -> c_void)
    failing!(fn Uniform2fv(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform2fvARB(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform2i(GLint, GLint, GLint) -> c_void)
    failing!(fn Uniform2i64NV(GLint, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn Uniform2i64vNV(GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn Uniform2iARB(GLint, GLint, GLint) -> c_void)
    failing!(fn Uniform2iv(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform2ivARB(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform2ui(GLint, GLuint, GLuint) -> c_void)
    failing!(fn Uniform2ui64NV(GLint, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn Uniform2ui64vNV(GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn Uniform2uiEXT(GLint, GLuint, GLuint) -> c_void)
    failing!(fn Uniform2uiv(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform2uivEXT(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform3d(GLint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Uniform3dv(GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn Uniform3f(GLint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Uniform3fARB(GLint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Uniform3fv(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform3fvARB(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform3i(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Uniform3i64NV(GLint, GLint64EXT, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn Uniform3i64vNV(GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn Uniform3iARB(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Uniform3iv(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform3ivARB(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform3ui(GLint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn Uniform3ui64NV(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn Uniform3ui64vNV(GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn Uniform3uiEXT(GLint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn Uniform3uiv(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform3uivEXT(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform4d(GLint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Uniform4dv(GLint, GLsizei, *GLdouble) -> c_void)
    failing!(fn Uniform4f(GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Uniform4fARB(GLint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Uniform4fv(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform4fvARB(GLint, GLsizei, *GLfloat) -> c_void)
    failing!(fn Uniform4i(GLint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Uniform4i64NV(GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn Uniform4i64vNV(GLint, GLsizei, *GLint64EXT) -> c_void)
    failing!(fn Uniform4iARB(GLint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Uniform4iv(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform4ivARB(GLint, GLsizei, *GLint) -> c_void)
    failing!(fn Uniform4ui(GLint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn Uniform4ui64NV(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn Uniform4ui64vNV(GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn Uniform4uiEXT(GLint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn Uniform4uiv(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniform4uivEXT(GLint, GLsizei, *GLuint) -> c_void)
    failing!(fn UniformBlockBinding(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn UniformBufferEXT(GLuint, GLint, GLuint) -> c_void)
    failing!(fn UniformHandleui64ARB(GLint, GLuint64) -> c_void)
    failing!(fn UniformHandleui64NV(GLint, GLuint64) -> c_void)
    failing!(fn UniformHandleui64vARB(GLint, GLsizei, *GLuint64) -> c_void)
    failing!(fn UniformHandleui64vNV(GLint, GLsizei, *GLuint64) -> c_void)
    failing!(fn UniformMatrix2dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix2fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix2fvARB(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix2x3dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix2x3fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix2x4dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix2x4fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix3dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix3fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix3fvARB(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix3x2dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix3x2fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix3x4dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix3x4fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix4dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix4fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix4fvARB(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix4x2dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix4x2fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformMatrix4x3dv(GLint, GLsizei, GLboolean, *GLdouble) -> c_void)
    failing!(fn UniformMatrix4x3fv(GLint, GLsizei, GLboolean, *GLfloat) -> c_void)
    failing!(fn UniformSubroutinesuiv(GLenum, GLsizei, *GLuint) -> c_void)
    failing!(fn Uniformui64NV(GLint, GLuint64EXT) -> c_void)
    failing!(fn Uniformui64vNV(GLint, GLsizei, *GLuint64EXT) -> c_void)
    failing!(fn UnlockArraysEXT() -> c_void)
    failing!(fn UnmapBuffer(GLenum) -> GLboolean)
    failing!(fn UnmapBufferARB(GLenum) -> GLboolean)
    failing!(fn UnmapBufferOES(GLenum) -> GLboolean)
    failing!(fn UnmapNamedBufferEXT(GLuint) -> GLboolean)
    failing!(fn UnmapObjectBufferATI(GLuint) -> c_void)
    failing!(fn UnmapTexture2DINTEL(GLuint, GLint) -> c_void)
    failing!(fn UpdateObjectBufferATI(GLuint, GLuint, GLsizei, *GLvoid, GLenum) -> c_void)
    failing!(fn UseProgram(GLuint) -> c_void)
    failing!(fn UseProgramObjectARB(GLhandleARB) -> c_void)
    failing!(fn UseProgramStages(GLuint, GLbitfield, GLuint) -> c_void)
    failing!(fn UseProgramStagesEXT(GLuint, GLbitfield, GLuint) -> c_void)
    failing!(fn UseShaderProgramEXT(GLenum, GLuint) -> c_void)
    failing!(fn VDPAUFiniNV() -> c_void)
    failing!(fn VDPAUGetSurfaceivNV(GLvdpauSurfaceNV, GLenum, GLsizei, *GLsizei, *GLint) -> c_void)
    failing!(fn VDPAUInitNV(*GLvoid, *GLvoid) -> c_void)
    failing!(fn VDPAUIsSurfaceNV(GLvdpauSurfaceNV) -> c_void)
    failing!(fn VDPAUMapSurfacesNV(GLsizei, *GLvdpauSurfaceNV) -> c_void)
    failing!(fn VDPAURegisterOutputSurfaceNV(*GLvoid, GLenum, GLsizei, *GLuint) -> GLvdpauSurfaceNV)
    failing!(fn VDPAURegisterVideoSurfaceNV(*GLvoid, GLenum, GLsizei, *GLuint) -> GLvdpauSurfaceNV)
    failing!(fn VDPAUSurfaceAccessNV(GLvdpauSurfaceNV, GLenum) -> c_void)
    failing!(fn VDPAUUnmapSurfacesNV(GLsizei, *GLvdpauSurfaceNV) -> c_void)
    failing!(fn VDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV) -> c_void)
    failing!(fn ValidateProgram(GLuint) -> c_void)
    failing!(fn ValidateProgramARB(GLhandleARB) -> c_void)
    failing!(fn ValidateProgramPipeline(GLuint) -> c_void)
    failing!(fn ValidateProgramPipelineEXT(GLuint) -> c_void)
    failing!(fn VariantArrayObjectATI(GLuint, GLenum, GLsizei, GLuint, GLuint) -> c_void)
    failing!(fn VariantPointerEXT(GLuint, GLenum, GLuint, *GLvoid) -> c_void)
    failing!(fn VariantbvEXT(GLuint, *GLbyte) -> c_void)
    failing!(fn VariantdvEXT(GLuint, *GLdouble) -> c_void)
    failing!(fn VariantfvEXT(GLuint, *GLfloat) -> c_void)
    failing!(fn VariantivEXT(GLuint, *GLint) -> c_void)
    failing!(fn VariantsvEXT(GLuint, *GLshort) -> c_void)
    failing!(fn VariantubvEXT(GLuint, *GLubyte) -> c_void)
    failing!(fn VariantuivEXT(GLuint, *GLuint) -> c_void)
    failing!(fn VariantusvEXT(GLuint, *GLushort) -> c_void)
    failing!(fn Vertex2bOES(GLbyte) -> c_void)
    failing!(fn Vertex2bvOES(*GLbyte) -> c_void)
    failing!(fn Vertex2d(GLdouble, GLdouble) -> c_void)
    failing!(fn Vertex2dv(*GLdouble) -> c_void)
    failing!(fn Vertex2f(GLfloat, GLfloat) -> c_void)
    failing!(fn Vertex2fv(*GLfloat) -> c_void)
    failing!(fn Vertex2hNV(GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn Vertex2hvNV(*GLhalfNV) -> c_void)
    failing!(fn Vertex2i(GLint, GLint) -> c_void)
    failing!(fn Vertex2iv(*GLint) -> c_void)
    failing!(fn Vertex2s(GLshort, GLshort) -> c_void)
    failing!(fn Vertex2sv(*GLshort) -> c_void)
    failing!(fn Vertex2xOES(GLfixed) -> c_void)
    failing!(fn Vertex2xvOES(*GLfixed) -> c_void)
    failing!(fn Vertex3bOES(GLbyte, GLbyte) -> c_void)
    failing!(fn Vertex3bvOES(*GLbyte) -> c_void)
    failing!(fn Vertex3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Vertex3dv(*GLdouble) -> c_void)
    failing!(fn Vertex3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Vertex3fv(*GLfloat) -> c_void)
    failing!(fn Vertex3hNV(GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn Vertex3hvNV(*GLhalfNV) -> c_void)
    failing!(fn Vertex3i(GLint, GLint, GLint) -> c_void)
    failing!(fn Vertex3iv(*GLint) -> c_void)
    failing!(fn Vertex3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Vertex3sv(*GLshort) -> c_void)
    failing!(fn Vertex3xOES(GLfixed, GLfixed) -> c_void)
    failing!(fn Vertex3xvOES(*GLfixed) -> c_void)
    failing!(fn Vertex4bOES(GLbyte, GLbyte, GLbyte) -> c_void)
    failing!(fn Vertex4bvOES(*GLbyte) -> c_void)
    failing!(fn Vertex4d(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn Vertex4dv(*GLdouble) -> c_void)
    failing!(fn Vertex4f(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn Vertex4fv(*GLfloat) -> c_void)
    failing!(fn Vertex4hNV(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn Vertex4hvNV(*GLhalfNV) -> c_void)
    failing!(fn Vertex4i(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn Vertex4iv(*GLint) -> c_void)
    failing!(fn Vertex4s(GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn Vertex4sv(*GLshort) -> c_void)
    failing!(fn Vertex4xOES(GLfixed, GLfixed, GLfixed) -> c_void)
    failing!(fn Vertex4xvOES(*GLfixed) -> c_void)
    failing!(fn VertexArrayBindVertexBufferEXT(GLuint, GLuint, GLuint, GLintptr, GLsizei) -> c_void)
    failing!(fn VertexArrayColorOffsetEXT(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayEdgeFlagOffsetEXT(GLuint, GLuint, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayFogCoordOffsetEXT(GLuint, GLuint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayIndexOffsetEXT(GLuint, GLuint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayMultiTexCoordOffsetEXT(GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayNormalOffsetEXT(GLuint, GLuint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayParameteriAPPLE(GLenum, GLint) -> c_void)
    failing!(fn VertexArrayRangeAPPLE(GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexArrayRangeNV(GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexArraySecondaryColorOffsetEXT(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayTexCoordOffsetEXT(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayVertexAttribBindingEXT(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexArrayVertexAttribFormatEXT(GLuint, GLuint, GLint, GLenum, GLboolean, GLuint) -> c_void)
    failing!(fn VertexArrayVertexAttribIFormatEXT(GLuint, GLuint, GLint, GLenum, GLuint) -> c_void)
    failing!(fn VertexArrayVertexAttribIOffsetEXT(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayVertexAttribLFormatEXT(GLuint, GLuint, GLint, GLenum, GLuint) -> c_void)
    failing!(fn VertexArrayVertexAttribLOffsetEXT(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayVertexAttribOffsetEXT(GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexArrayVertexBindingDivisorEXT(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexArrayVertexOffsetEXT(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr) -> c_void)
    failing!(fn VertexAttrib1d(GLuint, GLdouble) -> c_void)
    failing!(fn VertexAttrib1dARB(GLuint, GLdouble) -> c_void)
    failing!(fn VertexAttrib1dNV(GLuint, GLdouble) -> c_void)
    failing!(fn VertexAttrib1dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib1dvARB(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib1dvNV(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib1f(GLuint, GLfloat) -> c_void)
    failing!(fn VertexAttrib1fARB(GLuint, GLfloat) -> c_void)
    failing!(fn VertexAttrib1fNV(GLuint, GLfloat) -> c_void)
    failing!(fn VertexAttrib1fv(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib1fvARB(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib1fvNV(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib1hNV(GLuint, GLhalfNV) -> c_void)
    failing!(fn VertexAttrib1hvNV(GLuint, *GLhalfNV) -> c_void)
    failing!(fn VertexAttrib1s(GLuint, GLshort) -> c_void)
    failing!(fn VertexAttrib1sARB(GLuint, GLshort) -> c_void)
    failing!(fn VertexAttrib1sNV(GLuint, GLshort) -> c_void)
    failing!(fn VertexAttrib1sv(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib1svARB(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib1svNV(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib2d(GLuint, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib2dARB(GLuint, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib2dNV(GLuint, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib2dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib2dvARB(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib2dvNV(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib2f(GLuint, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib2fARB(GLuint, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib2fNV(GLuint, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib2fv(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib2fvARB(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib2fvNV(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib2hNV(GLuint, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn VertexAttrib2hvNV(GLuint, *GLhalfNV) -> c_void)
    failing!(fn VertexAttrib2s(GLuint, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib2sARB(GLuint, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib2sNV(GLuint, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib2sv(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib2svARB(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib2svNV(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib3d(GLuint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib3dARB(GLuint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib3dNV(GLuint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib3dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib3dvARB(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib3dvNV(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib3f(GLuint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib3fARB(GLuint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib3fNV(GLuint, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib3fv(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib3fvARB(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib3fvNV(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib3hNV(GLuint, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn VertexAttrib3hvNV(GLuint, *GLhalfNV) -> c_void)
    failing!(fn VertexAttrib3s(GLuint, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib3sARB(GLuint, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib3sNV(GLuint, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib3sv(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib3svARB(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib3svNV(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib4Nbv(GLuint, *GLbyte) -> c_void)
    failing!(fn VertexAttrib4NbvARB(GLuint, *GLbyte) -> c_void)
    failing!(fn VertexAttrib4Niv(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttrib4NivARB(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttrib4Nsv(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib4NsvARB(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib4Nub(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn VertexAttrib4NubARB(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn VertexAttrib4Nubv(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttrib4NubvARB(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttrib4Nuiv(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttrib4NuivARB(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttrib4Nusv(GLuint, *GLushort) -> c_void)
    failing!(fn VertexAttrib4NusvARB(GLuint, *GLushort) -> c_void)
    failing!(fn VertexAttrib4bv(GLuint, *GLbyte) -> c_void)
    failing!(fn VertexAttrib4bvARB(GLuint, *GLbyte) -> c_void)
    failing!(fn VertexAttrib4d(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib4dARB(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib4dNV(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttrib4dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib4dvARB(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib4dvNV(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttrib4f(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib4fARB(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib4fNV(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexAttrib4fv(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib4fvARB(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib4fvNV(GLuint, *GLfloat) -> c_void)
    failing!(fn VertexAttrib4hNV(GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) -> c_void)
    failing!(fn VertexAttrib4hvNV(GLuint, *GLhalfNV) -> c_void)
    failing!(fn VertexAttrib4iv(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttrib4ivARB(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttrib4s(GLuint, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib4sARB(GLuint, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib4sNV(GLuint, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexAttrib4sv(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib4svARB(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib4svNV(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttrib4ubNV(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) -> c_void)
    failing!(fn VertexAttrib4ubv(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttrib4ubvARB(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttrib4ubvNV(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttrib4uiv(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttrib4uivARB(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttrib4usv(GLuint, *GLushort) -> c_void)
    failing!(fn VertexAttrib4usvARB(GLuint, *GLushort) -> c_void)
    failing!(fn VertexAttribArrayObjectATI(GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribBinding(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribDivisor(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribDivisorANGLE(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribDivisorARB(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribDivisorNV(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribFormat(GLuint, GLint, GLenum, GLboolean, GLuint) -> c_void)
    failing!(fn VertexAttribFormatNV(GLuint, GLint, GLenum, GLboolean, GLsizei) -> c_void)
    failing!(fn VertexAttribI1i(GLuint, GLint) -> c_void)
    failing!(fn VertexAttribI1iEXT(GLuint, GLint) -> c_void)
    failing!(fn VertexAttribI1iv(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI1ivEXT(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI1ui(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI1uiEXT(GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI1uiv(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI1uivEXT(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI2i(GLuint, GLint, GLint) -> c_void)
    failing!(fn VertexAttribI2iEXT(GLuint, GLint, GLint) -> c_void)
    failing!(fn VertexAttribI2iv(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI2ivEXT(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI2ui(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI2uiEXT(GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI2uiv(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI2uivEXT(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI3i(GLuint, GLint, GLint, GLint) -> c_void)
    failing!(fn VertexAttribI3iEXT(GLuint, GLint, GLint, GLint) -> c_void)
    failing!(fn VertexAttribI3iv(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI3ivEXT(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI3ui(GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI3uiEXT(GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI3uiv(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI3uivEXT(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI4bv(GLuint, *GLbyte) -> c_void)
    failing!(fn VertexAttribI4bvEXT(GLuint, *GLbyte) -> c_void)
    failing!(fn VertexAttribI4i(GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn VertexAttribI4iEXT(GLuint, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn VertexAttribI4iv(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI4ivEXT(GLuint, *GLint) -> c_void)
    failing!(fn VertexAttribI4sv(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttribI4svEXT(GLuint, *GLshort) -> c_void)
    failing!(fn VertexAttribI4ubv(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttribI4ubvEXT(GLuint, *GLubyte) -> c_void)
    failing!(fn VertexAttribI4ui(GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI4uiEXT(GLuint, GLuint, GLuint, GLuint, GLuint) -> c_void)
    failing!(fn VertexAttribI4uiv(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI4uivEXT(GLuint, *GLuint) -> c_void)
    failing!(fn VertexAttribI4usv(GLuint, *GLushort) -> c_void)
    failing!(fn VertexAttribI4usvEXT(GLuint, *GLushort) -> c_void)
    failing!(fn VertexAttribIFormat(GLuint, GLint, GLenum, GLuint) -> c_void)
    failing!(fn VertexAttribIFormatNV(GLuint, GLint, GLenum, GLsizei) -> c_void)
    failing!(fn VertexAttribIPointer(GLuint, GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribIPointerEXT(GLuint, GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribL1d(GLuint, GLdouble) -> c_void)
    failing!(fn VertexAttribL1dEXT(GLuint, GLdouble) -> c_void)
    failing!(fn VertexAttribL1dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL1dvEXT(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL1i64NV(GLuint, GLint64EXT) -> c_void)
    failing!(fn VertexAttribL1i64vNV(GLuint, *GLint64EXT) -> c_void)
    failing!(fn VertexAttribL1ui64ARB(GLuint, GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL1ui64NV(GLuint, GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL1ui64vARB(GLuint, *GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL1ui64vNV(GLuint, *GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL2d(GLuint, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttribL2dEXT(GLuint, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttribL2dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL2dvEXT(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL2i64NV(GLuint, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn VertexAttribL2i64vNV(GLuint, *GLint64EXT) -> c_void)
    failing!(fn VertexAttribL2ui64NV(GLuint, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL2ui64vNV(GLuint, *GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL3d(GLuint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttribL3dEXT(GLuint, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttribL3dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL3dvEXT(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL3i64NV(GLuint, GLint64EXT, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn VertexAttribL3i64vNV(GLuint, *GLint64EXT) -> c_void)
    failing!(fn VertexAttribL3ui64NV(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL3ui64vNV(GLuint, *GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL4d(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttribL4dEXT(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexAttribL4dv(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL4dvEXT(GLuint, *GLdouble) -> c_void)
    failing!(fn VertexAttribL4i64NV(GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT) -> c_void)
    failing!(fn VertexAttribL4i64vNV(GLuint, *GLint64EXT) -> c_void)
    failing!(fn VertexAttribL4ui64NV(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT) -> c_void)
    failing!(fn VertexAttribL4ui64vNV(GLuint, *GLuint64EXT) -> c_void)
    failing!(fn VertexAttribLFormat(GLuint, GLint, GLenum, GLuint) -> c_void)
    failing!(fn VertexAttribLFormatNV(GLuint, GLint, GLenum, GLsizei) -> c_void)
    failing!(fn VertexAttribLPointer(GLuint, GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribLPointerEXT(GLuint, GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribP1ui(GLuint, GLenum, GLboolean, GLuint) -> c_void)
    failing!(fn VertexAttribP1uiv(GLuint, GLenum, GLboolean, *GLuint) -> c_void)
    failing!(fn VertexAttribP2ui(GLuint, GLenum, GLboolean, GLuint) -> c_void)
    failing!(fn VertexAttribP2uiv(GLuint, GLenum, GLboolean, *GLuint) -> c_void)
    failing!(fn VertexAttribP3ui(GLuint, GLenum, GLboolean, GLuint) -> c_void)
    failing!(fn VertexAttribP3uiv(GLuint, GLenum, GLboolean, *GLuint) -> c_void)
    failing!(fn VertexAttribP4ui(GLuint, GLenum, GLboolean, GLuint) -> c_void)
    failing!(fn VertexAttribP4uiv(GLuint, GLenum, GLboolean, *GLuint) -> c_void)
    failing!(fn VertexAttribParameteriAMD(GLuint, GLenum, GLint) -> c_void)
    failing!(fn VertexAttribPointer(GLuint, GLint, GLenum, GLboolean, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribPointerARB(GLuint, GLint, GLenum, GLboolean, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribPointerNV(GLuint, GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexAttribs1dvNV(GLuint, GLsizei, *GLdouble) -> c_void)
    failing!(fn VertexAttribs1fvNV(GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn VertexAttribs1hvNV(GLuint, GLsizei, *GLhalfNV) -> c_void)
    failing!(fn VertexAttribs1svNV(GLuint, GLsizei, *GLshort) -> c_void)
    failing!(fn VertexAttribs2dvNV(GLuint, GLsizei, *GLdouble) -> c_void)
    failing!(fn VertexAttribs2fvNV(GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn VertexAttribs2hvNV(GLuint, GLsizei, *GLhalfNV) -> c_void)
    failing!(fn VertexAttribs2svNV(GLuint, GLsizei, *GLshort) -> c_void)
    failing!(fn VertexAttribs3dvNV(GLuint, GLsizei, *GLdouble) -> c_void)
    failing!(fn VertexAttribs3fvNV(GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn VertexAttribs3hvNV(GLuint, GLsizei, *GLhalfNV) -> c_void)
    failing!(fn VertexAttribs3svNV(GLuint, GLsizei, *GLshort) -> c_void)
    failing!(fn VertexAttribs4dvNV(GLuint, GLsizei, *GLdouble) -> c_void)
    failing!(fn VertexAttribs4fvNV(GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn VertexAttribs4hvNV(GLuint, GLsizei, *GLhalfNV) -> c_void)
    failing!(fn VertexAttribs4svNV(GLuint, GLsizei, *GLshort) -> c_void)
    failing!(fn VertexAttribs4ubvNV(GLuint, GLsizei, *GLubyte) -> c_void)
    failing!(fn VertexBindingDivisor(GLuint, GLuint) -> c_void)
    failing!(fn VertexBlendARB(GLint) -> c_void)
    failing!(fn VertexBlendEnvfATI(GLenum, GLfloat) -> c_void)
    failing!(fn VertexBlendEnviATI(GLenum, GLint) -> c_void)
    failing!(fn VertexFormatNV(GLint, GLenum, GLsizei) -> c_void)
    failing!(fn VertexP2ui(GLenum, GLuint) -> c_void)
    failing!(fn VertexP2uiv(GLenum, *GLuint) -> c_void)
    failing!(fn VertexP3ui(GLenum, GLuint) -> c_void)
    failing!(fn VertexP3uiv(GLenum, *GLuint) -> c_void)
    failing!(fn VertexP4ui(GLenum, GLuint) -> c_void)
    failing!(fn VertexP4uiv(GLenum, *GLuint) -> c_void)
    failing!(fn VertexPointer(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexPointerEXT(GLint, GLenum, GLsizei, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexPointerListIBM(GLint, GLenum, GLint, **GLvoid, GLint) -> c_void)
    failing!(fn VertexPointervINTEL(GLint, GLenum, **GLvoid) -> c_void)
    failing!(fn VertexStream1dATI(GLenum, GLdouble) -> c_void)
    failing!(fn VertexStream1dvATI(GLenum, *GLdouble) -> c_void)
    failing!(fn VertexStream1fATI(GLenum, GLfloat) -> c_void)
    failing!(fn VertexStream1fvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn VertexStream1iATI(GLenum, GLint) -> c_void)
    failing!(fn VertexStream1ivATI(GLenum, *GLint) -> c_void)
    failing!(fn VertexStream1sATI(GLenum, GLshort) -> c_void)
    failing!(fn VertexStream1svATI(GLenum, *GLshort) -> c_void)
    failing!(fn VertexStream2dATI(GLenum, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexStream2dvATI(GLenum, *GLdouble) -> c_void)
    failing!(fn VertexStream2fATI(GLenum, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexStream2fvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn VertexStream2iATI(GLenum, GLint, GLint) -> c_void)
    failing!(fn VertexStream2ivATI(GLenum, *GLint) -> c_void)
    failing!(fn VertexStream2sATI(GLenum, GLshort, GLshort) -> c_void)
    failing!(fn VertexStream2svATI(GLenum, *GLshort) -> c_void)
    failing!(fn VertexStream3dATI(GLenum, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexStream3dvATI(GLenum, *GLdouble) -> c_void)
    failing!(fn VertexStream3fATI(GLenum, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexStream3fvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn VertexStream3iATI(GLenum, GLint, GLint, GLint) -> c_void)
    failing!(fn VertexStream3ivATI(GLenum, *GLint) -> c_void)
    failing!(fn VertexStream3sATI(GLenum, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexStream3svATI(GLenum, *GLshort) -> c_void)
    failing!(fn VertexStream4dATI(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn VertexStream4dvATI(GLenum, *GLdouble) -> c_void)
    failing!(fn VertexStream4fATI(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn VertexStream4fvATI(GLenum, *GLfloat) -> c_void)
    failing!(fn VertexStream4iATI(GLenum, GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn VertexStream4ivATI(GLenum, *GLint) -> c_void)
    failing!(fn VertexStream4sATI(GLenum, GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn VertexStream4svATI(GLenum, *GLshort) -> c_void)
    failing!(fn VertexWeightPointerEXT(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn VertexWeightfEXT(GLfloat) -> c_void)
    failing!(fn VertexWeightfvEXT(*GLfloat) -> c_void)
    failing!(fn VertexWeighthNV(GLhalfNV) -> c_void)
    failing!(fn VertexWeighthvNV(*GLhalfNV) -> c_void)
    failing!(fn VideoCaptureNV(GLuint, *GLuint, *GLuint64EXT) -> GLenum)
    failing!(fn VideoCaptureStreamParameterdvNV(GLuint, GLuint, GLenum, *GLdouble) -> c_void)
    failing!(fn VideoCaptureStreamParameterfvNV(GLuint, GLuint, GLenum, *GLfloat) -> c_void)
    failing!(fn VideoCaptureStreamParameterivNV(GLuint, GLuint, GLenum, *GLint) -> c_void)
    failing!(fn Viewport(GLint, GLint, GLsizei, GLsizei) -> c_void)
    failing!(fn ViewportArrayv(GLuint, GLsizei, *GLfloat) -> c_void)
    failing!(fn ViewportIndexedf(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn ViewportIndexedfv(GLuint, *GLfloat) -> c_void)
    failing!(fn WaitSync(GLsync, GLbitfield, GLuint64) -> c_void)
    failing!(fn WaitSyncAPPLE(GLsync, GLbitfield, GLuint64) -> c_void)
    failing!(fn WeightPathsNV(GLuint, GLsizei, *GLuint, *GLfloat) -> c_void)
    failing!(fn WeightPointerARB(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn WeightPointerOES(GLint, GLenum, GLsizei, *GLvoid) -> c_void)
    failing!(fn WeightbvARB(GLint, *GLbyte) -> c_void)
    failing!(fn WeightdvARB(GLint, *GLdouble) -> c_void)
    failing!(fn WeightfvARB(GLint, *GLfloat) -> c_void)
    failing!(fn WeightivARB(GLint, *GLint) -> c_void)
    failing!(fn WeightsvARB(GLint, *GLshort) -> c_void)
    failing!(fn WeightubvARB(GLint, *GLubyte) -> c_void)
    failing!(fn WeightuivARB(GLint, *GLuint) -> c_void)
    failing!(fn WeightusvARB(GLint, *GLushort) -> c_void)
    failing!(fn WindowPos2d(GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos2dARB(GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos2dMESA(GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos2dv(*GLdouble) -> c_void)
    failing!(fn WindowPos2dvARB(*GLdouble) -> c_void)
    failing!(fn WindowPos2dvMESA(*GLdouble) -> c_void)
    failing!(fn WindowPos2f(GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos2fARB(GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos2fMESA(GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos2fv(*GLfloat) -> c_void)
    failing!(fn WindowPos2fvARB(*GLfloat) -> c_void)
    failing!(fn WindowPos2fvMESA(*GLfloat) -> c_void)
    failing!(fn WindowPos2i(GLint, GLint) -> c_void)
    failing!(fn WindowPos2iARB(GLint, GLint) -> c_void)
    failing!(fn WindowPos2iMESA(GLint, GLint) -> c_void)
    failing!(fn WindowPos2iv(*GLint) -> c_void)
    failing!(fn WindowPos2ivARB(*GLint) -> c_void)
    failing!(fn WindowPos2ivMESA(*GLint) -> c_void)
    failing!(fn WindowPos2s(GLshort, GLshort) -> c_void)
    failing!(fn WindowPos2sARB(GLshort, GLshort) -> c_void)
    failing!(fn WindowPos2sMESA(GLshort, GLshort) -> c_void)
    failing!(fn WindowPos2sv(*GLshort) -> c_void)
    failing!(fn WindowPos2svARB(*GLshort) -> c_void)
    failing!(fn WindowPos2svMESA(*GLshort) -> c_void)
    failing!(fn WindowPos3d(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos3dARB(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos3dMESA(GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos3dv(*GLdouble) -> c_void)
    failing!(fn WindowPos3dvARB(*GLdouble) -> c_void)
    failing!(fn WindowPos3dvMESA(*GLdouble) -> c_void)
    failing!(fn WindowPos3f(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos3fARB(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos3fMESA(GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos3fv(*GLfloat) -> c_void)
    failing!(fn WindowPos3fvARB(*GLfloat) -> c_void)
    failing!(fn WindowPos3fvMESA(*GLfloat) -> c_void)
    failing!(fn WindowPos3i(GLint, GLint, GLint) -> c_void)
    failing!(fn WindowPos3iARB(GLint, GLint, GLint) -> c_void)
    failing!(fn WindowPos3iMESA(GLint, GLint, GLint) -> c_void)
    failing!(fn WindowPos3iv(*GLint) -> c_void)
    failing!(fn WindowPos3ivARB(*GLint) -> c_void)
    failing!(fn WindowPos3ivMESA(*GLint) -> c_void)
    failing!(fn WindowPos3s(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn WindowPos3sARB(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn WindowPos3sMESA(GLshort, GLshort, GLshort) -> c_void)
    failing!(fn WindowPos3sv(*GLshort) -> c_void)
    failing!(fn WindowPos3svARB(*GLshort) -> c_void)
    failing!(fn WindowPos3svMESA(*GLshort) -> c_void)
    failing!(fn WindowPos4dMESA(GLdouble, GLdouble, GLdouble, GLdouble) -> c_void)
    failing!(fn WindowPos4dvMESA(*GLdouble) -> c_void)
    failing!(fn WindowPos4fMESA(GLfloat, GLfloat, GLfloat, GLfloat) -> c_void)
    failing!(fn WindowPos4fvMESA(*GLfloat) -> c_void)
    failing!(fn WindowPos4iMESA(GLint, GLint, GLint, GLint) -> c_void)
    failing!(fn WindowPos4ivMESA(*GLint) -> c_void)
    failing!(fn WindowPos4sMESA(GLshort, GLshort, GLshort, GLshort) -> c_void)
    failing!(fn WindowPos4svMESA(*GLshort) -> c_void)
    failing!(fn WriteMaskEXT(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) -> c_void)
}

/// Load each OpenGL symbol using a custom load function. This allows for the
/// use of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.
///
/// ~~~
/// let gl = gl::load_with(glfw::get_proc_address);
/// ~~~
pub fn load_with(loadfn: &fn(symbol: &str) -> Option<extern "C" fn()>) {
    Accum::load_with(|s| loadfn(s));
    AccumxOES::load_with(|s| loadfn(s));
    ActiveProgramEXT::load_with(|s| loadfn(s));
    ActiveShaderProgram::load_with(|s| loadfn(s));
    ActiveShaderProgramEXT::load_with(|s| loadfn(s));
    ActiveStencilFaceEXT::load_with(|s| loadfn(s));
    ActiveTexture::load_with(|s| loadfn(s));
    ActiveTextureARB::load_with(|s| loadfn(s));
    ActiveVaryingNV::load_with(|s| loadfn(s));
    AlphaFragmentOp1ATI::load_with(|s| loadfn(s));
    AlphaFragmentOp2ATI::load_with(|s| loadfn(s));
    AlphaFragmentOp3ATI::load_with(|s| loadfn(s));
    AlphaFunc::load_with(|s| loadfn(s));
    AlphaFuncQCOM::load_with(|s| loadfn(s));
    AlphaFuncx::load_with(|s| loadfn(s));
    AlphaFuncxOES::load_with(|s| loadfn(s));
    ApplyTextureEXT::load_with(|s| loadfn(s));
    AreProgramsResidentNV::load_with(|s| loadfn(s));
    AreTexturesResident::load_with(|s| loadfn(s));
    AreTexturesResidentEXT::load_with(|s| loadfn(s));
    ArrayElement::load_with(|s| loadfn(s));
    ArrayElementEXT::load_with(|s| loadfn(s));
    ArrayObjectATI::load_with(|s| loadfn(s));
    AsyncMarkerSGIX::load_with(|s| loadfn(s));
    AttachObjectARB::load_with(|s| loadfn(s));
    AttachShader::load_with(|s| loadfn(s));
    Begin::load_with(|s| loadfn(s));
    BeginConditionalRender::load_with(|s| loadfn(s));
    BeginConditionalRenderNV::load_with(|s| loadfn(s));
    BeginConditionalRenderNVX::load_with(|s| loadfn(s));
    BeginFragmentShaderATI::load_with(|s| loadfn(s));
    BeginOcclusionQueryNV::load_with(|s| loadfn(s));
    BeginPerfMonitorAMD::load_with(|s| loadfn(s));
    BeginQuery::load_with(|s| loadfn(s));
    BeginQueryARB::load_with(|s| loadfn(s));
    BeginQueryEXT::load_with(|s| loadfn(s));
    BeginQueryIndexed::load_with(|s| loadfn(s));
    BeginTransformFeedback::load_with(|s| loadfn(s));
    BeginTransformFeedbackEXT::load_with(|s| loadfn(s));
    BeginTransformFeedbackNV::load_with(|s| loadfn(s));
    BeginVertexShaderEXT::load_with(|s| loadfn(s));
    BeginVideoCaptureNV::load_with(|s| loadfn(s));
    BindAttribLocation::load_with(|s| loadfn(s));
    BindAttribLocationARB::load_with(|s| loadfn(s));
    BindBuffer::load_with(|s| loadfn(s));
    BindBufferARB::load_with(|s| loadfn(s));
    BindBufferBase::load_with(|s| loadfn(s));
    BindBufferBaseEXT::load_with(|s| loadfn(s));
    BindBufferBaseNV::load_with(|s| loadfn(s));
    BindBufferOffsetEXT::load_with(|s| loadfn(s));
    BindBufferOffsetNV::load_with(|s| loadfn(s));
    BindBufferRange::load_with(|s| loadfn(s));
    BindBufferRangeEXT::load_with(|s| loadfn(s));
    BindBufferRangeNV::load_with(|s| loadfn(s));
    BindBuffersBase::load_with(|s| loadfn(s));
    BindBuffersRange::load_with(|s| loadfn(s));
    BindFragDataLocation::load_with(|s| loadfn(s));
    BindFragDataLocationEXT::load_with(|s| loadfn(s));
    BindFragDataLocationIndexed::load_with(|s| loadfn(s));
    BindFragmentShaderATI::load_with(|s| loadfn(s));
    BindFramebuffer::load_with(|s| loadfn(s));
    BindFramebufferEXT::load_with(|s| loadfn(s));
    BindFramebufferOES::load_with(|s| loadfn(s));
    BindImageTexture::load_with(|s| loadfn(s));
    BindImageTextureEXT::load_with(|s| loadfn(s));
    BindImageTextures::load_with(|s| loadfn(s));
    BindLightParameterEXT::load_with(|s| loadfn(s));
    BindMaterialParameterEXT::load_with(|s| loadfn(s));
    BindMultiTextureEXT::load_with(|s| loadfn(s));
    BindParameterEXT::load_with(|s| loadfn(s));
    BindProgramARB::load_with(|s| loadfn(s));
    BindProgramNV::load_with(|s| loadfn(s));
    BindProgramPipeline::load_with(|s| loadfn(s));
    BindProgramPipelineEXT::load_with(|s| loadfn(s));
    BindRenderbuffer::load_with(|s| loadfn(s));
    BindRenderbufferEXT::load_with(|s| loadfn(s));
    BindRenderbufferOES::load_with(|s| loadfn(s));
    BindSampler::load_with(|s| loadfn(s));
    BindSamplers::load_with(|s| loadfn(s));
    BindTexGenParameterEXT::load_with(|s| loadfn(s));
    BindTexture::load_with(|s| loadfn(s));
    BindTextureEXT::load_with(|s| loadfn(s));
    BindTextureUnitParameterEXT::load_with(|s| loadfn(s));
    BindTextures::load_with(|s| loadfn(s));
    BindTransformFeedback::load_with(|s| loadfn(s));
    BindTransformFeedbackNV::load_with(|s| loadfn(s));
    BindVertexArray::load_with(|s| loadfn(s));
    BindVertexArrayAPPLE::load_with(|s| loadfn(s));
    BindVertexArrayOES::load_with(|s| loadfn(s));
    BindVertexBuffer::load_with(|s| loadfn(s));
    BindVertexBuffers::load_with(|s| loadfn(s));
    BindVertexShaderEXT::load_with(|s| loadfn(s));
    BindVideoCaptureStreamBufferNV::load_with(|s| loadfn(s));
    BindVideoCaptureStreamTextureNV::load_with(|s| loadfn(s));
    Binormal3bEXT::load_with(|s| loadfn(s));
    Binormal3bvEXT::load_with(|s| loadfn(s));
    Binormal3dEXT::load_with(|s| loadfn(s));
    Binormal3dvEXT::load_with(|s| loadfn(s));
    Binormal3fEXT::load_with(|s| loadfn(s));
    Binormal3fvEXT::load_with(|s| loadfn(s));
    Binormal3iEXT::load_with(|s| loadfn(s));
    Binormal3ivEXT::load_with(|s| loadfn(s));
    Binormal3sEXT::load_with(|s| loadfn(s));
    Binormal3svEXT::load_with(|s| loadfn(s));
    BinormalPointerEXT::load_with(|s| loadfn(s));
    Bitmap::load_with(|s| loadfn(s));
    BitmapxOES::load_with(|s| loadfn(s));
    BlendColor::load_with(|s| loadfn(s));
    BlendColorEXT::load_with(|s| loadfn(s));
    BlendColorxOES::load_with(|s| loadfn(s));
    BlendEquation::load_with(|s| loadfn(s));
    BlendEquationEXT::load_with(|s| loadfn(s));
    BlendEquationIndexedAMD::load_with(|s| loadfn(s));
    BlendEquationOES::load_with(|s| loadfn(s));
    BlendEquationSeparate::load_with(|s| loadfn(s));
    BlendEquationSeparateEXT::load_with(|s| loadfn(s));
    BlendEquationSeparateIndexedAMD::load_with(|s| loadfn(s));
    BlendEquationSeparateOES::load_with(|s| loadfn(s));
    BlendEquationSeparatei::load_with(|s| loadfn(s));
    BlendEquationSeparateiARB::load_with(|s| loadfn(s));
    BlendEquationi::load_with(|s| loadfn(s));
    BlendEquationiARB::load_with(|s| loadfn(s));
    BlendFunc::load_with(|s| loadfn(s));
    BlendFuncIndexedAMD::load_with(|s| loadfn(s));
    BlendFuncSeparate::load_with(|s| loadfn(s));
    BlendFuncSeparateEXT::load_with(|s| loadfn(s));
    BlendFuncSeparateINGR::load_with(|s| loadfn(s));
    BlendFuncSeparateIndexedAMD::load_with(|s| loadfn(s));
    BlendFuncSeparateOES::load_with(|s| loadfn(s));
    BlendFuncSeparatei::load_with(|s| loadfn(s));
    BlendFuncSeparateiARB::load_with(|s| loadfn(s));
    BlendFunci::load_with(|s| loadfn(s));
    BlendFunciARB::load_with(|s| loadfn(s));
    BlendParameteriNV::load_with(|s| loadfn(s));
    BlendBarrierNV::load_with(|s| loadfn(s));
    BlitFramebuffer::load_with(|s| loadfn(s));
    BlitFramebufferANGLE::load_with(|s| loadfn(s));
    BlitFramebufferEXT::load_with(|s| loadfn(s));
    BlitFramebufferNV::load_with(|s| loadfn(s));
    BufferAddressRangeNV::load_with(|s| loadfn(s));
    BufferData::load_with(|s| loadfn(s));
    BufferDataARB::load_with(|s| loadfn(s));
    BufferParameteriAPPLE::load_with(|s| loadfn(s));
    BufferStorage::load_with(|s| loadfn(s));
    BufferSubData::load_with(|s| loadfn(s));
    BufferSubDataARB::load_with(|s| loadfn(s));
    CallList::load_with(|s| loadfn(s));
    CallLists::load_with(|s| loadfn(s));
    CheckFramebufferStatus::load_with(|s| loadfn(s));
    CheckFramebufferStatusEXT::load_with(|s| loadfn(s));
    CheckFramebufferStatusOES::load_with(|s| loadfn(s));
    CheckNamedFramebufferStatusEXT::load_with(|s| loadfn(s));
    ClampColor::load_with(|s| loadfn(s));
    ClampColorARB::load_with(|s| loadfn(s));
    Clear::load_with(|s| loadfn(s));
    ClearAccum::load_with(|s| loadfn(s));
    ClearAccumxOES::load_with(|s| loadfn(s));
    ClearBufferData::load_with(|s| loadfn(s));
    ClearBufferSubData::load_with(|s| loadfn(s));
    ClearBufferfi::load_with(|s| loadfn(s));
    ClearBufferfv::load_with(|s| loadfn(s));
    ClearBufferiv::load_with(|s| loadfn(s));
    ClearBufferuiv::load_with(|s| loadfn(s));
    ClearColor::load_with(|s| loadfn(s));
    ClearColorIiEXT::load_with(|s| loadfn(s));
    ClearColorIuiEXT::load_with(|s| loadfn(s));
    ClearColorx::load_with(|s| loadfn(s));
    ClearColorxOES::load_with(|s| loadfn(s));
    ClearDepth::load_with(|s| loadfn(s));
    ClearDepthdNV::load_with(|s| loadfn(s));
    ClearDepthf::load_with(|s| loadfn(s));
    ClearDepthfOES::load_with(|s| loadfn(s));
    ClearDepthx::load_with(|s| loadfn(s));
    ClearDepthxOES::load_with(|s| loadfn(s));
    ClearIndex::load_with(|s| loadfn(s));
    ClearNamedBufferDataEXT::load_with(|s| loadfn(s));
    ClearNamedBufferSubDataEXT::load_with(|s| loadfn(s));
    ClearStencil::load_with(|s| loadfn(s));
    ClearTexImage::load_with(|s| loadfn(s));
    ClearTexSubImage::load_with(|s| loadfn(s));
    ClientActiveTexture::load_with(|s| loadfn(s));
    ClientActiveTextureARB::load_with(|s| loadfn(s));
    ClientActiveVertexStreamATI::load_with(|s| loadfn(s));
    ClientAttribDefaultEXT::load_with(|s| loadfn(s));
    ClientWaitSync::load_with(|s| loadfn(s));
    ClientWaitSyncAPPLE::load_with(|s| loadfn(s));
    ClipControlARB::load_with(|s| loadfn(s));
    ClipPlane::load_with(|s| loadfn(s));
    ClipPlanef::load_with(|s| loadfn(s));
    ClipPlanefIMG::load_with(|s| loadfn(s));
    ClipPlanefOES::load_with(|s| loadfn(s));
    ClipPlanex::load_with(|s| loadfn(s));
    ClipPlanexIMG::load_with(|s| loadfn(s));
    ClipPlanexOES::load_with(|s| loadfn(s));
    Color3b::load_with(|s| loadfn(s));
    Color3bv::load_with(|s| loadfn(s));
    Color3d::load_with(|s| loadfn(s));
    Color3dv::load_with(|s| loadfn(s));
    Color3f::load_with(|s| loadfn(s));
    Color3fVertex3fSUN::load_with(|s| loadfn(s));
    Color3fVertex3fvSUN::load_with(|s| loadfn(s));
    Color3fv::load_with(|s| loadfn(s));
    Color3hNV::load_with(|s| loadfn(s));
    Color3hvNV::load_with(|s| loadfn(s));
    Color3i::load_with(|s| loadfn(s));
    Color3iv::load_with(|s| loadfn(s));
    Color3s::load_with(|s| loadfn(s));
    Color3sv::load_with(|s| loadfn(s));
    Color3ub::load_with(|s| loadfn(s));
    Color3ubv::load_with(|s| loadfn(s));
    Color3ui::load_with(|s| loadfn(s));
    Color3uiv::load_with(|s| loadfn(s));
    Color3us::load_with(|s| loadfn(s));
    Color3usv::load_with(|s| loadfn(s));
    Color3xOES::load_with(|s| loadfn(s));
    Color3xvOES::load_with(|s| loadfn(s));
    Color4b::load_with(|s| loadfn(s));
    Color4bv::load_with(|s| loadfn(s));
    Color4d::load_with(|s| loadfn(s));
    Color4dv::load_with(|s| loadfn(s));
    Color4f::load_with(|s| loadfn(s));
    Color4fNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    Color4fNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    Color4fv::load_with(|s| loadfn(s));
    Color4hNV::load_with(|s| loadfn(s));
    Color4hvNV::load_with(|s| loadfn(s));
    Color4i::load_with(|s| loadfn(s));
    Color4iv::load_with(|s| loadfn(s));
    Color4s::load_with(|s| loadfn(s));
    Color4sv::load_with(|s| loadfn(s));
    Color4ub::load_with(|s| loadfn(s));
    Color4ubVertex2fSUN::load_with(|s| loadfn(s));
    Color4ubVertex2fvSUN::load_with(|s| loadfn(s));
    Color4ubVertex3fSUN::load_with(|s| loadfn(s));
    Color4ubVertex3fvSUN::load_with(|s| loadfn(s));
    Color4ubv::load_with(|s| loadfn(s));
    Color4ui::load_with(|s| loadfn(s));
    Color4uiv::load_with(|s| loadfn(s));
    Color4us::load_with(|s| loadfn(s));
    Color4usv::load_with(|s| loadfn(s));
    Color4x::load_with(|s| loadfn(s));
    Color4xOES::load_with(|s| loadfn(s));
    Color4xvOES::load_with(|s| loadfn(s));
    ColorFormatNV::load_with(|s| loadfn(s));
    ColorFragmentOp1ATI::load_with(|s| loadfn(s));
    ColorFragmentOp2ATI::load_with(|s| loadfn(s));
    ColorFragmentOp3ATI::load_with(|s| loadfn(s));
    ColorMask::load_with(|s| loadfn(s));
    ColorMaskIndexedEXT::load_with(|s| loadfn(s));
    ColorMaski::load_with(|s| loadfn(s));
    ColorMaterial::load_with(|s| loadfn(s));
    ColorP3ui::load_with(|s| loadfn(s));
    ColorP3uiv::load_with(|s| loadfn(s));
    ColorP4ui::load_with(|s| loadfn(s));
    ColorP4uiv::load_with(|s| loadfn(s));
    ColorPointer::load_with(|s| loadfn(s));
    ColorPointerEXT::load_with(|s| loadfn(s));
    ColorPointerListIBM::load_with(|s| loadfn(s));
    ColorPointervINTEL::load_with(|s| loadfn(s));
    ColorSubTable::load_with(|s| loadfn(s));
    ColorSubTableEXT::load_with(|s| loadfn(s));
    ColorTable::load_with(|s| loadfn(s));
    ColorTableEXT::load_with(|s| loadfn(s));
    ColorTableParameterfv::load_with(|s| loadfn(s));
    ColorTableParameterfvSGI::load_with(|s| loadfn(s));
    ColorTableParameteriv::load_with(|s| loadfn(s));
    ColorTableParameterivSGI::load_with(|s| loadfn(s));
    ColorTableSGI::load_with(|s| loadfn(s));
    CombinerInputNV::load_with(|s| loadfn(s));
    CombinerOutputNV::load_with(|s| loadfn(s));
    CombinerParameterfNV::load_with(|s| loadfn(s));
    CombinerParameterfvNV::load_with(|s| loadfn(s));
    CombinerParameteriNV::load_with(|s| loadfn(s));
    CombinerParameterivNV::load_with(|s| loadfn(s));
    CombinerStageParameterfvNV::load_with(|s| loadfn(s));
    CompileShader::load_with(|s| loadfn(s));
    CompileShaderARB::load_with(|s| loadfn(s));
    CompileShaderIncludeARB::load_with(|s| loadfn(s));
    CompressedMultiTexImage1DEXT::load_with(|s| loadfn(s));
    CompressedMultiTexImage2DEXT::load_with(|s| loadfn(s));
    CompressedMultiTexImage3DEXT::load_with(|s| loadfn(s));
    CompressedMultiTexSubImage1DEXT::load_with(|s| loadfn(s));
    CompressedMultiTexSubImage2DEXT::load_with(|s| loadfn(s));
    CompressedMultiTexSubImage3DEXT::load_with(|s| loadfn(s));
    CompressedTexImage1D::load_with(|s| loadfn(s));
    CompressedTexImage1DARB::load_with(|s| loadfn(s));
    CompressedTexImage2D::load_with(|s| loadfn(s));
    CompressedTexImage2DARB::load_with(|s| loadfn(s));
    CompressedTexImage3D::load_with(|s| loadfn(s));
    CompressedTexImage3DARB::load_with(|s| loadfn(s));
    CompressedTexImage3DOES::load_with(|s| loadfn(s));
    CompressedTexSubImage1D::load_with(|s| loadfn(s));
    CompressedTexSubImage1DARB::load_with(|s| loadfn(s));
    CompressedTexSubImage2D::load_with(|s| loadfn(s));
    CompressedTexSubImage2DARB::load_with(|s| loadfn(s));
    CompressedTexSubImage3D::load_with(|s| loadfn(s));
    CompressedTexSubImage3DARB::load_with(|s| loadfn(s));
    CompressedTexSubImage3DOES::load_with(|s| loadfn(s));
    CompressedTextureImage1DEXT::load_with(|s| loadfn(s));
    CompressedTextureImage2DEXT::load_with(|s| loadfn(s));
    CompressedTextureImage3DEXT::load_with(|s| loadfn(s));
    CompressedTextureSubImage1DEXT::load_with(|s| loadfn(s));
    CompressedTextureSubImage2DEXT::load_with(|s| loadfn(s));
    CompressedTextureSubImage3DEXT::load_with(|s| loadfn(s));
    ConvolutionFilter1D::load_with(|s| loadfn(s));
    ConvolutionFilter1DEXT::load_with(|s| loadfn(s));
    ConvolutionFilter2D::load_with(|s| loadfn(s));
    ConvolutionFilter2DEXT::load_with(|s| loadfn(s));
    ConvolutionParameterf::load_with(|s| loadfn(s));
    ConvolutionParameterfEXT::load_with(|s| loadfn(s));
    ConvolutionParameterfv::load_with(|s| loadfn(s));
    ConvolutionParameterfvEXT::load_with(|s| loadfn(s));
    ConvolutionParameteri::load_with(|s| loadfn(s));
    ConvolutionParameteriEXT::load_with(|s| loadfn(s));
    ConvolutionParameteriv::load_with(|s| loadfn(s));
    ConvolutionParameterivEXT::load_with(|s| loadfn(s));
    ConvolutionParameterxOES::load_with(|s| loadfn(s));
    ConvolutionParameterxvOES::load_with(|s| loadfn(s));
    CopyBufferSubData::load_with(|s| loadfn(s));
    CopyColorSubTable::load_with(|s| loadfn(s));
    CopyColorSubTableEXT::load_with(|s| loadfn(s));
    CopyColorTable::load_with(|s| loadfn(s));
    CopyColorTableSGI::load_with(|s| loadfn(s));
    CopyConvolutionFilter1D::load_with(|s| loadfn(s));
    CopyConvolutionFilter1DEXT::load_with(|s| loadfn(s));
    CopyConvolutionFilter2D::load_with(|s| loadfn(s));
    CopyConvolutionFilter2DEXT::load_with(|s| loadfn(s));
    CopyImageSubData::load_with(|s| loadfn(s));
    CopyImageSubDataNV::load_with(|s| loadfn(s));
    CopyMultiTexImage1DEXT::load_with(|s| loadfn(s));
    CopyMultiTexImage2DEXT::load_with(|s| loadfn(s));
    CopyMultiTexSubImage1DEXT::load_with(|s| loadfn(s));
    CopyMultiTexSubImage2DEXT::load_with(|s| loadfn(s));
    CopyMultiTexSubImage3DEXT::load_with(|s| loadfn(s));
    CopyPathNV::load_with(|s| loadfn(s));
    CopyPixels::load_with(|s| loadfn(s));
    CopyTexImage1D::load_with(|s| loadfn(s));
    CopyTexImage1DEXT::load_with(|s| loadfn(s));
    CopyTexImage2D::load_with(|s| loadfn(s));
    CopyTexImage2DEXT::load_with(|s| loadfn(s));
    CopyTexSubImage1D::load_with(|s| loadfn(s));
    CopyTexSubImage1DEXT::load_with(|s| loadfn(s));
    CopyTexSubImage2D::load_with(|s| loadfn(s));
    CopyTexSubImage2DEXT::load_with(|s| loadfn(s));
    CopyTexSubImage3D::load_with(|s| loadfn(s));
    CopyTexSubImage3DEXT::load_with(|s| loadfn(s));
    CopyTexSubImage3DOES::load_with(|s| loadfn(s));
    CopyTextureImage1DEXT::load_with(|s| loadfn(s));
    CopyTextureImage2DEXT::load_with(|s| loadfn(s));
    CopyTextureLevelsAPPLE::load_with(|s| loadfn(s));
    CopyTextureSubImage1DEXT::load_with(|s| loadfn(s));
    CopyTextureSubImage2DEXT::load_with(|s| loadfn(s));
    CopyTextureSubImage3DEXT::load_with(|s| loadfn(s));
    CoverFillPathInstancedNV::load_with(|s| loadfn(s));
    CoverFillPathNV::load_with(|s| loadfn(s));
    CoverStrokePathInstancedNV::load_with(|s| loadfn(s));
    CoverStrokePathNV::load_with(|s| loadfn(s));
    CoverageMaskNV::load_with(|s| loadfn(s));
    CoverageOperationNV::load_with(|s| loadfn(s));
    CreateProgram::load_with(|s| loadfn(s));
    CreateProgramObjectARB::load_with(|s| loadfn(s));
    CreateShader::load_with(|s| loadfn(s));
    CreateShaderObjectARB::load_with(|s| loadfn(s));
    CreateShaderProgramEXT::load_with(|s| loadfn(s));
    CreateShaderProgramv::load_with(|s| loadfn(s));
    CreateShaderProgramvEXT::load_with(|s| loadfn(s));
    CreateSyncFromCLeventARB::load_with(|s| loadfn(s));
    CullFace::load_with(|s| loadfn(s));
    CullParameterdvEXT::load_with(|s| loadfn(s));
    CullParameterfvEXT::load_with(|s| loadfn(s));
    CurrentPaletteMatrixARB::load_with(|s| loadfn(s));
    CurrentPaletteMatrixOES::load_with(|s| loadfn(s));
    DebugMessageCallback::load_with(|s| loadfn(s));
    DebugMessageCallbackAMD::load_with(|s| loadfn(s));
    DebugMessageCallbackARB::load_with(|s| loadfn(s));
    DebugMessageCallbackKHR::load_with(|s| loadfn(s));
    DebugMessageControl::load_with(|s| loadfn(s));
    DebugMessageControlARB::load_with(|s| loadfn(s));
    DebugMessageControlKHR::load_with(|s| loadfn(s));
    DebugMessageEnableAMD::load_with(|s| loadfn(s));
    DebugMessageInsert::load_with(|s| loadfn(s));
    DebugMessageInsertAMD::load_with(|s| loadfn(s));
    DebugMessageInsertARB::load_with(|s| loadfn(s));
    DebugMessageInsertKHR::load_with(|s| loadfn(s));
    DeformSGIX::load_with(|s| loadfn(s));
    DeformationMap3dSGIX::load_with(|s| loadfn(s));
    DeformationMap3fSGIX::load_with(|s| loadfn(s));
    DeleteAsyncMarkersSGIX::load_with(|s| loadfn(s));
    DeleteBuffers::load_with(|s| loadfn(s));
    DeleteBuffersARB::load_with(|s| loadfn(s));
    DeleteFencesAPPLE::load_with(|s| loadfn(s));
    DeleteFencesNV::load_with(|s| loadfn(s));
    DeleteFragmentShaderATI::load_with(|s| loadfn(s));
    DeleteFramebuffers::load_with(|s| loadfn(s));
    DeleteFramebuffersEXT::load_with(|s| loadfn(s));
    DeleteFramebuffersOES::load_with(|s| loadfn(s));
    DeleteLists::load_with(|s| loadfn(s));
    DeleteNamedStringARB::load_with(|s| loadfn(s));
    DeleteNamesAMD::load_with(|s| loadfn(s));
    DeleteObjectARB::load_with(|s| loadfn(s));
    DeleteOcclusionQueriesNV::load_with(|s| loadfn(s));
    DeletePathsNV::load_with(|s| loadfn(s));
    DeletePerfMonitorsAMD::load_with(|s| loadfn(s));
    DeleteProgram::load_with(|s| loadfn(s));
    DeleteProgramPipelines::load_with(|s| loadfn(s));
    DeleteProgramPipelinesEXT::load_with(|s| loadfn(s));
    DeleteProgramsARB::load_with(|s| loadfn(s));
    DeleteProgramsNV::load_with(|s| loadfn(s));
    DeleteQueries::load_with(|s| loadfn(s));
    DeleteQueriesARB::load_with(|s| loadfn(s));
    DeleteQueriesEXT::load_with(|s| loadfn(s));
    DeleteRenderbuffers::load_with(|s| loadfn(s));
    DeleteRenderbuffersEXT::load_with(|s| loadfn(s));
    DeleteRenderbuffersOES::load_with(|s| loadfn(s));
    DeleteSamplers::load_with(|s| loadfn(s));
    DeleteShader::load_with(|s| loadfn(s));
    DeleteSync::load_with(|s| loadfn(s));
    DeleteSyncAPPLE::load_with(|s| loadfn(s));
    DeleteTextures::load_with(|s| loadfn(s));
    DeleteTexturesEXT::load_with(|s| loadfn(s));
    DeleteTransformFeedbacks::load_with(|s| loadfn(s));
    DeleteTransformFeedbacksNV::load_with(|s| loadfn(s));
    DeleteVertexArrays::load_with(|s| loadfn(s));
    DeleteVertexArraysAPPLE::load_with(|s| loadfn(s));
    DeleteVertexArraysOES::load_with(|s| loadfn(s));
    DeleteVertexShaderEXT::load_with(|s| loadfn(s));
    DepthBoundsEXT::load_with(|s| loadfn(s));
    DepthBoundsdNV::load_with(|s| loadfn(s));
    DepthFunc::load_with(|s| loadfn(s));
    DepthMask::load_with(|s| loadfn(s));
    DepthRange::load_with(|s| loadfn(s));
    DepthRangeArrayv::load_with(|s| loadfn(s));
    DepthRangeIndexed::load_with(|s| loadfn(s));
    DepthRangedNV::load_with(|s| loadfn(s));
    DepthRangef::load_with(|s| loadfn(s));
    DepthRangefOES::load_with(|s| loadfn(s));
    DepthRangex::load_with(|s| loadfn(s));
    DepthRangexOES::load_with(|s| loadfn(s));
    DetachObjectARB::load_with(|s| loadfn(s));
    DetachShader::load_with(|s| loadfn(s));
    DetailTexFuncSGIS::load_with(|s| loadfn(s));
    Disable::load_with(|s| loadfn(s));
    DisableClientState::load_with(|s| loadfn(s));
    DisableClientStateIndexedEXT::load_with(|s| loadfn(s));
    DisableClientStateiEXT::load_with(|s| loadfn(s));
    DisableDriverControlQCOM::load_with(|s| loadfn(s));
    DisableIndexedEXT::load_with(|s| loadfn(s));
    DisableVariantClientStateEXT::load_with(|s| loadfn(s));
    DisableVertexArrayAttribEXT::load_with(|s| loadfn(s));
    DisableVertexArrayEXT::load_with(|s| loadfn(s));
    DisableVertexAttribAPPLE::load_with(|s| loadfn(s));
    DisableVertexAttribArray::load_with(|s| loadfn(s));
    DisableVertexAttribArrayARB::load_with(|s| loadfn(s));
    Disablei::load_with(|s| loadfn(s));
    DiscardFramebufferEXT::load_with(|s| loadfn(s));
    DispatchCompute::load_with(|s| loadfn(s));
    DispatchComputeGroupSizeARB::load_with(|s| loadfn(s));
    DispatchComputeIndirect::load_with(|s| loadfn(s));
    DrawArrays::load_with(|s| loadfn(s));
    DrawArraysEXT::load_with(|s| loadfn(s));
    DrawArraysIndirect::load_with(|s| loadfn(s));
    DrawArraysInstanced::load_with(|s| loadfn(s));
    DrawArraysInstancedANGLE::load_with(|s| loadfn(s));
    DrawArraysInstancedARB::load_with(|s| loadfn(s));
    DrawArraysInstancedBaseInstance::load_with(|s| loadfn(s));
    DrawArraysInstancedEXT::load_with(|s| loadfn(s));
    DrawArraysInstancedNV::load_with(|s| loadfn(s));
    DrawBuffer::load_with(|s| loadfn(s));
    DrawBuffers::load_with(|s| loadfn(s));
    DrawBuffersARB::load_with(|s| loadfn(s));
    DrawBuffersATI::load_with(|s| loadfn(s));
    DrawBuffersEXT::load_with(|s| loadfn(s));
    DrawBuffersIndexedEXT::load_with(|s| loadfn(s));
    DrawBuffersNV::load_with(|s| loadfn(s));
    DrawElementArrayAPPLE::load_with(|s| loadfn(s));
    DrawElementArrayATI::load_with(|s| loadfn(s));
    DrawElements::load_with(|s| loadfn(s));
    DrawElementsBaseVertex::load_with(|s| loadfn(s));
    DrawElementsIndirect::load_with(|s| loadfn(s));
    DrawElementsInstanced::load_with(|s| loadfn(s));
    DrawElementsInstancedANGLE::load_with(|s| loadfn(s));
    DrawElementsInstancedARB::load_with(|s| loadfn(s));
    DrawElementsInstancedBaseInstance::load_with(|s| loadfn(s));
    DrawElementsInstancedBaseVertex::load_with(|s| loadfn(s));
    DrawElementsInstancedBaseVertexBaseInstance::load_with(|s| loadfn(s));
    DrawElementsInstancedEXT::load_with(|s| loadfn(s));
    DrawElementsInstancedNV::load_with(|s| loadfn(s));
    DrawMeshArraysSUN::load_with(|s| loadfn(s));
    DrawPixels::load_with(|s| loadfn(s));
    DrawRangeElementArrayAPPLE::load_with(|s| loadfn(s));
    DrawRangeElementArrayATI::load_with(|s| loadfn(s));
    DrawRangeElements::load_with(|s| loadfn(s));
    DrawRangeElementsBaseVertex::load_with(|s| loadfn(s));
    DrawRangeElementsEXT::load_with(|s| loadfn(s));
    DrawTexfOES::load_with(|s| loadfn(s));
    DrawTexfvOES::load_with(|s| loadfn(s));
    DrawTexiOES::load_with(|s| loadfn(s));
    DrawTexivOES::load_with(|s| loadfn(s));
    DrawTexsOES::load_with(|s| loadfn(s));
    DrawTexsvOES::load_with(|s| loadfn(s));
    DrawTextureNV::load_with(|s| loadfn(s));
    DrawTexxOES::load_with(|s| loadfn(s));
    DrawTexxvOES::load_with(|s| loadfn(s));
    DrawTransformFeedback::load_with(|s| loadfn(s));
    DrawTransformFeedbackInstanced::load_with(|s| loadfn(s));
    DrawTransformFeedbackNV::load_with(|s| loadfn(s));
    DrawTransformFeedbackStream::load_with(|s| loadfn(s));
    DrawTransformFeedbackStreamInstanced::load_with(|s| loadfn(s));
    EGLImageTargetRenderbufferStorageOES::load_with(|s| loadfn(s));
    EGLImageTargetTexture2DOES::load_with(|s| loadfn(s));
    EdgeFlag::load_with(|s| loadfn(s));
    EdgeFlagFormatNV::load_with(|s| loadfn(s));
    EdgeFlagPointer::load_with(|s| loadfn(s));
    EdgeFlagPointerEXT::load_with(|s| loadfn(s));
    EdgeFlagPointerListIBM::load_with(|s| loadfn(s));
    EdgeFlagv::load_with(|s| loadfn(s));
    ElementPointerAPPLE::load_with(|s| loadfn(s));
    ElementPointerATI::load_with(|s| loadfn(s));
    Enable::load_with(|s| loadfn(s));
    EnableClientState::load_with(|s| loadfn(s));
    EnableClientStateIndexedEXT::load_with(|s| loadfn(s));
    EnableClientStateiEXT::load_with(|s| loadfn(s));
    EnableDriverControlQCOM::load_with(|s| loadfn(s));
    EnableIndexedEXT::load_with(|s| loadfn(s));
    EnableVariantClientStateEXT::load_with(|s| loadfn(s));
    EnableVertexArrayAttribEXT::load_with(|s| loadfn(s));
    EnableVertexArrayEXT::load_with(|s| loadfn(s));
    EnableVertexAttribAPPLE::load_with(|s| loadfn(s));
    EnableVertexAttribArray::load_with(|s| loadfn(s));
    EnableVertexAttribArrayARB::load_with(|s| loadfn(s));
    Enablei::load_with(|s| loadfn(s));
    End::load_with(|s| loadfn(s));
    EndConditionalRender::load_with(|s| loadfn(s));
    EndConditionalRenderNV::load_with(|s| loadfn(s));
    EndConditionalRenderNVX::load_with(|s| loadfn(s));
    EndFragmentShaderATI::load_with(|s| loadfn(s));
    EndList::load_with(|s| loadfn(s));
    EndOcclusionQueryNV::load_with(|s| loadfn(s));
    EndPerfMonitorAMD::load_with(|s| loadfn(s));
    EndQuery::load_with(|s| loadfn(s));
    EndQueryARB::load_with(|s| loadfn(s));
    EndQueryEXT::load_with(|s| loadfn(s));
    EndQueryIndexed::load_with(|s| loadfn(s));
    EndTilingQCOM::load_with(|s| loadfn(s));
    EndTransformFeedback::load_with(|s| loadfn(s));
    EndTransformFeedbackEXT::load_with(|s| loadfn(s));
    EndTransformFeedbackNV::load_with(|s| loadfn(s));
    EndVertexShaderEXT::load_with(|s| loadfn(s));
    EndVideoCaptureNV::load_with(|s| loadfn(s));
    EvalCoord1d::load_with(|s| loadfn(s));
    EvalCoord1dv::load_with(|s| loadfn(s));
    EvalCoord1f::load_with(|s| loadfn(s));
    EvalCoord1fv::load_with(|s| loadfn(s));
    EvalCoord1xOES::load_with(|s| loadfn(s));
    EvalCoord1xvOES::load_with(|s| loadfn(s));
    EvalCoord2d::load_with(|s| loadfn(s));
    EvalCoord2dv::load_with(|s| loadfn(s));
    EvalCoord2f::load_with(|s| loadfn(s));
    EvalCoord2fv::load_with(|s| loadfn(s));
    EvalCoord2xOES::load_with(|s| loadfn(s));
    EvalCoord2xvOES::load_with(|s| loadfn(s));
    EvalMapsNV::load_with(|s| loadfn(s));
    EvalMesh1::load_with(|s| loadfn(s));
    EvalMesh2::load_with(|s| loadfn(s));
    EvalPoint1::load_with(|s| loadfn(s));
    EvalPoint2::load_with(|s| loadfn(s));
    ExecuteProgramNV::load_with(|s| loadfn(s));
    ExtGetBufferPointervQCOM::load_with(|s| loadfn(s));
    ExtGetBuffersQCOM::load_with(|s| loadfn(s));
    ExtGetFramebuffersQCOM::load_with(|s| loadfn(s));
    ExtGetProgramBinarySourceQCOM::load_with(|s| loadfn(s));
    ExtGetProgramsQCOM::load_with(|s| loadfn(s));
    ExtGetRenderbuffersQCOM::load_with(|s| loadfn(s));
    ExtGetShadersQCOM::load_with(|s| loadfn(s));
    ExtGetTexLevelParameterivQCOM::load_with(|s| loadfn(s));
    ExtGetTexSubImageQCOM::load_with(|s| loadfn(s));
    ExtGetTexturesQCOM::load_with(|s| loadfn(s));
    ExtIsProgramBinaryQCOM::load_with(|s| loadfn(s));
    ExtTexObjectStateOverrideiQCOM::load_with(|s| loadfn(s));
    ExtractComponentEXT::load_with(|s| loadfn(s));
    FeedbackBuffer::load_with(|s| loadfn(s));
    FeedbackBufferxOES::load_with(|s| loadfn(s));
    FenceSync::load_with(|s| loadfn(s));
    FenceSyncAPPLE::load_with(|s| loadfn(s));
    FinalCombinerInputNV::load_with(|s| loadfn(s));
    Finish::load_with(|s| loadfn(s));
    FinishAsyncSGIX::load_with(|s| loadfn(s));
    FinishFenceAPPLE::load_with(|s| loadfn(s));
    FinishFenceNV::load_with(|s| loadfn(s));
    FinishObjectAPPLE::load_with(|s| loadfn(s));
    FinishTextureSUNX::load_with(|s| loadfn(s));
    Flush::load_with(|s| loadfn(s));
    FlushMappedBufferRange::load_with(|s| loadfn(s));
    FlushMappedBufferRangeAPPLE::load_with(|s| loadfn(s));
    FlushMappedBufferRangeEXT::load_with(|s| loadfn(s));
    FlushMappedNamedBufferRangeEXT::load_with(|s| loadfn(s));
    FlushPixelDataRangeNV::load_with(|s| loadfn(s));
    FlushRasterSGIX::load_with(|s| loadfn(s));
    FlushStaticDataIBM::load_with(|s| loadfn(s));
    FlushVertexArrayRangeAPPLE::load_with(|s| loadfn(s));
    FlushVertexArrayRangeNV::load_with(|s| loadfn(s));
    FogCoordFormatNV::load_with(|s| loadfn(s));
    FogCoordPointer::load_with(|s| loadfn(s));
    FogCoordPointerEXT::load_with(|s| loadfn(s));
    FogCoordPointerListIBM::load_with(|s| loadfn(s));
    FogCoordd::load_with(|s| loadfn(s));
    FogCoorddEXT::load_with(|s| loadfn(s));
    FogCoorddv::load_with(|s| loadfn(s));
    FogCoorddvEXT::load_with(|s| loadfn(s));
    FogCoordf::load_with(|s| loadfn(s));
    FogCoordfEXT::load_with(|s| loadfn(s));
    FogCoordfv::load_with(|s| loadfn(s));
    FogCoordfvEXT::load_with(|s| loadfn(s));
    FogCoordhNV::load_with(|s| loadfn(s));
    FogCoordhvNV::load_with(|s| loadfn(s));
    FogFuncSGIS::load_with(|s| loadfn(s));
    Fogf::load_with(|s| loadfn(s));
    Fogfv::load_with(|s| loadfn(s));
    Fogi::load_with(|s| loadfn(s));
    Fogiv::load_with(|s| loadfn(s));
    Fogx::load_with(|s| loadfn(s));
    FogxOES::load_with(|s| loadfn(s));
    Fogxv::load_with(|s| loadfn(s));
    FogxvOES::load_with(|s| loadfn(s));
    FragmentColorMaterialSGIX::load_with(|s| loadfn(s));
    FragmentLightModelfSGIX::load_with(|s| loadfn(s));
    FragmentLightModelfvSGIX::load_with(|s| loadfn(s));
    FragmentLightModeliSGIX::load_with(|s| loadfn(s));
    FragmentLightModelivSGIX::load_with(|s| loadfn(s));
    FragmentLightfSGIX::load_with(|s| loadfn(s));
    FragmentLightfvSGIX::load_with(|s| loadfn(s));
    FragmentLightiSGIX::load_with(|s| loadfn(s));
    FragmentLightivSGIX::load_with(|s| loadfn(s));
    FragmentMaterialfSGIX::load_with(|s| loadfn(s));
    FragmentMaterialfvSGIX::load_with(|s| loadfn(s));
    FragmentMaterialiSGIX::load_with(|s| loadfn(s));
    FragmentMaterialivSGIX::load_with(|s| loadfn(s));
    FrameTerminatorGREMEDY::load_with(|s| loadfn(s));
    FrameZoomSGIX::load_with(|s| loadfn(s));
    FramebufferDrawBufferEXT::load_with(|s| loadfn(s));
    FramebufferDrawBuffersEXT::load_with(|s| loadfn(s));
    FramebufferParameteri::load_with(|s| loadfn(s));
    FramebufferReadBufferEXT::load_with(|s| loadfn(s));
    FramebufferRenderbuffer::load_with(|s| loadfn(s));
    FramebufferRenderbufferEXT::load_with(|s| loadfn(s));
    FramebufferRenderbufferOES::load_with(|s| loadfn(s));
    FramebufferTexture::load_with(|s| loadfn(s));
    FramebufferTexture1D::load_with(|s| loadfn(s));
    FramebufferTexture1DEXT::load_with(|s| loadfn(s));
    FramebufferTexture2D::load_with(|s| loadfn(s));
    FramebufferTexture2DEXT::load_with(|s| loadfn(s));
    FramebufferTexture2DMultisampleEXT::load_with(|s| loadfn(s));
    FramebufferTexture2DMultisampleIMG::load_with(|s| loadfn(s));
    FramebufferTexture2DOES::load_with(|s| loadfn(s));
    FramebufferTexture3D::load_with(|s| loadfn(s));
    FramebufferTexture3DEXT::load_with(|s| loadfn(s));
    FramebufferTexture3DOES::load_with(|s| loadfn(s));
    FramebufferTextureARB::load_with(|s| loadfn(s));
    FramebufferTextureEXT::load_with(|s| loadfn(s));
    FramebufferTextureFaceARB::load_with(|s| loadfn(s));
    FramebufferTextureFaceEXT::load_with(|s| loadfn(s));
    FramebufferTextureLayer::load_with(|s| loadfn(s));
    FramebufferTextureLayerARB::load_with(|s| loadfn(s));
    FramebufferTextureLayerEXT::load_with(|s| loadfn(s));
    FreeObjectBufferATI::load_with(|s| loadfn(s));
    FrontFace::load_with(|s| loadfn(s));
    Frustum::load_with(|s| loadfn(s));
    Frustumf::load_with(|s| loadfn(s));
    FrustumfOES::load_with(|s| loadfn(s));
    Frustumx::load_with(|s| loadfn(s));
    FrustumxOES::load_with(|s| loadfn(s));
    GenAsyncMarkersSGIX::load_with(|s| loadfn(s));
    GenBuffers::load_with(|s| loadfn(s));
    GenBuffersARB::load_with(|s| loadfn(s));
    GenFencesAPPLE::load_with(|s| loadfn(s));
    GenFencesNV::load_with(|s| loadfn(s));
    GenFragmentShadersATI::load_with(|s| loadfn(s));
    GenFramebuffers::load_with(|s| loadfn(s));
    GenFramebuffersEXT::load_with(|s| loadfn(s));
    GenFramebuffersOES::load_with(|s| loadfn(s));
    GenLists::load_with(|s| loadfn(s));
    GenNamesAMD::load_with(|s| loadfn(s));
    GenOcclusionQueriesNV::load_with(|s| loadfn(s));
    GenPathsNV::load_with(|s| loadfn(s));
    GenPerfMonitorsAMD::load_with(|s| loadfn(s));
    GenProgramPipelines::load_with(|s| loadfn(s));
    GenProgramPipelinesEXT::load_with(|s| loadfn(s));
    GenProgramsARB::load_with(|s| loadfn(s));
    GenProgramsNV::load_with(|s| loadfn(s));
    GenQueries::load_with(|s| loadfn(s));
    GenQueriesARB::load_with(|s| loadfn(s));
    GenQueriesEXT::load_with(|s| loadfn(s));
    GenRenderbuffers::load_with(|s| loadfn(s));
    GenRenderbuffersEXT::load_with(|s| loadfn(s));
    GenRenderbuffersOES::load_with(|s| loadfn(s));
    GenSamplers::load_with(|s| loadfn(s));
    GenSymbolsEXT::load_with(|s| loadfn(s));
    GenTextures::load_with(|s| loadfn(s));
    GenTexturesEXT::load_with(|s| loadfn(s));
    GenTransformFeedbacks::load_with(|s| loadfn(s));
    GenTransformFeedbacksNV::load_with(|s| loadfn(s));
    GenVertexArrays::load_with(|s| loadfn(s));
    GenVertexArraysAPPLE::load_with(|s| loadfn(s));
    GenVertexArraysOES::load_with(|s| loadfn(s));
    GenVertexShadersEXT::load_with(|s| loadfn(s));
    GenerateMipmap::load_with(|s| loadfn(s));
    GenerateMipmapEXT::load_with(|s| loadfn(s));
    GenerateMipmapOES::load_with(|s| loadfn(s));
    GenerateMultiTexMipmapEXT::load_with(|s| loadfn(s));
    GenerateTextureMipmapEXT::load_with(|s| loadfn(s));
    GetActiveAtomicCounterBufferiv::load_with(|s| loadfn(s));
    GetActiveAttrib::load_with(|s| loadfn(s));
    GetActiveAttribARB::load_with(|s| loadfn(s));
    GetActiveSubroutineName::load_with(|s| loadfn(s));
    GetActiveSubroutineUniformName::load_with(|s| loadfn(s));
    GetActiveSubroutineUniformiv::load_with(|s| loadfn(s));
    GetActiveUniform::load_with(|s| loadfn(s));
    GetActiveUniformARB::load_with(|s| loadfn(s));
    GetActiveUniformBlockName::load_with(|s| loadfn(s));
    GetActiveUniformBlockiv::load_with(|s| loadfn(s));
    GetActiveUniformName::load_with(|s| loadfn(s));
    GetActiveUniformsiv::load_with(|s| loadfn(s));
    GetActiveVaryingNV::load_with(|s| loadfn(s));
    GetArrayObjectfvATI::load_with(|s| loadfn(s));
    GetArrayObjectivATI::load_with(|s| loadfn(s));
    GetAttachedObjectsARB::load_with(|s| loadfn(s));
    GetAttachedShaders::load_with(|s| loadfn(s));
    GetAttribLocation::load_with(|s| loadfn(s));
    GetAttribLocationARB::load_with(|s| loadfn(s));
    GetBooleanIndexedvEXT::load_with(|s| loadfn(s));
    GetBooleani_v::load_with(|s| loadfn(s));
    GetBooleanv::load_with(|s| loadfn(s));
    GetBufferParameteri64v::load_with(|s| loadfn(s));
    GetBufferParameteriv::load_with(|s| loadfn(s));
    GetBufferParameterivARB::load_with(|s| loadfn(s));
    GetBufferParameterui64vNV::load_with(|s| loadfn(s));
    GetBufferPointerv::load_with(|s| loadfn(s));
    GetBufferPointervARB::load_with(|s| loadfn(s));
    GetBufferPointervOES::load_with(|s| loadfn(s));
    GetBufferSubData::load_with(|s| loadfn(s));
    GetBufferSubDataARB::load_with(|s| loadfn(s));
    GetClipPlane::load_with(|s| loadfn(s));
    GetClipPlanef::load_with(|s| loadfn(s));
    GetClipPlanefOES::load_with(|s| loadfn(s));
    GetClipPlanex::load_with(|s| loadfn(s));
    GetClipPlanexOES::load_with(|s| loadfn(s));
    GetColorTable::load_with(|s| loadfn(s));
    GetColorTableEXT::load_with(|s| loadfn(s));
    GetColorTableParameterfv::load_with(|s| loadfn(s));
    GetColorTableParameterfvEXT::load_with(|s| loadfn(s));
    GetColorTableParameterfvSGI::load_with(|s| loadfn(s));
    GetColorTableParameteriv::load_with(|s| loadfn(s));
    GetColorTableParameterivEXT::load_with(|s| loadfn(s));
    GetColorTableParameterivSGI::load_with(|s| loadfn(s));
    GetColorTableSGI::load_with(|s| loadfn(s));
    GetCombinerInputParameterfvNV::load_with(|s| loadfn(s));
    GetCombinerInputParameterivNV::load_with(|s| loadfn(s));
    GetCombinerOutputParameterfvNV::load_with(|s| loadfn(s));
    GetCombinerOutputParameterivNV::load_with(|s| loadfn(s));
    GetCombinerStageParameterfvNV::load_with(|s| loadfn(s));
    GetCompressedMultiTexImageEXT::load_with(|s| loadfn(s));
    GetCompressedTexImage::load_with(|s| loadfn(s));
    GetCompressedTexImageARB::load_with(|s| loadfn(s));
    GetCompressedTextureImageEXT::load_with(|s| loadfn(s));
    GetConvolutionFilter::load_with(|s| loadfn(s));
    GetConvolutionFilterEXT::load_with(|s| loadfn(s));
    GetConvolutionParameterfv::load_with(|s| loadfn(s));
    GetConvolutionParameterfvEXT::load_with(|s| loadfn(s));
    GetConvolutionParameteriv::load_with(|s| loadfn(s));
    GetConvolutionParameterivEXT::load_with(|s| loadfn(s));
    GetConvolutionParameterxvOES::load_with(|s| loadfn(s));
    GetDebugMessageLog::load_with(|s| loadfn(s));
    GetDebugMessageLogAMD::load_with(|s| loadfn(s));
    GetDebugMessageLogARB::load_with(|s| loadfn(s));
    GetDebugMessageLogKHR::load_with(|s| loadfn(s));
    GetDetailTexFuncSGIS::load_with(|s| loadfn(s));
    GetDoubleIndexedvEXT::load_with(|s| loadfn(s));
    GetDoublei_v::load_with(|s| loadfn(s));
    GetDoublei_vEXT::load_with(|s| loadfn(s));
    GetDoublev::load_with(|s| loadfn(s));
    GetDriverControlStringQCOM::load_with(|s| loadfn(s));
    GetDriverControlsQCOM::load_with(|s| loadfn(s));
    GetError::load_with(|s| loadfn(s));
    GetFenceivNV::load_with(|s| loadfn(s));
    GetFinalCombinerInputParameterfvNV::load_with(|s| loadfn(s));
    GetFinalCombinerInputParameterivNV::load_with(|s| loadfn(s));
    GetFixedv::load_with(|s| loadfn(s));
    GetFixedvOES::load_with(|s| loadfn(s));
    GetFloatIndexedvEXT::load_with(|s| loadfn(s));
    GetFloati_v::load_with(|s| loadfn(s));
    GetFloati_vEXT::load_with(|s| loadfn(s));
    GetFloatv::load_with(|s| loadfn(s));
    GetFogFuncSGIS::load_with(|s| loadfn(s));
    GetFragDataIndex::load_with(|s| loadfn(s));
    GetFragDataLocation::load_with(|s| loadfn(s));
    GetFragDataLocationEXT::load_with(|s| loadfn(s));
    GetFragmentLightfvSGIX::load_with(|s| loadfn(s));
    GetFragmentLightivSGIX::load_with(|s| loadfn(s));
    GetFragmentMaterialfvSGIX::load_with(|s| loadfn(s));
    GetFragmentMaterialivSGIX::load_with(|s| loadfn(s));
    GetFramebufferAttachmentParameteriv::load_with(|s| loadfn(s));
    GetFramebufferAttachmentParameterivEXT::load_with(|s| loadfn(s));
    GetFramebufferAttachmentParameterivOES::load_with(|s| loadfn(s));
    GetFramebufferParameteriv::load_with(|s| loadfn(s));
    GetFramebufferParameterivEXT::load_with(|s| loadfn(s));
    GetGraphicsResetStatusARB::load_with(|s| loadfn(s));
    GetGraphicsResetStatusEXT::load_with(|s| loadfn(s));
    GetHandleARB::load_with(|s| loadfn(s));
    GetHistogram::load_with(|s| loadfn(s));
    GetHistogramEXT::load_with(|s| loadfn(s));
    GetHistogramParameterfv::load_with(|s| loadfn(s));
    GetHistogramParameterfvEXT::load_with(|s| loadfn(s));
    GetHistogramParameteriv::load_with(|s| loadfn(s));
    GetHistogramParameterivEXT::load_with(|s| loadfn(s));
    GetHistogramParameterxvOES::load_with(|s| loadfn(s));
    GetImageHandleARB::load_with(|s| loadfn(s));
    GetImageHandleNV::load_with(|s| loadfn(s));
    GetImageTransformParameterfvHP::load_with(|s| loadfn(s));
    GetImageTransformParameterivHP::load_with(|s| loadfn(s));
    GetInfoLogARB::load_with(|s| loadfn(s));
    GetInstrumentsSGIX::load_with(|s| loadfn(s));
    GetInteger64i_v::load_with(|s| loadfn(s));
    GetInteger64v::load_with(|s| loadfn(s));
    GetInteger64vAPPLE::load_with(|s| loadfn(s));
    GetIntegerIndexedvEXT::load_with(|s| loadfn(s));
    GetIntegeri_v::load_with(|s| loadfn(s));
    GetIntegeri_vEXT::load_with(|s| loadfn(s));
    GetIntegerui64i_vNV::load_with(|s| loadfn(s));
    GetIntegerui64vNV::load_with(|s| loadfn(s));
    GetIntegerv::load_with(|s| loadfn(s));
    GetInternalformati64v::load_with(|s| loadfn(s));
    GetInternalformativ::load_with(|s| loadfn(s));
    GetInvariantBooleanvEXT::load_with(|s| loadfn(s));
    GetInvariantFloatvEXT::load_with(|s| loadfn(s));
    GetInvariantIntegervEXT::load_with(|s| loadfn(s));
    GetLightfv::load_with(|s| loadfn(s));
    GetLightiv::load_with(|s| loadfn(s));
    GetLightx::load_with(|s| loadfn(s));
    GetLightxOES::load_with(|s| loadfn(s));
    GetLightxv::load_with(|s| loadfn(s));
    GetLightxvOES::load_with(|s| loadfn(s));
    GetListParameterfvSGIX::load_with(|s| loadfn(s));
    GetListParameterivSGIX::load_with(|s| loadfn(s));
    GetLocalConstantBooleanvEXT::load_with(|s| loadfn(s));
    GetLocalConstantFloatvEXT::load_with(|s| loadfn(s));
    GetLocalConstantIntegervEXT::load_with(|s| loadfn(s));
    GetMapAttribParameterfvNV::load_with(|s| loadfn(s));
    GetMapAttribParameterivNV::load_with(|s| loadfn(s));
    GetMapControlPointsNV::load_with(|s| loadfn(s));
    GetMapParameterfvNV::load_with(|s| loadfn(s));
    GetMapParameterivNV::load_with(|s| loadfn(s));
    GetMapdv::load_with(|s| loadfn(s));
    GetMapfv::load_with(|s| loadfn(s));
    GetMapiv::load_with(|s| loadfn(s));
    GetMapxvOES::load_with(|s| loadfn(s));
    GetMaterialfv::load_with(|s| loadfn(s));
    GetMaterialiv::load_with(|s| loadfn(s));
    GetMaterialx::load_with(|s| loadfn(s));
    GetMaterialxOES::load_with(|s| loadfn(s));
    GetMaterialxv::load_with(|s| loadfn(s));
    GetMaterialxvOES::load_with(|s| loadfn(s));
    GetMinmax::load_with(|s| loadfn(s));
    GetMinmaxEXT::load_with(|s| loadfn(s));
    GetMinmaxParameterfv::load_with(|s| loadfn(s));
    GetMinmaxParameterfvEXT::load_with(|s| loadfn(s));
    GetMinmaxParameteriv::load_with(|s| loadfn(s));
    GetMinmaxParameterivEXT::load_with(|s| loadfn(s));
    GetMultiTexEnvfvEXT::load_with(|s| loadfn(s));
    GetMultiTexEnvivEXT::load_with(|s| loadfn(s));
    GetMultiTexGendvEXT::load_with(|s| loadfn(s));
    GetMultiTexGenfvEXT::load_with(|s| loadfn(s));
    GetMultiTexGenivEXT::load_with(|s| loadfn(s));
    GetMultiTexImageEXT::load_with(|s| loadfn(s));
    GetMultiTexLevelParameterfvEXT::load_with(|s| loadfn(s));
    GetMultiTexLevelParameterivEXT::load_with(|s| loadfn(s));
    GetMultiTexParameterIivEXT::load_with(|s| loadfn(s));
    GetMultiTexParameterIuivEXT::load_with(|s| loadfn(s));
    GetMultiTexParameterfvEXT::load_with(|s| loadfn(s));
    GetMultiTexParameterivEXT::load_with(|s| loadfn(s));
    GetMultisamplefv::load_with(|s| loadfn(s));
    GetMultisamplefvNV::load_with(|s| loadfn(s));
    GetNamedBufferParameterivEXT::load_with(|s| loadfn(s));
    GetNamedBufferParameterui64vNV::load_with(|s| loadfn(s));
    GetNamedBufferPointervEXT::load_with(|s| loadfn(s));
    GetNamedBufferSubDataEXT::load_with(|s| loadfn(s));
    GetNamedFramebufferAttachmentParameterivEXT::load_with(|s| loadfn(s));
    GetNamedFramebufferParameterivEXT::load_with(|s| loadfn(s));
    GetNamedProgramLocalParameterIivEXT::load_with(|s| loadfn(s));
    GetNamedProgramLocalParameterIuivEXT::load_with(|s| loadfn(s));
    GetNamedProgramLocalParameterdvEXT::load_with(|s| loadfn(s));
    GetNamedProgramLocalParameterfvEXT::load_with(|s| loadfn(s));
    GetNamedProgramStringEXT::load_with(|s| loadfn(s));
    GetNamedProgramivEXT::load_with(|s| loadfn(s));
    GetNamedRenderbufferParameterivEXT::load_with(|s| loadfn(s));
    GetNamedStringARB::load_with(|s| loadfn(s));
    GetNamedStringivARB::load_with(|s| loadfn(s));
    GetObjectBufferfvATI::load_with(|s| loadfn(s));
    GetObjectBufferivATI::load_with(|s| loadfn(s));
    GetObjectLabel::load_with(|s| loadfn(s));
    GetObjectLabelEXT::load_with(|s| loadfn(s));
    GetObjectLabelKHR::load_with(|s| loadfn(s));
    GetObjectParameterfvARB::load_with(|s| loadfn(s));
    GetObjectParameterivAPPLE::load_with(|s| loadfn(s));
    GetObjectParameterivARB::load_with(|s| loadfn(s));
    GetObjectPtrLabel::load_with(|s| loadfn(s));
    GetObjectPtrLabelKHR::load_with(|s| loadfn(s));
    GetOcclusionQueryivNV::load_with(|s| loadfn(s));
    GetOcclusionQueryuivNV::load_with(|s| loadfn(s));
    GetPathColorGenfvNV::load_with(|s| loadfn(s));
    GetPathColorGenivNV::load_with(|s| loadfn(s));
    GetPathCommandsNV::load_with(|s| loadfn(s));
    GetPathCoordsNV::load_with(|s| loadfn(s));
    GetPathDashArrayNV::load_with(|s| loadfn(s));
    GetPathLengthNV::load_with(|s| loadfn(s));
    GetPathMetricRangeNV::load_with(|s| loadfn(s));
    GetPathMetricsNV::load_with(|s| loadfn(s));
    GetPathParameterfvNV::load_with(|s| loadfn(s));
    GetPathParameterivNV::load_with(|s| loadfn(s));
    GetPathSpacingNV::load_with(|s| loadfn(s));
    GetPathTexGenfvNV::load_with(|s| loadfn(s));
    GetPathTexGenivNV::load_with(|s| loadfn(s));
    GetPerfMonitorCounterDataAMD::load_with(|s| loadfn(s));
    GetPerfMonitorCounterInfoAMD::load_with(|s| loadfn(s));
    GetPerfMonitorCounterStringAMD::load_with(|s| loadfn(s));
    GetPerfMonitorCountersAMD::load_with(|s| loadfn(s));
    GetPerfMonitorGroupStringAMD::load_with(|s| loadfn(s));
    GetPerfMonitorGroupsAMD::load_with(|s| loadfn(s));
    GetPixelMapfv::load_with(|s| loadfn(s));
    GetPixelMapuiv::load_with(|s| loadfn(s));
    GetPixelMapusv::load_with(|s| loadfn(s));
    GetPixelMapxv::load_with(|s| loadfn(s));
    GetPixelTexGenParameterfvSGIS::load_with(|s| loadfn(s));
    GetPixelTexGenParameterivSGIS::load_with(|s| loadfn(s));
    GetPixelTransformParameterfvEXT::load_with(|s| loadfn(s));
    GetPixelTransformParameterivEXT::load_with(|s| loadfn(s));
    GetPointerIndexedvEXT::load_with(|s| loadfn(s));
    GetPointeri_vEXT::load_with(|s| loadfn(s));
    GetPointerv::load_with(|s| loadfn(s));
    GetPointervEXT::load_with(|s| loadfn(s));
    GetPointervKHR::load_with(|s| loadfn(s));
    GetPolygonStipple::load_with(|s| loadfn(s));
    GetProgramBinary::load_with(|s| loadfn(s));
    GetProgramBinaryOES::load_with(|s| loadfn(s));
    GetProgramEnvParameterIivNV::load_with(|s| loadfn(s));
    GetProgramEnvParameterIuivNV::load_with(|s| loadfn(s));
    GetProgramEnvParameterdvARB::load_with(|s| loadfn(s));
    GetProgramEnvParameterfvARB::load_with(|s| loadfn(s));
    GetProgramInfoLog::load_with(|s| loadfn(s));
    GetProgramInterfaceiv::load_with(|s| loadfn(s));
    GetProgramLocalParameterIivNV::load_with(|s| loadfn(s));
    GetProgramLocalParameterIuivNV::load_with(|s| loadfn(s));
    GetProgramLocalParameterdvARB::load_with(|s| loadfn(s));
    GetProgramLocalParameterfvARB::load_with(|s| loadfn(s));
    GetProgramNamedParameterdvNV::load_with(|s| loadfn(s));
    GetProgramNamedParameterfvNV::load_with(|s| loadfn(s));
    GetProgramParameterdvNV::load_with(|s| loadfn(s));
    GetProgramParameterfvNV::load_with(|s| loadfn(s));
    GetProgramPipelineInfoLog::load_with(|s| loadfn(s));
    GetProgramPipelineInfoLogEXT::load_with(|s| loadfn(s));
    GetProgramPipelineiv::load_with(|s| loadfn(s));
    GetProgramPipelineivEXT::load_with(|s| loadfn(s));
    GetProgramResourceIndex::load_with(|s| loadfn(s));
    GetProgramResourceLocation::load_with(|s| loadfn(s));
    GetProgramResourceLocationIndex::load_with(|s| loadfn(s));
    GetProgramResourceName::load_with(|s| loadfn(s));
    GetProgramResourceiv::load_with(|s| loadfn(s));
    GetProgramStageiv::load_with(|s| loadfn(s));
    GetProgramStringARB::load_with(|s| loadfn(s));
    GetProgramStringNV::load_with(|s| loadfn(s));
    GetProgramSubroutineParameteruivNV::load_with(|s| loadfn(s));
    GetProgramiv::load_with(|s| loadfn(s));
    GetProgramivARB::load_with(|s| loadfn(s));
    GetProgramivNV::load_with(|s| loadfn(s));
    GetQueryIndexediv::load_with(|s| loadfn(s));
    GetQueryObjecti64v::load_with(|s| loadfn(s));
    GetQueryObjecti64vEXT::load_with(|s| loadfn(s));
    GetQueryObjectiv::load_with(|s| loadfn(s));
    GetQueryObjectivARB::load_with(|s| loadfn(s));
    GetQueryObjectivEXT::load_with(|s| loadfn(s));
    GetQueryObjectui64v::load_with(|s| loadfn(s));
    GetQueryObjectui64vEXT::load_with(|s| loadfn(s));
    GetQueryObjectuiv::load_with(|s| loadfn(s));
    GetQueryObjectuivARB::load_with(|s| loadfn(s));
    GetQueryObjectuivEXT::load_with(|s| loadfn(s));
    GetQueryiv::load_with(|s| loadfn(s));
    GetQueryivARB::load_with(|s| loadfn(s));
    GetQueryivEXT::load_with(|s| loadfn(s));
    GetRenderbufferParameteriv::load_with(|s| loadfn(s));
    GetRenderbufferParameterivEXT::load_with(|s| loadfn(s));
    GetRenderbufferParameterivOES::load_with(|s| loadfn(s));
    GetSamplerParameterIiv::load_with(|s| loadfn(s));
    GetSamplerParameterIuiv::load_with(|s| loadfn(s));
    GetSamplerParameterfv::load_with(|s| loadfn(s));
    GetSamplerParameteriv::load_with(|s| loadfn(s));
    GetSeparableFilter::load_with(|s| loadfn(s));
    GetSeparableFilterEXT::load_with(|s| loadfn(s));
    GetShaderInfoLog::load_with(|s| loadfn(s));
    GetShaderPrecisionFormat::load_with(|s| loadfn(s));
    GetShaderSource::load_with(|s| loadfn(s));
    GetShaderSourceARB::load_with(|s| loadfn(s));
    GetShaderiv::load_with(|s| loadfn(s));
    GetSharpenTexFuncSGIS::load_with(|s| loadfn(s));
    GetString::load_with(|s| loadfn(s));
    GetStringi::load_with(|s| loadfn(s));
    GetSubroutineIndex::load_with(|s| loadfn(s));
    GetSubroutineUniformLocation::load_with(|s| loadfn(s));
    GetSynciv::load_with(|s| loadfn(s));
    GetSyncivAPPLE::load_with(|s| loadfn(s));
    GetTexBumpParameterfvATI::load_with(|s| loadfn(s));
    GetTexBumpParameterivATI::load_with(|s| loadfn(s));
    GetTexEnvfv::load_with(|s| loadfn(s));
    GetTexEnviv::load_with(|s| loadfn(s));
    GetTexEnvxv::load_with(|s| loadfn(s));
    GetTexEnvxvOES::load_with(|s| loadfn(s));
    GetTexFilterFuncSGIS::load_with(|s| loadfn(s));
    GetTexGendv::load_with(|s| loadfn(s));
    GetTexGenfv::load_with(|s| loadfn(s));
    GetTexGenfvOES::load_with(|s| loadfn(s));
    GetTexGeniv::load_with(|s| loadfn(s));
    GetTexGenivOES::load_with(|s| loadfn(s));
    GetTexGenxvOES::load_with(|s| loadfn(s));
    GetTexImage::load_with(|s| loadfn(s));
    GetTexLevelParameterfv::load_with(|s| loadfn(s));
    GetTexLevelParameteriv::load_with(|s| loadfn(s));
    GetTexLevelParameterxvOES::load_with(|s| loadfn(s));
    GetTexParameterIiv::load_with(|s| loadfn(s));
    GetTexParameterIivEXT::load_with(|s| loadfn(s));
    GetTexParameterIuiv::load_with(|s| loadfn(s));
    GetTexParameterIuivEXT::load_with(|s| loadfn(s));
    GetTexParameterPointervAPPLE::load_with(|s| loadfn(s));
    GetTexParameterfv::load_with(|s| loadfn(s));
    GetTexParameteriv::load_with(|s| loadfn(s));
    GetTexParameterxv::load_with(|s| loadfn(s));
    GetTexParameterxvOES::load_with(|s| loadfn(s));
    GetTextureHandleARB::load_with(|s| loadfn(s));
    GetTextureHandleNV::load_with(|s| loadfn(s));
    GetTextureImageEXT::load_with(|s| loadfn(s));
    GetTextureLevelParameterfvEXT::load_with(|s| loadfn(s));
    GetTextureLevelParameterivEXT::load_with(|s| loadfn(s));
    GetTextureParameterIivEXT::load_with(|s| loadfn(s));
    GetTextureParameterIuivEXT::load_with(|s| loadfn(s));
    GetTextureParameterfvEXT::load_with(|s| loadfn(s));
    GetTextureParameterivEXT::load_with(|s| loadfn(s));
    GetTextureSamplerHandleARB::load_with(|s| loadfn(s));
    GetTextureSamplerHandleNV::load_with(|s| loadfn(s));
    GetTrackMatrixivNV::load_with(|s| loadfn(s));
    GetTransformFeedbackVarying::load_with(|s| loadfn(s));
    GetTransformFeedbackVaryingEXT::load_with(|s| loadfn(s));
    GetTransformFeedbackVaryingNV::load_with(|s| loadfn(s));
    GetTranslatedShaderSourceANGLE::load_with(|s| loadfn(s));
    GetUniformBlockIndex::load_with(|s| loadfn(s));
    GetUniformBufferSizeEXT::load_with(|s| loadfn(s));
    GetUniformIndices::load_with(|s| loadfn(s));
    GetUniformLocation::load_with(|s| loadfn(s));
    GetUniformLocationARB::load_with(|s| loadfn(s));
    GetUniformOffsetEXT::load_with(|s| loadfn(s));
    GetUniformSubroutineuiv::load_with(|s| loadfn(s));
    GetUniformdv::load_with(|s| loadfn(s));
    GetUniformfv::load_with(|s| loadfn(s));
    GetUniformfvARB::load_with(|s| loadfn(s));
    GetUniformi64vNV::load_with(|s| loadfn(s));
    GetUniformiv::load_with(|s| loadfn(s));
    GetUniformivARB::load_with(|s| loadfn(s));
    GetUniformui64vNV::load_with(|s| loadfn(s));
    GetUniformuiv::load_with(|s| loadfn(s));
    GetUniformuivEXT::load_with(|s| loadfn(s));
    GetVariantArrayObjectfvATI::load_with(|s| loadfn(s));
    GetVariantArrayObjectivATI::load_with(|s| loadfn(s));
    GetVariantBooleanvEXT::load_with(|s| loadfn(s));
    GetVariantFloatvEXT::load_with(|s| loadfn(s));
    GetVariantIntegervEXT::load_with(|s| loadfn(s));
    GetVariantPointervEXT::load_with(|s| loadfn(s));
    GetVaryingLocationNV::load_with(|s| loadfn(s));
    GetVertexArrayIntegeri_vEXT::load_with(|s| loadfn(s));
    GetVertexArrayIntegervEXT::load_with(|s| loadfn(s));
    GetVertexArrayPointeri_vEXT::load_with(|s| loadfn(s));
    GetVertexArrayPointervEXT::load_with(|s| loadfn(s));
    GetVertexAttribArrayObjectfvATI::load_with(|s| loadfn(s));
    GetVertexAttribArrayObjectivATI::load_with(|s| loadfn(s));
    GetVertexAttribIiv::load_with(|s| loadfn(s));
    GetVertexAttribIivEXT::load_with(|s| loadfn(s));
    GetVertexAttribIuiv::load_with(|s| loadfn(s));
    GetVertexAttribIuivEXT::load_with(|s| loadfn(s));
    GetVertexAttribLdv::load_with(|s| loadfn(s));
    GetVertexAttribLdvEXT::load_with(|s| loadfn(s));
    GetVertexAttribLi64vNV::load_with(|s| loadfn(s));
    GetVertexAttribLui64vARB::load_with(|s| loadfn(s));
    GetVertexAttribLui64vNV::load_with(|s| loadfn(s));
    GetVertexAttribPointerv::load_with(|s| loadfn(s));
    GetVertexAttribPointervARB::load_with(|s| loadfn(s));
    GetVertexAttribPointervNV::load_with(|s| loadfn(s));
    GetVertexAttribdv::load_with(|s| loadfn(s));
    GetVertexAttribdvARB::load_with(|s| loadfn(s));
    GetVertexAttribdvNV::load_with(|s| loadfn(s));
    GetVertexAttribfv::load_with(|s| loadfn(s));
    GetVertexAttribfvARB::load_with(|s| loadfn(s));
    GetVertexAttribfvNV::load_with(|s| loadfn(s));
    GetVertexAttribiv::load_with(|s| loadfn(s));
    GetVertexAttribivARB::load_with(|s| loadfn(s));
    GetVertexAttribivNV::load_with(|s| loadfn(s));
    GetVideoCaptureStreamdvNV::load_with(|s| loadfn(s));
    GetVideoCaptureStreamfvNV::load_with(|s| loadfn(s));
    GetVideoCaptureStreamivNV::load_with(|s| loadfn(s));
    GetVideoCaptureivNV::load_with(|s| loadfn(s));
    GetVideoi64vNV::load_with(|s| loadfn(s));
    GetVideoivNV::load_with(|s| loadfn(s));
    GetVideoui64vNV::load_with(|s| loadfn(s));
    GetVideouivNV::load_with(|s| loadfn(s));
    GetnColorTableARB::load_with(|s| loadfn(s));
    GetnCompressedTexImageARB::load_with(|s| loadfn(s));
    GetnConvolutionFilterARB::load_with(|s| loadfn(s));
    GetnHistogramARB::load_with(|s| loadfn(s));
    GetnMapdvARB::load_with(|s| loadfn(s));
    GetnMapfvARB::load_with(|s| loadfn(s));
    GetnMapivARB::load_with(|s| loadfn(s));
    GetnMinmaxARB::load_with(|s| loadfn(s));
    GetnPixelMapfvARB::load_with(|s| loadfn(s));
    GetnPixelMapuivARB::load_with(|s| loadfn(s));
    GetnPixelMapusvARB::load_with(|s| loadfn(s));
    GetnPolygonStippleARB::load_with(|s| loadfn(s));
    GetnSeparableFilterARB::load_with(|s| loadfn(s));
    GetnTexImageARB::load_with(|s| loadfn(s));
    GetnUniformdvARB::load_with(|s| loadfn(s));
    GetnUniformfvARB::load_with(|s| loadfn(s));
    GetnUniformfvEXT::load_with(|s| loadfn(s));
    GetnUniformivARB::load_with(|s| loadfn(s));
    GetnUniformivEXT::load_with(|s| loadfn(s));
    GetnUniformuivARB::load_with(|s| loadfn(s));
    GlobalAlphaFactorbSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactordSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactorfSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactoriSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactorsSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactorubSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactoruiSUN::load_with(|s| loadfn(s));
    GlobalAlphaFactorusSUN::load_with(|s| loadfn(s));
    Hint::load_with(|s| loadfn(s));
    HintPGI::load_with(|s| loadfn(s));
    Histogram::load_with(|s| loadfn(s));
    HistogramEXT::load_with(|s| loadfn(s));
    IglooInterfaceSGIX::load_with(|s| loadfn(s));
    ImageTransformParameterfHP::load_with(|s| loadfn(s));
    ImageTransformParameterfvHP::load_with(|s| loadfn(s));
    ImageTransformParameteriHP::load_with(|s| loadfn(s));
    ImageTransformParameterivHP::load_with(|s| loadfn(s));
    ImportSyncEXT::load_with(|s| loadfn(s));
    IndexFormatNV::load_with(|s| loadfn(s));
    IndexFuncEXT::load_with(|s| loadfn(s));
    IndexMask::load_with(|s| loadfn(s));
    IndexMaterialEXT::load_with(|s| loadfn(s));
    IndexPointer::load_with(|s| loadfn(s));
    IndexPointerEXT::load_with(|s| loadfn(s));
    IndexPointerListIBM::load_with(|s| loadfn(s));
    Indexd::load_with(|s| loadfn(s));
    Indexdv::load_with(|s| loadfn(s));
    Indexf::load_with(|s| loadfn(s));
    Indexfv::load_with(|s| loadfn(s));
    Indexi::load_with(|s| loadfn(s));
    Indexiv::load_with(|s| loadfn(s));
    Indexs::load_with(|s| loadfn(s));
    Indexsv::load_with(|s| loadfn(s));
    Indexub::load_with(|s| loadfn(s));
    Indexubv::load_with(|s| loadfn(s));
    IndexxOES::load_with(|s| loadfn(s));
    IndexxvOES::load_with(|s| loadfn(s));
    InitNames::load_with(|s| loadfn(s));
    InsertComponentEXT::load_with(|s| loadfn(s));
    InsertEventMarkerEXT::load_with(|s| loadfn(s));
    InstrumentsBufferSGIX::load_with(|s| loadfn(s));
    InterleavedArrays::load_with(|s| loadfn(s));
    InterpolatePathsNV::load_with(|s| loadfn(s));
    InvalidateBufferData::load_with(|s| loadfn(s));
    InvalidateBufferSubData::load_with(|s| loadfn(s));
    InvalidateFramebuffer::load_with(|s| loadfn(s));
    InvalidateSubFramebuffer::load_with(|s| loadfn(s));
    InvalidateTexImage::load_with(|s| loadfn(s));
    InvalidateTexSubImage::load_with(|s| loadfn(s));
    IsAsyncMarkerSGIX::load_with(|s| loadfn(s));
    IsBuffer::load_with(|s| loadfn(s));
    IsBufferARB::load_with(|s| loadfn(s));
    IsBufferResidentNV::load_with(|s| loadfn(s));
    IsEnabled::load_with(|s| loadfn(s));
    IsEnabledIndexedEXT::load_with(|s| loadfn(s));
    IsEnabledi::load_with(|s| loadfn(s));
    IsFenceAPPLE::load_with(|s| loadfn(s));
    IsFenceNV::load_with(|s| loadfn(s));
    IsFramebuffer::load_with(|s| loadfn(s));
    IsFramebufferEXT::load_with(|s| loadfn(s));
    IsFramebufferOES::load_with(|s| loadfn(s));
    IsImageHandleResidentARB::load_with(|s| loadfn(s));
    IsImageHandleResidentNV::load_with(|s| loadfn(s));
    IsList::load_with(|s| loadfn(s));
    IsNameAMD::load_with(|s| loadfn(s));
    IsNamedBufferResidentNV::load_with(|s| loadfn(s));
    IsNamedStringARB::load_with(|s| loadfn(s));
    IsObjectBufferATI::load_with(|s| loadfn(s));
    IsOcclusionQueryNV::load_with(|s| loadfn(s));
    IsPathNV::load_with(|s| loadfn(s));
    IsPointInFillPathNV::load_with(|s| loadfn(s));
    IsPointInStrokePathNV::load_with(|s| loadfn(s));
    IsProgram::load_with(|s| loadfn(s));
    IsProgramARB::load_with(|s| loadfn(s));
    IsProgramNV::load_with(|s| loadfn(s));
    IsProgramPipeline::load_with(|s| loadfn(s));
    IsProgramPipelineEXT::load_with(|s| loadfn(s));
    IsQuery::load_with(|s| loadfn(s));
    IsQueryARB::load_with(|s| loadfn(s));
    IsQueryEXT::load_with(|s| loadfn(s));
    IsRenderbuffer::load_with(|s| loadfn(s));
    IsRenderbufferEXT::load_with(|s| loadfn(s));
    IsRenderbufferOES::load_with(|s| loadfn(s));
    IsSampler::load_with(|s| loadfn(s));
    IsShader::load_with(|s| loadfn(s));
    IsSync::load_with(|s| loadfn(s));
    IsSyncAPPLE::load_with(|s| loadfn(s));
    IsTexture::load_with(|s| loadfn(s));
    IsTextureEXT::load_with(|s| loadfn(s));
    IsTextureHandleResidentARB::load_with(|s| loadfn(s));
    IsTextureHandleResidentNV::load_with(|s| loadfn(s));
    IsTransformFeedback::load_with(|s| loadfn(s));
    IsTransformFeedbackNV::load_with(|s| loadfn(s));
    IsVariantEnabledEXT::load_with(|s| loadfn(s));
    IsVertexArray::load_with(|s| loadfn(s));
    IsVertexArrayAPPLE::load_with(|s| loadfn(s));
    IsVertexArrayOES::load_with(|s| loadfn(s));
    IsVertexAttribEnabledAPPLE::load_with(|s| loadfn(s));
    LabelObjectEXT::load_with(|s| loadfn(s));
    LightEnviSGIX::load_with(|s| loadfn(s));
    LightModelf::load_with(|s| loadfn(s));
    LightModelfv::load_with(|s| loadfn(s));
    LightModeli::load_with(|s| loadfn(s));
    LightModeliv::load_with(|s| loadfn(s));
    LightModelx::load_with(|s| loadfn(s));
    LightModelxOES::load_with(|s| loadfn(s));
    LightModelxv::load_with(|s| loadfn(s));
    LightModelxvOES::load_with(|s| loadfn(s));
    Lightf::load_with(|s| loadfn(s));
    Lightfv::load_with(|s| loadfn(s));
    Lighti::load_with(|s| loadfn(s));
    Lightiv::load_with(|s| loadfn(s));
    Lightx::load_with(|s| loadfn(s));
    LightxOES::load_with(|s| loadfn(s));
    Lightxv::load_with(|s| loadfn(s));
    LightxvOES::load_with(|s| loadfn(s));
    LineStipple::load_with(|s| loadfn(s));
    LineWidth::load_with(|s| loadfn(s));
    LineWidthx::load_with(|s| loadfn(s));
    LineWidthxOES::load_with(|s| loadfn(s));
    LinkProgram::load_with(|s| loadfn(s));
    LinkProgramARB::load_with(|s| loadfn(s));
    ListBase::load_with(|s| loadfn(s));
    ListParameterfSGIX::load_with(|s| loadfn(s));
    ListParameterfvSGIX::load_with(|s| loadfn(s));
    ListParameteriSGIX::load_with(|s| loadfn(s));
    ListParameterivSGIX::load_with(|s| loadfn(s));
    LoadIdentity::load_with(|s| loadfn(s));
    LoadIdentityDeformationMapSGIX::load_with(|s| loadfn(s));
    LoadMatrixd::load_with(|s| loadfn(s));
    LoadMatrixf::load_with(|s| loadfn(s));
    LoadMatrixx::load_with(|s| loadfn(s));
    LoadMatrixxOES::load_with(|s| loadfn(s));
    LoadName::load_with(|s| loadfn(s));
    LoadPaletteFromModelViewMatrixOES::load_with(|s| loadfn(s));
    LoadProgramNV::load_with(|s| loadfn(s));
    LoadTransposeMatrixd::load_with(|s| loadfn(s));
    LoadTransposeMatrixdARB::load_with(|s| loadfn(s));
    LoadTransposeMatrixf::load_with(|s| loadfn(s));
    LoadTransposeMatrixfARB::load_with(|s| loadfn(s));
    LoadTransposeMatrixxOES::load_with(|s| loadfn(s));
    LockArraysEXT::load_with(|s| loadfn(s));
    LogicOp::load_with(|s| loadfn(s));
    MakeBufferNonResidentNV::load_with(|s| loadfn(s));
    MakeBufferResidentNV::load_with(|s| loadfn(s));
    MakeImageHandleNonResidentARB::load_with(|s| loadfn(s));
    MakeImageHandleNonResidentNV::load_with(|s| loadfn(s));
    MakeImageHandleResidentARB::load_with(|s| loadfn(s));
    MakeImageHandleResidentNV::load_with(|s| loadfn(s));
    MakeNamedBufferNonResidentNV::load_with(|s| loadfn(s));
    MakeNamedBufferResidentNV::load_with(|s| loadfn(s));
    MakeTextureHandleNonResidentARB::load_with(|s| loadfn(s));
    MakeTextureHandleNonResidentNV::load_with(|s| loadfn(s));
    MakeTextureHandleResidentARB::load_with(|s| loadfn(s));
    MakeTextureHandleResidentNV::load_with(|s| loadfn(s));
    Map1d::load_with(|s| loadfn(s));
    Map1f::load_with(|s| loadfn(s));
    Map1xOES::load_with(|s| loadfn(s));
    Map2d::load_with(|s| loadfn(s));
    Map2f::load_with(|s| loadfn(s));
    Map2xOES::load_with(|s| loadfn(s));
    MapBuffer::load_with(|s| loadfn(s));
    MapBufferARB::load_with(|s| loadfn(s));
    MapBufferOES::load_with(|s| loadfn(s));
    MapBufferRange::load_with(|s| loadfn(s));
    MapBufferRangeEXT::load_with(|s| loadfn(s));
    MapControlPointsNV::load_with(|s| loadfn(s));
    MapGrid1d::load_with(|s| loadfn(s));
    MapGrid1f::load_with(|s| loadfn(s));
    MapGrid1xOES::load_with(|s| loadfn(s));
    MapGrid2d::load_with(|s| loadfn(s));
    MapGrid2f::load_with(|s| loadfn(s));
    MapGrid2xOES::load_with(|s| loadfn(s));
    MapNamedBufferEXT::load_with(|s| loadfn(s));
    MapNamedBufferRangeEXT::load_with(|s| loadfn(s));
    MapObjectBufferATI::load_with(|s| loadfn(s));
    MapParameterfvNV::load_with(|s| loadfn(s));
    MapParameterivNV::load_with(|s| loadfn(s));
    MapTexture2DINTEL::load_with(|s| loadfn(s));
    MapVertexAttrib1dAPPLE::load_with(|s| loadfn(s));
    MapVertexAttrib1fAPPLE::load_with(|s| loadfn(s));
    MapVertexAttrib2dAPPLE::load_with(|s| loadfn(s));
    MapVertexAttrib2fAPPLE::load_with(|s| loadfn(s));
    Materialf::load_with(|s| loadfn(s));
    Materialfv::load_with(|s| loadfn(s));
    Materiali::load_with(|s| loadfn(s));
    Materialiv::load_with(|s| loadfn(s));
    Materialx::load_with(|s| loadfn(s));
    MaterialxOES::load_with(|s| loadfn(s));
    Materialxv::load_with(|s| loadfn(s));
    MaterialxvOES::load_with(|s| loadfn(s));
    MatrixFrustumEXT::load_with(|s| loadfn(s));
    MatrixIndexPointerARB::load_with(|s| loadfn(s));
    MatrixIndexPointerOES::load_with(|s| loadfn(s));
    MatrixIndexubvARB::load_with(|s| loadfn(s));
    MatrixIndexuivARB::load_with(|s| loadfn(s));
    MatrixIndexusvARB::load_with(|s| loadfn(s));
    MatrixLoadIdentityEXT::load_with(|s| loadfn(s));
    MatrixLoadTransposedEXT::load_with(|s| loadfn(s));
    MatrixLoadTransposefEXT::load_with(|s| loadfn(s));
    MatrixLoaddEXT::load_with(|s| loadfn(s));
    MatrixLoadfEXT::load_with(|s| loadfn(s));
    MatrixMode::load_with(|s| loadfn(s));
    MatrixMultTransposedEXT::load_with(|s| loadfn(s));
    MatrixMultTransposefEXT::load_with(|s| loadfn(s));
    MatrixMultdEXT::load_with(|s| loadfn(s));
    MatrixMultfEXT::load_with(|s| loadfn(s));
    MatrixOrthoEXT::load_with(|s| loadfn(s));
    MatrixPopEXT::load_with(|s| loadfn(s));
    MatrixPushEXT::load_with(|s| loadfn(s));
    MatrixRotatedEXT::load_with(|s| loadfn(s));
    MatrixRotatefEXT::load_with(|s| loadfn(s));
    MatrixScaledEXT::load_with(|s| loadfn(s));
    MatrixScalefEXT::load_with(|s| loadfn(s));
    MatrixTranslatedEXT::load_with(|s| loadfn(s));
    MatrixTranslatefEXT::load_with(|s| loadfn(s));
    MemoryBarrier::load_with(|s| loadfn(s));
    MemoryBarrierEXT::load_with(|s| loadfn(s));
    MinSampleShading::load_with(|s| loadfn(s));
    MinSampleShadingARB::load_with(|s| loadfn(s));
    Minmax::load_with(|s| loadfn(s));
    MinmaxEXT::load_with(|s| loadfn(s));
    MultMatrixd::load_with(|s| loadfn(s));
    MultMatrixf::load_with(|s| loadfn(s));
    MultMatrixx::load_with(|s| loadfn(s));
    MultMatrixxOES::load_with(|s| loadfn(s));
    MultTransposeMatrixd::load_with(|s| loadfn(s));
    MultTransposeMatrixdARB::load_with(|s| loadfn(s));
    MultTransposeMatrixf::load_with(|s| loadfn(s));
    MultTransposeMatrixfARB::load_with(|s| loadfn(s));
    MultTransposeMatrixxOES::load_with(|s| loadfn(s));
    MultiDrawArrays::load_with(|s| loadfn(s));
    MultiDrawArraysEXT::load_with(|s| loadfn(s));
    MultiDrawArraysIndirect::load_with(|s| loadfn(s));
    MultiDrawArraysIndirectAMD::load_with(|s| loadfn(s));
    MultiDrawArraysIndirectBindlessNV::load_with(|s| loadfn(s));
    MultiDrawElementsIndirectBindlessNV::load_with(|s| loadfn(s));
    MultiDrawArraysIndirectCountARB::load_with(|s| loadfn(s));
    MultiDrawElementArrayAPPLE::load_with(|s| loadfn(s));
    MultiDrawElements::load_with(|s| loadfn(s));
    MultiDrawElementsBaseVertex::load_with(|s| loadfn(s));
    MultiDrawElementsEXT::load_with(|s| loadfn(s));
    MultiDrawElementsIndirect::load_with(|s| loadfn(s));
    MultiDrawElementsIndirectAMD::load_with(|s| loadfn(s));
    MultiDrawElementsIndirectCountARB::load_with(|s| loadfn(s));
    MultiDrawRangeElementArrayAPPLE::load_with(|s| loadfn(s));
    MultiModeDrawArraysIBM::load_with(|s| loadfn(s));
    MultiModeDrawElementsIBM::load_with(|s| loadfn(s));
    MultiTexBufferEXT::load_with(|s| loadfn(s));
    MultiTexCoord1bOES::load_with(|s| loadfn(s));
    MultiTexCoord1bvOES::load_with(|s| loadfn(s));
    MultiTexCoord1d::load_with(|s| loadfn(s));
    MultiTexCoord1dARB::load_with(|s| loadfn(s));
    MultiTexCoord1dv::load_with(|s| loadfn(s));
    MultiTexCoord1dvARB::load_with(|s| loadfn(s));
    MultiTexCoord1f::load_with(|s| loadfn(s));
    MultiTexCoord1fARB::load_with(|s| loadfn(s));
    MultiTexCoord1fv::load_with(|s| loadfn(s));
    MultiTexCoord1fvARB::load_with(|s| loadfn(s));
    MultiTexCoord1hNV::load_with(|s| loadfn(s));
    MultiTexCoord1hvNV::load_with(|s| loadfn(s));
    MultiTexCoord1i::load_with(|s| loadfn(s));
    MultiTexCoord1iARB::load_with(|s| loadfn(s));
    MultiTexCoord1iv::load_with(|s| loadfn(s));
    MultiTexCoord1ivARB::load_with(|s| loadfn(s));
    MultiTexCoord1s::load_with(|s| loadfn(s));
    MultiTexCoord1sARB::load_with(|s| loadfn(s));
    MultiTexCoord1sv::load_with(|s| loadfn(s));
    MultiTexCoord1svARB::load_with(|s| loadfn(s));
    MultiTexCoord1xOES::load_with(|s| loadfn(s));
    MultiTexCoord1xvOES::load_with(|s| loadfn(s));
    MultiTexCoord2bOES::load_with(|s| loadfn(s));
    MultiTexCoord2bvOES::load_with(|s| loadfn(s));
    MultiTexCoord2d::load_with(|s| loadfn(s));
    MultiTexCoord2dARB::load_with(|s| loadfn(s));
    MultiTexCoord2dv::load_with(|s| loadfn(s));
    MultiTexCoord2dvARB::load_with(|s| loadfn(s));
    MultiTexCoord2f::load_with(|s| loadfn(s));
    MultiTexCoord2fARB::load_with(|s| loadfn(s));
    MultiTexCoord2fv::load_with(|s| loadfn(s));
    MultiTexCoord2fvARB::load_with(|s| loadfn(s));
    MultiTexCoord2hNV::load_with(|s| loadfn(s));
    MultiTexCoord2hvNV::load_with(|s| loadfn(s));
    MultiTexCoord2i::load_with(|s| loadfn(s));
    MultiTexCoord2iARB::load_with(|s| loadfn(s));
    MultiTexCoord2iv::load_with(|s| loadfn(s));
    MultiTexCoord2ivARB::load_with(|s| loadfn(s));
    MultiTexCoord2s::load_with(|s| loadfn(s));
    MultiTexCoord2sARB::load_with(|s| loadfn(s));
    MultiTexCoord2sv::load_with(|s| loadfn(s));
    MultiTexCoord2svARB::load_with(|s| loadfn(s));
    MultiTexCoord2xOES::load_with(|s| loadfn(s));
    MultiTexCoord2xvOES::load_with(|s| loadfn(s));
    MultiTexCoord3bOES::load_with(|s| loadfn(s));
    MultiTexCoord3bvOES::load_with(|s| loadfn(s));
    MultiTexCoord3d::load_with(|s| loadfn(s));
    MultiTexCoord3dARB::load_with(|s| loadfn(s));
    MultiTexCoord3dv::load_with(|s| loadfn(s));
    MultiTexCoord3dvARB::load_with(|s| loadfn(s));
    MultiTexCoord3f::load_with(|s| loadfn(s));
    MultiTexCoord3fARB::load_with(|s| loadfn(s));
    MultiTexCoord3fv::load_with(|s| loadfn(s));
    MultiTexCoord3fvARB::load_with(|s| loadfn(s));
    MultiTexCoord3hNV::load_with(|s| loadfn(s));
    MultiTexCoord3hvNV::load_with(|s| loadfn(s));
    MultiTexCoord3i::load_with(|s| loadfn(s));
    MultiTexCoord3iARB::load_with(|s| loadfn(s));
    MultiTexCoord3iv::load_with(|s| loadfn(s));
    MultiTexCoord3ivARB::load_with(|s| loadfn(s));
    MultiTexCoord3s::load_with(|s| loadfn(s));
    MultiTexCoord3sARB::load_with(|s| loadfn(s));
    MultiTexCoord3sv::load_with(|s| loadfn(s));
    MultiTexCoord3svARB::load_with(|s| loadfn(s));
    MultiTexCoord3xOES::load_with(|s| loadfn(s));
    MultiTexCoord3xvOES::load_with(|s| loadfn(s));
    MultiTexCoord4bOES::load_with(|s| loadfn(s));
    MultiTexCoord4bvOES::load_with(|s| loadfn(s));
    MultiTexCoord4d::load_with(|s| loadfn(s));
    MultiTexCoord4dARB::load_with(|s| loadfn(s));
    MultiTexCoord4dv::load_with(|s| loadfn(s));
    MultiTexCoord4dvARB::load_with(|s| loadfn(s));
    MultiTexCoord4f::load_with(|s| loadfn(s));
    MultiTexCoord4fARB::load_with(|s| loadfn(s));
    MultiTexCoord4fv::load_with(|s| loadfn(s));
    MultiTexCoord4fvARB::load_with(|s| loadfn(s));
    MultiTexCoord4hNV::load_with(|s| loadfn(s));
    MultiTexCoord4hvNV::load_with(|s| loadfn(s));
    MultiTexCoord4i::load_with(|s| loadfn(s));
    MultiTexCoord4iARB::load_with(|s| loadfn(s));
    MultiTexCoord4iv::load_with(|s| loadfn(s));
    MultiTexCoord4ivARB::load_with(|s| loadfn(s));
    MultiTexCoord4s::load_with(|s| loadfn(s));
    MultiTexCoord4sARB::load_with(|s| loadfn(s));
    MultiTexCoord4sv::load_with(|s| loadfn(s));
    MultiTexCoord4svARB::load_with(|s| loadfn(s));
    MultiTexCoord4x::load_with(|s| loadfn(s));
    MultiTexCoord4xOES::load_with(|s| loadfn(s));
    MultiTexCoord4xvOES::load_with(|s| loadfn(s));
    MultiTexCoordP1ui::load_with(|s| loadfn(s));
    MultiTexCoordP1uiv::load_with(|s| loadfn(s));
    MultiTexCoordP2ui::load_with(|s| loadfn(s));
    MultiTexCoordP2uiv::load_with(|s| loadfn(s));
    MultiTexCoordP3ui::load_with(|s| loadfn(s));
    MultiTexCoordP3uiv::load_with(|s| loadfn(s));
    MultiTexCoordP4ui::load_with(|s| loadfn(s));
    MultiTexCoordP4uiv::load_with(|s| loadfn(s));
    MultiTexCoordPointerEXT::load_with(|s| loadfn(s));
    MultiTexEnvfEXT::load_with(|s| loadfn(s));
    MultiTexEnvfvEXT::load_with(|s| loadfn(s));
    MultiTexEnviEXT::load_with(|s| loadfn(s));
    MultiTexEnvivEXT::load_with(|s| loadfn(s));
    MultiTexGendEXT::load_with(|s| loadfn(s));
    MultiTexGendvEXT::load_with(|s| loadfn(s));
    MultiTexGenfEXT::load_with(|s| loadfn(s));
    MultiTexGenfvEXT::load_with(|s| loadfn(s));
    MultiTexGeniEXT::load_with(|s| loadfn(s));
    MultiTexGenivEXT::load_with(|s| loadfn(s));
    MultiTexImage1DEXT::load_with(|s| loadfn(s));
    MultiTexImage2DEXT::load_with(|s| loadfn(s));
    MultiTexImage3DEXT::load_with(|s| loadfn(s));
    MultiTexParameterIivEXT::load_with(|s| loadfn(s));
    MultiTexParameterIuivEXT::load_with(|s| loadfn(s));
    MultiTexParameterfEXT::load_with(|s| loadfn(s));
    MultiTexParameterfvEXT::load_with(|s| loadfn(s));
    MultiTexParameteriEXT::load_with(|s| loadfn(s));
    MultiTexParameterivEXT::load_with(|s| loadfn(s));
    MultiTexRenderbufferEXT::load_with(|s| loadfn(s));
    MultiTexSubImage1DEXT::load_with(|s| loadfn(s));
    MultiTexSubImage2DEXT::load_with(|s| loadfn(s));
    MultiTexSubImage3DEXT::load_with(|s| loadfn(s));
    NamedBufferDataEXT::load_with(|s| loadfn(s));
    NamedBufferStorageEXT::load_with(|s| loadfn(s));
    NamedBufferSubDataEXT::load_with(|s| loadfn(s));
    NamedCopyBufferSubDataEXT::load_with(|s| loadfn(s));
    NamedFramebufferParameteriEXT::load_with(|s| loadfn(s));
    NamedFramebufferRenderbufferEXT::load_with(|s| loadfn(s));
    NamedFramebufferTexture1DEXT::load_with(|s| loadfn(s));
    NamedFramebufferTexture2DEXT::load_with(|s| loadfn(s));
    NamedFramebufferTexture3DEXT::load_with(|s| loadfn(s));
    NamedFramebufferTextureEXT::load_with(|s| loadfn(s));
    NamedFramebufferTextureFaceEXT::load_with(|s| loadfn(s));
    NamedFramebufferTextureLayerEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameter4dEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameter4dvEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameter4fEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameter4fvEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameterI4iEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameterI4ivEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameterI4uiEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameterI4uivEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParameters4fvEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParametersI4ivEXT::load_with(|s| loadfn(s));
    NamedProgramLocalParametersI4uivEXT::load_with(|s| loadfn(s));
    NamedProgramStringEXT::load_with(|s| loadfn(s));
    NamedRenderbufferStorageEXT::load_with(|s| loadfn(s));
    NamedRenderbufferStorageMultisampleCoverageEXT::load_with(|s| loadfn(s));
    NamedRenderbufferStorageMultisampleEXT::load_with(|s| loadfn(s));
    NamedStringARB::load_with(|s| loadfn(s));
    NewList::load_with(|s| loadfn(s));
    NewObjectBufferATI::load_with(|s| loadfn(s));
    Normal3b::load_with(|s| loadfn(s));
    Normal3bv::load_with(|s| loadfn(s));
    Normal3d::load_with(|s| loadfn(s));
    Normal3dv::load_with(|s| loadfn(s));
    Normal3f::load_with(|s| loadfn(s));
    Normal3fVertex3fSUN::load_with(|s| loadfn(s));
    Normal3fVertex3fvSUN::load_with(|s| loadfn(s));
    Normal3fv::load_with(|s| loadfn(s));
    Normal3hNV::load_with(|s| loadfn(s));
    Normal3hvNV::load_with(|s| loadfn(s));
    Normal3i::load_with(|s| loadfn(s));
    Normal3iv::load_with(|s| loadfn(s));
    Normal3s::load_with(|s| loadfn(s));
    Normal3sv::load_with(|s| loadfn(s));
    Normal3x::load_with(|s| loadfn(s));
    Normal3xOES::load_with(|s| loadfn(s));
    Normal3xvOES::load_with(|s| loadfn(s));
    NormalFormatNV::load_with(|s| loadfn(s));
    NormalP3ui::load_with(|s| loadfn(s));
    NormalP3uiv::load_with(|s| loadfn(s));
    NormalPointer::load_with(|s| loadfn(s));
    NormalPointerEXT::load_with(|s| loadfn(s));
    NormalPointerListIBM::load_with(|s| loadfn(s));
    NormalPointervINTEL::load_with(|s| loadfn(s));
    NormalStream3bATI::load_with(|s| loadfn(s));
    NormalStream3bvATI::load_with(|s| loadfn(s));
    NormalStream3dATI::load_with(|s| loadfn(s));
    NormalStream3dvATI::load_with(|s| loadfn(s));
    NormalStream3fATI::load_with(|s| loadfn(s));
    NormalStream3fvATI::load_with(|s| loadfn(s));
    NormalStream3iATI::load_with(|s| loadfn(s));
    NormalStream3ivATI::load_with(|s| loadfn(s));
    NormalStream3sATI::load_with(|s| loadfn(s));
    NormalStream3svATI::load_with(|s| loadfn(s));
    ObjectLabel::load_with(|s| loadfn(s));
    ObjectLabelKHR::load_with(|s| loadfn(s));
    ObjectPtrLabel::load_with(|s| loadfn(s));
    ObjectPtrLabelKHR::load_with(|s| loadfn(s));
    ObjectPurgeableAPPLE::load_with(|s| loadfn(s));
    ObjectUnpurgeableAPPLE::load_with(|s| loadfn(s));
    Ortho::load_with(|s| loadfn(s));
    Orthof::load_with(|s| loadfn(s));
    OrthofOES::load_with(|s| loadfn(s));
    Orthox::load_with(|s| loadfn(s));
    OrthoxOES::load_with(|s| loadfn(s));
    PNTrianglesfATI::load_with(|s| loadfn(s));
    PNTrianglesiATI::load_with(|s| loadfn(s));
    PassTexCoordATI::load_with(|s| loadfn(s));
    PassThrough::load_with(|s| loadfn(s));
    PassThroughxOES::load_with(|s| loadfn(s));
    PatchParameterfv::load_with(|s| loadfn(s));
    PatchParameteri::load_with(|s| loadfn(s));
    PathColorGenNV::load_with(|s| loadfn(s));
    PathCommandsNV::load_with(|s| loadfn(s));
    PathCoordsNV::load_with(|s| loadfn(s));
    PathCoverDepthFuncNV::load_with(|s| loadfn(s));
    PathDashArrayNV::load_with(|s| loadfn(s));
    PathFogGenNV::load_with(|s| loadfn(s));
    PathGlyphRangeNV::load_with(|s| loadfn(s));
    PathGlyphsNV::load_with(|s| loadfn(s));
    PathParameterfNV::load_with(|s| loadfn(s));
    PathParameterfvNV::load_with(|s| loadfn(s));
    PathParameteriNV::load_with(|s| loadfn(s));
    PathParameterivNV::load_with(|s| loadfn(s));
    PathStencilDepthOffsetNV::load_with(|s| loadfn(s));
    PathStencilFuncNV::load_with(|s| loadfn(s));
    PathStringNV::load_with(|s| loadfn(s));
    PathSubCommandsNV::load_with(|s| loadfn(s));
    PathSubCoordsNV::load_with(|s| loadfn(s));
    PathTexGenNV::load_with(|s| loadfn(s));
    PauseTransformFeedback::load_with(|s| loadfn(s));
    PauseTransformFeedbackNV::load_with(|s| loadfn(s));
    PixelDataRangeNV::load_with(|s| loadfn(s));
    PixelMapfv::load_with(|s| loadfn(s));
    PixelMapuiv::load_with(|s| loadfn(s));
    PixelMapusv::load_with(|s| loadfn(s));
    PixelMapx::load_with(|s| loadfn(s));
    PixelStoref::load_with(|s| loadfn(s));
    PixelStorei::load_with(|s| loadfn(s));
    PixelStorex::load_with(|s| loadfn(s));
    PixelTexGenParameterfSGIS::load_with(|s| loadfn(s));
    PixelTexGenParameterfvSGIS::load_with(|s| loadfn(s));
    PixelTexGenParameteriSGIS::load_with(|s| loadfn(s));
    PixelTexGenParameterivSGIS::load_with(|s| loadfn(s));
    PixelTexGenSGIX::load_with(|s| loadfn(s));
    PixelTransferf::load_with(|s| loadfn(s));
    PixelTransferi::load_with(|s| loadfn(s));
    PixelTransferxOES::load_with(|s| loadfn(s));
    PixelTransformParameterfEXT::load_with(|s| loadfn(s));
    PixelTransformParameterfvEXT::load_with(|s| loadfn(s));
    PixelTransformParameteriEXT::load_with(|s| loadfn(s));
    PixelTransformParameterivEXT::load_with(|s| loadfn(s));
    PixelZoom::load_with(|s| loadfn(s));
    PixelZoomxOES::load_with(|s| loadfn(s));
    PointAlongPathNV::load_with(|s| loadfn(s));
    PointParameterf::load_with(|s| loadfn(s));
    PointParameterfARB::load_with(|s| loadfn(s));
    PointParameterfEXT::load_with(|s| loadfn(s));
    PointParameterfSGIS::load_with(|s| loadfn(s));
    PointParameterfv::load_with(|s| loadfn(s));
    PointParameterfvARB::load_with(|s| loadfn(s));
    PointParameterfvEXT::load_with(|s| loadfn(s));
    PointParameterfvSGIS::load_with(|s| loadfn(s));
    PointParameteri::load_with(|s| loadfn(s));
    PointParameteriNV::load_with(|s| loadfn(s));
    PointParameteriv::load_with(|s| loadfn(s));
    PointParameterivNV::load_with(|s| loadfn(s));
    PointParameterx::load_with(|s| loadfn(s));
    PointParameterxOES::load_with(|s| loadfn(s));
    PointParameterxv::load_with(|s| loadfn(s));
    PointParameterxvOES::load_with(|s| loadfn(s));
    PointSize::load_with(|s| loadfn(s));
    PointSizePointerOES::load_with(|s| loadfn(s));
    PointSizex::load_with(|s| loadfn(s));
    PointSizexOES::load_with(|s| loadfn(s));
    PollAsyncSGIX::load_with(|s| loadfn(s));
    PollInstrumentsSGIX::load_with(|s| loadfn(s));
    PolygonMode::load_with(|s| loadfn(s));
    PolygonOffset::load_with(|s| loadfn(s));
    PolygonOffsetEXT::load_with(|s| loadfn(s));
    PolygonOffsetx::load_with(|s| loadfn(s));
    PolygonOffsetxOES::load_with(|s| loadfn(s));
    PolygonStipple::load_with(|s| loadfn(s));
    PopAttrib::load_with(|s| loadfn(s));
    PopClientAttrib::load_with(|s| loadfn(s));
    PopDebugGroup::load_with(|s| loadfn(s));
    PopDebugGroupKHR::load_with(|s| loadfn(s));
    PopGroupMarkerEXT::load_with(|s| loadfn(s));
    PopMatrix::load_with(|s| loadfn(s));
    PopName::load_with(|s| loadfn(s));
    PresentFrameDualFillNV::load_with(|s| loadfn(s));
    PresentFrameKeyedNV::load_with(|s| loadfn(s));
    PrimitiveRestartIndex::load_with(|s| loadfn(s));
    PrimitiveRestartIndexNV::load_with(|s| loadfn(s));
    PrimitiveRestartNV::load_with(|s| loadfn(s));
    PrioritizeTextures::load_with(|s| loadfn(s));
    PrioritizeTexturesEXT::load_with(|s| loadfn(s));
    PrioritizeTexturesxOES::load_with(|s| loadfn(s));
    ProgramBinary::load_with(|s| loadfn(s));
    ProgramBinaryOES::load_with(|s| loadfn(s));
    ProgramBufferParametersIivNV::load_with(|s| loadfn(s));
    ProgramBufferParametersIuivNV::load_with(|s| loadfn(s));
    ProgramBufferParametersfvNV::load_with(|s| loadfn(s));
    ProgramEnvParameter4dARB::load_with(|s| loadfn(s));
    ProgramEnvParameter4dvARB::load_with(|s| loadfn(s));
    ProgramEnvParameter4fARB::load_with(|s| loadfn(s));
    ProgramEnvParameter4fvARB::load_with(|s| loadfn(s));
    ProgramEnvParameterI4iNV::load_with(|s| loadfn(s));
    ProgramEnvParameterI4ivNV::load_with(|s| loadfn(s));
    ProgramEnvParameterI4uiNV::load_with(|s| loadfn(s));
    ProgramEnvParameterI4uivNV::load_with(|s| loadfn(s));
    ProgramEnvParameters4fvEXT::load_with(|s| loadfn(s));
    ProgramEnvParametersI4ivNV::load_with(|s| loadfn(s));
    ProgramEnvParametersI4uivNV::load_with(|s| loadfn(s));
    ProgramLocalParameter4dARB::load_with(|s| loadfn(s));
    ProgramLocalParameter4dvARB::load_with(|s| loadfn(s));
    ProgramLocalParameter4fARB::load_with(|s| loadfn(s));
    ProgramLocalParameter4fvARB::load_with(|s| loadfn(s));
    ProgramLocalParameterI4iNV::load_with(|s| loadfn(s));
    ProgramLocalParameterI4ivNV::load_with(|s| loadfn(s));
    ProgramLocalParameterI4uiNV::load_with(|s| loadfn(s));
    ProgramLocalParameterI4uivNV::load_with(|s| loadfn(s));
    ProgramLocalParameters4fvEXT::load_with(|s| loadfn(s));
    ProgramLocalParametersI4ivNV::load_with(|s| loadfn(s));
    ProgramLocalParametersI4uivNV::load_with(|s| loadfn(s));
    ProgramNamedParameter4dNV::load_with(|s| loadfn(s));
    ProgramNamedParameter4dvNV::load_with(|s| loadfn(s));
    ProgramNamedParameter4fNV::load_with(|s| loadfn(s));
    ProgramNamedParameter4fvNV::load_with(|s| loadfn(s));
    ProgramParameter4dNV::load_with(|s| loadfn(s));
    ProgramParameter4dvNV::load_with(|s| loadfn(s));
    ProgramParameter4fNV::load_with(|s| loadfn(s));
    ProgramParameter4fvNV::load_with(|s| loadfn(s));
    ProgramParameteri::load_with(|s| loadfn(s));
    ProgramParameteriARB::load_with(|s| loadfn(s));
    ProgramParameteriEXT::load_with(|s| loadfn(s));
    ProgramParameters4dvNV::load_with(|s| loadfn(s));
    ProgramParameters4fvNV::load_with(|s| loadfn(s));
    ProgramStringARB::load_with(|s| loadfn(s));
    ProgramSubroutineParametersuivNV::load_with(|s| loadfn(s));
    ProgramUniform1d::load_with(|s| loadfn(s));
    ProgramUniform1dEXT::load_with(|s| loadfn(s));
    ProgramUniform1dv::load_with(|s| loadfn(s));
    ProgramUniform1dvEXT::load_with(|s| loadfn(s));
    ProgramUniform1f::load_with(|s| loadfn(s));
    ProgramUniform1fEXT::load_with(|s| loadfn(s));
    ProgramUniform1fv::load_with(|s| loadfn(s));
    ProgramUniform1fvEXT::load_with(|s| loadfn(s));
    ProgramUniform1i::load_with(|s| loadfn(s));
    ProgramUniform1i64NV::load_with(|s| loadfn(s));
    ProgramUniform1i64vNV::load_with(|s| loadfn(s));
    ProgramUniform1iEXT::load_with(|s| loadfn(s));
    ProgramUniform1iv::load_with(|s| loadfn(s));
    ProgramUniform1ivEXT::load_with(|s| loadfn(s));
    ProgramUniform1ui::load_with(|s| loadfn(s));
    ProgramUniform1ui64NV::load_with(|s| loadfn(s));
    ProgramUniform1ui64vNV::load_with(|s| loadfn(s));
    ProgramUniform1uiEXT::load_with(|s| loadfn(s));
    ProgramUniform1uiv::load_with(|s| loadfn(s));
    ProgramUniform1uivEXT::load_with(|s| loadfn(s));
    ProgramUniform2d::load_with(|s| loadfn(s));
    ProgramUniform2dEXT::load_with(|s| loadfn(s));
    ProgramUniform2dv::load_with(|s| loadfn(s));
    ProgramUniform2dvEXT::load_with(|s| loadfn(s));
    ProgramUniform2f::load_with(|s| loadfn(s));
    ProgramUniform2fEXT::load_with(|s| loadfn(s));
    ProgramUniform2fv::load_with(|s| loadfn(s));
    ProgramUniform2fvEXT::load_with(|s| loadfn(s));
    ProgramUniform2i::load_with(|s| loadfn(s));
    ProgramUniform2i64NV::load_with(|s| loadfn(s));
    ProgramUniform2i64vNV::load_with(|s| loadfn(s));
    ProgramUniform2iEXT::load_with(|s| loadfn(s));
    ProgramUniform2iv::load_with(|s| loadfn(s));
    ProgramUniform2ivEXT::load_with(|s| loadfn(s));
    ProgramUniform2ui::load_with(|s| loadfn(s));
    ProgramUniform2ui64NV::load_with(|s| loadfn(s));
    ProgramUniform2ui64vNV::load_with(|s| loadfn(s));
    ProgramUniform2uiEXT::load_with(|s| loadfn(s));
    ProgramUniform2uiv::load_with(|s| loadfn(s));
    ProgramUniform2uivEXT::load_with(|s| loadfn(s));
    ProgramUniform3d::load_with(|s| loadfn(s));
    ProgramUniform3dEXT::load_with(|s| loadfn(s));
    ProgramUniform3dv::load_with(|s| loadfn(s));
    ProgramUniform3dvEXT::load_with(|s| loadfn(s));
    ProgramUniform3f::load_with(|s| loadfn(s));
    ProgramUniform3fEXT::load_with(|s| loadfn(s));
    ProgramUniform3fv::load_with(|s| loadfn(s));
    ProgramUniform3fvEXT::load_with(|s| loadfn(s));
    ProgramUniform3i::load_with(|s| loadfn(s));
    ProgramUniform3i64NV::load_with(|s| loadfn(s));
    ProgramUniform3i64vNV::load_with(|s| loadfn(s));
    ProgramUniform3iEXT::load_with(|s| loadfn(s));
    ProgramUniform3iv::load_with(|s| loadfn(s));
    ProgramUniform3ivEXT::load_with(|s| loadfn(s));
    ProgramUniform3ui::load_with(|s| loadfn(s));
    ProgramUniform3ui64NV::load_with(|s| loadfn(s));
    ProgramUniform3ui64vNV::load_with(|s| loadfn(s));
    ProgramUniform3uiEXT::load_with(|s| loadfn(s));
    ProgramUniform3uiv::load_with(|s| loadfn(s));
    ProgramUniform3uivEXT::load_with(|s| loadfn(s));
    ProgramUniform4d::load_with(|s| loadfn(s));
    ProgramUniform4dEXT::load_with(|s| loadfn(s));
    ProgramUniform4dv::load_with(|s| loadfn(s));
    ProgramUniform4dvEXT::load_with(|s| loadfn(s));
    ProgramUniform4f::load_with(|s| loadfn(s));
    ProgramUniform4fEXT::load_with(|s| loadfn(s));
    ProgramUniform4fv::load_with(|s| loadfn(s));
    ProgramUniform4fvEXT::load_with(|s| loadfn(s));
    ProgramUniform4i::load_with(|s| loadfn(s));
    ProgramUniform4i64NV::load_with(|s| loadfn(s));
    ProgramUniform4i64vNV::load_with(|s| loadfn(s));
    ProgramUniform4iEXT::load_with(|s| loadfn(s));
    ProgramUniform4iv::load_with(|s| loadfn(s));
    ProgramUniform4ivEXT::load_with(|s| loadfn(s));
    ProgramUniform4ui::load_with(|s| loadfn(s));
    ProgramUniform4ui64NV::load_with(|s| loadfn(s));
    ProgramUniform4ui64vNV::load_with(|s| loadfn(s));
    ProgramUniform4uiEXT::load_with(|s| loadfn(s));
    ProgramUniform4uiv::load_with(|s| loadfn(s));
    ProgramUniform4uivEXT::load_with(|s| loadfn(s));
    ProgramUniformHandleui64ARB::load_with(|s| loadfn(s));
    ProgramUniformHandleui64NV::load_with(|s| loadfn(s));
    ProgramUniformHandleui64vARB::load_with(|s| loadfn(s));
    ProgramUniformHandleui64vNV::load_with(|s| loadfn(s));
    ProgramUniformMatrix2dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix2dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix2fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix2fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x3dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x3dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x3fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x3fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x4dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x4dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x4fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix2x4fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix3dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix3dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix3fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix3fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x2dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x2dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x2fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x2fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x4dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x4dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x4fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix3x4fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix4dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix4dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix4fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix4fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x2dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x2dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x2fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x2fvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x3dv::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x3dvEXT::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x3fv::load_with(|s| loadfn(s));
    ProgramUniformMatrix4x3fvEXT::load_with(|s| loadfn(s));
    ProgramUniformui64NV::load_with(|s| loadfn(s));
    ProgramUniformui64vNV::load_with(|s| loadfn(s));
    ProgramVertexLimitNV::load_with(|s| loadfn(s));
    ProvokingVertex::load_with(|s| loadfn(s));
    ProvokingVertexEXT::load_with(|s| loadfn(s));
    PushAttrib::load_with(|s| loadfn(s));
    PushClientAttrib::load_with(|s| loadfn(s));
    PushClientAttribDefaultEXT::load_with(|s| loadfn(s));
    PushDebugGroup::load_with(|s| loadfn(s));
    PushDebugGroupKHR::load_with(|s| loadfn(s));
    PushGroupMarkerEXT::load_with(|s| loadfn(s));
    PushMatrix::load_with(|s| loadfn(s));
    PushName::load_with(|s| loadfn(s));
    QueryCounter::load_with(|s| loadfn(s));
    QueryCounterEXT::load_with(|s| loadfn(s));
    QueryMatrixxOES::load_with(|s| loadfn(s));
    RasterPos2d::load_with(|s| loadfn(s));
    RasterPos2dv::load_with(|s| loadfn(s));
    RasterPos2f::load_with(|s| loadfn(s));
    RasterPos2fv::load_with(|s| loadfn(s));
    RasterPos2i::load_with(|s| loadfn(s));
    RasterPos2iv::load_with(|s| loadfn(s));
    RasterPos2s::load_with(|s| loadfn(s));
    RasterPos2sv::load_with(|s| loadfn(s));
    RasterPos2xOES::load_with(|s| loadfn(s));
    RasterPos2xvOES::load_with(|s| loadfn(s));
    RasterPos3d::load_with(|s| loadfn(s));
    RasterPos3dv::load_with(|s| loadfn(s));
    RasterPos3f::load_with(|s| loadfn(s));
    RasterPos3fv::load_with(|s| loadfn(s));
    RasterPos3i::load_with(|s| loadfn(s));
    RasterPos3iv::load_with(|s| loadfn(s));
    RasterPos3s::load_with(|s| loadfn(s));
    RasterPos3sv::load_with(|s| loadfn(s));
    RasterPos3xOES::load_with(|s| loadfn(s));
    RasterPos3xvOES::load_with(|s| loadfn(s));
    RasterPos4d::load_with(|s| loadfn(s));
    RasterPos4dv::load_with(|s| loadfn(s));
    RasterPos4f::load_with(|s| loadfn(s));
    RasterPos4fv::load_with(|s| loadfn(s));
    RasterPos4i::load_with(|s| loadfn(s));
    RasterPos4iv::load_with(|s| loadfn(s));
    RasterPos4s::load_with(|s| loadfn(s));
    RasterPos4sv::load_with(|s| loadfn(s));
    RasterPos4xOES::load_with(|s| loadfn(s));
    RasterPos4xvOES::load_with(|s| loadfn(s));
    ReadBuffer::load_with(|s| loadfn(s));
    ReadBufferIndexedEXT::load_with(|s| loadfn(s));
    ReadBufferNV::load_with(|s| loadfn(s));
    ReadInstrumentsSGIX::load_with(|s| loadfn(s));
    ReadPixels::load_with(|s| loadfn(s));
    ReadnPixelsARB::load_with(|s| loadfn(s));
    ReadnPixelsEXT::load_with(|s| loadfn(s));
    Rectd::load_with(|s| loadfn(s));
    Rectdv::load_with(|s| loadfn(s));
    Rectf::load_with(|s| loadfn(s));
    Rectfv::load_with(|s| loadfn(s));
    Recti::load_with(|s| loadfn(s));
    Rectiv::load_with(|s| loadfn(s));
    Rects::load_with(|s| loadfn(s));
    Rectsv::load_with(|s| loadfn(s));
    RectxOES::load_with(|s| loadfn(s));
    RectxvOES::load_with(|s| loadfn(s));
    ReferencePlaneSGIX::load_with(|s| loadfn(s));
    ReleaseShaderCompiler::load_with(|s| loadfn(s));
    RenderMode::load_with(|s| loadfn(s));
    RenderbufferStorage::load_with(|s| loadfn(s));
    RenderbufferStorageEXT::load_with(|s| loadfn(s));
    RenderbufferStorageMultisample::load_with(|s| loadfn(s));
    RenderbufferStorageMultisampleANGLE::load_with(|s| loadfn(s));
    RenderbufferStorageMultisampleAPPLE::load_with(|s| loadfn(s));
    RenderbufferStorageMultisampleCoverageNV::load_with(|s| loadfn(s));
    RenderbufferStorageMultisampleEXT::load_with(|s| loadfn(s));
    RenderbufferStorageMultisampleIMG::load_with(|s| loadfn(s));
    RenderbufferStorageMultisampleNV::load_with(|s| loadfn(s));
    RenderbufferStorageOES::load_with(|s| loadfn(s));
    ReplacementCodePointerSUN::load_with(|s| loadfn(s));
    ReplacementCodeubSUN::load_with(|s| loadfn(s));
    ReplacementCodeubvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiColor3fVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiColor3fVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiColor4fNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiColor4fNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiColor4ubVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiColor4ubVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiTexCoord2fVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiTexCoord2fVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiVertex3fSUN::load_with(|s| loadfn(s));
    ReplacementCodeuiVertex3fvSUN::load_with(|s| loadfn(s));
    ReplacementCodeuivSUN::load_with(|s| loadfn(s));
    ReplacementCodeusSUN::load_with(|s| loadfn(s));
    ReplacementCodeusvSUN::load_with(|s| loadfn(s));
    RequestResidentProgramsNV::load_with(|s| loadfn(s));
    ResetHistogram::load_with(|s| loadfn(s));
    ResetHistogramEXT::load_with(|s| loadfn(s));
    ResetMinmax::load_with(|s| loadfn(s));
    ResetMinmaxEXT::load_with(|s| loadfn(s));
    ResizeBuffersMESA::load_with(|s| loadfn(s));
    ResolveMultisampleFramebufferAPPLE::load_with(|s| loadfn(s));
    ResumeTransformFeedback::load_with(|s| loadfn(s));
    ResumeTransformFeedbackNV::load_with(|s| loadfn(s));
    Rotated::load_with(|s| loadfn(s));
    Rotatef::load_with(|s| loadfn(s));
    Rotatex::load_with(|s| loadfn(s));
    RotatexOES::load_with(|s| loadfn(s));
    SampleCoverage::load_with(|s| loadfn(s));
    SampleCoverageARB::load_with(|s| loadfn(s));
    SampleCoverageOES::load_with(|s| loadfn(s));
    SampleCoveragex::load_with(|s| loadfn(s));
    SampleCoveragexOES::load_with(|s| loadfn(s));
    SampleMapATI::load_with(|s| loadfn(s));
    SampleMaskEXT::load_with(|s| loadfn(s));
    SampleMaskIndexedNV::load_with(|s| loadfn(s));
    SampleMaskSGIS::load_with(|s| loadfn(s));
    SampleMaski::load_with(|s| loadfn(s));
    SamplePatternEXT::load_with(|s| loadfn(s));
    SamplePatternSGIS::load_with(|s| loadfn(s));
    SamplerParameterIiv::load_with(|s| loadfn(s));
    SamplerParameterIuiv::load_with(|s| loadfn(s));
    SamplerParameterf::load_with(|s| loadfn(s));
    SamplerParameterfv::load_with(|s| loadfn(s));
    SamplerParameteri::load_with(|s| loadfn(s));
    SamplerParameteriv::load_with(|s| loadfn(s));
    Scaled::load_with(|s| loadfn(s));
    Scalef::load_with(|s| loadfn(s));
    Scalex::load_with(|s| loadfn(s));
    ScalexOES::load_with(|s| loadfn(s));
    Scissor::load_with(|s| loadfn(s));
    ScissorArrayv::load_with(|s| loadfn(s));
    ScissorIndexed::load_with(|s| loadfn(s));
    ScissorIndexedv::load_with(|s| loadfn(s));
    SecondaryColor3b::load_with(|s| loadfn(s));
    SecondaryColor3bEXT::load_with(|s| loadfn(s));
    SecondaryColor3bv::load_with(|s| loadfn(s));
    SecondaryColor3bvEXT::load_with(|s| loadfn(s));
    SecondaryColor3d::load_with(|s| loadfn(s));
    SecondaryColor3dEXT::load_with(|s| loadfn(s));
    SecondaryColor3dv::load_with(|s| loadfn(s));
    SecondaryColor3dvEXT::load_with(|s| loadfn(s));
    SecondaryColor3f::load_with(|s| loadfn(s));
    SecondaryColor3fEXT::load_with(|s| loadfn(s));
    SecondaryColor3fv::load_with(|s| loadfn(s));
    SecondaryColor3fvEXT::load_with(|s| loadfn(s));
    SecondaryColor3hNV::load_with(|s| loadfn(s));
    SecondaryColor3hvNV::load_with(|s| loadfn(s));
    SecondaryColor3i::load_with(|s| loadfn(s));
    SecondaryColor3iEXT::load_with(|s| loadfn(s));
    SecondaryColor3iv::load_with(|s| loadfn(s));
    SecondaryColor3ivEXT::load_with(|s| loadfn(s));
    SecondaryColor3s::load_with(|s| loadfn(s));
    SecondaryColor3sEXT::load_with(|s| loadfn(s));
    SecondaryColor3sv::load_with(|s| loadfn(s));
    SecondaryColor3svEXT::load_with(|s| loadfn(s));
    SecondaryColor3ub::load_with(|s| loadfn(s));
    SecondaryColor3ubEXT::load_with(|s| loadfn(s));
    SecondaryColor3ubv::load_with(|s| loadfn(s));
    SecondaryColor3ubvEXT::load_with(|s| loadfn(s));
    SecondaryColor3ui::load_with(|s| loadfn(s));
    SecondaryColor3uiEXT::load_with(|s| loadfn(s));
    SecondaryColor3uiv::load_with(|s| loadfn(s));
    SecondaryColor3uivEXT::load_with(|s| loadfn(s));
    SecondaryColor3us::load_with(|s| loadfn(s));
    SecondaryColor3usEXT::load_with(|s| loadfn(s));
    SecondaryColor3usv::load_with(|s| loadfn(s));
    SecondaryColor3usvEXT::load_with(|s| loadfn(s));
    SecondaryColorFormatNV::load_with(|s| loadfn(s));
    SecondaryColorP3ui::load_with(|s| loadfn(s));
    SecondaryColorP3uiv::load_with(|s| loadfn(s));
    SecondaryColorPointer::load_with(|s| loadfn(s));
    SecondaryColorPointerEXT::load_with(|s| loadfn(s));
    SecondaryColorPointerListIBM::load_with(|s| loadfn(s));
    SelectBuffer::load_with(|s| loadfn(s));
    SelectPerfMonitorCountersAMD::load_with(|s| loadfn(s));
    SeparableFilter2D::load_with(|s| loadfn(s));
    SeparableFilter2DEXT::load_with(|s| loadfn(s));
    SetFenceAPPLE::load_with(|s| loadfn(s));
    SetFenceNV::load_with(|s| loadfn(s));
    SetFragmentShaderConstantATI::load_with(|s| loadfn(s));
    SetInvariantEXT::load_with(|s| loadfn(s));
    SetLocalConstantEXT::load_with(|s| loadfn(s));
    SetMultisamplefvAMD::load_with(|s| loadfn(s));
    ShadeModel::load_with(|s| loadfn(s));
    ShaderBinary::load_with(|s| loadfn(s));
    ShaderOp1EXT::load_with(|s| loadfn(s));
    ShaderOp2EXT::load_with(|s| loadfn(s));
    ShaderOp3EXT::load_with(|s| loadfn(s));
    ShaderSource::load_with(|s| loadfn(s));
    ShaderSourceARB::load_with(|s| loadfn(s));
    ShaderStorageBlockBinding::load_with(|s| loadfn(s));
    SharpenTexFuncSGIS::load_with(|s| loadfn(s));
    SpriteParameterfSGIX::load_with(|s| loadfn(s));
    SpriteParameterfvSGIX::load_with(|s| loadfn(s));
    SpriteParameteriSGIX::load_with(|s| loadfn(s));
    SpriteParameterivSGIX::load_with(|s| loadfn(s));
    StartInstrumentsSGIX::load_with(|s| loadfn(s));
    StartTilingQCOM::load_with(|s| loadfn(s));
    StencilClearTagEXT::load_with(|s| loadfn(s));
    StencilFillPathInstancedNV::load_with(|s| loadfn(s));
    StencilFillPathNV::load_with(|s| loadfn(s));
    StencilFunc::load_with(|s| loadfn(s));
    StencilFuncSeparate::load_with(|s| loadfn(s));
    StencilFuncSeparateATI::load_with(|s| loadfn(s));
    StencilMask::load_with(|s| loadfn(s));
    StencilMaskSeparate::load_with(|s| loadfn(s));
    StencilOp::load_with(|s| loadfn(s));
    StencilOpSeparate::load_with(|s| loadfn(s));
    StencilOpSeparateATI::load_with(|s| loadfn(s));
    StencilOpValueAMD::load_with(|s| loadfn(s));
    StencilStrokePathInstancedNV::load_with(|s| loadfn(s));
    StencilStrokePathNV::load_with(|s| loadfn(s));
    StopInstrumentsSGIX::load_with(|s| loadfn(s));
    StringMarkerGREMEDY::load_with(|s| loadfn(s));
    SwizzleEXT::load_with(|s| loadfn(s));
    SyncTextureINTEL::load_with(|s| loadfn(s));
    TagSampleBufferSGIX::load_with(|s| loadfn(s));
    Tangent3bEXT::load_with(|s| loadfn(s));
    Tangent3bvEXT::load_with(|s| loadfn(s));
    Tangent3dEXT::load_with(|s| loadfn(s));
    Tangent3dvEXT::load_with(|s| loadfn(s));
    Tangent3fEXT::load_with(|s| loadfn(s));
    Tangent3fvEXT::load_with(|s| loadfn(s));
    Tangent3iEXT::load_with(|s| loadfn(s));
    Tangent3ivEXT::load_with(|s| loadfn(s));
    Tangent3sEXT::load_with(|s| loadfn(s));
    Tangent3svEXT::load_with(|s| loadfn(s));
    TangentPointerEXT::load_with(|s| loadfn(s));
    TbufferMask3DFX::load_with(|s| loadfn(s));
    TessellationFactorAMD::load_with(|s| loadfn(s));
    TessellationModeAMD::load_with(|s| loadfn(s));
    TestFenceAPPLE::load_with(|s| loadfn(s));
    TestFenceNV::load_with(|s| loadfn(s));
    TestObjectAPPLE::load_with(|s| loadfn(s));
    TexBuffer::load_with(|s| loadfn(s));
    TexBufferARB::load_with(|s| loadfn(s));
    TexBufferEXT::load_with(|s| loadfn(s));
    TexBufferRange::load_with(|s| loadfn(s));
    TexBumpParameterfvATI::load_with(|s| loadfn(s));
    TexBumpParameterivATI::load_with(|s| loadfn(s));
    TexCoord1bOES::load_with(|s| loadfn(s));
    TexCoord1bvOES::load_with(|s| loadfn(s));
    TexCoord1d::load_with(|s| loadfn(s));
    TexCoord1dv::load_with(|s| loadfn(s));
    TexCoord1f::load_with(|s| loadfn(s));
    TexCoord1fv::load_with(|s| loadfn(s));
    TexCoord1hNV::load_with(|s| loadfn(s));
    TexCoord1hvNV::load_with(|s| loadfn(s));
    TexCoord1i::load_with(|s| loadfn(s));
    TexCoord1iv::load_with(|s| loadfn(s));
    TexCoord1s::load_with(|s| loadfn(s));
    TexCoord1sv::load_with(|s| loadfn(s));
    TexCoord1xOES::load_with(|s| loadfn(s));
    TexCoord1xvOES::load_with(|s| loadfn(s));
    TexCoord2bOES::load_with(|s| loadfn(s));
    TexCoord2bvOES::load_with(|s| loadfn(s));
    TexCoord2d::load_with(|s| loadfn(s));
    TexCoord2dv::load_with(|s| loadfn(s));
    TexCoord2f::load_with(|s| loadfn(s));
    TexCoord2fColor3fVertex3fSUN::load_with(|s| loadfn(s));
    TexCoord2fColor3fVertex3fvSUN::load_with(|s| loadfn(s));
    TexCoord2fColor4fNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    TexCoord2fColor4fNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    TexCoord2fColor4ubVertex3fSUN::load_with(|s| loadfn(s));
    TexCoord2fColor4ubVertex3fvSUN::load_with(|s| loadfn(s));
    TexCoord2fNormal3fVertex3fSUN::load_with(|s| loadfn(s));
    TexCoord2fNormal3fVertex3fvSUN::load_with(|s| loadfn(s));
    TexCoord2fVertex3fSUN::load_with(|s| loadfn(s));
    TexCoord2fVertex3fvSUN::load_with(|s| loadfn(s));
    TexCoord2fv::load_with(|s| loadfn(s));
    TexCoord2hNV::load_with(|s| loadfn(s));
    TexCoord2hvNV::load_with(|s| loadfn(s));
    TexCoord2i::load_with(|s| loadfn(s));
    TexCoord2iv::load_with(|s| loadfn(s));
    TexCoord2s::load_with(|s| loadfn(s));
    TexCoord2sv::load_with(|s| loadfn(s));
    TexCoord2xOES::load_with(|s| loadfn(s));
    TexCoord2xvOES::load_with(|s| loadfn(s));
    TexCoord3bOES::load_with(|s| loadfn(s));
    TexCoord3bvOES::load_with(|s| loadfn(s));
    TexCoord3d::load_with(|s| loadfn(s));
    TexCoord3dv::load_with(|s| loadfn(s));
    TexCoord3f::load_with(|s| loadfn(s));
    TexCoord3fv::load_with(|s| loadfn(s));
    TexCoord3hNV::load_with(|s| loadfn(s));
    TexCoord3hvNV::load_with(|s| loadfn(s));
    TexCoord3i::load_with(|s| loadfn(s));
    TexCoord3iv::load_with(|s| loadfn(s));
    TexCoord3s::load_with(|s| loadfn(s));
    TexCoord3sv::load_with(|s| loadfn(s));
    TexCoord3xOES::load_with(|s| loadfn(s));
    TexCoord3xvOES::load_with(|s| loadfn(s));
    TexCoord4bOES::load_with(|s| loadfn(s));
    TexCoord4bvOES::load_with(|s| loadfn(s));
    TexCoord4d::load_with(|s| loadfn(s));
    TexCoord4dv::load_with(|s| loadfn(s));
    TexCoord4f::load_with(|s| loadfn(s));
    TexCoord4fColor4fNormal3fVertex4fSUN::load_with(|s| loadfn(s));
    TexCoord4fColor4fNormal3fVertex4fvSUN::load_with(|s| loadfn(s));
    TexCoord4fVertex4fSUN::load_with(|s| loadfn(s));
    TexCoord4fVertex4fvSUN::load_with(|s| loadfn(s));
    TexCoord4fv::load_with(|s| loadfn(s));
    TexCoord4hNV::load_with(|s| loadfn(s));
    TexCoord4hvNV::load_with(|s| loadfn(s));
    TexCoord4i::load_with(|s| loadfn(s));
    TexCoord4iv::load_with(|s| loadfn(s));
    TexCoord4s::load_with(|s| loadfn(s));
    TexCoord4sv::load_with(|s| loadfn(s));
    TexCoord4xOES::load_with(|s| loadfn(s));
    TexCoord4xvOES::load_with(|s| loadfn(s));
    TexCoordFormatNV::load_with(|s| loadfn(s));
    TexCoordP1ui::load_with(|s| loadfn(s));
    TexCoordP1uiv::load_with(|s| loadfn(s));
    TexCoordP2ui::load_with(|s| loadfn(s));
    TexCoordP2uiv::load_with(|s| loadfn(s));
    TexCoordP3ui::load_with(|s| loadfn(s));
    TexCoordP3uiv::load_with(|s| loadfn(s));
    TexCoordP4ui::load_with(|s| loadfn(s));
    TexCoordP4uiv::load_with(|s| loadfn(s));
    TexCoordPointer::load_with(|s| loadfn(s));
    TexCoordPointerEXT::load_with(|s| loadfn(s));
    TexCoordPointerListIBM::load_with(|s| loadfn(s));
    TexCoordPointervINTEL::load_with(|s| loadfn(s));
    TexEnvf::load_with(|s| loadfn(s));
    TexEnvfv::load_with(|s| loadfn(s));
    TexEnvi::load_with(|s| loadfn(s));
    TexEnviv::load_with(|s| loadfn(s));
    TexEnvx::load_with(|s| loadfn(s));
    TexEnvxOES::load_with(|s| loadfn(s));
    TexEnvxv::load_with(|s| loadfn(s));
    TexEnvxvOES::load_with(|s| loadfn(s));
    TexFilterFuncSGIS::load_with(|s| loadfn(s));
    TexGend::load_with(|s| loadfn(s));
    TexGendv::load_with(|s| loadfn(s));
    TexGenf::load_with(|s| loadfn(s));
    TexGenfOES::load_with(|s| loadfn(s));
    TexGenfv::load_with(|s| loadfn(s));
    TexGenfvOES::load_with(|s| loadfn(s));
    TexGeni::load_with(|s| loadfn(s));
    TexGeniOES::load_with(|s| loadfn(s));
    TexGeniv::load_with(|s| loadfn(s));
    TexGenivOES::load_with(|s| loadfn(s));
    TexGenxOES::load_with(|s| loadfn(s));
    TexGenxvOES::load_with(|s| loadfn(s));
    TexImage1D::load_with(|s| loadfn(s));
    TexImage2D::load_with(|s| loadfn(s));
    TexImage2DMultisample::load_with(|s| loadfn(s));
    TexImage2DMultisampleCoverageNV::load_with(|s| loadfn(s));
    TexImage3D::load_with(|s| loadfn(s));
    TexImage3DEXT::load_with(|s| loadfn(s));
    TexImage3DMultisample::load_with(|s| loadfn(s));
    TexImage3DMultisampleCoverageNV::load_with(|s| loadfn(s));
    TexImage3DOES::load_with(|s| loadfn(s));
    TexImage4DSGIS::load_with(|s| loadfn(s));
    TexPageCommitmentARB::load_with(|s| loadfn(s));
    TexParameterIiv::load_with(|s| loadfn(s));
    TexParameterIivEXT::load_with(|s| loadfn(s));
    TexParameterIuiv::load_with(|s| loadfn(s));
    TexParameterIuivEXT::load_with(|s| loadfn(s));
    TexParameterf::load_with(|s| loadfn(s));
    TexParameterfv::load_with(|s| loadfn(s));
    TexParameteri::load_with(|s| loadfn(s));
    TexParameteriv::load_with(|s| loadfn(s));
    TexParameterx::load_with(|s| loadfn(s));
    TexParameterxOES::load_with(|s| loadfn(s));
    TexParameterxv::load_with(|s| loadfn(s));
    TexParameterxvOES::load_with(|s| loadfn(s));
    TexRenderbufferNV::load_with(|s| loadfn(s));
    TexStorage1D::load_with(|s| loadfn(s));
    TexStorage1DEXT::load_with(|s| loadfn(s));
    TexStorage2D::load_with(|s| loadfn(s));
    TexStorage2DEXT::load_with(|s| loadfn(s));
    TexStorage2DMultisample::load_with(|s| loadfn(s));
    TexStorage3D::load_with(|s| loadfn(s));
    TexStorage3DEXT::load_with(|s| loadfn(s));
    TexStorage3DMultisample::load_with(|s| loadfn(s));
    TexStorageSparseAMD::load_with(|s| loadfn(s));
    TexSubImage1D::load_with(|s| loadfn(s));
    TexSubImage1DEXT::load_with(|s| loadfn(s));
    TexSubImage2D::load_with(|s| loadfn(s));
    TexSubImage2DEXT::load_with(|s| loadfn(s));
    TexSubImage3D::load_with(|s| loadfn(s));
    TexSubImage3DEXT::load_with(|s| loadfn(s));
    TexSubImage3DOES::load_with(|s| loadfn(s));
    TexSubImage4DSGIS::load_with(|s| loadfn(s));
    TextureBarrierNV::load_with(|s| loadfn(s));
    TextureBufferEXT::load_with(|s| loadfn(s));
    TextureBufferRangeEXT::load_with(|s| loadfn(s));
    TextureColorMaskSGIS::load_with(|s| loadfn(s));
    TextureImage1DEXT::load_with(|s| loadfn(s));
    TextureImage2DEXT::load_with(|s| loadfn(s));
    TextureImage2DMultisampleCoverageNV::load_with(|s| loadfn(s));
    TextureImage2DMultisampleNV::load_with(|s| loadfn(s));
    TextureImage3DEXT::load_with(|s| loadfn(s));
    TextureImage3DMultisampleCoverageNV::load_with(|s| loadfn(s));
    TextureImage3DMultisampleNV::load_with(|s| loadfn(s));
    TextureLightEXT::load_with(|s| loadfn(s));
    TextureMaterialEXT::load_with(|s| loadfn(s));
    TextureNormalEXT::load_with(|s| loadfn(s));
    TexturePageCommitmentEXT::load_with(|s| loadfn(s));
    TextureParameterIivEXT::load_with(|s| loadfn(s));
    TextureParameterIuivEXT::load_with(|s| loadfn(s));
    TextureParameterfEXT::load_with(|s| loadfn(s));
    TextureParameterfvEXT::load_with(|s| loadfn(s));
    TextureParameteriEXT::load_with(|s| loadfn(s));
    TextureParameterivEXT::load_with(|s| loadfn(s));
    TextureRangeAPPLE::load_with(|s| loadfn(s));
    TextureRenderbufferEXT::load_with(|s| loadfn(s));
    TextureStorage1DEXT::load_with(|s| loadfn(s));
    TextureStorage2DEXT::load_with(|s| loadfn(s));
    TextureStorage2DMultisampleEXT::load_with(|s| loadfn(s));
    TextureStorage3DEXT::load_with(|s| loadfn(s));
    TextureStorage3DMultisampleEXT::load_with(|s| loadfn(s));
    TextureStorageSparseAMD::load_with(|s| loadfn(s));
    TextureSubImage1DEXT::load_with(|s| loadfn(s));
    TextureSubImage2DEXT::load_with(|s| loadfn(s));
    TextureSubImage3DEXT::load_with(|s| loadfn(s));
    TextureView::load_with(|s| loadfn(s));
    TrackMatrixNV::load_with(|s| loadfn(s));
    TransformFeedbackAttribsNV::load_with(|s| loadfn(s));
    TransformFeedbackStreamAttribsNV::load_with(|s| loadfn(s));
    TransformFeedbackVaryings::load_with(|s| loadfn(s));
    TransformFeedbackVaryingsEXT::load_with(|s| loadfn(s));
    TransformFeedbackVaryingsNV::load_with(|s| loadfn(s));
    TransformPathNV::load_with(|s| loadfn(s));
    Translated::load_with(|s| loadfn(s));
    Translatef::load_with(|s| loadfn(s));
    Translatex::load_with(|s| loadfn(s));
    TranslatexOES::load_with(|s| loadfn(s));
    Uniform1d::load_with(|s| loadfn(s));
    Uniform1dv::load_with(|s| loadfn(s));
    Uniform1f::load_with(|s| loadfn(s));
    Uniform1fARB::load_with(|s| loadfn(s));
    Uniform1fv::load_with(|s| loadfn(s));
    Uniform1fvARB::load_with(|s| loadfn(s));
    Uniform1i::load_with(|s| loadfn(s));
    Uniform1i64NV::load_with(|s| loadfn(s));
    Uniform1i64vNV::load_with(|s| loadfn(s));
    Uniform1iARB::load_with(|s| loadfn(s));
    Uniform1iv::load_with(|s| loadfn(s));
    Uniform1ivARB::load_with(|s| loadfn(s));
    Uniform1ui::load_with(|s| loadfn(s));
    Uniform1ui64NV::load_with(|s| loadfn(s));
    Uniform1ui64vNV::load_with(|s| loadfn(s));
    Uniform1uiEXT::load_with(|s| loadfn(s));
    Uniform1uiv::load_with(|s| loadfn(s));
    Uniform1uivEXT::load_with(|s| loadfn(s));
    Uniform2d::load_with(|s| loadfn(s));
    Uniform2dv::load_with(|s| loadfn(s));
    Uniform2f::load_with(|s| loadfn(s));
    Uniform2fARB::load_with(|s| loadfn(s));
    Uniform2fv::load_with(|s| loadfn(s));
    Uniform2fvARB::load_with(|s| loadfn(s));
    Uniform2i::load_with(|s| loadfn(s));
    Uniform2i64NV::load_with(|s| loadfn(s));
    Uniform2i64vNV::load_with(|s| loadfn(s));
    Uniform2iARB::load_with(|s| loadfn(s));
    Uniform2iv::load_with(|s| loadfn(s));
    Uniform2ivARB::load_with(|s| loadfn(s));
    Uniform2ui::load_with(|s| loadfn(s));
    Uniform2ui64NV::load_with(|s| loadfn(s));
    Uniform2ui64vNV::load_with(|s| loadfn(s));
    Uniform2uiEXT::load_with(|s| loadfn(s));
    Uniform2uiv::load_with(|s| loadfn(s));
    Uniform2uivEXT::load_with(|s| loadfn(s));
    Uniform3d::load_with(|s| loadfn(s));
    Uniform3dv::load_with(|s| loadfn(s));
    Uniform3f::load_with(|s| loadfn(s));
    Uniform3fARB::load_with(|s| loadfn(s));
    Uniform3fv::load_with(|s| loadfn(s));
    Uniform3fvARB::load_with(|s| loadfn(s));
    Uniform3i::load_with(|s| loadfn(s));
    Uniform3i64NV::load_with(|s| loadfn(s));
    Uniform3i64vNV::load_with(|s| loadfn(s));
    Uniform3iARB::load_with(|s| loadfn(s));
    Uniform3iv::load_with(|s| loadfn(s));
    Uniform3ivARB::load_with(|s| loadfn(s));
    Uniform3ui::load_with(|s| loadfn(s));
    Uniform3ui64NV::load_with(|s| loadfn(s));
    Uniform3ui64vNV::load_with(|s| loadfn(s));
    Uniform3uiEXT::load_with(|s| loadfn(s));
    Uniform3uiv::load_with(|s| loadfn(s));
    Uniform3uivEXT::load_with(|s| loadfn(s));
    Uniform4d::load_with(|s| loadfn(s));
    Uniform4dv::load_with(|s| loadfn(s));
    Uniform4f::load_with(|s| loadfn(s));
    Uniform4fARB::load_with(|s| loadfn(s));
    Uniform4fv::load_with(|s| loadfn(s));
    Uniform4fvARB::load_with(|s| loadfn(s));
    Uniform4i::load_with(|s| loadfn(s));
    Uniform4i64NV::load_with(|s| loadfn(s));
    Uniform4i64vNV::load_with(|s| loadfn(s));
    Uniform4iARB::load_with(|s| loadfn(s));
    Uniform4iv::load_with(|s| loadfn(s));
    Uniform4ivARB::load_with(|s| loadfn(s));
    Uniform4ui::load_with(|s| loadfn(s));
    Uniform4ui64NV::load_with(|s| loadfn(s));
    Uniform4ui64vNV::load_with(|s| loadfn(s));
    Uniform4uiEXT::load_with(|s| loadfn(s));
    Uniform4uiv::load_with(|s| loadfn(s));
    Uniform4uivEXT::load_with(|s| loadfn(s));
    UniformBlockBinding::load_with(|s| loadfn(s));
    UniformBufferEXT::load_with(|s| loadfn(s));
    UniformHandleui64ARB::load_with(|s| loadfn(s));
    UniformHandleui64NV::load_with(|s| loadfn(s));
    UniformHandleui64vARB::load_with(|s| loadfn(s));
    UniformHandleui64vNV::load_with(|s| loadfn(s));
    UniformMatrix2dv::load_with(|s| loadfn(s));
    UniformMatrix2fv::load_with(|s| loadfn(s));
    UniformMatrix2fvARB::load_with(|s| loadfn(s));
    UniformMatrix2x3dv::load_with(|s| loadfn(s));
    UniformMatrix2x3fv::load_with(|s| loadfn(s));
    UniformMatrix2x4dv::load_with(|s| loadfn(s));
    UniformMatrix2x4fv::load_with(|s| loadfn(s));
    UniformMatrix3dv::load_with(|s| loadfn(s));
    UniformMatrix3fv::load_with(|s| loadfn(s));
    UniformMatrix3fvARB::load_with(|s| loadfn(s));
    UniformMatrix3x2dv::load_with(|s| loadfn(s));
    UniformMatrix3x2fv::load_with(|s| loadfn(s));
    UniformMatrix3x4dv::load_with(|s| loadfn(s));
    UniformMatrix3x4fv::load_with(|s| loadfn(s));
    UniformMatrix4dv::load_with(|s| loadfn(s));
    UniformMatrix4fv::load_with(|s| loadfn(s));
    UniformMatrix4fvARB::load_with(|s| loadfn(s));
    UniformMatrix4x2dv::load_with(|s| loadfn(s));
    UniformMatrix4x2fv::load_with(|s| loadfn(s));
    UniformMatrix4x3dv::load_with(|s| loadfn(s));
    UniformMatrix4x3fv::load_with(|s| loadfn(s));
    UniformSubroutinesuiv::load_with(|s| loadfn(s));
    Uniformui64NV::load_with(|s| loadfn(s));
    Uniformui64vNV::load_with(|s| loadfn(s));
    UnlockArraysEXT::load_with(|s| loadfn(s));
    UnmapBuffer::load_with(|s| loadfn(s));
    UnmapBufferARB::load_with(|s| loadfn(s));
    UnmapBufferOES::load_with(|s| loadfn(s));
    UnmapNamedBufferEXT::load_with(|s| loadfn(s));
    UnmapObjectBufferATI::load_with(|s| loadfn(s));
    UnmapTexture2DINTEL::load_with(|s| loadfn(s));
    UpdateObjectBufferATI::load_with(|s| loadfn(s));
    UseProgram::load_with(|s| loadfn(s));
    UseProgramObjectARB::load_with(|s| loadfn(s));
    UseProgramStages::load_with(|s| loadfn(s));
    UseProgramStagesEXT::load_with(|s| loadfn(s));
    UseShaderProgramEXT::load_with(|s| loadfn(s));
    VDPAUFiniNV::load_with(|s| loadfn(s));
    VDPAUGetSurfaceivNV::load_with(|s| loadfn(s));
    VDPAUInitNV::load_with(|s| loadfn(s));
    VDPAUIsSurfaceNV::load_with(|s| loadfn(s));
    VDPAUMapSurfacesNV::load_with(|s| loadfn(s));
    VDPAURegisterOutputSurfaceNV::load_with(|s| loadfn(s));
    VDPAURegisterVideoSurfaceNV::load_with(|s| loadfn(s));
    VDPAUSurfaceAccessNV::load_with(|s| loadfn(s));
    VDPAUUnmapSurfacesNV::load_with(|s| loadfn(s));
    VDPAUUnregisterSurfaceNV::load_with(|s| loadfn(s));
    ValidateProgram::load_with(|s| loadfn(s));
    ValidateProgramARB::load_with(|s| loadfn(s));
    ValidateProgramPipeline::load_with(|s| loadfn(s));
    ValidateProgramPipelineEXT::load_with(|s| loadfn(s));
    VariantArrayObjectATI::load_with(|s| loadfn(s));
    VariantPointerEXT::load_with(|s| loadfn(s));
    VariantbvEXT::load_with(|s| loadfn(s));
    VariantdvEXT::load_with(|s| loadfn(s));
    VariantfvEXT::load_with(|s| loadfn(s));
    VariantivEXT::load_with(|s| loadfn(s));
    VariantsvEXT::load_with(|s| loadfn(s));
    VariantubvEXT::load_with(|s| loadfn(s));
    VariantuivEXT::load_with(|s| loadfn(s));
    VariantusvEXT::load_with(|s| loadfn(s));
    Vertex2bOES::load_with(|s| loadfn(s));
    Vertex2bvOES::load_with(|s| loadfn(s));
    Vertex2d::load_with(|s| loadfn(s));
    Vertex2dv::load_with(|s| loadfn(s));
    Vertex2f::load_with(|s| loadfn(s));
    Vertex2fv::load_with(|s| loadfn(s));
    Vertex2hNV::load_with(|s| loadfn(s));
    Vertex2hvNV::load_with(|s| loadfn(s));
    Vertex2i::load_with(|s| loadfn(s));
    Vertex2iv::load_with(|s| loadfn(s));
    Vertex2s::load_with(|s| loadfn(s));
    Vertex2sv::load_with(|s| loadfn(s));
    Vertex2xOES::load_with(|s| loadfn(s));
    Vertex2xvOES::load_with(|s| loadfn(s));
    Vertex3bOES::load_with(|s| loadfn(s));
    Vertex3bvOES::load_with(|s| loadfn(s));
    Vertex3d::load_with(|s| loadfn(s));
    Vertex3dv::load_with(|s| loadfn(s));
    Vertex3f::load_with(|s| loadfn(s));
    Vertex3fv::load_with(|s| loadfn(s));
    Vertex3hNV::load_with(|s| loadfn(s));
    Vertex3hvNV::load_with(|s| loadfn(s));
    Vertex3i::load_with(|s| loadfn(s));
    Vertex3iv::load_with(|s| loadfn(s));
    Vertex3s::load_with(|s| loadfn(s));
    Vertex3sv::load_with(|s| loadfn(s));
    Vertex3xOES::load_with(|s| loadfn(s));
    Vertex3xvOES::load_with(|s| loadfn(s));
    Vertex4bOES::load_with(|s| loadfn(s));
    Vertex4bvOES::load_with(|s| loadfn(s));
    Vertex4d::load_with(|s| loadfn(s));
    Vertex4dv::load_with(|s| loadfn(s));
    Vertex4f::load_with(|s| loadfn(s));
    Vertex4fv::load_with(|s| loadfn(s));
    Vertex4hNV::load_with(|s| loadfn(s));
    Vertex4hvNV::load_with(|s| loadfn(s));
    Vertex4i::load_with(|s| loadfn(s));
    Vertex4iv::load_with(|s| loadfn(s));
    Vertex4s::load_with(|s| loadfn(s));
    Vertex4sv::load_with(|s| loadfn(s));
    Vertex4xOES::load_with(|s| loadfn(s));
    Vertex4xvOES::load_with(|s| loadfn(s));
    VertexArrayBindVertexBufferEXT::load_with(|s| loadfn(s));
    VertexArrayColorOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayEdgeFlagOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayFogCoordOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayIndexOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayMultiTexCoordOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayNormalOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayParameteriAPPLE::load_with(|s| loadfn(s));
    VertexArrayRangeAPPLE::load_with(|s| loadfn(s));
    VertexArrayRangeNV::load_with(|s| loadfn(s));
    VertexArraySecondaryColorOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayTexCoordOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribBindingEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribFormatEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribIFormatEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribIOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribLFormatEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribLOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayVertexAttribOffsetEXT::load_with(|s| loadfn(s));
    VertexArrayVertexBindingDivisorEXT::load_with(|s| loadfn(s));
    VertexArrayVertexOffsetEXT::load_with(|s| loadfn(s));
    VertexAttrib1d::load_with(|s| loadfn(s));
    VertexAttrib1dARB::load_with(|s| loadfn(s));
    VertexAttrib1dNV::load_with(|s| loadfn(s));
    VertexAttrib1dv::load_with(|s| loadfn(s));
    VertexAttrib1dvARB::load_with(|s| loadfn(s));
    VertexAttrib1dvNV::load_with(|s| loadfn(s));
    VertexAttrib1f::load_with(|s| loadfn(s));
    VertexAttrib1fARB::load_with(|s| loadfn(s));
    VertexAttrib1fNV::load_with(|s| loadfn(s));
    VertexAttrib1fv::load_with(|s| loadfn(s));
    VertexAttrib1fvARB::load_with(|s| loadfn(s));
    VertexAttrib1fvNV::load_with(|s| loadfn(s));
    VertexAttrib1hNV::load_with(|s| loadfn(s));
    VertexAttrib1hvNV::load_with(|s| loadfn(s));
    VertexAttrib1s::load_with(|s| loadfn(s));
    VertexAttrib1sARB::load_with(|s| loadfn(s));
    VertexAttrib1sNV::load_with(|s| loadfn(s));
    VertexAttrib1sv::load_with(|s| loadfn(s));
    VertexAttrib1svARB::load_with(|s| loadfn(s));
    VertexAttrib1svNV::load_with(|s| loadfn(s));
    VertexAttrib2d::load_with(|s| loadfn(s));
    VertexAttrib2dARB::load_with(|s| loadfn(s));
    VertexAttrib2dNV::load_with(|s| loadfn(s));
    VertexAttrib2dv::load_with(|s| loadfn(s));
    VertexAttrib2dvARB::load_with(|s| loadfn(s));
    VertexAttrib2dvNV::load_with(|s| loadfn(s));
    VertexAttrib2f::load_with(|s| loadfn(s));
    VertexAttrib2fARB::load_with(|s| loadfn(s));
    VertexAttrib2fNV::load_with(|s| loadfn(s));
    VertexAttrib2fv::load_with(|s| loadfn(s));
    VertexAttrib2fvARB::load_with(|s| loadfn(s));
    VertexAttrib2fvNV::load_with(|s| loadfn(s));
    VertexAttrib2hNV::load_with(|s| loadfn(s));
    VertexAttrib2hvNV::load_with(|s| loadfn(s));
    VertexAttrib2s::load_with(|s| loadfn(s));
    VertexAttrib2sARB::load_with(|s| loadfn(s));
    VertexAttrib2sNV::load_with(|s| loadfn(s));
    VertexAttrib2sv::load_with(|s| loadfn(s));
    VertexAttrib2svARB::load_with(|s| loadfn(s));
    VertexAttrib2svNV::load_with(|s| loadfn(s));
    VertexAttrib3d::load_with(|s| loadfn(s));
    VertexAttrib3dARB::load_with(|s| loadfn(s));
    VertexAttrib3dNV::load_with(|s| loadfn(s));
    VertexAttrib3dv::load_with(|s| loadfn(s));
    VertexAttrib3dvARB::load_with(|s| loadfn(s));
    VertexAttrib3dvNV::load_with(|s| loadfn(s));
    VertexAttrib3f::load_with(|s| loadfn(s));
    VertexAttrib3fARB::load_with(|s| loadfn(s));
    VertexAttrib3fNV::load_with(|s| loadfn(s));
    VertexAttrib3fv::load_with(|s| loadfn(s));
    VertexAttrib3fvARB::load_with(|s| loadfn(s));
    VertexAttrib3fvNV::load_with(|s| loadfn(s));
    VertexAttrib3hNV::load_with(|s| loadfn(s));
    VertexAttrib3hvNV::load_with(|s| loadfn(s));
    VertexAttrib3s::load_with(|s| loadfn(s));
    VertexAttrib3sARB::load_with(|s| loadfn(s));
    VertexAttrib3sNV::load_with(|s| loadfn(s));
    VertexAttrib3sv::load_with(|s| loadfn(s));
    VertexAttrib3svARB::load_with(|s| loadfn(s));
    VertexAttrib3svNV::load_with(|s| loadfn(s));
    VertexAttrib4Nbv::load_with(|s| loadfn(s));
    VertexAttrib4NbvARB::load_with(|s| loadfn(s));
    VertexAttrib4Niv::load_with(|s| loadfn(s));
    VertexAttrib4NivARB::load_with(|s| loadfn(s));
    VertexAttrib4Nsv::load_with(|s| loadfn(s));
    VertexAttrib4NsvARB::load_with(|s| loadfn(s));
    VertexAttrib4Nub::load_with(|s| loadfn(s));
    VertexAttrib4NubARB::load_with(|s| loadfn(s));
    VertexAttrib4Nubv::load_with(|s| loadfn(s));
    VertexAttrib4NubvARB::load_with(|s| loadfn(s));
    VertexAttrib4Nuiv::load_with(|s| loadfn(s));
    VertexAttrib4NuivARB::load_with(|s| loadfn(s));
    VertexAttrib4Nusv::load_with(|s| loadfn(s));
    VertexAttrib4NusvARB::load_with(|s| loadfn(s));
    VertexAttrib4bv::load_with(|s| loadfn(s));
    VertexAttrib4bvARB::load_with(|s| loadfn(s));
    VertexAttrib4d::load_with(|s| loadfn(s));
    VertexAttrib4dARB::load_with(|s| loadfn(s));
    VertexAttrib4dNV::load_with(|s| loadfn(s));
    VertexAttrib4dv::load_with(|s| loadfn(s));
    VertexAttrib4dvARB::load_with(|s| loadfn(s));
    VertexAttrib4dvNV::load_with(|s| loadfn(s));
    VertexAttrib4f::load_with(|s| loadfn(s));
    VertexAttrib4fARB::load_with(|s| loadfn(s));
    VertexAttrib4fNV::load_with(|s| loadfn(s));
    VertexAttrib4fv::load_with(|s| loadfn(s));
    VertexAttrib4fvARB::load_with(|s| loadfn(s));
    VertexAttrib4fvNV::load_with(|s| loadfn(s));
    VertexAttrib4hNV::load_with(|s| loadfn(s));
    VertexAttrib4hvNV::load_with(|s| loadfn(s));
    VertexAttrib4iv::load_with(|s| loadfn(s));
    VertexAttrib4ivARB::load_with(|s| loadfn(s));
    VertexAttrib4s::load_with(|s| loadfn(s));
    VertexAttrib4sARB::load_with(|s| loadfn(s));
    VertexAttrib4sNV::load_with(|s| loadfn(s));
    VertexAttrib4sv::load_with(|s| loadfn(s));
    VertexAttrib4svARB::load_with(|s| loadfn(s));
    VertexAttrib4svNV::load_with(|s| loadfn(s));
    VertexAttrib4ubNV::load_with(|s| loadfn(s));
    VertexAttrib4ubv::load_with(|s| loadfn(s));
    VertexAttrib4ubvARB::load_with(|s| loadfn(s));
    VertexAttrib4ubvNV::load_with(|s| loadfn(s));
    VertexAttrib4uiv::load_with(|s| loadfn(s));
    VertexAttrib4uivARB::load_with(|s| loadfn(s));
    VertexAttrib4usv::load_with(|s| loadfn(s));
    VertexAttrib4usvARB::load_with(|s| loadfn(s));
    VertexAttribArrayObjectATI::load_with(|s| loadfn(s));
    VertexAttribBinding::load_with(|s| loadfn(s));
    VertexAttribDivisor::load_with(|s| loadfn(s));
    VertexAttribDivisorANGLE::load_with(|s| loadfn(s));
    VertexAttribDivisorARB::load_with(|s| loadfn(s));
    VertexAttribDivisorNV::load_with(|s| loadfn(s));
    VertexAttribFormat::load_with(|s| loadfn(s));
    VertexAttribFormatNV::load_with(|s| loadfn(s));
    VertexAttribI1i::load_with(|s| loadfn(s));
    VertexAttribI1iEXT::load_with(|s| loadfn(s));
    VertexAttribI1iv::load_with(|s| loadfn(s));
    VertexAttribI1ivEXT::load_with(|s| loadfn(s));
    VertexAttribI1ui::load_with(|s| loadfn(s));
    VertexAttribI1uiEXT::load_with(|s| loadfn(s));
    VertexAttribI1uiv::load_with(|s| loadfn(s));
    VertexAttribI1uivEXT::load_with(|s| loadfn(s));
    VertexAttribI2i::load_with(|s| loadfn(s));
    VertexAttribI2iEXT::load_with(|s| loadfn(s));
    VertexAttribI2iv::load_with(|s| loadfn(s));
    VertexAttribI2ivEXT::load_with(|s| loadfn(s));
    VertexAttribI2ui::load_with(|s| loadfn(s));
    VertexAttribI2uiEXT::load_with(|s| loadfn(s));
    VertexAttribI2uiv::load_with(|s| loadfn(s));
    VertexAttribI2uivEXT::load_with(|s| loadfn(s));
    VertexAttribI3i::load_with(|s| loadfn(s));
    VertexAttribI3iEXT::load_with(|s| loadfn(s));
    VertexAttribI3iv::load_with(|s| loadfn(s));
    VertexAttribI3ivEXT::load_with(|s| loadfn(s));
    VertexAttribI3ui::load_with(|s| loadfn(s));
    VertexAttribI3uiEXT::load_with(|s| loadfn(s));
    VertexAttribI3uiv::load_with(|s| loadfn(s));
    VertexAttribI3uivEXT::load_with(|s| loadfn(s));
    VertexAttribI4bv::load_with(|s| loadfn(s));
    VertexAttribI4bvEXT::load_with(|s| loadfn(s));
    VertexAttribI4i::load_with(|s| loadfn(s));
    VertexAttribI4iEXT::load_with(|s| loadfn(s));
    VertexAttribI4iv::load_with(|s| loadfn(s));
    VertexAttribI4ivEXT::load_with(|s| loadfn(s));
    VertexAttribI4sv::load_with(|s| loadfn(s));
    VertexAttribI4svEXT::load_with(|s| loadfn(s));
    VertexAttribI4ubv::load_with(|s| loadfn(s));
    VertexAttribI4ubvEXT::load_with(|s| loadfn(s));
    VertexAttribI4ui::load_with(|s| loadfn(s));
    VertexAttribI4uiEXT::load_with(|s| loadfn(s));
    VertexAttribI4uiv::load_with(|s| loadfn(s));
    VertexAttribI4uivEXT::load_with(|s| loadfn(s));
    VertexAttribI4usv::load_with(|s| loadfn(s));
    VertexAttribI4usvEXT::load_with(|s| loadfn(s));
    VertexAttribIFormat::load_with(|s| loadfn(s));
    VertexAttribIFormatNV::load_with(|s| loadfn(s));
    VertexAttribIPointer::load_with(|s| loadfn(s));
    VertexAttribIPointerEXT::load_with(|s| loadfn(s));
    VertexAttribL1d::load_with(|s| loadfn(s));
    VertexAttribL1dEXT::load_with(|s| loadfn(s));
    VertexAttribL1dv::load_with(|s| loadfn(s));
    VertexAttribL1dvEXT::load_with(|s| loadfn(s));
    VertexAttribL1i64NV::load_with(|s| loadfn(s));
    VertexAttribL1i64vNV::load_with(|s| loadfn(s));
    VertexAttribL1ui64ARB::load_with(|s| loadfn(s));
    VertexAttribL1ui64NV::load_with(|s| loadfn(s));
    VertexAttribL1ui64vARB::load_with(|s| loadfn(s));
    VertexAttribL1ui64vNV::load_with(|s| loadfn(s));
    VertexAttribL2d::load_with(|s| loadfn(s));
    VertexAttribL2dEXT::load_with(|s| loadfn(s));
    VertexAttribL2dv::load_with(|s| loadfn(s));
    VertexAttribL2dvEXT::load_with(|s| loadfn(s));
    VertexAttribL2i64NV::load_with(|s| loadfn(s));
    VertexAttribL2i64vNV::load_with(|s| loadfn(s));
    VertexAttribL2ui64NV::load_with(|s| loadfn(s));
    VertexAttribL2ui64vNV::load_with(|s| loadfn(s));
    VertexAttribL3d::load_with(|s| loadfn(s));
    VertexAttribL3dEXT::load_with(|s| loadfn(s));
    VertexAttribL3dv::load_with(|s| loadfn(s));
    VertexAttribL3dvEXT::load_with(|s| loadfn(s));
    VertexAttribL3i64NV::load_with(|s| loadfn(s));
    VertexAttribL3i64vNV::load_with(|s| loadfn(s));
    VertexAttribL3ui64NV::load_with(|s| loadfn(s));
    VertexAttribL3ui64vNV::load_with(|s| loadfn(s));
    VertexAttribL4d::load_with(|s| loadfn(s));
    VertexAttribL4dEXT::load_with(|s| loadfn(s));
    VertexAttribL4dv::load_with(|s| loadfn(s));
    VertexAttribL4dvEXT::load_with(|s| loadfn(s));
    VertexAttribL4i64NV::load_with(|s| loadfn(s));
    VertexAttribL4i64vNV::load_with(|s| loadfn(s));
    VertexAttribL4ui64NV::load_with(|s| loadfn(s));
    VertexAttribL4ui64vNV::load_with(|s| loadfn(s));
    VertexAttribLFormat::load_with(|s| loadfn(s));
    VertexAttribLFormatNV::load_with(|s| loadfn(s));
    VertexAttribLPointer::load_with(|s| loadfn(s));
    VertexAttribLPointerEXT::load_with(|s| loadfn(s));
    VertexAttribP1ui::load_with(|s| loadfn(s));
    VertexAttribP1uiv::load_with(|s| loadfn(s));
    VertexAttribP2ui::load_with(|s| loadfn(s));
    VertexAttribP2uiv::load_with(|s| loadfn(s));
    VertexAttribP3ui::load_with(|s| loadfn(s));
    VertexAttribP3uiv::load_with(|s| loadfn(s));
    VertexAttribP4ui::load_with(|s| loadfn(s));
    VertexAttribP4uiv::load_with(|s| loadfn(s));
    VertexAttribParameteriAMD::load_with(|s| loadfn(s));
    VertexAttribPointer::load_with(|s| loadfn(s));
    VertexAttribPointerARB::load_with(|s| loadfn(s));
    VertexAttribPointerNV::load_with(|s| loadfn(s));
    VertexAttribs1dvNV::load_with(|s| loadfn(s));
    VertexAttribs1fvNV::load_with(|s| loadfn(s));
    VertexAttribs1hvNV::load_with(|s| loadfn(s));
    VertexAttribs1svNV::load_with(|s| loadfn(s));
    VertexAttribs2dvNV::load_with(|s| loadfn(s));
    VertexAttribs2fvNV::load_with(|s| loadfn(s));
    VertexAttribs2hvNV::load_with(|s| loadfn(s));
    VertexAttribs2svNV::load_with(|s| loadfn(s));
    VertexAttribs3dvNV::load_with(|s| loadfn(s));
    VertexAttribs3fvNV::load_with(|s| loadfn(s));
    VertexAttribs3hvNV::load_with(|s| loadfn(s));
    VertexAttribs3svNV::load_with(|s| loadfn(s));
    VertexAttribs4dvNV::load_with(|s| loadfn(s));
    VertexAttribs4fvNV::load_with(|s| loadfn(s));
    VertexAttribs4hvNV::load_with(|s| loadfn(s));
    VertexAttribs4svNV::load_with(|s| loadfn(s));
    VertexAttribs4ubvNV::load_with(|s| loadfn(s));
    VertexBindingDivisor::load_with(|s| loadfn(s));
    VertexBlendARB::load_with(|s| loadfn(s));
    VertexBlendEnvfATI::load_with(|s| loadfn(s));
    VertexBlendEnviATI::load_with(|s| loadfn(s));
    VertexFormatNV::load_with(|s| loadfn(s));
    VertexP2ui::load_with(|s| loadfn(s));
    VertexP2uiv::load_with(|s| loadfn(s));
    VertexP3ui::load_with(|s| loadfn(s));
    VertexP3uiv::load_with(|s| loadfn(s));
    VertexP4ui::load_with(|s| loadfn(s));
    VertexP4uiv::load_with(|s| loadfn(s));
    VertexPointer::load_with(|s| loadfn(s));
    VertexPointerEXT::load_with(|s| loadfn(s));
    VertexPointerListIBM::load_with(|s| loadfn(s));
    VertexPointervINTEL::load_with(|s| loadfn(s));
    VertexStream1dATI::load_with(|s| loadfn(s));
    VertexStream1dvATI::load_with(|s| loadfn(s));
    VertexStream1fATI::load_with(|s| loadfn(s));
    VertexStream1fvATI::load_with(|s| loadfn(s));
    VertexStream1iATI::load_with(|s| loadfn(s));
    VertexStream1ivATI::load_with(|s| loadfn(s));
    VertexStream1sATI::load_with(|s| loadfn(s));
    VertexStream1svATI::load_with(|s| loadfn(s));
    VertexStream2dATI::load_with(|s| loadfn(s));
    VertexStream2dvATI::load_with(|s| loadfn(s));
    VertexStream2fATI::load_with(|s| loadfn(s));
    VertexStream2fvATI::load_with(|s| loadfn(s));
    VertexStream2iATI::load_with(|s| loadfn(s));
    VertexStream2ivATI::load_with(|s| loadfn(s));
    VertexStream2sATI::load_with(|s| loadfn(s));
    VertexStream2svATI::load_with(|s| loadfn(s));
    VertexStream3dATI::load_with(|s| loadfn(s));
    VertexStream3dvATI::load_with(|s| loadfn(s));
    VertexStream3fATI::load_with(|s| loadfn(s));
    VertexStream3fvATI::load_with(|s| loadfn(s));
    VertexStream3iATI::load_with(|s| loadfn(s));
    VertexStream3ivATI::load_with(|s| loadfn(s));
    VertexStream3sATI::load_with(|s| loadfn(s));
    VertexStream3svATI::load_with(|s| loadfn(s));
    VertexStream4dATI::load_with(|s| loadfn(s));
    VertexStream4dvATI::load_with(|s| loadfn(s));
    VertexStream4fATI::load_with(|s| loadfn(s));
    VertexStream4fvATI::load_with(|s| loadfn(s));
    VertexStream4iATI::load_with(|s| loadfn(s));
    VertexStream4ivATI::load_with(|s| loadfn(s));
    VertexStream4sATI::load_with(|s| loadfn(s));
    VertexStream4svATI::load_with(|s| loadfn(s));
    VertexWeightPointerEXT::load_with(|s| loadfn(s));
    VertexWeightfEXT::load_with(|s| loadfn(s));
    VertexWeightfvEXT::load_with(|s| loadfn(s));
    VertexWeighthNV::load_with(|s| loadfn(s));
    VertexWeighthvNV::load_with(|s| loadfn(s));
    VideoCaptureNV::load_with(|s| loadfn(s));
    VideoCaptureStreamParameterdvNV::load_with(|s| loadfn(s));
    VideoCaptureStreamParameterfvNV::load_with(|s| loadfn(s));
    VideoCaptureStreamParameterivNV::load_with(|s| loadfn(s));
    Viewport::load_with(|s| loadfn(s));
    ViewportArrayv::load_with(|s| loadfn(s));
    ViewportIndexedf::load_with(|s| loadfn(s));
    ViewportIndexedfv::load_with(|s| loadfn(s));
    WaitSync::load_with(|s| loadfn(s));
    WaitSyncAPPLE::load_with(|s| loadfn(s));
    WeightPathsNV::load_with(|s| loadfn(s));
    WeightPointerARB::load_with(|s| loadfn(s));
    WeightPointerOES::load_with(|s| loadfn(s));
    WeightbvARB::load_with(|s| loadfn(s));
    WeightdvARB::load_with(|s| loadfn(s));
    WeightfvARB::load_with(|s| loadfn(s));
    WeightivARB::load_with(|s| loadfn(s));
    WeightsvARB::load_with(|s| loadfn(s));
    WeightubvARB::load_with(|s| loadfn(s));
    WeightuivARB::load_with(|s| loadfn(s));
    WeightusvARB::load_with(|s| loadfn(s));
    WindowPos2d::load_with(|s| loadfn(s));
    WindowPos2dARB::load_with(|s| loadfn(s));
    WindowPos2dMESA::load_with(|s| loadfn(s));
    WindowPos2dv::load_with(|s| loadfn(s));
    WindowPos2dvARB::load_with(|s| loadfn(s));
    WindowPos2dvMESA::load_with(|s| loadfn(s));
    WindowPos2f::load_with(|s| loadfn(s));
    WindowPos2fARB::load_with(|s| loadfn(s));
    WindowPos2fMESA::load_with(|s| loadfn(s));
    WindowPos2fv::load_with(|s| loadfn(s));
    WindowPos2fvARB::load_with(|s| loadfn(s));
    WindowPos2fvMESA::load_with(|s| loadfn(s));
    WindowPos2i::load_with(|s| loadfn(s));
    WindowPos2iARB::load_with(|s| loadfn(s));
    WindowPos2iMESA::load_with(|s| loadfn(s));
    WindowPos2iv::load_with(|s| loadfn(s));
    WindowPos2ivARB::load_with(|s| loadfn(s));
    WindowPos2ivMESA::load_with(|s| loadfn(s));
    WindowPos2s::load_with(|s| loadfn(s));
    WindowPos2sARB::load_with(|s| loadfn(s));
    WindowPos2sMESA::load_with(|s| loadfn(s));
    WindowPos2sv::load_with(|s| loadfn(s));
    WindowPos2svARB::load_with(|s| loadfn(s));
    WindowPos2svMESA::load_with(|s| loadfn(s));
    WindowPos3d::load_with(|s| loadfn(s));
    WindowPos3dARB::load_with(|s| loadfn(s));
    WindowPos3dMESA::load_with(|s| loadfn(s));
    WindowPos3dv::load_with(|s| loadfn(s));
    WindowPos3dvARB::load_with(|s| loadfn(s));
    WindowPos3dvMESA::load_with(|s| loadfn(s));
    WindowPos3f::load_with(|s| loadfn(s));
    WindowPos3fARB::load_with(|s| loadfn(s));
    WindowPos3fMESA::load_with(|s| loadfn(s));
    WindowPos3fv::load_with(|s| loadfn(s));
    WindowPos3fvARB::load_with(|s| loadfn(s));
    WindowPos3fvMESA::load_with(|s| loadfn(s));
    WindowPos3i::load_with(|s| loadfn(s));
    WindowPos3iARB::load_with(|s| loadfn(s));
    WindowPos3iMESA::load_with(|s| loadfn(s));
    WindowPos3iv::load_with(|s| loadfn(s));
    WindowPos3ivARB::load_with(|s| loadfn(s));
    WindowPos3ivMESA::load_with(|s| loadfn(s));
    WindowPos3s::load_with(|s| loadfn(s));
    WindowPos3sARB::load_with(|s| loadfn(s));
    WindowPos3sMESA::load_with(|s| loadfn(s));
    WindowPos3sv::load_with(|s| loadfn(s));
    WindowPos3svARB::load_with(|s| loadfn(s));
    WindowPos3svMESA::load_with(|s| loadfn(s));
    WindowPos4dMESA::load_with(|s| loadfn(s));
    WindowPos4dvMESA::load_with(|s| loadfn(s));
    WindowPos4fMESA::load_with(|s| loadfn(s));
    WindowPos4fvMESA::load_with(|s| loadfn(s));
    WindowPos4iMESA::load_with(|s| loadfn(s));
    WindowPos4ivMESA::load_with(|s| loadfn(s));
    WindowPos4sMESA::load_with(|s| loadfn(s));
    WindowPos4svMESA::load_with(|s| loadfn(s));
    WriteMaskEXT::load_with(|s| loadfn(s));
}

